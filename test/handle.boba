
effect exn! {
    raise!
}

effect incdec! {
    inc!
    dec!
}

test simple-after? =
    handle {
        2
        raise!
        2 add-i32
    } with {
        raise! => resume;
        after => 2 mul-i32;
    }
    satisfies 8 eq-i32

test no-resume? =
    1 2
    handle {
        raise!
        swap
    } with {
        raise! => 2 1;
    }
    satisfies 1 eq-i32 swap 2 eq-i32 and-bool

test two-handlers-with-params? =
    handle {
        1 inc!
        2 dec!
    } with {
        inc! x => 1 x add-i32 resume;
        dec! x => 1 x sub-i32 resume;
    }
    satisfies 1 eq-i32 swap 2 eq-i32 and-bool

test inject-simple? =
    handle {
        handle {
            inject exn! { 1 raise! }
        } with {
            raise! x => 2 x add-i32 resume;
            after x => 2 x sub-i32;
        }
    } with {
        raise! x => 3 x add-i32 resume;
        after => 3 mul-i32;
    }
    satisfies 6 eq-i32

export { }