
effect amb!
    = flip! : z... ===[ e..., amb! ][ p... ][ t ]==> z... Bool^s

test simple-amb? =
    handle {
        //let x = flip!;
        //let y = flip!;
        flip! flip! neq-bool
    } with {
        | flip! => {
              let x = False resume;
              let y = True resume;
              x y append-list
          }
        | after v => [v]
    }
    is
    [False, True, True, False]

main = 0