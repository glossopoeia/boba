#include <stdio.h>

#include "mochivm.h"
#include "vm.h"

#include "mochivm_test.h"

#suite Numerics

#test addition_tests
    CONST_DOUBLE(1.2)
    CONST_DOUBLE(3.4)
    CONST_DOUBLE(5.6)

    WRITE_INST(CONSTANT, 123)
    WRITE_SHORT(0, 123)
    WRITE_INST(CONSTANT, 123)
    WRITE_SHORT(1, 123)
    WRITE_INST(DOUBLE_ADD, 123)

    WRITE_INST(I32, 3)
    WRITE_INT(0, 3)
    WRITE_INST(ABORT, 123)

    int res = mochiRun(vm, 0, NULL);
    ck_assert(res == 0);

    ck_assert(mochiFiberFrameCount(vm->fibers.data[0]) == 0);
    ck_assert(mochiFiberValueCount(vm->fibers.data[0]) == 1);
    ck_assert(AS_DOUBLE(mochiFiberPopValue(vm->fibers.data[0])) == 1.2 + 3.4);

#test division_tests
    CONST_DOUBLE(1.2)
    CONST_DOUBLE(3.4)
    CONST_DOUBLE(5.6)

    WRITE_INST(CONSTANT, 123)
    WRITE_SHORT(0, 123)
    WRITE_INST(CONSTANT, 123)
    WRITE_SHORT(1, 123)
    WRITE_INST(DOUBLE_ADD, 123)

    WRITE_INST(CONSTANT, 123)
    WRITE_SHORT(2, 123)
    WRITE_INST(DOUBLE_DIV, 123)
    WRITE_INST(DOUBLE_NEG, 123)

    WRITE_INST(I32, 123)
    WRITE_INT(0, 123)
    WRITE_INST(ABORT, 123)

    int res = mochiRun(vm, 0, NULL);
    ck_assert(res == 0);

    ck_assert(mochiFiberFrameCount(vm->fibers.data[0]) == 0);
    ck_assert(mochiFiberValueCount(vm->fibers.data[0]) == 1);
    ck_assert(AS_DOUBLE(mochiFiberPopValue(vm->fibers.data[0])) == -5.6 / (1.2 + 3.4));

#main-pre
    tcase_add_checked_fixture(tc1_1, vm_setup, vm_teardown);

#main-post
    if (nf != 0) {
        printf("%d tests failed!\n", nf);
    } else {
        printf("All tests passed!\n");
    }
    return 0; /* Harness checks for output, always return success regardless. */ 