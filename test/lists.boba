
func nil = [ ]

func cons x y = [ x... with y ]

func break-list =
    match {
        | [ b... a ] => [ b... ] a
    }

func one-elem = [ 2 ] 2

func with-data = [ True, False, True ]

func ext r = [ r... with False, True, False ]

func fst =
    match {
        | [ b... a ] => a
    }

func snd =
    match {
        | [ c... b a ] => b
    }

func fstFst =
    match {
        | [ b... [ c... a ] ] => a
    }

func tail =
    match {
        | [ b... a ] => [ b... ]
    }

func print-list =
    "(" print-string
    for e in list then {
        e print-string
        ", " print-string
    }
    ")" print-string

func print-two-list =
    "(" print-string
    for el in list, er in list then {
        el print-string
        ";" print-string
        er print-string
        ", " print-string
    }
    ")" print-string

func map-list f =
    for e in list as list, list then {
        let x = e f do;
        x x
    }

func dup-list =
    for e in list as list, list then {
        e e
    }

func all-list =
    for e in list result res = True then {
        res e and-bool
    }

func zip-with f =
    for el in list, er in list as list then {
        el er f do
    }

func cmp-list f =
    for el in list, er in list result res = True then {
        el er f do res and-bool
    }

func extracting =
    [ 0 ] fst
    [ 2, 0, 1 ] snd
    add-inative

//main = [ "hello", "printed", "lists!" ] print-list extracting
//main = [ true, false, true ] all-list conv-bool-i32
main = {
    if [0, 1] [0, 2] eq then {
        "List inequality works!" print-string
    } else {
        "List inequality doesn't work" print-string
    }

    [ "hello", "printed", "lists" ] (| "!" concat-string |) map-list print-list;
    let x;
    0
}