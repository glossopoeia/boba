
overload compose as Semigroupoid? f
    : z... (f a b)^s (f b c)^r ===[ e... ][ p... ][ t ]==> z... (f a c)^q

check kind Semigroupoid? : (k1 --> k2 --> Data) --> Constraint

instance compose : (--> _ _ _)
    = { let l r; (| l do r do |) }

test compose-out? = (| 0 |) (| 1 |) compose do is 0 1

export { }