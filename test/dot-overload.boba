
overload show as Show? a
    : z... a^s ===[ e... ][ p... ][ True ]==> z... (String t c)^r

instance show : Bool
    = if then { "true" } else { "false" }

instance show : (I32 u)
    = "0"

instance show : <= (Show? a)... => [| a^_... |]
    =
    {
        let l;
        "[|"
        for el <= tuple l fold res <= "" then {
            res el show concat-string
        }
        "|]"
        concat-string concat-string
    }

func show-tuple r = [| r... with 3, 2, True |] show

test show-empty-tuple? = [| |] show is "[||]"

export { show }