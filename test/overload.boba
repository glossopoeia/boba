overload eq as Eq?
    : {(--> e p t [z... {a s1} {a s2}] [z... {Bool s3}]) false}

instance eq
    : {(--> e p t [z... {Bool s1} {Bool s2}] [z... {Bool s3}]) false}
    = eq-bool

instance eq 
    : {(--> e p t [z... {(I32 u) s1} {(I32 u) s2}] [z... {Bool s3}]) false}
    = eq-i32

func test-eq-1 = true false eq

func test-eq-2 = true eq

func test-eq-3 = 1 eq

func test-eq-4 w x y z = w x eq y z eq and-bool

// TODO: this is broken currently
//func eq-tuple =
//    for fold res <= true with e1 <= tuple, e2 <= tuple then {
//        e1 e2 eq res and-bool
//    }

main = { 1 test-eq-3; let x; 0 }