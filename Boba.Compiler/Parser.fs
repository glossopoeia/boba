// Implementation file for parser generated by fsyacc
module Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 ".\Parser.fsy"


open Boba.Compiler.Syntax
open Boba.Core.DotSeq
open Boba.Core.Kinds
open Boba.Core.Types
open Boba.Core.TypeBuilder


# 16 "Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | IS
  | ONE
  | TRUE
  | FALSE
  | AND
  | OR
  | NOT
  | TUPLE
  | LIST
  | VECTOR
  | SLICE
  | DICTIONARY
  | CASE
  | RECORD
  | VARIANT
  | FOR
  | FOLD
  | MAP
  | BREAK
  | FINAL
  | FILL
  | LENGTH
  | RESULT
  | IF
  | WHEN
  | SWITCH
  | WHILE
  | THEN
  | ELSE
  | DO
  | MATCH
  | INJECT
  | WITH
  | AFTER
  | HANDLE
  | UNTAG
  | BY
  | PER
  | TRUST
  | DISTRUST
  | AUDIT
  | NEW_REF
  | GET_REF
  | PUT_REF
  | WITH_STATE
  | PERMISSION
  | FUNCTION
  | NATIVE
  | LOCAL
  | LET
  | BOOLEAN
  | ABELIAN
  | SYNTACTIC
  | IS_ROUGHLY
  | IS_NOT
  | SATISFIES
  | VIOLATES
  | TEST
  | LAW
  | EXHAUSTIVE
  | SYNONYM
  | TAG
  | EFFECT
  | OVERLOAD
  | INSTANCE
  | RULE
  | CHECK
  | PATTERN
  | RECURSIVE
  | KIND
  | DATA
  | ABOUT
  | MAIN
  | EXPORT
  | FROM
  | AS
  | IMPORT
  | REF
  | UNDERSCORE
  | EQUALS
  | ELLIPSIS
  | BAR
  | DOT
  | PLUS
  | MINUS
  | STAR
  | COLON
  | DOUBLE_COLON
  | CARET
  | COMMA
  | SEMICOLON
  | FN_CTOR
  | FN_ARROW_BACK
  | FN_ARROW_FRONT
  | FN_DIVIDE
  | L_BOX
  | R_BOX
  | L_PUMPKIN
  | R_PUMPKIN
  | L_BANANA
  | R_BANANA
  | L_BIND
  | R_BIND
  | L_STAR
  | R_STAR
  | L_ARROW
  | R_ARROW
  | L_BRACKET
  | R_BRACKET
  | L_BRACE
  | R_BRACE
  | L_PAREN
  | R_PAREN
  | DOCUMENTATION_LINE of (DocumentationLine)
  | NATIVE_CODE_LINE of (NativeCodeLine)
  | STRING of (StringLiteral)
  | DECIMAL of (DecimalLiteral)
  | INTEGER of (IntegerLiteral)
  | TEST_NAME of (Name)
  | PREDICATE_NAME of (Name)
  | OPERATOR_NAME of (Name)
  | BIG_NAME of (Name)
  | SMALL_NAME of (Name)
  | EOF
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_IS
    | TOKEN_ONE
    | TOKEN_TRUE
    | TOKEN_FALSE
    | TOKEN_AND
    | TOKEN_OR
    | TOKEN_NOT
    | TOKEN_TUPLE
    | TOKEN_LIST
    | TOKEN_VECTOR
    | TOKEN_SLICE
    | TOKEN_DICTIONARY
    | TOKEN_CASE
    | TOKEN_RECORD
    | TOKEN_VARIANT
    | TOKEN_FOR
    | TOKEN_FOLD
    | TOKEN_MAP
    | TOKEN_BREAK
    | TOKEN_FINAL
    | TOKEN_FILL
    | TOKEN_LENGTH
    | TOKEN_RESULT
    | TOKEN_IF
    | TOKEN_WHEN
    | TOKEN_SWITCH
    | TOKEN_WHILE
    | TOKEN_THEN
    | TOKEN_ELSE
    | TOKEN_DO
    | TOKEN_MATCH
    | TOKEN_INJECT
    | TOKEN_WITH
    | TOKEN_AFTER
    | TOKEN_HANDLE
    | TOKEN_UNTAG
    | TOKEN_BY
    | TOKEN_PER
    | TOKEN_TRUST
    | TOKEN_DISTRUST
    | TOKEN_AUDIT
    | TOKEN_NEW_REF
    | TOKEN_GET_REF
    | TOKEN_PUT_REF
    | TOKEN_WITH_STATE
    | TOKEN_PERMISSION
    | TOKEN_FUNCTION
    | TOKEN_NATIVE
    | TOKEN_LOCAL
    | TOKEN_LET
    | TOKEN_BOOLEAN
    | TOKEN_ABELIAN
    | TOKEN_SYNTACTIC
    | TOKEN_IS_ROUGHLY
    | TOKEN_IS_NOT
    | TOKEN_SATISFIES
    | TOKEN_VIOLATES
    | TOKEN_TEST
    | TOKEN_LAW
    | TOKEN_EXHAUSTIVE
    | TOKEN_SYNONYM
    | TOKEN_TAG
    | TOKEN_EFFECT
    | TOKEN_OVERLOAD
    | TOKEN_INSTANCE
    | TOKEN_RULE
    | TOKEN_CHECK
    | TOKEN_PATTERN
    | TOKEN_RECURSIVE
    | TOKEN_KIND
    | TOKEN_DATA
    | TOKEN_ABOUT
    | TOKEN_MAIN
    | TOKEN_EXPORT
    | TOKEN_FROM
    | TOKEN_AS
    | TOKEN_IMPORT
    | TOKEN_REF
    | TOKEN_UNDERSCORE
    | TOKEN_EQUALS
    | TOKEN_ELLIPSIS
    | TOKEN_BAR
    | TOKEN_DOT
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_STAR
    | TOKEN_COLON
    | TOKEN_DOUBLE_COLON
    | TOKEN_CARET
    | TOKEN_COMMA
    | TOKEN_SEMICOLON
    | TOKEN_FN_CTOR
    | TOKEN_FN_ARROW_BACK
    | TOKEN_FN_ARROW_FRONT
    | TOKEN_FN_DIVIDE
    | TOKEN_L_BOX
    | TOKEN_R_BOX
    | TOKEN_L_PUMPKIN
    | TOKEN_R_PUMPKIN
    | TOKEN_L_BANANA
    | TOKEN_R_BANANA
    | TOKEN_L_BIND
    | TOKEN_R_BIND
    | TOKEN_L_STAR
    | TOKEN_R_STAR
    | TOKEN_L_ARROW
    | TOKEN_R_ARROW
    | TOKEN_L_BRACKET
    | TOKEN_R_BRACKET
    | TOKEN_L_BRACE
    | TOKEN_R_BRACE
    | TOKEN_L_PAREN
    | TOKEN_R_PAREN
    | TOKEN_DOCUMENTATION_LINE
    | TOKEN_NATIVE_CODE_LINE
    | TOKEN_STRING
    | TOKEN_DECIMAL
    | TOKEN_INTEGER
    | TOKEN_TEST_NAME
    | TOKEN_PREDICATE_NAME
    | TOKEN_OPERATOR_NAME
    | TOKEN_BIG_NAME
    | TOKEN_SMALL_NAME
    | TOKEN_EOF
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startunit
    | NONTERM_unit
    | NONTERM_import_list
    | NONTERM_decl_list
    | NONTERM_main
    | NONTERM_import
    | NONTERM_import_path
    | NONTERM_remote
    | NONTERM_export
    | NONTERM_brace_names
    | NONTERM_name_list
    | NONTERM_name
    | NONTERM_declaration
    | NONTERM_documentation
    | NONTERM_documentation_lines
    | NONTERM_function
    | NONTERM_function_list
    | NONTERM_native
    | NONTERM_native_code_list
    | NONTERM_userkind
    | NONTERM_kind_unify
    | NONTERM_datatype
    | NONTERM_type_param_list
    | NONTERM_datatype_list
    | NONTERM_constructor
    | NONTERM_constructor_list
    | NONTERM_rule
    | NONTERM_overload
    | NONTERM_instance
    | NONTERM_effect
    | NONTERM_handler_template_list
    | NONTERM_handler_template
    | NONTERM_test
    | NONTERM_law
    | NONTERM_test_all
    | NONTERM_check
    | NONTERM_tag
    | NONTERM_any_kind
    | NONTERM_predicate_list
    | NONTERM_predicate
    | NONTERM_qual_fn_type
    | NONTERM_base_type
    | NONTERM_val_type
    | NONTERM_fn_type
    | NONTERM_fn_type_seq
    | NONTERM_fn_row_type
    | NONTERM_field_row_type
    | NONTERM_field_type
    | NONTERM_compound_type
    | NONTERM_and_sequence
    | NONTERM_or_sequence
    | NONTERM_mul_sequence
    | NONTERM_type_arg_list
    | NONTERM_term_statement_block
    | NONTERM_term_statement_list
    | NONTERM_term_statement
    | NONTERM_non_empty_simple_expr
    | NONTERM_simple_expr
    | NONTERM_word
    | NONTERM_permission
    | NONTERM_handle_word
    | NONTERM_handler
    | NONTERM_return
    | NONTERM_param_list
    | NONTERM_handler_list
    | NONTERM_inject_word
    | NONTERM_eff_list
    | NONTERM_match_word
    | NONTERM_match_clause_list
    | NONTERM_match_clause
    | NONTERM_if_word
    | NONTERM_switch_word
    | NONTERM_switch_clause_list
    | NONTERM_when_word
    | NONTERM_while_word
    | NONTERM_for_word
    | NONTERM_for_results
    | NONTERM_for_result
    | NONTERM_for_sequence
    | NONTERM_parallel_sequences
    | NONTERM_fold_inits
    | NONTERM_function_literal
    | NONTERM_lit_expr_list
    | NONTERM_tuple_literal
    | NONTERM_list_literal
    | NONTERM_record_literal
    | NONTERM_variant_literal
    | NONTERM_case_word
    | NONTERM_case_clause_list
    | NONTERM_case_clause
    | NONTERM_field_list
    | NONTERM_field
    | NONTERM_identifier
    | NONTERM_type_identifier
    | NONTERM_qualified_name
    | NONTERM_qualified_ctor
    | NONTERM_no_dot_pattern_expr_list
    | NONTERM_var_only_pattern_list
    | NONTERM_pattern_expr_list
    | NONTERM_field_pattern_list
    | NONTERM_pattern_expr
    | NONTERM_tuple_pattern
    | NONTERM_list_pattern
    | NONTERM_vector_pattern
    | NONTERM_slice_pattern
    | NONTERM_record_pattern

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | IS  -> 0 
  | ONE  -> 1 
  | TRUE  -> 2 
  | FALSE  -> 3 
  | AND  -> 4 
  | OR  -> 5 
  | NOT  -> 6 
  | TUPLE  -> 7 
  | LIST  -> 8 
  | VECTOR  -> 9 
  | SLICE  -> 10 
  | DICTIONARY  -> 11 
  | CASE  -> 12 
  | RECORD  -> 13 
  | VARIANT  -> 14 
  | FOR  -> 15 
  | FOLD  -> 16 
  | MAP  -> 17 
  | BREAK  -> 18 
  | FINAL  -> 19 
  | FILL  -> 20 
  | LENGTH  -> 21 
  | RESULT  -> 22 
  | IF  -> 23 
  | WHEN  -> 24 
  | SWITCH  -> 25 
  | WHILE  -> 26 
  | THEN  -> 27 
  | ELSE  -> 28 
  | DO  -> 29 
  | MATCH  -> 30 
  | INJECT  -> 31 
  | WITH  -> 32 
  | AFTER  -> 33 
  | HANDLE  -> 34 
  | UNTAG  -> 35 
  | BY  -> 36 
  | PER  -> 37 
  | TRUST  -> 38 
  | DISTRUST  -> 39 
  | AUDIT  -> 40 
  | NEW_REF  -> 41 
  | GET_REF  -> 42 
  | PUT_REF  -> 43 
  | WITH_STATE  -> 44 
  | PERMISSION  -> 45 
  | FUNCTION  -> 46 
  | NATIVE  -> 47 
  | LOCAL  -> 48 
  | LET  -> 49 
  | BOOLEAN  -> 50 
  | ABELIAN  -> 51 
  | SYNTACTIC  -> 52 
  | IS_ROUGHLY  -> 53 
  | IS_NOT  -> 54 
  | SATISFIES  -> 55 
  | VIOLATES  -> 56 
  | TEST  -> 57 
  | LAW  -> 58 
  | EXHAUSTIVE  -> 59 
  | SYNONYM  -> 60 
  | TAG  -> 61 
  | EFFECT  -> 62 
  | OVERLOAD  -> 63 
  | INSTANCE  -> 64 
  | RULE  -> 65 
  | CHECK  -> 66 
  | PATTERN  -> 67 
  | RECURSIVE  -> 68 
  | KIND  -> 69 
  | DATA  -> 70 
  | ABOUT  -> 71 
  | MAIN  -> 72 
  | EXPORT  -> 73 
  | FROM  -> 74 
  | AS  -> 75 
  | IMPORT  -> 76 
  | REF  -> 77 
  | UNDERSCORE  -> 78 
  | EQUALS  -> 79 
  | ELLIPSIS  -> 80 
  | BAR  -> 81 
  | DOT  -> 82 
  | PLUS  -> 83 
  | MINUS  -> 84 
  | STAR  -> 85 
  | COLON  -> 86 
  | DOUBLE_COLON  -> 87 
  | CARET  -> 88 
  | COMMA  -> 89 
  | SEMICOLON  -> 90 
  | FN_CTOR  -> 91 
  | FN_ARROW_BACK  -> 92 
  | FN_ARROW_FRONT  -> 93 
  | FN_DIVIDE  -> 94 
  | L_BOX  -> 95 
  | R_BOX  -> 96 
  | L_PUMPKIN  -> 97 
  | R_PUMPKIN  -> 98 
  | L_BANANA  -> 99 
  | R_BANANA  -> 100 
  | L_BIND  -> 101 
  | R_BIND  -> 102 
  | L_STAR  -> 103 
  | R_STAR  -> 104 
  | L_ARROW  -> 105 
  | R_ARROW  -> 106 
  | L_BRACKET  -> 107 
  | R_BRACKET  -> 108 
  | L_BRACE  -> 109 
  | R_BRACE  -> 110 
  | L_PAREN  -> 111 
  | R_PAREN  -> 112 
  | DOCUMENTATION_LINE _ -> 113 
  | NATIVE_CODE_LINE _ -> 114 
  | STRING _ -> 115 
  | DECIMAL _ -> 116 
  | INTEGER _ -> 117 
  | TEST_NAME _ -> 118 
  | PREDICATE_NAME _ -> 119 
  | OPERATOR_NAME _ -> 120 
  | BIG_NAME _ -> 121 
  | SMALL_NAME _ -> 122 
  | EOF  -> 123 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_IS 
  | 1 -> TOKEN_ONE 
  | 2 -> TOKEN_TRUE 
  | 3 -> TOKEN_FALSE 
  | 4 -> TOKEN_AND 
  | 5 -> TOKEN_OR 
  | 6 -> TOKEN_NOT 
  | 7 -> TOKEN_TUPLE 
  | 8 -> TOKEN_LIST 
  | 9 -> TOKEN_VECTOR 
  | 10 -> TOKEN_SLICE 
  | 11 -> TOKEN_DICTIONARY 
  | 12 -> TOKEN_CASE 
  | 13 -> TOKEN_RECORD 
  | 14 -> TOKEN_VARIANT 
  | 15 -> TOKEN_FOR 
  | 16 -> TOKEN_FOLD 
  | 17 -> TOKEN_MAP 
  | 18 -> TOKEN_BREAK 
  | 19 -> TOKEN_FINAL 
  | 20 -> TOKEN_FILL 
  | 21 -> TOKEN_LENGTH 
  | 22 -> TOKEN_RESULT 
  | 23 -> TOKEN_IF 
  | 24 -> TOKEN_WHEN 
  | 25 -> TOKEN_SWITCH 
  | 26 -> TOKEN_WHILE 
  | 27 -> TOKEN_THEN 
  | 28 -> TOKEN_ELSE 
  | 29 -> TOKEN_DO 
  | 30 -> TOKEN_MATCH 
  | 31 -> TOKEN_INJECT 
  | 32 -> TOKEN_WITH 
  | 33 -> TOKEN_AFTER 
  | 34 -> TOKEN_HANDLE 
  | 35 -> TOKEN_UNTAG 
  | 36 -> TOKEN_BY 
  | 37 -> TOKEN_PER 
  | 38 -> TOKEN_TRUST 
  | 39 -> TOKEN_DISTRUST 
  | 40 -> TOKEN_AUDIT 
  | 41 -> TOKEN_NEW_REF 
  | 42 -> TOKEN_GET_REF 
  | 43 -> TOKEN_PUT_REF 
  | 44 -> TOKEN_WITH_STATE 
  | 45 -> TOKEN_PERMISSION 
  | 46 -> TOKEN_FUNCTION 
  | 47 -> TOKEN_NATIVE 
  | 48 -> TOKEN_LOCAL 
  | 49 -> TOKEN_LET 
  | 50 -> TOKEN_BOOLEAN 
  | 51 -> TOKEN_ABELIAN 
  | 52 -> TOKEN_SYNTACTIC 
  | 53 -> TOKEN_IS_ROUGHLY 
  | 54 -> TOKEN_IS_NOT 
  | 55 -> TOKEN_SATISFIES 
  | 56 -> TOKEN_VIOLATES 
  | 57 -> TOKEN_TEST 
  | 58 -> TOKEN_LAW 
  | 59 -> TOKEN_EXHAUSTIVE 
  | 60 -> TOKEN_SYNONYM 
  | 61 -> TOKEN_TAG 
  | 62 -> TOKEN_EFFECT 
  | 63 -> TOKEN_OVERLOAD 
  | 64 -> TOKEN_INSTANCE 
  | 65 -> TOKEN_RULE 
  | 66 -> TOKEN_CHECK 
  | 67 -> TOKEN_PATTERN 
  | 68 -> TOKEN_RECURSIVE 
  | 69 -> TOKEN_KIND 
  | 70 -> TOKEN_DATA 
  | 71 -> TOKEN_ABOUT 
  | 72 -> TOKEN_MAIN 
  | 73 -> TOKEN_EXPORT 
  | 74 -> TOKEN_FROM 
  | 75 -> TOKEN_AS 
  | 76 -> TOKEN_IMPORT 
  | 77 -> TOKEN_REF 
  | 78 -> TOKEN_UNDERSCORE 
  | 79 -> TOKEN_EQUALS 
  | 80 -> TOKEN_ELLIPSIS 
  | 81 -> TOKEN_BAR 
  | 82 -> TOKEN_DOT 
  | 83 -> TOKEN_PLUS 
  | 84 -> TOKEN_MINUS 
  | 85 -> TOKEN_STAR 
  | 86 -> TOKEN_COLON 
  | 87 -> TOKEN_DOUBLE_COLON 
  | 88 -> TOKEN_CARET 
  | 89 -> TOKEN_COMMA 
  | 90 -> TOKEN_SEMICOLON 
  | 91 -> TOKEN_FN_CTOR 
  | 92 -> TOKEN_FN_ARROW_BACK 
  | 93 -> TOKEN_FN_ARROW_FRONT 
  | 94 -> TOKEN_FN_DIVIDE 
  | 95 -> TOKEN_L_BOX 
  | 96 -> TOKEN_R_BOX 
  | 97 -> TOKEN_L_PUMPKIN 
  | 98 -> TOKEN_R_PUMPKIN 
  | 99 -> TOKEN_L_BANANA 
  | 100 -> TOKEN_R_BANANA 
  | 101 -> TOKEN_L_BIND 
  | 102 -> TOKEN_R_BIND 
  | 103 -> TOKEN_L_STAR 
  | 104 -> TOKEN_R_STAR 
  | 105 -> TOKEN_L_ARROW 
  | 106 -> TOKEN_R_ARROW 
  | 107 -> TOKEN_L_BRACKET 
  | 108 -> TOKEN_R_BRACKET 
  | 109 -> TOKEN_L_BRACE 
  | 110 -> TOKEN_R_BRACE 
  | 111 -> TOKEN_L_PAREN 
  | 112 -> TOKEN_R_PAREN 
  | 113 -> TOKEN_DOCUMENTATION_LINE 
  | 114 -> TOKEN_NATIVE_CODE_LINE 
  | 115 -> TOKEN_STRING 
  | 116 -> TOKEN_DECIMAL 
  | 117 -> TOKEN_INTEGER 
  | 118 -> TOKEN_TEST_NAME 
  | 119 -> TOKEN_PREDICATE_NAME 
  | 120 -> TOKEN_OPERATOR_NAME 
  | 121 -> TOKEN_BIG_NAME 
  | 122 -> TOKEN_SMALL_NAME 
  | 123 -> TOKEN_EOF 
  | 126 -> TOKEN_end_of_input
  | 124 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startunit 
    | 1 -> NONTERM_unit 
    | 2 -> NONTERM_unit 
    | 3 -> NONTERM_import_list 
    | 4 -> NONTERM_import_list 
    | 5 -> NONTERM_decl_list 
    | 6 -> NONTERM_decl_list 
    | 7 -> NONTERM_main 
    | 8 -> NONTERM_import 
    | 9 -> NONTERM_import 
    | 10 -> NONTERM_import 
    | 11 -> NONTERM_import_path 
    | 12 -> NONTERM_import_path 
    | 13 -> NONTERM_remote 
    | 14 -> NONTERM_export 
    | 15 -> NONTERM_brace_names 
    | 16 -> NONTERM_name_list 
    | 17 -> NONTERM_name_list 
    | 18 -> NONTERM_name 
    | 19 -> NONTERM_name 
    | 20 -> NONTERM_name 
    | 21 -> NONTERM_declaration 
    | 22 -> NONTERM_declaration 
    | 23 -> NONTERM_declaration 
    | 24 -> NONTERM_declaration 
    | 25 -> NONTERM_declaration 
    | 26 -> NONTERM_declaration 
    | 27 -> NONTERM_declaration 
    | 28 -> NONTERM_declaration 
    | 29 -> NONTERM_declaration 
    | 30 -> NONTERM_declaration 
    | 31 -> NONTERM_declaration 
    | 32 -> NONTERM_declaration 
    | 33 -> NONTERM_declaration 
    | 34 -> NONTERM_declaration 
    | 35 -> NONTERM_declaration 
    | 36 -> NONTERM_declaration 
    | 37 -> NONTERM_declaration 
    | 38 -> NONTERM_documentation 
    | 39 -> NONTERM_documentation_lines 
    | 40 -> NONTERM_documentation_lines 
    | 41 -> NONTERM_function 
    | 42 -> NONTERM_function 
    | 43 -> NONTERM_function 
    | 44 -> NONTERM_function 
    | 45 -> NONTERM_function_list 
    | 46 -> NONTERM_function_list 
    | 47 -> NONTERM_native 
    | 48 -> NONTERM_native 
    | 49 -> NONTERM_native_code_list 
    | 50 -> NONTERM_native_code_list 
    | 51 -> NONTERM_userkind 
    | 52 -> NONTERM_userkind 
    | 53 -> NONTERM_kind_unify 
    | 54 -> NONTERM_kind_unify 
    | 55 -> NONTERM_kind_unify 
    | 56 -> NONTERM_datatype 
    | 57 -> NONTERM_datatype 
    | 58 -> NONTERM_datatype 
    | 59 -> NONTERM_type_param_list 
    | 60 -> NONTERM_type_param_list 
    | 61 -> NONTERM_type_param_list 
    | 62 -> NONTERM_datatype_list 
    | 63 -> NONTERM_datatype_list 
    | 64 -> NONTERM_constructor 
    | 65 -> NONTERM_constructor 
    | 66 -> NONTERM_constructor_list 
    | 67 -> NONTERM_constructor_list 
    | 68 -> NONTERM_rule 
    | 69 -> NONTERM_rule 
    | 70 -> NONTERM_rule 
    | 71 -> NONTERM_rule 
    | 72 -> NONTERM_overload 
    | 73 -> NONTERM_instance 
    | 74 -> NONTERM_effect 
    | 75 -> NONTERM_handler_template_list 
    | 76 -> NONTERM_handler_template_list 
    | 77 -> NONTERM_handler_template 
    | 78 -> NONTERM_test 
    | 79 -> NONTERM_law 
    | 80 -> NONTERM_test_all 
    | 81 -> NONTERM_test_all 
    | 82 -> NONTERM_test_all 
    | 83 -> NONTERM_test_all 
    | 84 -> NONTERM_test_all 
    | 85 -> NONTERM_test_all 
    | 86 -> NONTERM_test_all 
    | 87 -> NONTERM_check 
    | 88 -> NONTERM_tag 
    | 89 -> NONTERM_any_kind 
    | 90 -> NONTERM_any_kind 
    | 91 -> NONTERM_any_kind 
    | 92 -> NONTERM_any_kind 
    | 93 -> NONTERM_any_kind 
    | 94 -> NONTERM_predicate_list 
    | 95 -> NONTERM_predicate_list 
    | 96 -> NONTERM_predicate_list 
    | 97 -> NONTERM_predicate_list 
    | 98 -> NONTERM_predicate 
    | 99 -> NONTERM_predicate 
    | 100 -> NONTERM_qual_fn_type 
    | 101 -> NONTERM_base_type 
    | 102 -> NONTERM_base_type 
    | 103 -> NONTERM_base_type 
    | 104 -> NONTERM_base_type 
    | 105 -> NONTERM_base_type 
    | 106 -> NONTERM_base_type 
    | 107 -> NONTERM_base_type 
    | 108 -> NONTERM_base_type 
    | 109 -> NONTERM_base_type 
    | 110 -> NONTERM_base_type 
    | 111 -> NONTERM_base_type 
    | 112 -> NONTERM_base_type 
    | 113 -> NONTERM_base_type 
    | 114 -> NONTERM_base_type 
    | 115 -> NONTERM_base_type 
    | 116 -> NONTERM_base_type 
    | 117 -> NONTERM_val_type 
    | 118 -> NONTERM_fn_type 
    | 119 -> NONTERM_fn_type_seq 
    | 120 -> NONTERM_fn_type_seq 
    | 121 -> NONTERM_fn_row_type 
    | 122 -> NONTERM_fn_row_type 
    | 123 -> NONTERM_fn_row_type 
    | 124 -> NONTERM_field_row_type 
    | 125 -> NONTERM_field_row_type 
    | 126 -> NONTERM_field_row_type 
    | 127 -> NONTERM_field_type 
    | 128 -> NONTERM_compound_type 
    | 129 -> NONTERM_compound_type 
    | 130 -> NONTERM_compound_type 
    | 131 -> NONTERM_compound_type 
    | 132 -> NONTERM_compound_type 
    | 133 -> NONTERM_compound_type 
    | 134 -> NONTERM_compound_type 
    | 135 -> NONTERM_and_sequence 
    | 136 -> NONTERM_and_sequence 
    | 137 -> NONTERM_or_sequence 
    | 138 -> NONTERM_or_sequence 
    | 139 -> NONTERM_mul_sequence 
    | 140 -> NONTERM_mul_sequence 
    | 141 -> NONTERM_mul_sequence 
    | 142 -> NONTERM_mul_sequence 
    | 143 -> NONTERM_mul_sequence 
    | 144 -> NONTERM_type_arg_list 
    | 145 -> NONTERM_type_arg_list 
    | 146 -> NONTERM_term_statement_block 
    | 147 -> NONTERM_term_statement_list 
    | 148 -> NONTERM_term_statement_list 
    | 149 -> NONTERM_term_statement 
    | 150 -> NONTERM_term_statement 
    | 151 -> NONTERM_term_statement 
    | 152 -> NONTERM_non_empty_simple_expr 
    | 153 -> NONTERM_non_empty_simple_expr 
    | 154 -> NONTERM_non_empty_simple_expr 
    | 155 -> NONTERM_non_empty_simple_expr 
    | 156 -> NONTERM_non_empty_simple_expr 
    | 157 -> NONTERM_non_empty_simple_expr 
    | 158 -> NONTERM_simple_expr 
    | 159 -> NONTERM_simple_expr 
    | 160 -> NONTERM_word 
    | 161 -> NONTERM_word 
    | 162 -> NONTERM_word 
    | 163 -> NONTERM_word 
    | 164 -> NONTERM_word 
    | 165 -> NONTERM_word 
    | 166 -> NONTERM_word 
    | 167 -> NONTERM_word 
    | 168 -> NONTERM_word 
    | 169 -> NONTERM_word 
    | 170 -> NONTERM_word 
    | 171 -> NONTERM_word 
    | 172 -> NONTERM_word 
    | 173 -> NONTERM_word 
    | 174 -> NONTERM_word 
    | 175 -> NONTERM_word 
    | 176 -> NONTERM_word 
    | 177 -> NONTERM_word 
    | 178 -> NONTERM_word 
    | 179 -> NONTERM_word 
    | 180 -> NONTERM_word 
    | 181 -> NONTERM_word 
    | 182 -> NONTERM_word 
    | 183 -> NONTERM_word 
    | 184 -> NONTERM_word 
    | 185 -> NONTERM_word 
    | 186 -> NONTERM_word 
    | 187 -> NONTERM_word 
    | 188 -> NONTERM_word 
    | 189 -> NONTERM_word 
    | 190 -> NONTERM_word 
    | 191 -> NONTERM_permission 
    | 192 -> NONTERM_permission 
    | 193 -> NONTERM_handle_word 
    | 194 -> NONTERM_handle_word 
    | 195 -> NONTERM_handler 
    | 196 -> NONTERM_return 
    | 197 -> NONTERM_return 
    | 198 -> NONTERM_param_list 
    | 199 -> NONTERM_param_list 
    | 200 -> NONTERM_handler_list 
    | 201 -> NONTERM_handler_list 
    | 202 -> NONTERM_inject_word 
    | 203 -> NONTERM_eff_list 
    | 204 -> NONTERM_eff_list 
    | 205 -> NONTERM_match_word 
    | 206 -> NONTERM_match_word 
    | 207 -> NONTERM_match_clause_list 
    | 208 -> NONTERM_match_clause_list 
    | 209 -> NONTERM_match_clause 
    | 210 -> NONTERM_if_word 
    | 211 -> NONTERM_switch_word 
    | 212 -> NONTERM_switch_clause_list 
    | 213 -> NONTERM_switch_clause_list 
    | 214 -> NONTERM_when_word 
    | 215 -> NONTERM_while_word 
    | 216 -> NONTERM_for_word 
    | 217 -> NONTERM_for_word 
    | 218 -> NONTERM_for_word 
    | 219 -> NONTERM_for_results 
    | 220 -> NONTERM_for_results 
    | 221 -> NONTERM_for_result 
    | 222 -> NONTERM_for_result 
    | 223 -> NONTERM_for_result 
    | 224 -> NONTERM_for_sequence 
    | 225 -> NONTERM_for_sequence 
    | 226 -> NONTERM_for_sequence 
    | 227 -> NONTERM_parallel_sequences 
    | 228 -> NONTERM_parallel_sequences 
    | 229 -> NONTERM_fold_inits 
    | 230 -> NONTERM_fold_inits 
    | 231 -> NONTERM_function_literal 
    | 232 -> NONTERM_function_literal 
    | 233 -> NONTERM_lit_expr_list 
    | 234 -> NONTERM_lit_expr_list 
    | 235 -> NONTERM_tuple_literal 
    | 236 -> NONTERM_tuple_literal 
    | 237 -> NONTERM_tuple_literal 
    | 238 -> NONTERM_tuple_literal 
    | 239 -> NONTERM_list_literal 
    | 240 -> NONTERM_list_literal 
    | 241 -> NONTERM_record_literal 
    | 242 -> NONTERM_record_literal 
    | 243 -> NONTERM_record_literal 
    | 244 -> NONTERM_record_literal 
    | 245 -> NONTERM_variant_literal 
    | 246 -> NONTERM_case_word 
    | 247 -> NONTERM_case_clause_list 
    | 248 -> NONTERM_case_clause_list 
    | 249 -> NONTERM_case_clause 
    | 250 -> NONTERM_field_list 
    | 251 -> NONTERM_field_list 
    | 252 -> NONTERM_field 
    | 253 -> NONTERM_identifier 
    | 254 -> NONTERM_type_identifier 
    | 255 -> NONTERM_qualified_name 
    | 256 -> NONTERM_qualified_name 
    | 257 -> NONTERM_qualified_name 
    | 258 -> NONTERM_qualified_name 
    | 259 -> NONTERM_qualified_name 
    | 260 -> NONTERM_qualified_ctor 
    | 261 -> NONTERM_qualified_ctor 
    | 262 -> NONTERM_qualified_ctor 
    | 263 -> NONTERM_qualified_ctor 
    | 264 -> NONTERM_no_dot_pattern_expr_list 
    | 265 -> NONTERM_no_dot_pattern_expr_list 
    | 266 -> NONTERM_var_only_pattern_list 
    | 267 -> NONTERM_var_only_pattern_list 
    | 268 -> NONTERM_pattern_expr_list 
    | 269 -> NONTERM_pattern_expr_list 
    | 270 -> NONTERM_pattern_expr_list 
    | 271 -> NONTERM_field_pattern_list 
    | 272 -> NONTERM_field_pattern_list 
    | 273 -> NONTERM_pattern_expr 
    | 274 -> NONTERM_pattern_expr 
    | 275 -> NONTERM_pattern_expr 
    | 276 -> NONTERM_pattern_expr 
    | 277 -> NONTERM_pattern_expr 
    | 278 -> NONTERM_pattern_expr 
    | 279 -> NONTERM_pattern_expr 
    | 280 -> NONTERM_pattern_expr 
    | 281 -> NONTERM_pattern_expr 
    | 282 -> NONTERM_pattern_expr 
    | 283 -> NONTERM_pattern_expr 
    | 284 -> NONTERM_pattern_expr 
    | 285 -> NONTERM_pattern_expr 
    | 286 -> NONTERM_pattern_expr 
    | 287 -> NONTERM_pattern_expr 
    | 288 -> NONTERM_pattern_expr 
    | 289 -> NONTERM_tuple_pattern 
    | 290 -> NONTERM_list_pattern 
    | 291 -> NONTERM_vector_pattern 
    | 292 -> NONTERM_slice_pattern 
    | 293 -> NONTERM_record_pattern 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 126 
let _fsyacc_tagOfErrorTerminal = 124

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | IS  -> "IS" 
  | ONE  -> "ONE" 
  | TRUE  -> "TRUE" 
  | FALSE  -> "FALSE" 
  | AND  -> "AND" 
  | OR  -> "OR" 
  | NOT  -> "NOT" 
  | TUPLE  -> "TUPLE" 
  | LIST  -> "LIST" 
  | VECTOR  -> "VECTOR" 
  | SLICE  -> "SLICE" 
  | DICTIONARY  -> "DICTIONARY" 
  | CASE  -> "CASE" 
  | RECORD  -> "RECORD" 
  | VARIANT  -> "VARIANT" 
  | FOR  -> "FOR" 
  | FOLD  -> "FOLD" 
  | MAP  -> "MAP" 
  | BREAK  -> "BREAK" 
  | FINAL  -> "FINAL" 
  | FILL  -> "FILL" 
  | LENGTH  -> "LENGTH" 
  | RESULT  -> "RESULT" 
  | IF  -> "IF" 
  | WHEN  -> "WHEN" 
  | SWITCH  -> "SWITCH" 
  | WHILE  -> "WHILE" 
  | THEN  -> "THEN" 
  | ELSE  -> "ELSE" 
  | DO  -> "DO" 
  | MATCH  -> "MATCH" 
  | INJECT  -> "INJECT" 
  | WITH  -> "WITH" 
  | AFTER  -> "AFTER" 
  | HANDLE  -> "HANDLE" 
  | UNTAG  -> "UNTAG" 
  | BY  -> "BY" 
  | PER  -> "PER" 
  | TRUST  -> "TRUST" 
  | DISTRUST  -> "DISTRUST" 
  | AUDIT  -> "AUDIT" 
  | NEW_REF  -> "NEW_REF" 
  | GET_REF  -> "GET_REF" 
  | PUT_REF  -> "PUT_REF" 
  | WITH_STATE  -> "WITH_STATE" 
  | PERMISSION  -> "PERMISSION" 
  | FUNCTION  -> "FUNCTION" 
  | NATIVE  -> "NATIVE" 
  | LOCAL  -> "LOCAL" 
  | LET  -> "LET" 
  | BOOLEAN  -> "BOOLEAN" 
  | ABELIAN  -> "ABELIAN" 
  | SYNTACTIC  -> "SYNTACTIC" 
  | IS_ROUGHLY  -> "IS_ROUGHLY" 
  | IS_NOT  -> "IS_NOT" 
  | SATISFIES  -> "SATISFIES" 
  | VIOLATES  -> "VIOLATES" 
  | TEST  -> "TEST" 
  | LAW  -> "LAW" 
  | EXHAUSTIVE  -> "EXHAUSTIVE" 
  | SYNONYM  -> "SYNONYM" 
  | TAG  -> "TAG" 
  | EFFECT  -> "EFFECT" 
  | OVERLOAD  -> "OVERLOAD" 
  | INSTANCE  -> "INSTANCE" 
  | RULE  -> "RULE" 
  | CHECK  -> "CHECK" 
  | PATTERN  -> "PATTERN" 
  | RECURSIVE  -> "RECURSIVE" 
  | KIND  -> "KIND" 
  | DATA  -> "DATA" 
  | ABOUT  -> "ABOUT" 
  | MAIN  -> "MAIN" 
  | EXPORT  -> "EXPORT" 
  | FROM  -> "FROM" 
  | AS  -> "AS" 
  | IMPORT  -> "IMPORT" 
  | REF  -> "REF" 
  | UNDERSCORE  -> "UNDERSCORE" 
  | EQUALS  -> "EQUALS" 
  | ELLIPSIS  -> "ELLIPSIS" 
  | BAR  -> "BAR" 
  | DOT  -> "DOT" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | STAR  -> "STAR" 
  | COLON  -> "COLON" 
  | DOUBLE_COLON  -> "DOUBLE_COLON" 
  | CARET  -> "CARET" 
  | COMMA  -> "COMMA" 
  | SEMICOLON  -> "SEMICOLON" 
  | FN_CTOR  -> "FN_CTOR" 
  | FN_ARROW_BACK  -> "FN_ARROW_BACK" 
  | FN_ARROW_FRONT  -> "FN_ARROW_FRONT" 
  | FN_DIVIDE  -> "FN_DIVIDE" 
  | L_BOX  -> "L_BOX" 
  | R_BOX  -> "R_BOX" 
  | L_PUMPKIN  -> "L_PUMPKIN" 
  | R_PUMPKIN  -> "R_PUMPKIN" 
  | L_BANANA  -> "L_BANANA" 
  | R_BANANA  -> "R_BANANA" 
  | L_BIND  -> "L_BIND" 
  | R_BIND  -> "R_BIND" 
  | L_STAR  -> "L_STAR" 
  | R_STAR  -> "R_STAR" 
  | L_ARROW  -> "L_ARROW" 
  | R_ARROW  -> "R_ARROW" 
  | L_BRACKET  -> "L_BRACKET" 
  | R_BRACKET  -> "R_BRACKET" 
  | L_BRACE  -> "L_BRACE" 
  | R_BRACE  -> "R_BRACE" 
  | L_PAREN  -> "L_PAREN" 
  | R_PAREN  -> "R_PAREN" 
  | DOCUMENTATION_LINE _ -> "DOCUMENTATION_LINE" 
  | NATIVE_CODE_LINE _ -> "NATIVE_CODE_LINE" 
  | STRING _ -> "STRING" 
  | DECIMAL _ -> "DECIMAL" 
  | INTEGER _ -> "INTEGER" 
  | TEST_NAME _ -> "TEST_NAME" 
  | PREDICATE_NAME _ -> "PREDICATE_NAME" 
  | OPERATOR_NAME _ -> "OPERATOR_NAME" 
  | BIG_NAME _ -> "BIG_NAME" 
  | SMALL_NAME _ -> "SMALL_NAME" 
  | EOF  -> "EOF" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | IS  -> (null : System.Object) 
  | ONE  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | TUPLE  -> (null : System.Object) 
  | LIST  -> (null : System.Object) 
  | VECTOR  -> (null : System.Object) 
  | SLICE  -> (null : System.Object) 
  | DICTIONARY  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | RECORD  -> (null : System.Object) 
  | VARIANT  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | FOLD  -> (null : System.Object) 
  | MAP  -> (null : System.Object) 
  | BREAK  -> (null : System.Object) 
  | FINAL  -> (null : System.Object) 
  | FILL  -> (null : System.Object) 
  | LENGTH  -> (null : System.Object) 
  | RESULT  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | WHEN  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | INJECT  -> (null : System.Object) 
  | WITH  -> (null : System.Object) 
  | AFTER  -> (null : System.Object) 
  | HANDLE  -> (null : System.Object) 
  | UNTAG  -> (null : System.Object) 
  | BY  -> (null : System.Object) 
  | PER  -> (null : System.Object) 
  | TRUST  -> (null : System.Object) 
  | DISTRUST  -> (null : System.Object) 
  | AUDIT  -> (null : System.Object) 
  | NEW_REF  -> (null : System.Object) 
  | GET_REF  -> (null : System.Object) 
  | PUT_REF  -> (null : System.Object) 
  | WITH_STATE  -> (null : System.Object) 
  | PERMISSION  -> (null : System.Object) 
  | FUNCTION  -> (null : System.Object) 
  | NATIVE  -> (null : System.Object) 
  | LOCAL  -> (null : System.Object) 
  | LET  -> (null : System.Object) 
  | BOOLEAN  -> (null : System.Object) 
  | ABELIAN  -> (null : System.Object) 
  | SYNTACTIC  -> (null : System.Object) 
  | IS_ROUGHLY  -> (null : System.Object) 
  | IS_NOT  -> (null : System.Object) 
  | SATISFIES  -> (null : System.Object) 
  | VIOLATES  -> (null : System.Object) 
  | TEST  -> (null : System.Object) 
  | LAW  -> (null : System.Object) 
  | EXHAUSTIVE  -> (null : System.Object) 
  | SYNONYM  -> (null : System.Object) 
  | TAG  -> (null : System.Object) 
  | EFFECT  -> (null : System.Object) 
  | OVERLOAD  -> (null : System.Object) 
  | INSTANCE  -> (null : System.Object) 
  | RULE  -> (null : System.Object) 
  | CHECK  -> (null : System.Object) 
  | PATTERN  -> (null : System.Object) 
  | RECURSIVE  -> (null : System.Object) 
  | KIND  -> (null : System.Object) 
  | DATA  -> (null : System.Object) 
  | ABOUT  -> (null : System.Object) 
  | MAIN  -> (null : System.Object) 
  | EXPORT  -> (null : System.Object) 
  | FROM  -> (null : System.Object) 
  | AS  -> (null : System.Object) 
  | IMPORT  -> (null : System.Object) 
  | REF  -> (null : System.Object) 
  | UNDERSCORE  -> (null : System.Object) 
  | EQUALS  -> (null : System.Object) 
  | ELLIPSIS  -> (null : System.Object) 
  | BAR  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | DOUBLE_COLON  -> (null : System.Object) 
  | CARET  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | FN_CTOR  -> (null : System.Object) 
  | FN_ARROW_BACK  -> (null : System.Object) 
  | FN_ARROW_FRONT  -> (null : System.Object) 
  | FN_DIVIDE  -> (null : System.Object) 
  | L_BOX  -> (null : System.Object) 
  | R_BOX  -> (null : System.Object) 
  | L_PUMPKIN  -> (null : System.Object) 
  | R_PUMPKIN  -> (null : System.Object) 
  | L_BANANA  -> (null : System.Object) 
  | R_BANANA  -> (null : System.Object) 
  | L_BIND  -> (null : System.Object) 
  | R_BIND  -> (null : System.Object) 
  | L_STAR  -> (null : System.Object) 
  | R_STAR  -> (null : System.Object) 
  | L_ARROW  -> (null : System.Object) 
  | R_ARROW  -> (null : System.Object) 
  | L_BRACKET  -> (null : System.Object) 
  | R_BRACKET  -> (null : System.Object) 
  | L_BRACE  -> (null : System.Object) 
  | R_BRACE  -> (null : System.Object) 
  | L_PAREN  -> (null : System.Object) 
  | R_PAREN  -> (null : System.Object) 
  | DOCUMENTATION_LINE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NATIVE_CODE_LINE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DECIMAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INTEGER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | TEST_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PREDICATE_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OPERATOR_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BIG_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | SMALL_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EOF  -> (null : System.Object) 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 8us; 9us; 2us; 65535us; 2us; 3us; 10us; 11us; 1us; 65535us; 3us; 4us; 2us; 65535us; 0us; 8us; 8us; 8us; 2us; 65535us; 15us; 16us; 19us; 20us; 2us; 65535us; 15us; 26us; 19us; 26us; 1us; 65535us; 3us; 6us; 2us; 65535us; 15us; 19us; 38us; 39us; 2us; 65535us; 40us; 41us; 43us; 44us; 2us; 65535us; 40us; 43us; 43us; 43us; 2us; 65535us; 2us; 10us; 10us; 10us; 5us; 65535us; 2us; 86us; 10us; 86us; 49us; 85us; 51us; 85us; 94us; 85us; 2us; 65535us; 74us; 75us; 76us; 77us; 5us; 65535us; 2us; 48us; 10us; 48us; 49us; 50us; 51us; 94us; 94us; 94us; 2us; 65535us; 51us; 52us; 94us; 95us; 2us; 65535us; 2us; 54us; 10us; 54us; 3us; 65535us; 100us; 101us; 106us; 107us; 108us; 109us; 2us; 65535us; 2us; 60us; 10us; 60us; 2us; 65535us; 112us; 113us; 116us; 117us; 5us; 65535us; 2us; 61us; 10us; 61us; 49us; 62us; 51us; 134us; 134us; 134us; 1us; 65535us; 122us; 123us; 2us; 65535us; 51us; 63us; 134us; 135us; 2us; 65535us; 124us; 143us; 144us; 143us; 2us; 65535us; 124us; 125us; 144us; 145us; 2us; 65535us; 2us; 67us; 10us; 67us; 2us; 65535us; 2us; 65us; 10us; 65us; 2us; 65535us; 2us; 66us; 10us; 66us; 2us; 65535us; 2us; 68us; 10us; 68us; 1us; 65535us; 173us; 174us; 2us; 65535us; 173us; 176us; 174us; 177us; 2us; 65535us; 2us; 69us; 10us; 69us; 2us; 65535us; 2us; 70us; 10us; 70us; 2us; 65535us; 185us; 186us; 192us; 193us; 2us; 65535us; 2us; 71us; 10us; 71us; 2us; 65535us; 2us; 72us; 10us; 72us; 6us; 65535us; 126us; 127us; 131us; 132us; 217us; 218us; 220us; 221us; 225us; 223us; 226us; 224us; 0us; 65535us; 0us; 65535us; 6us; 65535us; 98us; 99us; 104us; 105us; 162us; 163us; 166us; 167us; 180us; 181us; 210us; 211us; 29us; 65535us; 137us; 260us; 138us; 260us; 140us; 260us; 141us; 260us; 148us; 260us; 149us; 260us; 151us; 260us; 152us; 260us; 154us; 260us; 156us; 260us; 240us; 260us; 241us; 260us; 242us; 260us; 254us; 260us; 258us; 260us; 261us; 262us; 263us; 260us; 268us; 260us; 271us; 260us; 276us; 260us; 284us; 260us; 291us; 260us; 293us; 294us; 295us; 296us; 297us; 298us; 299us; 300us; 301us; 302us; 304us; 305us; 307us; 308us; 21us; 65535us; 137us; 286us; 138us; 286us; 140us; 286us; 141us; 286us; 148us; 286us; 149us; 286us; 151us; 286us; 152us; 286us; 154us; 286us; 156us; 286us; 240us; 286us; 241us; 286us; 242us; 286us; 254us; 286us; 258us; 286us; 263us; 286us; 268us; 286us; 271us; 286us; 276us; 286us; 284us; 286us; 291us; 286us; 7us; 65535us; 98us; 228us; 104us; 228us; 162us; 228us; 166us; 228us; 180us; 228us; 210us; 228us; 237us; 238us; 9us; 65535us; 98us; 263us; 104us; 263us; 162us; 263us; 166us; 263us; 180us; 263us; 210us; 263us; 237us; 263us; 257us; 258us; 270us; 271us; 2us; 65535us; 264us; 265us; 266us; 267us; 2us; 65535us; 248us; 249us; 251us; 252us; 1us; 65535us; 281us; 282us; 21us; 65535us; 137us; 310us; 138us; 139us; 140us; 311us; 141us; 142us; 148us; 310us; 149us; 310us; 151us; 311us; 152us; 310us; 154us; 311us; 156us; 311us; 240us; 241us; 241us; 310us; 242us; 311us; 254us; 255us; 258us; 272us; 263us; 272us; 268us; 269us; 271us; 272us; 276us; 277us; 284us; 285us; 291us; 292us; 21us; 65535us; 137us; 288us; 138us; 288us; 140us; 288us; 141us; 288us; 148us; 288us; 149us; 288us; 151us; 288us; 152us; 288us; 154us; 288us; 156us; 288us; 240us; 246us; 241us; 288us; 242us; 288us; 254us; 288us; 258us; 288us; 263us; 288us; 268us; 288us; 271us; 288us; 276us; 288us; 284us; 288us; 291us; 288us; 21us; 65535us; 137us; 289us; 138us; 289us; 140us; 289us; 141us; 289us; 148us; 289us; 149us; 289us; 151us; 289us; 152us; 289us; 154us; 289us; 156us; 289us; 240us; 244us; 241us; 289us; 242us; 289us; 254us; 289us; 258us; 289us; 263us; 289us; 268us; 289us; 271us; 289us; 276us; 289us; 284us; 289us; 291us; 289us; 21us; 65535us; 137us; 290us; 138us; 290us; 140us; 290us; 141us; 290us; 148us; 290us; 149us; 290us; 151us; 290us; 152us; 290us; 154us; 290us; 156us; 290us; 240us; 290us; 241us; 290us; 242us; 290us; 254us; 290us; 258us; 290us; 263us; 290us; 268us; 290us; 271us; 290us; 276us; 290us; 284us; 290us; 291us; 290us; 5us; 65535us; 137us; 140us; 148us; 151us; 149us; 154us; 152us; 156us; 241us; 242us; 59us; 65535us; 13us; 334us; 80us; 334us; 83us; 334us; 89us; 334us; 92us; 334us; 168us; 334us; 184us; 334us; 186us; 334us; 191us; 334us; 193us; 334us; 201us; 334us; 205us; 334us; 312us; 334us; 316us; 334us; 320us; 334us; 321us; 334us; 322us; 334us; 326us; 334us; 327us; 334us; 328us; 334us; 329us; 334us; 330us; 334us; 352us; 353us; 370us; 334us; 374us; 375us; 376us; 377us; 378us; 334us; 381us; 382us; 383us; 384us; 386us; 387us; 397us; 334us; 400us; 334us; 403us; 334us; 408us; 409us; 418us; 334us; 425us; 334us; 428us; 429us; 430us; 431us; 436us; 334us; 438us; 334us; 441us; 334us; 444us; 334us; 446us; 447us; 448us; 334us; 450us; 451us; 454us; 455us; 458us; 459us; 462us; 463us; 475us; 334us; 480us; 334us; 484us; 334us; 488us; 334us; 493us; 334us; 495us; 334us; 498us; 334us; 503us; 334us; 519us; 334us; 526us; 334us; 532us; 334us; 1us; 65535us; 312us; 313us; 2us; 65535us; 312us; 315us; 316us; 317us; 38us; 65535us; 13us; 326us; 80us; 326us; 83us; 326us; 89us; 326us; 92us; 326us; 168us; 326us; 184us; 326us; 186us; 326us; 191us; 326us; 193us; 326us; 201us; 326us; 205us; 326us; 312us; 322us; 316us; 322us; 320us; 321us; 370us; 327us; 378us; 326us; 397us; 326us; 400us; 326us; 403us; 326us; 418us; 326us; 425us; 326us; 436us; 326us; 438us; 326us; 441us; 326us; 444us; 326us; 448us; 326us; 475us; 326us; 480us; 326us; 484us; 326us; 488us; 326us; 493us; 328us; 495us; 327us; 498us; 329us; 503us; 330us; 519us; 326us; 526us; 326us; 532us; 326us; 30us; 65535us; 13us; 14us; 80us; 81us; 83us; 84us; 89us; 90us; 92us; 93us; 168us; 169us; 184us; 185us; 186us; 187us; 191us; 192us; 193us; 194us; 201us; 202us; 205us; 206us; 378us; 427us; 397us; 398us; 400us; 401us; 403us; 404us; 418us; 419us; 425us; 426us; 436us; 440us; 438us; 439us; 441us; 442us; 444us; 445us; 448us; 449us; 475us; 476us; 480us; 481us; 484us; 485us; 488us; 489us; 519us; 520us; 526us; 527us; 532us; 533us; 45us; 65535us; 13us; 323us; 80us; 323us; 83us; 323us; 89us; 323us; 92us; 323us; 168us; 323us; 184us; 323us; 186us; 323us; 191us; 323us; 193us; 323us; 201us; 323us; 205us; 323us; 312us; 323us; 316us; 323us; 320us; 323us; 321us; 331us; 322us; 331us; 326us; 331us; 327us; 331us; 328us; 331us; 329us; 331us; 330us; 331us; 370us; 323us; 378us; 323us; 397us; 323us; 400us; 323us; 403us; 323us; 418us; 323us; 425us; 323us; 436us; 323us; 438us; 323us; 441us; 323us; 444us; 323us; 448us; 323us; 475us; 323us; 480us; 323us; 484us; 323us; 488us; 323us; 493us; 323us; 495us; 323us; 498us; 323us; 503us; 323us; 519us; 323us; 526us; 323us; 532us; 323us; 45us; 65535us; 13us; 354us; 80us; 354us; 83us; 354us; 89us; 354us; 92us; 354us; 168us; 354us; 184us; 354us; 186us; 354us; 191us; 354us; 193us; 354us; 201us; 354us; 205us; 354us; 312us; 354us; 316us; 354us; 320us; 354us; 321us; 354us; 322us; 354us; 326us; 354us; 327us; 354us; 328us; 354us; 329us; 354us; 330us; 354us; 370us; 354us; 378us; 354us; 397us; 354us; 400us; 354us; 403us; 354us; 418us; 354us; 425us; 354us; 436us; 354us; 438us; 354us; 441us; 354us; 444us; 354us; 448us; 354us; 475us; 354us; 480us; 354us; 484us; 354us; 488us; 354us; 493us; 354us; 495us; 354us; 498us; 354us; 503us; 354us; 519us; 354us; 526us; 354us; 532us; 354us; 45us; 65535us; 13us; 335us; 80us; 335us; 83us; 335us; 89us; 335us; 92us; 335us; 168us; 335us; 184us; 335us; 186us; 335us; 191us; 335us; 193us; 335us; 201us; 335us; 205us; 335us; 312us; 335us; 316us; 335us; 320us; 335us; 321us; 335us; 322us; 335us; 326us; 335us; 327us; 335us; 328us; 335us; 329us; 335us; 330us; 335us; 370us; 335us; 378us; 335us; 397us; 335us; 400us; 335us; 403us; 335us; 418us; 335us; 425us; 335us; 436us; 335us; 438us; 335us; 441us; 335us; 444us; 335us; 448us; 335us; 475us; 335us; 480us; 335us; 484us; 335us; 488us; 335us; 493us; 335us; 495us; 335us; 498us; 335us; 503us; 335us; 519us; 335us; 526us; 335us; 532us; 335us; 1us; 65535us; 390us; 406us; 1us; 65535us; 390us; 391us; 7us; 65535us; 56us; 57us; 171us; 172us; 189us; 190us; 372us; 373us; 379us; 380us; 385us; 386us; 395us; 396us; 1us; 65535us; 389us; 390us; 45us; 65535us; 13us; 336us; 80us; 336us; 83us; 336us; 89us; 336us; 92us; 336us; 168us; 336us; 184us; 336us; 186us; 336us; 191us; 336us; 193us; 336us; 201us; 336us; 205us; 336us; 312us; 336us; 316us; 336us; 320us; 336us; 321us; 336us; 322us; 336us; 326us; 336us; 327us; 336us; 328us; 336us; 329us; 336us; 330us; 336us; 370us; 336us; 378us; 336us; 397us; 336us; 400us; 336us; 403us; 336us; 418us; 336us; 425us; 336us; 436us; 336us; 438us; 336us; 441us; 336us; 444us; 336us; 448us; 336us; 475us; 336us; 480us; 336us; 484us; 336us; 488us; 336us; 493us; 336us; 495us; 336us; 498us; 336us; 503us; 336us; 519us; 336us; 526us; 336us; 532us; 336us; 2us; 65535us; 407us; 408us; 410us; 411us; 45us; 65535us; 13us; 337us; 80us; 337us; 83us; 337us; 89us; 337us; 92us; 337us; 168us; 337us; 184us; 337us; 186us; 337us; 191us; 337us; 193us; 337us; 201us; 337us; 205us; 337us; 312us; 337us; 316us; 337us; 320us; 337us; 321us; 337us; 322us; 337us; 326us; 337us; 327us; 337us; 328us; 337us; 329us; 337us; 330us; 337us; 370us; 337us; 378us; 337us; 397us; 337us; 400us; 337us; 403us; 337us; 418us; 337us; 425us; 337us; 436us; 337us; 438us; 337us; 441us; 337us; 444us; 337us; 448us; 337us; 475us; 337us; 480us; 337us; 484us; 337us; 488us; 337us; 493us; 337us; 495us; 337us; 498us; 337us; 503us; 337us; 519us; 337us; 526us; 337us; 532us; 337us; 1us; 65535us; 413us; 414us; 2us; 65535us; 413us; 421us; 414us; 422us; 45us; 65535us; 13us; 338us; 80us; 338us; 83us; 338us; 89us; 338us; 92us; 338us; 168us; 338us; 184us; 338us; 186us; 338us; 191us; 338us; 193us; 338us; 201us; 338us; 205us; 338us; 312us; 338us; 316us; 338us; 320us; 338us; 321us; 338us; 322us; 338us; 326us; 338us; 327us; 338us; 328us; 338us; 329us; 338us; 330us; 338us; 370us; 338us; 378us; 338us; 397us; 338us; 400us; 338us; 403us; 338us; 418us; 338us; 425us; 338us; 436us; 338us; 438us; 338us; 441us; 338us; 444us; 338us; 448us; 338us; 475us; 338us; 480us; 338us; 484us; 338us; 488us; 338us; 493us; 338us; 495us; 338us; 498us; 338us; 503us; 338us; 519us; 338us; 526us; 338us; 532us; 338us; 45us; 65535us; 13us; 339us; 80us; 339us; 83us; 339us; 89us; 339us; 92us; 339us; 168us; 339us; 184us; 339us; 186us; 339us; 191us; 339us; 193us; 339us; 201us; 339us; 205us; 339us; 312us; 339us; 316us; 339us; 320us; 339us; 321us; 339us; 322us; 339us; 326us; 339us; 327us; 339us; 328us; 339us; 329us; 339us; 330us; 339us; 370us; 339us; 378us; 339us; 397us; 339us; 400us; 339us; 403us; 339us; 418us; 339us; 425us; 339us; 436us; 339us; 438us; 339us; 441us; 339us; 444us; 339us; 448us; 339us; 475us; 339us; 480us; 339us; 484us; 339us; 488us; 339us; 493us; 339us; 495us; 339us; 498us; 339us; 503us; 339us; 519us; 339us; 526us; 339us; 532us; 339us; 2us; 65535us; 433us; 434us; 442us; 443us; 45us; 65535us; 13us; 340us; 80us; 340us; 83us; 340us; 89us; 340us; 92us; 340us; 168us; 340us; 184us; 340us; 186us; 340us; 191us; 340us; 193us; 340us; 201us; 340us; 205us; 340us; 312us; 340us; 316us; 340us; 320us; 340us; 321us; 340us; 322us; 340us; 326us; 340us; 327us; 340us; 328us; 340us; 329us; 340us; 330us; 340us; 370us; 340us; 378us; 340us; 397us; 340us; 400us; 340us; 403us; 340us; 418us; 340us; 425us; 340us; 436us; 340us; 438us; 340us; 441us; 340us; 444us; 340us; 448us; 340us; 475us; 340us; 480us; 340us; 484us; 340us; 488us; 340us; 493us; 340us; 495us; 340us; 498us; 340us; 503us; 340us; 519us; 340us; 526us; 340us; 532us; 340us; 45us; 65535us; 13us; 341us; 80us; 341us; 83us; 341us; 89us; 341us; 92us; 341us; 168us; 341us; 184us; 341us; 186us; 341us; 191us; 341us; 193us; 341us; 201us; 341us; 205us; 341us; 312us; 341us; 316us; 341us; 320us; 341us; 321us; 341us; 322us; 341us; 326us; 341us; 327us; 341us; 328us; 341us; 329us; 341us; 330us; 341us; 370us; 341us; 378us; 341us; 397us; 341us; 400us; 341us; 403us; 341us; 418us; 341us; 425us; 341us; 436us; 341us; 438us; 341us; 441us; 341us; 444us; 341us; 448us; 341us; 475us; 341us; 480us; 341us; 484us; 341us; 488us; 341us; 493us; 341us; 495us; 341us; 498us; 341us; 503us; 341us; 519us; 341us; 526us; 341us; 532us; 341us; 45us; 65535us; 13us; 342us; 80us; 342us; 83us; 342us; 89us; 342us; 92us; 342us; 168us; 342us; 184us; 342us; 186us; 342us; 191us; 342us; 193us; 342us; 201us; 342us; 205us; 342us; 312us; 342us; 316us; 342us; 320us; 342us; 321us; 342us; 322us; 342us; 326us; 342us; 327us; 342us; 328us; 342us; 329us; 342us; 330us; 342us; 370us; 342us; 378us; 342us; 397us; 342us; 400us; 342us; 403us; 342us; 418us; 342us; 425us; 342us; 436us; 342us; 438us; 342us; 441us; 342us; 444us; 342us; 448us; 342us; 475us; 342us; 480us; 342us; 484us; 342us; 488us; 342us; 493us; 342us; 495us; 342us; 498us; 342us; 503us; 342us; 519us; 342us; 526us; 342us; 532us; 342us; 2us; 65535us; 456us; 457us; 465us; 466us; 2us; 65535us; 456us; 464us; 465us; 464us; 1us; 65535us; 474us; 475us; 2us; 65535us; 452us; 453us; 477us; 478us; 2us; 65535us; 460us; 461us; 482us; 483us; 45us; 65535us; 13us; 343us; 80us; 343us; 83us; 343us; 89us; 343us; 92us; 343us; 168us; 343us; 184us; 343us; 186us; 343us; 191us; 343us; 193us; 343us; 201us; 343us; 205us; 343us; 312us; 343us; 316us; 343us; 320us; 343us; 321us; 343us; 322us; 343us; 326us; 343us; 327us; 343us; 328us; 343us; 329us; 343us; 330us; 343us; 370us; 343us; 378us; 343us; 397us; 343us; 400us; 343us; 403us; 343us; 418us; 343us; 425us; 343us; 436us; 343us; 438us; 343us; 441us; 343us; 444us; 343us; 448us; 343us; 475us; 343us; 480us; 343us; 484us; 343us; 488us; 343us; 493us; 343us; 495us; 343us; 498us; 343us; 503us; 343us; 519us; 343us; 526us; 343us; 532us; 343us; 2us; 65535us; 370us; 492us; 495us; 491us; 45us; 65535us; 13us; 325us; 80us; 325us; 83us; 325us; 89us; 325us; 92us; 325us; 168us; 325us; 184us; 325us; 186us; 325us; 191us; 325us; 193us; 325us; 201us; 325us; 205us; 325us; 312us; 325us; 316us; 325us; 320us; 325us; 321us; 333us; 322us; 333us; 326us; 333us; 327us; 333us; 328us; 333us; 329us; 333us; 330us; 333us; 370us; 325us; 378us; 325us; 397us; 325us; 400us; 325us; 403us; 325us; 418us; 325us; 425us; 325us; 436us; 325us; 438us; 325us; 441us; 325us; 444us; 325us; 448us; 325us; 475us; 325us; 480us; 325us; 484us; 325us; 488us; 325us; 493us; 325us; 495us; 325us; 498us; 325us; 503us; 325us; 519us; 325us; 526us; 325us; 532us; 325us; 0us; 65535us; 45us; 65535us; 13us; 324us; 80us; 324us; 83us; 324us; 89us; 324us; 92us; 324us; 168us; 324us; 184us; 324us; 186us; 324us; 191us; 324us; 193us; 324us; 201us; 324us; 205us; 324us; 312us; 324us; 316us; 324us; 320us; 324us; 321us; 332us; 322us; 332us; 326us; 332us; 327us; 332us; 328us; 332us; 329us; 332us; 330us; 332us; 370us; 324us; 378us; 324us; 397us; 324us; 400us; 324us; 403us; 324us; 418us; 324us; 425us; 324us; 436us; 324us; 438us; 324us; 441us; 324us; 444us; 324us; 448us; 324us; 475us; 324us; 480us; 324us; 484us; 324us; 488us; 324us; 493us; 324us; 495us; 324us; 498us; 324us; 503us; 324us; 519us; 324us; 526us; 324us; 532us; 324us; 45us; 65535us; 13us; 350us; 80us; 350us; 83us; 350us; 89us; 350us; 92us; 350us; 168us; 350us; 184us; 350us; 186us; 350us; 191us; 350us; 193us; 350us; 201us; 350us; 205us; 350us; 312us; 350us; 316us; 350us; 320us; 350us; 321us; 350us; 322us; 350us; 326us; 350us; 327us; 350us; 328us; 350us; 329us; 350us; 330us; 350us; 370us; 350us; 378us; 350us; 397us; 350us; 400us; 350us; 403us; 350us; 418us; 350us; 425us; 350us; 436us; 350us; 438us; 350us; 441us; 350us; 444us; 350us; 448us; 350us; 475us; 350us; 480us; 350us; 484us; 350us; 488us; 350us; 493us; 350us; 495us; 350us; 498us; 350us; 503us; 350us; 519us; 350us; 526us; 350us; 532us; 350us; 45us; 65535us; 13us; 351us; 80us; 351us; 83us; 351us; 89us; 351us; 92us; 351us; 168us; 351us; 184us; 351us; 186us; 351us; 191us; 351us; 193us; 351us; 201us; 351us; 205us; 351us; 312us; 351us; 316us; 351us; 320us; 351us; 321us; 351us; 322us; 351us; 326us; 351us; 327us; 351us; 328us; 351us; 329us; 351us; 330us; 351us; 370us; 351us; 378us; 351us; 397us; 351us; 400us; 351us; 403us; 351us; 418us; 351us; 425us; 351us; 436us; 351us; 438us; 351us; 441us; 351us; 444us; 351us; 448us; 351us; 475us; 351us; 480us; 351us; 484us; 351us; 488us; 351us; 493us; 351us; 495us; 351us; 498us; 351us; 503us; 351us; 519us; 351us; 526us; 351us; 532us; 351us; 1us; 65535us; 515us; 516us; 2us; 65535us; 515us; 522us; 516us; 523us; 3us; 65535us; 371us; 504us; 502us; 507us; 529us; 530us; 4us; 65535us; 371us; 528us; 502us; 528us; 511us; 512us; 529us; 528us; 46us; 65535us; 13us; 368us; 80us; 368us; 83us; 368us; 89us; 368us; 92us; 368us; 168us; 368us; 184us; 368us; 186us; 368us; 191us; 368us; 193us; 368us; 201us; 368us; 205us; 368us; 312us; 368us; 316us; 368us; 320us; 368us; 321us; 368us; 322us; 368us; 326us; 368us; 327us; 368us; 328us; 368us; 329us; 368us; 330us; 368us; 370us; 368us; 378us; 368us; 394us; 395us; 397us; 368us; 400us; 368us; 403us; 368us; 418us; 368us; 425us; 368us; 436us; 368us; 438us; 368us; 441us; 368us; 444us; 368us; 448us; 368us; 475us; 368us; 480us; 368us; 484us; 368us; 488us; 368us; 493us; 368us; 495us; 368us; 498us; 368us; 503us; 368us; 519us; 368us; 526us; 368us; 532us; 368us; 61us; 65535us; 58us; 577us; 79us; 577us; 82us; 577us; 88us; 577us; 91us; 577us; 126us; 216us; 131us; 216us; 137us; 233us; 138us; 233us; 140us; 233us; 141us; 233us; 148us; 233us; 149us; 233us; 151us; 233us; 152us; 233us; 154us; 233us; 156us; 233us; 217us; 216us; 220us; 216us; 225us; 216us; 226us; 216us; 240us; 233us; 241us; 233us; 242us; 233us; 254us; 233us; 258us; 233us; 261us; 233us; 263us; 233us; 268us; 233us; 271us; 233us; 276us; 233us; 284us; 233us; 291us; 233us; 293us; 233us; 295us; 233us; 297us; 233us; 299us; 233us; 301us; 233us; 304us; 233us; 307us; 233us; 318us; 577us; 319us; 577us; 399us; 577us; 402us; 577us; 416us; 577us; 423us; 577us; 424us; 577us; 556us; 577us; 557us; 577us; 558us; 577us; 559us; 577us; 560us; 577us; 563us; 577us; 573us; 577us; 575us; 577us; 578us; 579us; 579us; 577us; 587us; 577us; 590us; 577us; 593us; 577us; 596us; 577us; 47us; 65535us; 13us; 534us; 80us; 534us; 83us; 534us; 89us; 534us; 92us; 534us; 168us; 534us; 184us; 534us; 186us; 534us; 191us; 534us; 193us; 534us; 201us; 534us; 205us; 534us; 312us; 534us; 316us; 534us; 320us; 534us; 321us; 534us; 322us; 534us; 326us; 534us; 327us; 534us; 328us; 534us; 329us; 534us; 330us; 534us; 370us; 534us; 378us; 534us; 394us; 534us; 397us; 534us; 400us; 534us; 403us; 534us; 418us; 534us; 425us; 534us; 436us; 534us; 438us; 534us; 441us; 534us; 444us; 534us; 448us; 534us; 475us; 534us; 480us; 534us; 484us; 534us; 488us; 534us; 493us; 534us; 495us; 534us; 498us; 534us; 503us; 534us; 519us; 534us; 526us; 534us; 532us; 534us; 541us; 542us; 62us; 65535us; 58us; 535us; 79us; 535us; 82us; 535us; 88us; 535us; 91us; 535us; 126us; 535us; 131us; 535us; 137us; 535us; 138us; 535us; 140us; 535us; 141us; 535us; 148us; 535us; 149us; 535us; 151us; 535us; 152us; 535us; 154us; 535us; 156us; 535us; 217us; 535us; 220us; 535us; 225us; 535us; 226us; 535us; 240us; 535us; 241us; 535us; 242us; 535us; 254us; 535us; 258us; 535us; 261us; 535us; 263us; 535us; 268us; 535us; 271us; 535us; 276us; 535us; 284us; 535us; 291us; 535us; 293us; 535us; 295us; 535us; 297us; 535us; 299us; 535us; 301us; 535us; 304us; 535us; 307us; 535us; 318us; 535us; 319us; 535us; 399us; 535us; 402us; 535us; 416us; 535us; 423us; 535us; 424us; 535us; 548us; 549us; 556us; 535us; 557us; 535us; 558us; 535us; 559us; 535us; 560us; 535us; 563us; 535us; 573us; 535us; 575us; 535us; 578us; 535us; 579us; 535us; 587us; 535us; 590us; 535us; 593us; 535us; 596us; 535us; 4us; 65535us; 79us; 82us; 88us; 91us; 318us; 319us; 399us; 402us; 3us; 65535us; 484us; 487us; 537us; 553us; 552us; 553us; 7us; 65535us; 416us; 424us; 423us; 424us; 579us; 556us; 587us; 557us; 590us; 558us; 593us; 559us; 596us; 560us; 2us; 65535us; 565us; 566us; 599us; 600us; 25us; 65535us; 58us; 59us; 79us; 550us; 82us; 551us; 88us; 550us; 91us; 551us; 318us; 550us; 319us; 551us; 399us; 550us; 402us; 551us; 416us; 554us; 423us; 554us; 424us; 561us; 556us; 561us; 557us; 561us; 558us; 561us; 559us; 561us; 560us; 561us; 563us; 564us; 573us; 574us; 575us; 576us; 579us; 554us; 587us; 554us; 590us; 554us; 593us; 554us; 596us; 554us; 25us; 65535us; 58us; 581us; 79us; 581us; 82us; 581us; 88us; 581us; 91us; 581us; 318us; 581us; 319us; 581us; 399us; 581us; 402us; 581us; 416us; 581us; 423us; 581us; 424us; 581us; 556us; 581us; 557us; 581us; 558us; 581us; 559us; 581us; 560us; 581us; 563us; 581us; 573us; 581us; 575us; 581us; 579us; 581us; 587us; 581us; 590us; 581us; 593us; 581us; 596us; 581us; 25us; 65535us; 58us; 582us; 79us; 582us; 82us; 582us; 88us; 582us; 91us; 582us; 318us; 582us; 319us; 582us; 399us; 582us; 402us; 582us; 416us; 582us; 423us; 582us; 424us; 582us; 556us; 582us; 557us; 582us; 558us; 582us; 559us; 582us; 560us; 582us; 563us; 582us; 573us; 582us; 575us; 582us; 579us; 582us; 587us; 582us; 590us; 582us; 593us; 582us; 596us; 582us; 25us; 65535us; 58us; 583us; 79us; 583us; 82us; 583us; 88us; 583us; 91us; 583us; 318us; 583us; 319us; 583us; 399us; 583us; 402us; 583us; 416us; 583us; 423us; 583us; 424us; 583us; 556us; 583us; 557us; 583us; 558us; 583us; 559us; 583us; 560us; 583us; 563us; 583us; 573us; 583us; 575us; 583us; 579us; 583us; 587us; 583us; 590us; 583us; 593us; 583us; 596us; 583us; 25us; 65535us; 58us; 584us; 79us; 584us; 82us; 584us; 88us; 584us; 91us; 584us; 318us; 584us; 319us; 584us; 399us; 584us; 402us; 584us; 416us; 584us; 423us; 584us; 424us; 584us; 556us; 584us; 557us; 584us; 558us; 584us; 559us; 584us; 560us; 584us; 563us; 584us; 573us; 584us; 575us; 584us; 579us; 584us; 587us; 584us; 590us; 584us; 593us; 584us; 596us; 584us; 25us; 65535us; 58us; 585us; 79us; 585us; 82us; 585us; 88us; 585us; 91us; 585us; 318us; 585us; 319us; 585us; 399us; 585us; 402us; 585us; 416us; 585us; 423us; 585us; 424us; 585us; 556us; 585us; 557us; 585us; 558us; 585us; 559us; 585us; 560us; 585us; 563us; 585us; 573us; 585us; 575us; 585us; 579us; 585us; 587us; 585us; 590us; 585us; 593us; 585us; 596us; 585us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 11us; 14us; 17us; 20us; 22us; 25us; 28us; 31us; 34us; 40us; 43us; 49us; 52us; 55us; 59us; 62us; 65us; 71us; 73us; 76us; 79us; 82us; 85us; 88us; 91us; 94us; 96us; 99us; 102us; 105us; 108us; 111us; 114us; 121us; 122us; 123us; 130us; 160us; 182us; 190us; 200us; 203us; 206us; 208us; 230us; 252us; 274us; 296us; 302us; 362us; 364us; 367us; 406us; 437us; 483us; 529us; 575us; 577us; 579us; 587us; 589us; 635us; 638us; 684us; 686us; 689us; 735us; 781us; 784us; 830us; 876us; 922us; 925us; 928us; 930us; 933us; 936us; 982us; 985us; 1031us; 1032us; 1078us; 1124us; 1170us; 1172us; 1175us; 1179us; 1184us; 1231us; 1293us; 1341us; 1404us; 1409us; 1413us; 1421us; 1424us; 1450us; 1476us; 1502us; 1528us; 1554us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 2us; 1us; 2us; 2us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 2us; 1us; 4us; 1us; 4us; 1us; 6us; 1us; 6us; 1us; 7us; 1us; 7us; 1us; 7us; 3us; 8us; 9us; 10us; 1us; 8us; 1us; 8us; 1us; 8us; 1us; 9us; 1us; 9us; 1us; 9us; 1us; 9us; 1us; 10us; 1us; 10us; 1us; 11us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 17us; 1us; 17us; 1us; 18us; 1us; 19us; 1us; 20us; 1us; 21us; 4us; 22us; 23us; 28us; 29us; 1us; 22us; 2us; 23us; 29us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 25us; 1us; 25us; 2us; 25us; 199us; 1us; 25us; 1us; 25us; 1us; 26us; 1us; 27us; 1us; 28us; 1us; 29us; 1us; 29us; 1us; 30us; 1us; 31us; 1us; 32us; 1us; 33us; 1us; 34us; 1us; 35us; 1us; 36us; 1us; 37us; 1us; 38us; 1us; 38us; 1us; 38us; 1us; 40us; 1us; 40us; 2us; 41us; 42us; 2us; 41us; 42us; 1us; 41us; 1us; 41us; 2us; 42us; 265us; 1us; 42us; 1us; 42us; 2us; 43us; 44us; 4us; 43us; 44us; 48us; 52us; 2us; 43us; 44us; 2us; 43us; 44us; 1us; 43us; 1us; 43us; 2us; 44us; 265us; 1us; 44us; 1us; 44us; 2us; 45us; 46us; 1us; 46us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 50us; 1us; 50us; 1us; 51us; 1us; 51us; 1us; 51us; 1us; 51us; 1us; 52us; 1us; 52us; 1us; 52us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 3us; 56us; 57us; 58us; 3us; 56us; 57us; 58us; 4us; 56us; 57us; 60us; 61us; 1us; 56us; 1us; 56us; 1us; 58us; 2us; 58us; 92us; 1us; 60us; 1us; 61us; 1us; 61us; 1us; 61us; 2us; 61us; 92us; 1us; 61us; 2us; 62us; 63us; 1us; 63us; 2us; 64us; 65us; 2us; 64us; 65us; 1us; 64us; 1us; 64us; 2us; 65us; 145us; 1us; 65us; 1us; 65us; 2us; 66us; 67us; 1us; 67us; 1us; 67us; 4us; 68us; 69us; 70us; 71us; 4us; 68us; 69us; 70us; 71us; 4us; 68us; 69us; 70us; 71us; 2us; 68us; 70us; 1us; 68us; 3us; 69us; 71us; 145us; 2us; 69us; 71us; 1us; 69us; 2us; 70us; 145us; 1us; 70us; 2us; 71us; 145us; 1us; 71us; 1us; 72us; 1us; 72us; 1us; 72us; 1us; 72us; 1us; 72us; 1us; 72us; 1us; 73us; 1us; 73us; 1us; 73us; 1us; 73us; 1us; 73us; 1us; 73us; 1us; 74us; 1us; 74us; 2us; 74us; 199us; 1us; 74us; 2us; 74us; 76us; 1us; 74us; 1us; 75us; 1us; 76us; 1us; 77us; 1us; 77us; 1us; 77us; 1us; 77us; 1us; 78us; 1us; 78us; 1us; 78us; 1us; 78us; 1us; 78us; 1us; 78us; 1us; 79us; 1us; 79us; 2us; 79us; 199us; 1us; 79us; 1us; 79us; 1us; 79us; 1us; 79us; 1us; 80us; 1us; 81us; 1us; 82us; 2us; 83us; 85us; 2us; 84us; 86us; 1us; 85us; 1us; 85us; 1us; 85us; 1us; 85us; 1us; 86us; 1us; 86us; 1us; 86us; 1us; 86us; 1us; 87us; 1us; 87us; 1us; 87us; 1us; 87us; 1us; 88us; 1us; 88us; 1us; 88us; 1us; 88us; 1us; 89us; 1us; 90us; 2us; 90us; 92us; 1us; 90us; 1us; 91us; 2us; 91us; 92us; 1us; 91us; 2us; 92us; 92us; 2us; 92us; 93us; 1us; 92us; 1us; 93us; 1us; 93us; 1us; 100us; 1us; 101us; 1us; 102us; 3us; 103us; 104us; 263us; 1us; 104us; 1us; 105us; 1us; 106us; 1us; 107us; 1us; 108us; 1us; 109us; 1us; 109us; 1us; 109us; 3us; 110us; 111us; 112us; 1us; 110us; 2us; 110us; 145us; 1us; 110us; 3us; 111us; 132us; 138us; 1us; 111us; 3us; 112us; 131us; 136us; 1us; 112us; 1us; 113us; 2us; 113us; 126us; 1us; 113us; 1us; 114us; 2us; 114us; 126us; 1us; 114us; 1us; 115us; 1us; 115us; 1us; 115us; 1us; 116us; 2us; 116us; 120us; 1us; 116us; 7us; 117us; 128us; 130us; 135us; 137us; 139us; 141us; 2us; 117us; 130us; 1us; 117us; 2us; 118us; 120us; 1us; 118us; 2us; 118us; 123us; 1us; 118us; 2us; 118us; 123us; 1us; 118us; 1us; 118us; 1us; 118us; 2us; 118us; 120us; 1us; 120us; 1us; 121us; 1us; 122us; 1us; 122us; 1us; 123us; 1us; 123us; 1us; 124us; 1us; 125us; 1us; 125us; 1us; 126us; 1us; 126us; 1us; 127us; 1us; 127us; 1us; 127us; 1us; 129us; 1us; 130us; 2us; 131us; 136us; 2us; 132us; 138us; 3us; 133us; 142us; 143us; 1us; 134us; 1us; 134us; 1us; 135us; 1us; 135us; 1us; 136us; 1us; 136us; 1us; 137us; 1us; 137us; 1us; 138us; 1us; 138us; 2us; 139us; 141us; 1us; 139us; 1us; 140us; 1us; 140us; 1us; 140us; 1us; 141us; 2us; 142us; 143us; 1us; 142us; 1us; 143us; 1us; 144us; 1us; 145us; 1us; 146us; 2us; 146us; 148us; 1us; 146us; 1us; 147us; 1us; 148us; 1us; 148us; 2us; 149us; 150us; 3us; 149us; 150us; 265us; 1us; 150us; 4us; 150us; 155us; 156us; 157us; 4us; 151us; 155us; 156us; 157us; 1us; 152us; 1us; 153us; 1us; 154us; 4us; 155us; 156us; 157us; 159us; 4us; 155us; 156us; 157us; 233us; 4us; 155us; 156us; 157us; 234us; 5us; 155us; 156us; 157us; 237us; 238us; 5us; 155us; 156us; 157us; 241us; 242us; 1us; 155us; 1us; 156us; 1us; 157us; 1us; 160us; 1us; 161us; 1us; 162us; 1us; 163us; 1us; 164us; 1us; 165us; 1us; 166us; 1us; 167us; 1us; 168us; 1us; 169us; 1us; 170us; 1us; 170us; 1us; 171us; 1us; 171us; 1us; 172us; 1us; 172us; 1us; 173us; 1us; 174us; 1us; 175us; 1us; 175us; 1us; 176us; 1us; 177us; 1us; 178us; 1us; 179us; 1us; 180us; 1us; 181us; 1us; 182us; 1us; 183us; 1us; 184us; 1us; 185us; 1us; 186us; 1us; 187us; 1us; 188us; 1us; 189us; 1us; 190us; 1us; 191us; 2us; 191us; 238us; 2us; 191us; 241us; 1us; 191us; 2us; 191us; 199us; 1us; 191us; 1us; 191us; 1us; 191us; 1us; 191us; 2us; 192us; 210us; 1us; 192us; 2us; 192us; 199us; 1us; 192us; 1us; 192us; 1us; 192us; 1us; 192us; 2us; 193us; 194us; 3us; 193us; 194us; 199us; 2us; 193us; 194us; 2us; 193us; 194us; 2us; 193us; 194us; 3us; 193us; 194us; 201us; 1us; 193us; 1us; 193us; 1us; 194us; 3us; 195us; 196us; 197us; 1us; 195us; 2us; 195us; 199us; 1us; 195us; 1us; 195us; 2us; 196us; 197us; 1us; 196us; 1us; 196us; 2us; 197us; 265us; 1us; 197us; 1us; 197us; 1us; 199us; 1us; 201us; 1us; 202us; 1us; 202us; 1us; 202us; 2us; 203us; 204us; 1us; 204us; 2us; 205us; 206us; 2us; 205us; 206us; 3us; 205us; 206us; 208us; 1us; 205us; 2us; 206us; 209us; 1us; 206us; 1us; 206us; 1us; 206us; 1us; 206us; 1us; 207us; 1us; 208us; 1us; 209us; 2us; 209us; 270us; 1us; 209us; 1us; 209us; 1us; 210us; 1us; 210us; 1us; 210us; 1us; 210us; 1us; 210us; 1us; 211us; 1us; 211us; 1us; 211us; 1us; 211us; 2us; 212us; 213us; 1us; 212us; 1us; 212us; 1us; 212us; 1us; 213us; 1us; 213us; 1us; 213us; 1us; 213us; 1us; 214us; 1us; 214us; 1us; 214us; 1us; 214us; 1us; 215us; 1us; 215us; 1us; 215us; 1us; 215us; 3us; 216us; 217us; 218us; 3us; 216us; 217us; 218us; 1us; 216us; 1us; 216us; 1us; 217us; 1us; 217us; 1us; 217us; 1us; 217us; 1us; 218us; 1us; 218us; 1us; 218us; 1us; 218us; 2us; 219us; 220us; 1us; 220us; 1us; 220us; 1us; 221us; 1us; 222us; 1us; 223us; 1us; 224us; 1us; 225us; 1us; 226us; 2us; 227us; 228us; 2us; 227us; 228us; 2us; 227us; 228us; 2us; 227us; 228us; 1us; 228us; 1us; 228us; 2us; 229us; 230us; 2us; 229us; 230us; 2us; 229us; 230us; 1us; 230us; 1us; 230us; 2us; 231us; 232us; 1us; 231us; 1us; 231us; 1us; 232us; 1us; 232us; 1us; 232us; 1us; 232us; 2us; 234us; 236us; 2us; 234us; 238us; 1us; 234us; 4us; 235us; 236us; 237us; 238us; 4us; 235us; 236us; 237us; 238us; 1us; 235us; 1us; 236us; 2us; 237us; 238us; 1us; 237us; 1us; 238us; 4us; 241us; 242us; 243us; 244us; 4us; 241us; 242us; 243us; 244us; 2us; 241us; 242us; 1us; 241us; 1us; 241us; 1us; 242us; 1us; 243us; 1us; 243us; 1us; 244us; 1us; 245us; 1us; 245us; 1us; 245us; 1us; 245us; 1us; 246us; 1us; 246us; 2us; 246us; 248us; 2us; 246us; 249us; 1us; 246us; 1us; 246us; 1us; 246us; 1us; 246us; 1us; 247us; 1us; 248us; 1us; 249us; 1us; 249us; 1us; 249us; 1us; 249us; 2us; 250us; 251us; 1us; 251us; 1us; 251us; 1us; 252us; 1us; 252us; 1us; 252us; 1us; 253us; 1us; 254us; 2us; 255us; 259us; 3us; 255us; 259us; 267us; 1us; 256us; 1us; 257us; 1us; 258us; 1us; 259us; 1us; 259us; 1us; 260us; 1us; 261us; 1us; 262us; 1us; 263us; 3us; 263us; 280us; 281us; 1us; 263us; 1us; 263us; 1us; 264us; 1us; 265us; 1us; 267us; 1us; 267us; 2us; 268us; 269us; 1us; 269us; 2us; 270us; 283us; 2us; 270us; 289us; 2us; 270us; 290us; 2us; 270us; 291us; 2us; 270us; 292us; 1us; 270us; 2us; 271us; 272us; 2us; 271us; 272us; 2us; 271us; 272us; 1us; 272us; 1us; 272us; 1us; 273us; 1us; 274us; 1us; 275us; 1us; 276us; 1us; 277us; 1us; 278us; 1us; 279us; 1us; 279us; 1us; 281us; 1us; 281us; 1us; 282us; 1us; 283us; 1us; 283us; 1us; 283us; 1us; 284us; 1us; 285us; 1us; 286us; 1us; 287us; 1us; 288us; 1us; 289us; 1us; 289us; 1us; 289us; 1us; 290us; 1us; 290us; 1us; 290us; 1us; 291us; 1us; 291us; 1us; 291us; 1us; 292us; 1us; 292us; 1us; 292us; 1us; 293us; 1us; 293us; 1us; 293us; 1us; 293us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 7us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 26us; 28us; 30us; 32us; 36us; 38us; 40us; 42us; 44us; 46us; 48us; 50us; 52us; 54us; 56us; 58us; 60us; 62us; 64us; 66us; 68us; 70us; 72us; 74us; 76us; 78us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 107us; 109us; 112us; 114us; 116us; 118us; 120us; 122us; 125us; 127us; 129us; 131us; 133us; 135us; 137us; 139us; 141us; 143us; 145us; 147us; 149us; 151us; 153us; 155us; 157us; 159us; 161us; 163us; 165us; 168us; 171us; 173us; 175us; 178us; 180us; 182us; 185us; 190us; 193us; 196us; 198us; 200us; 203us; 205us; 207us; 210us; 212us; 214us; 216us; 218us; 220us; 222us; 224us; 226us; 228us; 230us; 232us; 234us; 236us; 238us; 240us; 242us; 244us; 246us; 248us; 250us; 252us; 254us; 256us; 258us; 260us; 262us; 266us; 270us; 275us; 277us; 279us; 281us; 284us; 286us; 288us; 290us; 292us; 295us; 297us; 300us; 302us; 305us; 308us; 310us; 312us; 315us; 317us; 319us; 322us; 324us; 326us; 331us; 336us; 341us; 344us; 346us; 350us; 353us; 355us; 358us; 360us; 363us; 365us; 367us; 369us; 371us; 373us; 375us; 377us; 379us; 381us; 383us; 385us; 387us; 389us; 391us; 393us; 396us; 398us; 401us; 403us; 405us; 407us; 409us; 411us; 413us; 415us; 417us; 419us; 421us; 423us; 425us; 427us; 429us; 431us; 434us; 436us; 438us; 440us; 442us; 444us; 446us; 448us; 451us; 454us; 456us; 458us; 460us; 462us; 464us; 466us; 468us; 470us; 472us; 474us; 476us; 478us; 480us; 482us; 484us; 486us; 488us; 490us; 493us; 495us; 497us; 500us; 502us; 505us; 508us; 510us; 512us; 514us; 516us; 518us; 520us; 524us; 526us; 528us; 530us; 532us; 534us; 536us; 538us; 540us; 544us; 546us; 549us; 551us; 555us; 557us; 561us; 563us; 565us; 568us; 570us; 572us; 575us; 577us; 579us; 581us; 583us; 585us; 588us; 590us; 598us; 601us; 603us; 606us; 608us; 611us; 613us; 616us; 618us; 620us; 622us; 625us; 627us; 629us; 631us; 633us; 635us; 637us; 639us; 641us; 643us; 645us; 647us; 649us; 651us; 653us; 655us; 657us; 660us; 663us; 667us; 669us; 671us; 673us; 675us; 677us; 679us; 681us; 683us; 685us; 687us; 690us; 692us; 694us; 696us; 698us; 700us; 703us; 705us; 707us; 709us; 711us; 713us; 716us; 718us; 720us; 722us; 724us; 727us; 731us; 733us; 738us; 743us; 745us; 747us; 749us; 754us; 759us; 764us; 770us; 776us; 778us; 780us; 782us; 784us; 786us; 788us; 790us; 792us; 794us; 796us; 798us; 800us; 802us; 804us; 806us; 808us; 810us; 812us; 814us; 816us; 818us; 820us; 822us; 824us; 826us; 828us; 830us; 832us; 834us; 836us; 838us; 840us; 842us; 844us; 846us; 848us; 850us; 852us; 854us; 857us; 860us; 862us; 865us; 867us; 869us; 871us; 873us; 876us; 878us; 881us; 883us; 885us; 887us; 889us; 892us; 896us; 899us; 902us; 905us; 909us; 911us; 913us; 915us; 919us; 921us; 924us; 926us; 928us; 931us; 933us; 935us; 938us; 940us; 942us; 944us; 946us; 948us; 950us; 952us; 955us; 957us; 960us; 963us; 967us; 969us; 972us; 974us; 976us; 978us; 980us; 982us; 984us; 986us; 989us; 991us; 993us; 995us; 997us; 999us; 1001us; 1003us; 1005us; 1007us; 1009us; 1011us; 1014us; 1016us; 1018us; 1020us; 1022us; 1024us; 1026us; 1028us; 1030us; 1032us; 1034us; 1036us; 1038us; 1040us; 1042us; 1044us; 1048us; 1052us; 1054us; 1056us; 1058us; 1060us; 1062us; 1064us; 1066us; 1068us; 1070us; 1072us; 1075us; 1077us; 1079us; 1081us; 1083us; 1085us; 1087us; 1089us; 1091us; 1094us; 1097us; 1100us; 1103us; 1105us; 1107us; 1110us; 1113us; 1116us; 1118us; 1120us; 1123us; 1125us; 1127us; 1129us; 1131us; 1133us; 1135us; 1138us; 1141us; 1143us; 1148us; 1153us; 1155us; 1157us; 1160us; 1162us; 1164us; 1169us; 1174us; 1177us; 1179us; 1181us; 1183us; 1185us; 1187us; 1189us; 1191us; 1193us; 1195us; 1197us; 1199us; 1201us; 1204us; 1207us; 1209us; 1211us; 1213us; 1215us; 1217us; 1219us; 1221us; 1223us; 1225us; 1227us; 1230us; 1232us; 1234us; 1236us; 1238us; 1240us; 1242us; 1244us; 1247us; 1251us; 1253us; 1255us; 1257us; 1259us; 1261us; 1263us; 1265us; 1267us; 1269us; 1273us; 1275us; 1277us; 1279us; 1281us; 1283us; 1285us; 1288us; 1290us; 1293us; 1296us; 1299us; 1302us; 1305us; 1307us; 1310us; 1313us; 1316us; 1318us; 1320us; 1322us; 1324us; 1326us; 1328us; 1330us; 1332us; 1334us; 1336us; 1338us; 1340us; 1342us; 1344us; 1346us; 1348us; 1350us; 1352us; 1354us; 1356us; 1358us; 1360us; 1362us; 1364us; 1366us; 1368us; 1370us; 1372us; 1374us; 1376us; 1378us; 1380us; 1382us; 1384us; 1386us; 1388us; |]
let _fsyacc_action_rows = 602
let _fsyacc_actionTableElements = [|1us; 16387us; 76us; 15us; 0us; 49152us; 15us; 16389us; 46us; 78us; 47us; 96us; 57us; 182us; 58us; 188us; 61us; 212us; 62us; 170us; 63us; 158us; 64us; 164us; 65us; 146us; 66us; 208us; 67us; 55us; 68us; 49us; 69us; 110us; 70us; 121us; 71us; 73us; 2us; 32768us; 72us; 12us; 73us; 38us; 1us; 32768us; 123us; 5us; 0us; 16385us; 1us; 32768us; 123us; 7us; 0us; 16386us; 1us; 16387us; 76us; 15us; 0us; 16388us; 15us; 16389us; 46us; 78us; 47us; 96us; 57us; 182us; 58us; 188us; 61us; 212us; 62us; 170us; 63us; 158us; 64us; 164us; 65us; 146us; 66us; 208us; 67us; 55us; 68us; 49us; 69us; 110us; 70us; 121us; 71us; 73us; 0us; 16390us; 1us; 32768us; 79us; 13us; 36us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 0us; 16391us; 4us; 32768us; 47us; 23us; 109us; 40us; 115us; 25us; 122us; 27us; 1us; 32768us; 75us; 17us; 1us; 32768us; 122us; 18us; 0us; 16392us; 2us; 32768us; 115us; 25us; 122us; 27us; 1us; 32768us; 75us; 21us; 1us; 32768us; 122us; 22us; 0us; 16393us; 1us; 32768us; 115us; 24us; 0us; 16394us; 0us; 16395us; 0us; 16396us; 1us; 32768us; 82us; 28us; 1us; 32768us; 122us; 29us; 1us; 32768us; 82us; 30us; 1us; 32768us; 122us; 31us; 1us; 32768us; 86us; 32us; 1us; 32768us; 117us; 33us; 1us; 32768us; 82us; 34us; 1us; 32768us; 117us; 35us; 1us; 32768us; 82us; 36us; 1us; 32768us; 117us; 37us; 0us; 16397us; 1us; 32768us; 109us; 40us; 0us; 16398us; 3us; 16400us; 119us; 47us; 121us; 46us; 122us; 45us; 1us; 32768us; 110us; 42us; 0us; 16399us; 3us; 16400us; 119us; 47us; 121us; 46us; 122us; 45us; 0us; 16401us; 0us; 16402us; 0us; 16403us; 0us; 16404us; 0us; 16405us; 4us; 32768us; 46us; 78us; 70us; 121us; 71us; 73us; 109us; 51us; 0us; 16406us; 3us; 32768us; 46us; 78us; 70us; 121us; 71us; 73us; 1us; 32768us; 110us; 53us; 0us; 16407us; 0us; 16408us; 1us; 32768us; 121us; 56us; 0us; 16582us; 2us; 32768us; 79us; 58us; 122us; 405us; 17us; 32768us; 2us; 567us; 3us; 568us; 7us; 586us; 8us; 589us; 9us; 592us; 10us; 595us; 13us; 598us; 77us; 573us; 78us; 572us; 111us; 578us; 115us; 571us; 116us; 570us; 117us; 569us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 547us; 0us; 16409us; 0us; 16410us; 0us; 16411us; 0us; 16412us; 1us; 32768us; 110us; 64us; 0us; 16413us; 0us; 16414us; 0us; 16415us; 0us; 16416us; 0us; 16417us; 0us; 16418us; 0us; 16419us; 0us; 16420us; 0us; 16421us; 1us; 32768us; 86us; 74us; 1us; 16423us; 113us; 76us; 0us; 16422us; 1us; 16423us; 113us; 76us; 0us; 16424us; 1us; 32768us; 122us; 79us; 18us; 32768us; 2us; 567us; 3us; 568us; 7us; 586us; 8us; 589us; 9us; 592us; 10us; 595us; 13us; 598us; 77us; 573us; 78us; 572us; 79us; 80us; 111us; 578us; 115us; 571us; 116us; 570us; 117us; 569us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 547us; 36us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 0us; 16425us; 18us; 32768us; 2us; 567us; 3us; 568us; 7us; 586us; 8us; 589us; 9us; 592us; 10us; 595us; 13us; 598us; 77us; 573us; 78us; 572us; 79us; 83us; 111us; 578us; 115us; 571us; 116us; 570us; 117us; 569us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 547us; 36us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 0us; 16426us; 1us; 32768us; 46us; 87us; 3us; 32768us; 46us; 87us; 47us; 102us; 69us; 114us; 1us; 32768us; 122us; 88us; 18us; 32768us; 2us; 567us; 3us; 568us; 7us; 586us; 8us; 589us; 9us; 592us; 10us; 595us; 13us; 598us; 77us; 573us; 78us; 572us; 79us; 89us; 111us; 578us; 115us; 571us; 116us; 570us; 117us; 569us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 547us; 36us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 0us; 16427us; 18us; 32768us; 2us; 567us; 3us; 568us; 7us; 586us; 8us; 589us; 9us; 592us; 10us; 595us; 13us; 598us; 77us; 573us; 78us; 572us; 79us; 92us; 111us; 578us; 115us; 571us; 116us; 570us; 117us; 569us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 547us; 36us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 0us; 16428us; 2us; 16429us; 46us; 78us; 71us; 73us; 0us; 16430us; 1us; 32768us; 122us; 97us; 1us; 32768us; 86us; 98us; 0us; 16503us; 1us; 32768us; 79us; 100us; 1us; 16433us; 114us; 108us; 0us; 16431us; 1us; 32768us; 122us; 103us; 1us; 32768us; 86us; 104us; 0us; 16503us; 1us; 32768us; 79us; 106us; 1us; 16433us; 114us; 108us; 0us; 16432us; 1us; 16433us; 114us; 108us; 0us; 16434us; 1us; 32768us; 121us; 111us; 1us; 32768us; 86us; 112us; 3us; 32768us; 50us; 118us; 51us; 119us; 52us; 120us; 0us; 16435us; 1us; 32768us; 121us; 115us; 1us; 32768us; 86us; 116us; 3us; 32768us; 50us; 118us; 51us; 119us; 52us; 120us; 0us; 16436us; 0us; 16437us; 0us; 16438us; 0us; 16439us; 1us; 32768us; 121us; 122us; 1us; 16443us; 86us; 126us; 3us; 16441us; 79us; 124us; 111us; 129us; 122us; 128us; 1us; 32768us; 121us; 136us; 0us; 16440us; 7us; 32768us; 107us; 217us; 109us; 220us; 111us; 226us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 546us; 1us; 16442us; 91us; 225us; 0us; 16444us; 1us; 32768us; 122us; 130us; 1us; 32768us; 86us; 131us; 7us; 32768us; 107us; 217us; 109us; 220us; 111us; 226us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 546us; 2us; 32768us; 91us; 225us; 112us; 133us; 0us; 16445us; 1us; 16446us; 70us; 121us; 0us; 16447us; 1us; 32768us; 86us; 137us; 18us; 32768us; 1us; 235us; 2us; 229us; 3us; 230us; 6us; 291us; 82us; 236us; 90us; 138us; 91us; 234us; 95us; 257us; 97us; 251us; 99us; 237us; 107us; 254us; 109us; 248us; 111us; 240us; 117us; 303us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 231us; 17us; 32768us; 1us; 235us; 2us; 229us; 3us; 230us; 6us; 291us; 82us; 236us; 91us; 234us; 95us; 257us; 97us; 251us; 99us; 237us; 107us; 254us; 109us; 248us; 111us; 240us; 117us; 303us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 231us; 0us; 16448us; 18us; 32768us; 1us; 235us; 2us; 229us; 3us; 230us; 6us; 291us; 82us; 236us; 90us; 141us; 91us; 234us; 95us; 257us; 97us; 251us; 99us; 237us; 107us; 254us; 109us; 248us; 111us; 240us; 117us; 303us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 231us; 17us; 32768us; 1us; 235us; 2us; 229us; 3us; 230us; 6us; 291us; 82us; 236us; 91us; 234us; 95us; 257us; 97us; 251us; 99us; 237us; 107us; 254us; 109us; 248us; 111us; 240us; 117us; 303us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 231us; 0us; 16449us; 1us; 16450us; 81us; 144us; 1us; 32768us; 121us; 136us; 0us; 16451us; 1us; 32768us; 118us; 147us; 1us; 32768us; 79us; 148us; 18us; 32768us; 1us; 235us; 2us; 229us; 3us; 230us; 6us; 291us; 82us; 236us; 91us; 234us; 95us; 257us; 97us; 251us; 99us; 237us; 102us; 149us; 107us; 254us; 109us; 248us; 111us; 240us; 117us; 303us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 231us; 18us; 32768us; 1us; 235us; 2us; 229us; 3us; 230us; 6us; 291us; 82us; 236us; 90us; 150us; 91us; 234us; 95us; 257us; 97us; 251us; 99us; 237us; 107us; 254us; 109us; 248us; 111us; 240us; 117us; 303us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 231us; 0us; 16452us; 18us; 32768us; 1us; 235us; 2us; 229us; 3us; 230us; 6us; 291us; 82us; 236us; 91us; 234us; 95us; 257us; 97us; 251us; 99us; 237us; 102us; 152us; 107us; 254us; 109us; 248us; 111us; 240us; 117us; 303us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 231us; 18us; 32768us; 1us; 235us; 2us; 229us; 3us; 230us; 6us; 291us; 82us; 236us; 90us; 153us; 91us; 234us; 95us; 257us; 97us; 251us; 99us; 237us; 107us; 254us; 109us; 248us; 111us; 240us; 117us; 303us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 231us; 0us; 16453us; 18us; 32768us; 1us; 235us; 2us; 229us; 3us; 230us; 6us; 291us; 82us; 236us; 90us; 155us; 91us; 234us; 95us; 257us; 97us; 251us; 99us; 237us; 107us; 254us; 109us; 248us; 111us; 240us; 117us; 303us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 231us; 0us; 16454us; 18us; 32768us; 1us; 235us; 2us; 229us; 3us; 230us; 6us; 291us; 82us; 236us; 90us; 157us; 91us; 234us; 95us; 257us; 97us; 251us; 99us; 237us; 107us; 254us; 109us; 248us; 111us; 240us; 117us; 303us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 231us; 0us; 16455us; 1us; 32768us; 122us; 159us; 1us; 32768us; 75us; 160us; 1us; 32768us; 119us; 161us; 1us; 32768us; 86us; 162us; 0us; 16503us; 0us; 16456us; 1us; 32768us; 122us; 165us; 1us; 32768us; 86us; 166us; 0us; 16503us; 1us; 32768us; 79us; 168us; 36us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 0us; 16457us; 1us; 32768us; 120us; 171us; 0us; 16582us; 2us; 32768us; 109us; 173us; 122us; 405us; 1us; 32768us; 32us; 178us; 2us; 32768us; 32us; 178us; 110us; 175us; 0us; 16458us; 0us; 16459us; 0us; 16460us; 1us; 32768us; 120us; 179us; 1us; 32768us; 86us; 180us; 0us; 16503us; 0us; 16461us; 1us; 32768us; 118us; 183us; 1us; 32768us; 79us; 184us; 36us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 5us; 32768us; 0us; 198us; 53us; 197us; 54us; 199us; 55us; 195us; 56us; 196us; 36us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 0us; 16462us; 1us; 32768us; 118us; 189us; 0us; 16582us; 2us; 32768us; 79us; 191us; 122us; 405us; 36us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 5us; 32768us; 0us; 198us; 53us; 197us; 54us; 199us; 55us; 195us; 56us; 196us; 36us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 0us; 16463us; 0us; 16464us; 0us; 16465us; 0us; 16466us; 1us; 16467us; 36us; 200us; 1us; 16468us; 36us; 204us; 1us; 32768us; 109us; 201us; 36us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 1us; 32768us; 110us; 203us; 0us; 16469us; 1us; 32768us; 109us; 205us; 36us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 1us; 32768us; 110us; 207us; 0us; 16470us; 1us; 32768us; 122us; 209us; 1us; 32768us; 86us; 210us; 0us; 16503us; 0us; 16471us; 1us; 32768us; 121us; 213us; 1us; 32768us; 79us; 214us; 1us; 32768us; 122us; 215us; 0us; 16472us; 0us; 16473us; 7us; 32768us; 107us; 217us; 109us; 220us; 111us; 226us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 546us; 2us; 32768us; 91us; 225us; 108us; 219us; 0us; 16474us; 7us; 32768us; 107us; 217us; 109us; 220us; 111us; 226us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 546us; 2us; 32768us; 91us; 225us; 110us; 222us; 0us; 16475us; 1us; 16476us; 91us; 225us; 2us; 32768us; 91us; 225us; 112us; 227us; 7us; 32768us; 107us; 217us; 109us; 220us; 111us; 226us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 546us; 7us; 32768us; 107us; 217us; 109us; 220us; 111us; 226us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 546us; 0us; 16477us; 0us; 16484us; 0us; 16485us; 0us; 16486us; 2us; 16487us; 80us; 232us; 87us; 548us; 0us; 16488us; 0us; 16489us; 0us; 16490us; 0us; 16491us; 0us; 16492us; 0us; 16503us; 1us; 32768us; 100us; 239us; 0us; 16493us; 17us; 32768us; 1us; 235us; 2us; 229us; 3us; 230us; 6us; 291us; 82us; 236us; 91us; 234us; 95us; 257us; 97us; 251us; 99us; 237us; 107us; 254us; 109us; 248us; 111us; 240us; 117us; 303us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 231us; 17us; 32768us; 1us; 235us; 2us; 229us; 3us; 230us; 6us; 291us; 82us; 236us; 91us; 234us; 95us; 257us; 97us; 251us; 99us; 237us; 107us; 254us; 109us; 248us; 111us; 240us; 117us; 303us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 231us; 18us; 32768us; 1us; 235us; 2us; 229us; 3us; 230us; 6us; 291us; 82us; 236us; 91us; 234us; 95us; 257us; 97us; 251us; 99us; 237us; 107us; 254us; 109us; 248us; 111us; 240us; 112us; 243us; 117us; 303us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 231us; 0us; 16494us; 2us; 16516us; 5us; 299us; 112us; 245us; 0us; 16495us; 2us; 16515us; 4us; 295us; 112us; 247us; 0us; 16496us; 2us; 32768us; 82us; 278us; 122us; 279us; 2us; 32768us; 89us; 281us; 110us; 250us; 0us; 16497us; 2us; 32768us; 82us; 278us; 122us; 279us; 2us; 32768us; 89us; 281us; 98us; 253us; 0us; 16498us; 17us; 32768us; 1us; 235us; 2us; 229us; 3us; 230us; 6us; 291us; 82us; 236us; 91us; 234us; 95us; 257us; 97us; 251us; 99us; 237us; 107us; 254us; 109us; 248us; 111us; 240us; 117us; 303us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 231us; 1us; 32768us; 108us; 256us; 0us; 16499us; 0us; 16503us; 18us; 32768us; 1us; 235us; 2us; 229us; 3us; 230us; 6us; 291us; 82us; 236us; 91us; 234us; 95us; 257us; 96us; 259us; 97us; 251us; 99us; 237us; 107us; 254us; 109us; 248us; 111us; 240us; 117us; 303us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 231us; 0us; 16500us; 4us; 16512us; 4us; 293us; 5us; 297us; 85us; 301us; 88us; 261us; 16us; 32768us; 1us; 235us; 2us; 229us; 3us; 230us; 82us; 236us; 91us; 234us; 95us; 257us; 97us; 251us; 99us; 237us; 107us; 254us; 109us; 248us; 111us; 240us; 117us; 287us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 231us; 0us; 16501us; 18us; 32768us; 1us; 235us; 2us; 229us; 3us; 230us; 6us; 291us; 82us; 236us; 91us; 234us; 92us; 264us; 95us; 257us; 97us; 251us; 99us; 237us; 107us; 254us; 109us; 248us; 111us; 240us; 117us; 303us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 231us; 2us; 32768us; 82us; 273us; 122us; 274us; 2us; 32768us; 89us; 276us; 94us; 266us; 2us; 32768us; 82us; 273us; 122us; 274us; 2us; 32768us; 89us; 276us; 94us; 268us; 17us; 32768us; 1us; 235us; 2us; 229us; 3us; 230us; 6us; 291us; 82us; 236us; 91us; 234us; 95us; 257us; 97us; 251us; 99us; 237us; 107us; 254us; 109us; 248us; 111us; 240us; 117us; 303us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 231us; 1us; 32768us; 93us; 270us; 0us; 16503us; 17us; 16502us; 1us; 235us; 2us; 229us; 3us; 230us; 6us; 291us; 82us; 236us; 91us; 234us; 95us; 257us; 97us; 251us; 99us; 237us; 107us; 254us; 109us; 248us; 111us; 240us; 117us; 303us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 231us; 0us; 16504us; 0us; 16505us; 1us; 32768us; 80us; 275us; 0us; 16506us; 17us; 32768us; 1us; 235us; 2us; 229us; 3us; 230us; 6us; 291us; 82us; 236us; 91us; 234us; 95us; 257us; 97us; 251us; 99us; 237us; 107us; 254us; 109us; 248us; 111us; 240us; 117us; 303us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 231us; 0us; 16507us; 0us; 16508us; 1us; 32768us; 80us; 280us; 0us; 16509us; 1us; 32768us; 122us; 283us; 0us; 16510us; 1us; 32768us; 79us; 284us; 17us; 32768us; 1us; 235us; 2us; 229us; 3us; 230us; 6us; 291us; 82us; 236us; 91us; 234us; 95us; 257us; 97us; 251us; 99us; 237us; 107us; 254us; 109us; 248us; 111us; 240us; 117us; 303us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 231us; 0us; 16511us; 0us; 16513us; 0us; 16514us; 1us; 16515us; 4us; 295us; 1us; 16516us; 5us; 299us; 1us; 16517us; 85us; 307us; 17us; 32768us; 1us; 235us; 2us; 229us; 3us; 230us; 6us; 291us; 82us; 236us; 91us; 234us; 95us; 257us; 97us; 251us; 99us; 237us; 107us; 254us; 109us; 248us; 111us; 240us; 117us; 303us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 231us; 0us; 16518us; 15us; 32768us; 1us; 235us; 2us; 229us; 3us; 230us; 82us; 236us; 91us; 234us; 95us; 257us; 97us; 251us; 99us; 237us; 107us; 254us; 109us; 248us; 111us; 240us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 231us; 0us; 16519us; 15us; 32768us; 1us; 235us; 2us; 229us; 3us; 230us; 82us; 236us; 91us; 234us; 95us; 257us; 97us; 251us; 99us; 237us; 107us; 254us; 109us; 248us; 111us; 240us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 231us; 0us; 16520us; 15us; 32768us; 1us; 235us; 2us; 229us; 3us; 230us; 82us; 236us; 91us; 234us; 95us; 257us; 97us; 251us; 99us; 237us; 107us; 254us; 109us; 248us; 111us; 240us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 231us; 0us; 16521us; 15us; 32768us; 1us; 235us; 2us; 229us; 3us; 230us; 82us; 236us; 91us; 234us; 95us; 257us; 97us; 251us; 99us; 237us; 107us; 254us; 109us; 248us; 111us; 240us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 231us; 0us; 16522us; 16us; 32768us; 1us; 235us; 2us; 229us; 3us; 230us; 82us; 236us; 91us; 234us; 95us; 257us; 97us; 251us; 99us; 237us; 107us; 254us; 109us; 248us; 111us; 240us; 117us; 306us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 231us; 0us; 16523us; 1us; 32768us; 85us; 304us; 15us; 32768us; 1us; 235us; 2us; 229us; 3us; 230us; 82us; 236us; 91us; 234us; 95us; 257us; 97us; 251us; 99us; 237us; 107us; 254us; 109us; 248us; 111us; 240us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 231us; 0us; 16524us; 0us; 16525us; 16us; 32768us; 1us; 235us; 2us; 229us; 3us; 230us; 82us; 236us; 91us; 234us; 95us; 257us; 97us; 251us; 99us; 237us; 107us; 254us; 109us; 248us; 111us; 240us; 117us; 309us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 231us; 0us; 16526us; 0us; 16527us; 0us; 16528us; 0us; 16529us; 37us; 32768us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 49us; 318us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 2us; 32768us; 90us; 316us; 110us; 314us; 0us; 16530us; 0us; 16531us; 37us; 32768us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 49us; 318us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 0us; 16532us; 17us; 32768us; 2us; 567us; 3us; 568us; 7us; 586us; 8us; 589us; 9us; 592us; 10us; 595us; 13us; 598us; 77us; 573us; 78us; 572us; 111us; 578us; 115us; 571us; 116us; 570us; 117us; 569us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 547us; 18us; 16533us; 2us; 567us; 3us; 568us; 7us; 586us; 8us; 589us; 9us; 592us; 10us; 595us; 13us; 598us; 77us; 573us; 78us; 572us; 79us; 320us; 111us; 578us; 115us; 571us; 116us; 570us; 117us; 569us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 547us; 36us; 32768us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 36us; 16534us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 36us; 16535us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 0us; 16536us; 0us; 16537us; 0us; 16538us; 36us; 16543us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 36us; 16617us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 36us; 16618us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 37us; 32768us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 370us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 110us; 499us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 37us; 32768us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 371us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 110us; 506us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 0us; 16539us; 0us; 16540us; 0us; 16541us; 0us; 16544us; 0us; 16545us; 0us; 16546us; 0us; 16547us; 0us; 16548us; 0us; 16549us; 0us; 16550us; 0us; 16551us; 0us; 16552us; 0us; 16553us; 1us; 32768us; 122us; 345us; 0us; 16554us; 1us; 32768us; 122us; 347us; 0us; 16555us; 1us; 32768us; 122us; 349us; 0us; 16556us; 0us; 16557us; 0us; 16558us; 1us; 32768us; 109us; 312us; 0us; 16559us; 0us; 16560us; 0us; 16561us; 0us; 16562us; 0us; 16563us; 0us; 16564us; 0us; 16565us; 0us; 16566us; 0us; 16567us; 0us; 16568us; 0us; 16569us; 0us; 16570us; 0us; 16571us; 0us; 16572us; 0us; 16573us; 0us; 16574us; 1us; 32768us; 45us; 372us; 37us; 32768us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 45us; 372us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 2us; 32768us; 45us; 372us; 122us; 531us; 0us; 16582us; 2us; 32768us; 27us; 374us; 122us; 405us; 1us; 32768us; 109us; 312us; 1us; 32768us; 28us; 376us; 1us; 32768us; 109us; 312us; 0us; 16575us; 37us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 45us; 379us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 0us; 16582us; 2us; 32768us; 27us; 381us; 122us; 405us; 1us; 32768us; 109us; 312us; 1us; 32768us; 28us; 383us; 1us; 32768us; 109us; 312us; 0us; 16576us; 0us; 16582us; 2us; 32768us; 109us; 312us; 122us; 405us; 1us; 32768us; 32us; 388us; 1us; 32768us; 109us; 389us; 0us; 16584us; 2us; 32768us; 81us; 394us; 110us; 393us; 1us; 32768us; 110us; 392us; 0us; 16577us; 0us; 16578us; 5us; 32768us; 33us; 399us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 0us; 16582us; 2us; 32768us; 102us; 397us; 122us; 405us; 36us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 0us; 16579us; 18us; 32768us; 2us; 567us; 3us; 568us; 7us; 586us; 8us; 589us; 9us; 592us; 10us; 595us; 13us; 598us; 77us; 573us; 78us; 572us; 102us; 400us; 111us; 578us; 115us; 571us; 116us; 570us; 117us; 569us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 547us; 36us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 0us; 16580us; 18us; 32768us; 2us; 567us; 3us; 568us; 7us; 586us; 8us; 589us; 9us; 592us; 10us; 595us; 13us; 598us; 77us; 573us; 78us; 572us; 102us; 403us; 111us; 578us; 115us; 571us; 116us; 570us; 117us; 569us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 547us; 36us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 0us; 16581us; 0us; 16583us; 0us; 16585us; 1us; 32768us; 120us; 410us; 1us; 32768us; 109us; 312us; 0us; 16586us; 1us; 16587us; 120us; 410us; 0us; 16588us; 1us; 32768us; 109us; 413us; 1us; 32768us; 81us; 423us; 2us; 32768us; 81us; 416us; 110us; 415us; 0us; 16589us; 18us; 32768us; 2us; 567us; 3us; 568us; 7us; 586us; 8us; 589us; 9us; 592us; 10us; 595us; 13us; 598us; 28us; 417us; 77us; 573us; 78us; 572us; 111us; 578us; 115us; 571us; 116us; 570us; 117us; 569us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 547us; 1us; 32768us; 102us; 418us; 36us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 1us; 32768us; 110us; 420us; 0us; 16590us; 0us; 16591us; 0us; 16592us; 17us; 32768us; 2us; 567us; 3us; 568us; 7us; 586us; 8us; 589us; 9us; 592us; 10us; 595us; 13us; 598us; 77us; 573us; 78us; 572us; 111us; 578us; 115us; 571us; 116us; 570us; 117us; 569us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 547us; 18us; 32768us; 2us; 567us; 3us; 568us; 7us; 586us; 8us; 589us; 9us; 592us; 10us; 595us; 13us; 598us; 77us; 573us; 78us; 572us; 102us; 425us; 111us; 578us; 115us; 571us; 116us; 570us; 117us; 569us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 547us; 36us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 0us; 16593us; 1us; 32768us; 27us; 428us; 1us; 32768us; 109us; 312us; 1us; 32768us; 28us; 430us; 1us; 32768us; 109us; 312us; 0us; 16594us; 1us; 32768us; 109us; 433us; 1us; 32768us; 81us; 436us; 1us; 32768us; 110us; 435us; 0us; 16595us; 37us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 28us; 437us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 1us; 32768us; 102us; 438us; 36us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 0us; 16596us; 1us; 32768us; 102us; 441us; 36us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 1us; 32768us; 81us; 436us; 0us; 16597us; 36us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 1us; 32768us; 27us; 446us; 1us; 32768us; 109us; 312us; 0us; 16598us; 36us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 1us; 32768us; 27us; 450us; 1us; 32768us; 109us; 312us; 0us; 16599us; 1us; 32768us; 122us; 473us; 3us; 32768us; 16us; 460us; 17us; 456us; 27us; 454us; 1us; 32768us; 109us; 312us; 0us; 16600us; 3us; 32768us; 7us; 467us; 8us; 468us; 9us; 469us; 1us; 32768us; 27us; 458us; 1us; 32768us; 109us; 312us; 0us; 16601us; 1us; 32768us; 122us; 479us; 1us; 32768us; 27us; 462us; 1us; 32768us; 109us; 312us; 0us; 16602us; 1us; 16603us; 89us; 465us; 3us; 32768us; 7us; 467us; 8us; 468us; 9us; 469us; 0us; 16604us; 0us; 16605us; 0us; 16606us; 0us; 16607us; 0us; 16608us; 0us; 16609us; 0us; 16610us; 1us; 32768us; 101us; 474us; 3us; 32768us; 7us; 470us; 8us; 471us; 9us; 472us; 36us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 1us; 16611us; 89us; 477us; 1us; 32768us; 122us; 473us; 0us; 16612us; 1us; 32768us; 101us; 480us; 36us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 1us; 16613us; 89us; 482us; 1us; 32768us; 122us; 479us; 0us; 16614us; 37us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 102us; 16650us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 537us; 1us; 32768us; 112us; 486us; 0us; 16615us; 1us; 32768us; 102us; 488us; 36us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 1us; 32768us; 112us; 490us; 0us; 16616us; 2us; 32768us; 89us; 493us; 110us; 497us; 2us; 32768us; 89us; 493us; 110us; 500us; 36us; 32768us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 1us; 32768us; 109us; 495us; 38us; 32768us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 80us; 498us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 110us; 496us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 0us; 16619us; 0us; 16620us; 36us; 32768us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 0us; 16621us; 0us; 16622us; 1us; 32768us; 109us; 502us; 3us; 32768us; 80us; 503us; 110us; 509us; 122us; 531us; 36us; 32768us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 1us; 32768us; 110us; 505us; 0us; 16625us; 0us; 16626us; 1us; 32768us; 110us; 508us; 0us; 16627us; 0us; 16628us; 1us; 32768us; 109us; 511us; 1us; 32768us; 122us; 531us; 1us; 32768us; 110us; 513us; 0us; 16629us; 1us; 32768us; 109us; 515us; 1us; 32768us; 81us; 524us; 1us; 32768us; 81us; 517us; 2us; 32768us; 28us; 518us; 122us; 525us; 1us; 32768us; 102us; 519us; 36us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 1us; 32768us; 110us; 521us; 0us; 16630us; 0us; 16631us; 0us; 16632us; 1us; 32768us; 122us; 525us; 1us; 32768us; 102us; 526us; 36us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 0us; 16633us; 1us; 16634us; 89us; 529us; 1us; 32768us; 122us; 531us; 0us; 16635us; 1us; 32768us; 79us; 532us; 36us; 16542us; 2us; 363us; 3us; 364us; 7us; 494us; 12us; 514us; 13us; 501us; 14us; 510us; 15us; 452us; 23us; 378us; 24us; 444us; 25us; 432us; 26us; 448us; 29us; 362us; 30us; 412us; 31us; 407us; 32us; 369us; 34us; 385us; 35us; 361us; 38us; 355us; 39us; 356us; 40us; 357us; 41us; 358us; 42us; 359us; 43us; 360us; 44us; 352us; 103us; 348us; 105us; 346us; 106us; 344us; 109us; 312us; 111us; 484us; 115us; 367us; 116us; 366us; 117us; 365us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 0us; 16636us; 0us; 16637us; 0us; 16638us; 1us; 16639us; 87us; 541us; 3us; 16639us; 87us; 541us; 102us; 16650us; 122us; 552us; 0us; 16640us; 0us; 16641us; 0us; 16642us; 4us; 32768us; 119us; 540us; 120us; 539us; 121us; 538us; 122us; 536us; 0us; 16643us; 0us; 16644us; 0us; 16645us; 0us; 16646us; 1us; 32768us; 87us; 548us; 2us; 16664us; 0us; 575us; 87us; 548us; 4us; 32768us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 546us; 0us; 16647us; 0us; 16648us; 0us; 16649us; 1us; 16650us; 122us; 552us; 0us; 16651us; 1us; 16652us; 80us; 555us; 0us; 16653us; 18us; 32768us; 2us; 567us; 3us; 568us; 7us; 586us; 8us; 589us; 9us; 592us; 10us; 595us; 13us; 598us; 77us; 573us; 78us; 572us; 111us; 578us; 112us; 580us; 115us; 571us; 116us; 570us; 117us; 569us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 547us; 18us; 32768us; 2us; 567us; 3us; 568us; 7us; 586us; 8us; 589us; 9us; 592us; 10us; 595us; 13us; 598us; 77us; 573us; 78us; 572us; 110us; 588us; 111us; 578us; 115us; 571us; 116us; 570us; 117us; 569us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 547us; 18us; 32768us; 2us; 567us; 3us; 568us; 7us; 586us; 8us; 589us; 9us; 592us; 10us; 595us; 13us; 598us; 77us; 573us; 78us; 572us; 110us; 591us; 111us; 578us; 115us; 571us; 116us; 570us; 117us; 569us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 547us; 18us; 32768us; 2us; 567us; 3us; 568us; 7us; 586us; 8us; 589us; 9us; 592us; 10us; 595us; 13us; 598us; 77us; 573us; 78us; 572us; 110us; 594us; 111us; 578us; 115us; 571us; 116us; 570us; 117us; 569us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 547us; 18us; 32768us; 2us; 567us; 3us; 568us; 7us; 586us; 8us; 589us; 9us; 592us; 10us; 595us; 13us; 598us; 77us; 573us; 78us; 572us; 110us; 597us; 111us; 578us; 115us; 571us; 116us; 570us; 117us; 569us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 547us; 0us; 16654us; 1us; 32768us; 79us; 563us; 17us; 32768us; 2us; 567us; 3us; 568us; 7us; 586us; 8us; 589us; 9us; 592us; 10us; 595us; 13us; 598us; 77us; 573us; 78us; 572us; 111us; 578us; 115us; 571us; 116us; 570us; 117us; 569us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 547us; 1us; 16655us; 89us; 565us; 1us; 32768us; 122us; 562us; 0us; 16656us; 0us; 16657us; 0us; 16658us; 0us; 16659us; 0us; 16660us; 0us; 16661us; 0us; 16662us; 17us; 32768us; 2us; 567us; 3us; 568us; 7us; 586us; 8us; 589us; 9us; 592us; 10us; 595us; 13us; 598us; 77us; 573us; 78us; 572us; 111us; 578us; 115us; 571us; 116us; 570us; 117us; 569us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 547us; 0us; 16663us; 17us; 32768us; 2us; 567us; 3us; 568us; 7us; 586us; 8us; 589us; 9us; 592us; 10us; 595us; 13us; 598us; 77us; 573us; 78us; 572us; 111us; 578us; 115us; 571us; 116us; 570us; 117us; 569us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 547us; 0us; 16665us; 0us; 16666us; 4us; 32768us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 546us; 17us; 32768us; 2us; 567us; 3us; 568us; 7us; 586us; 8us; 589us; 9us; 592us; 10us; 595us; 13us; 598us; 77us; 573us; 78us; 572us; 111us; 578us; 115us; 571us; 116us; 570us; 117us; 569us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 547us; 0us; 16667us; 0us; 16668us; 0us; 16669us; 0us; 16670us; 0us; 16671us; 0us; 16672us; 1us; 32768us; 109us; 587us; 17us; 32768us; 2us; 567us; 3us; 568us; 7us; 586us; 8us; 589us; 9us; 592us; 10us; 595us; 13us; 598us; 77us; 573us; 78us; 572us; 111us; 578us; 115us; 571us; 116us; 570us; 117us; 569us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 547us; 0us; 16673us; 1us; 32768us; 109us; 590us; 17us; 32768us; 2us; 567us; 3us; 568us; 7us; 586us; 8us; 589us; 9us; 592us; 10us; 595us; 13us; 598us; 77us; 573us; 78us; 572us; 111us; 578us; 115us; 571us; 116us; 570us; 117us; 569us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 547us; 0us; 16674us; 1us; 32768us; 109us; 593us; 17us; 32768us; 2us; 567us; 3us; 568us; 7us; 586us; 8us; 589us; 9us; 592us; 10us; 595us; 13us; 598us; 77us; 573us; 78us; 572us; 111us; 578us; 115us; 571us; 116us; 570us; 117us; 569us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 547us; 0us; 16675us; 1us; 32768us; 109us; 596us; 17us; 32768us; 2us; 567us; 3us; 568us; 7us; 586us; 8us; 589us; 9us; 592us; 10us; 595us; 13us; 598us; 77us; 573us; 78us; 572us; 111us; 578us; 115us; 571us; 116us; 570us; 117us; 569us; 119us; 545us; 120us; 544us; 121us; 543us; 122us; 547us; 0us; 16676us; 1us; 32768us; 109us; 599us; 1us; 32768us; 122us; 562us; 1us; 32768us; 110us; 601us; 0us; 16677us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 2us; 3us; 19us; 22us; 24us; 25us; 27us; 28us; 30us; 31us; 47us; 48us; 50us; 87us; 88us; 93us; 95us; 97us; 98us; 101us; 103us; 105us; 106us; 108us; 109us; 110us; 111us; 113us; 115us; 117us; 119us; 121us; 123us; 125us; 127us; 129us; 131us; 132us; 134us; 135us; 139us; 141us; 142us; 146us; 147us; 148us; 149us; 150us; 151us; 156us; 157us; 161us; 163us; 164us; 165us; 167us; 168us; 171us; 189us; 190us; 191us; 192us; 193us; 195us; 196us; 197us; 198us; 199us; 200us; 201us; 202us; 203us; 204us; 206us; 208us; 209us; 211us; 212us; 214us; 233us; 270us; 271us; 290us; 327us; 328us; 330us; 334us; 336us; 355us; 392us; 393us; 412us; 449us; 450us; 453us; 454us; 456us; 458us; 459us; 461us; 463us; 464us; 466us; 468us; 469us; 471us; 473us; 474us; 476us; 477us; 479us; 481us; 485us; 486us; 488us; 490us; 494us; 495us; 496us; 497us; 498us; 500us; 502us; 506us; 508us; 509us; 517us; 519us; 520us; 522us; 524us; 532us; 535us; 536us; 538us; 539us; 541us; 560us; 578us; 579us; 598us; 616us; 617us; 619us; 621us; 622us; 624us; 626us; 645us; 664us; 665us; 684us; 703us; 704us; 723us; 724us; 743us; 744us; 746us; 748us; 750us; 752us; 753us; 754us; 756us; 758us; 759us; 761us; 798us; 799us; 801us; 802us; 805us; 807us; 810us; 811us; 812us; 813us; 815us; 817us; 818us; 819us; 821us; 823us; 860us; 866us; 903us; 904us; 906us; 907us; 910us; 947us; 953us; 990us; 991us; 992us; 993us; 994us; 996us; 998us; 1000us; 1037us; 1039us; 1040us; 1042us; 1079us; 1081us; 1082us; 1084us; 1086us; 1087us; 1088us; 1090us; 1092us; 1094us; 1095us; 1096us; 1104us; 1107us; 1108us; 1116us; 1119us; 1120us; 1122us; 1125us; 1133us; 1141us; 1142us; 1143us; 1144us; 1145us; 1148us; 1149us; 1150us; 1151us; 1152us; 1153us; 1154us; 1156us; 1157us; 1175us; 1193us; 1212us; 1213us; 1216us; 1217us; 1220us; 1221us; 1224us; 1227us; 1228us; 1231us; 1234us; 1235us; 1253us; 1255us; 1256us; 1257us; 1276us; 1277us; 1282us; 1299us; 1300us; 1319us; 1322us; 1325us; 1328us; 1331us; 1349us; 1351us; 1352us; 1370us; 1371us; 1372us; 1374us; 1375us; 1393us; 1394us; 1395us; 1397us; 1398us; 1400us; 1401us; 1403us; 1421us; 1422us; 1423us; 1424us; 1426us; 1428us; 1430us; 1448us; 1449us; 1465us; 1466us; 1482us; 1483us; 1499us; 1500us; 1516us; 1517us; 1534us; 1535us; 1537us; 1553us; 1554us; 1555us; 1572us; 1573us; 1574us; 1575us; 1576us; 1614us; 1617us; 1618us; 1619us; 1657us; 1658us; 1676us; 1695us; 1732us; 1769us; 1806us; 1807us; 1808us; 1809us; 1846us; 1883us; 1920us; 1958us; 1996us; 1997us; 1998us; 1999us; 2000us; 2001us; 2002us; 2003us; 2004us; 2005us; 2006us; 2007us; 2008us; 2009us; 2011us; 2012us; 2014us; 2015us; 2017us; 2018us; 2019us; 2020us; 2022us; 2023us; 2024us; 2025us; 2026us; 2027us; 2028us; 2029us; 2030us; 2031us; 2032us; 2033us; 2034us; 2035us; 2036us; 2037us; 2038us; 2040us; 2078us; 2081us; 2082us; 2085us; 2087us; 2089us; 2091us; 2092us; 2130us; 2131us; 2134us; 2136us; 2138us; 2140us; 2141us; 2142us; 2145us; 2147us; 2149us; 2150us; 2153us; 2155us; 2156us; 2157us; 2163us; 2164us; 2167us; 2204us; 2205us; 2224us; 2261us; 2262us; 2281us; 2318us; 2319us; 2320us; 2321us; 2323us; 2325us; 2326us; 2328us; 2329us; 2331us; 2333us; 2336us; 2337us; 2356us; 2358us; 2395us; 2397us; 2398us; 2399us; 2400us; 2418us; 2437us; 2474us; 2475us; 2477us; 2479us; 2481us; 2483us; 2484us; 2486us; 2488us; 2490us; 2491us; 2529us; 2531us; 2568us; 2569us; 2571us; 2608us; 2610us; 2611us; 2648us; 2650us; 2652us; 2653us; 2690us; 2692us; 2694us; 2695us; 2697us; 2701us; 2703us; 2704us; 2708us; 2710us; 2712us; 2713us; 2715us; 2717us; 2719us; 2720us; 2722us; 2726us; 2727us; 2728us; 2729us; 2730us; 2731us; 2732us; 2733us; 2735us; 2739us; 2776us; 2778us; 2780us; 2781us; 2783us; 2820us; 2822us; 2824us; 2825us; 2863us; 2865us; 2866us; 2868us; 2905us; 2907us; 2908us; 2911us; 2914us; 2951us; 2953us; 2992us; 2993us; 2994us; 3031us; 3032us; 3033us; 3035us; 3039us; 3076us; 3078us; 3079us; 3080us; 3082us; 3083us; 3084us; 3086us; 3088us; 3090us; 3091us; 3093us; 3095us; 3097us; 3100us; 3102us; 3139us; 3141us; 3142us; 3143us; 3144us; 3146us; 3148us; 3185us; 3186us; 3188us; 3190us; 3191us; 3193us; 3230us; 3231us; 3232us; 3233us; 3235us; 3239us; 3240us; 3241us; 3242us; 3247us; 3248us; 3249us; 3250us; 3251us; 3253us; 3256us; 3261us; 3262us; 3263us; 3264us; 3266us; 3267us; 3269us; 3270us; 3289us; 3308us; 3327us; 3346us; 3365us; 3366us; 3368us; 3386us; 3388us; 3390us; 3391us; 3392us; 3393us; 3394us; 3395us; 3396us; 3397us; 3415us; 3416us; 3434us; 3435us; 3436us; 3441us; 3459us; 3460us; 3461us; 3462us; 3463us; 3464us; 3465us; 3467us; 3485us; 3486us; 3488us; 3506us; 3507us; 3509us; 3527us; 3528us; 3530us; 3548us; 3549us; 3551us; 3553us; 3555us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 4us; 4us; 0us; 2us; 0us; 2us; 3us; 4us; 5us; 3us; 1us; 1us; 11us; 2us; 3us; 0us; 2us; 1us; 1us; 1us; 1us; 2us; 4us; 1us; 5us; 1us; 1us; 2us; 4us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 0us; 2us; 4us; 5us; 5us; 6us; 1us; 2us; 6us; 7us; 0us; 2us; 4us; 5us; 1us; 1us; 1us; 5us; 3us; 4us; 0us; 2us; 6us; 1us; 2us; 4us; 5us; 1us; 3us; 5us; 6us; 6us; 7us; 6us; 6us; 6us; 1us; 2us; 4us; 6us; 7us; 1us; 1us; 1us; 1us; 1us; 5us; 5us; 4us; 4us; 1us; 3us; 3us; 3us; 3us; 1us; 2us; 3us; 4us; 1us; 2us; 1us; 1us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 3us; 4us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 9us; 0us; 2us; 1us; 2us; 3us; 1us; 2us; 3us; 3us; 1us; 1us; 3us; 1us; 1us; 1us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 2us; 3us; 1us; 3us; 2us; 4us; 1us; 1us; 1us; 1us; 2us; 2us; 2us; 0us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 7us; 7us; 8us; 7us; 5us; 4us; 5us; 0us; 2us; 0us; 2us; 3us; 1us; 2us; 4us; 8us; 1us; 2us; 4us; 6us; 4us; 4us; 5us; 4us; 4us; 4us; 6us; 6us; 1us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 4us; 6us; 3us; 5us; 3us; 5us; 1us; 3us; 3us; 4us; 5us; 7us; 4us; 6us; 7us; 5us; 4us; 3us; 4us; 8us; 1us; 2us; 4us; 1us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 1us; 1us; 3us; 1us; 2us; 0us; 2us; 1us; 2us; 2us; 3us; 5us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 3us; 1us; 4us; 1us; 1us; 1us; 1us; 1us; 4us; 4us; 4us; 4us; 4us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 5us; 6us; 6us; 7us; 8us; 9us; 10us; 10us; 11us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 14us; 14us; 15us; 15us; 15us; 15us; 16us; 16us; 17us; 17us; 18us; 18us; 19us; 19us; 20us; 20us; 20us; 21us; 21us; 21us; 22us; 22us; 22us; 23us; 23us; 24us; 24us; 25us; 25us; 26us; 26us; 26us; 26us; 27us; 28us; 29us; 30us; 30us; 31us; 32us; 33us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 35us; 36us; 37us; 37us; 37us; 37us; 37us; 38us; 38us; 38us; 38us; 39us; 39us; 40us; 41us; 41us; 41us; 41us; 41us; 41us; 41us; 41us; 41us; 41us; 41us; 41us; 41us; 41us; 41us; 41us; 42us; 43us; 44us; 44us; 45us; 45us; 45us; 46us; 46us; 46us; 47us; 48us; 48us; 48us; 48us; 48us; 48us; 48us; 49us; 49us; 50us; 50us; 51us; 51us; 51us; 51us; 51us; 52us; 52us; 53us; 54us; 54us; 55us; 55us; 55us; 56us; 56us; 56us; 56us; 56us; 56us; 57us; 57us; 58us; 58us; 58us; 58us; 58us; 58us; 58us; 58us; 58us; 58us; 58us; 58us; 58us; 58us; 58us; 58us; 58us; 58us; 58us; 58us; 58us; 58us; 58us; 58us; 58us; 58us; 58us; 58us; 58us; 58us; 58us; 59us; 59us; 60us; 60us; 61us; 62us; 62us; 63us; 63us; 64us; 64us; 65us; 66us; 66us; 67us; 67us; 68us; 68us; 69us; 70us; 71us; 72us; 72us; 73us; 74us; 75us; 75us; 75us; 76us; 76us; 77us; 77us; 77us; 78us; 78us; 78us; 79us; 79us; 80us; 80us; 81us; 81us; 82us; 82us; 83us; 83us; 83us; 83us; 84us; 84us; 85us; 85us; 85us; 85us; 86us; 87us; 88us; 88us; 89us; 90us; 90us; 91us; 92us; 93us; 94us; 94us; 94us; 94us; 94us; 95us; 95us; 95us; 95us; 96us; 96us; 97us; 97us; 98us; 98us; 98us; 99us; 99us; 100us; 100us; 100us; 100us; 100us; 100us; 100us; 100us; 100us; 100us; 100us; 100us; 100us; 100us; 100us; 100us; 101us; 102us; 103us; 104us; 105us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 65535us; 65535us; 16385us; 65535us; 16386us; 65535us; 16388us; 65535us; 16390us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 16392us; 65535us; 65535us; 65535us; 16393us; 65535us; 16394us; 16395us; 16396us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16397us; 65535us; 16398us; 65535us; 65535us; 16399us; 65535us; 16401us; 16402us; 16403us; 16404us; 16405us; 65535us; 16406us; 65535us; 65535us; 16407us; 16408us; 65535us; 65535us; 65535us; 65535us; 16409us; 16410us; 16411us; 16412us; 65535us; 16413us; 16414us; 16415us; 16416us; 16417us; 16418us; 16419us; 16420us; 16421us; 65535us; 65535us; 16422us; 65535us; 16424us; 65535us; 65535us; 65535us; 16425us; 65535us; 65535us; 16426us; 65535us; 65535us; 65535us; 65535us; 65535us; 16427us; 65535us; 65535us; 16428us; 65535us; 16430us; 65535us; 65535us; 65535us; 65535us; 65535us; 16431us; 65535us; 65535us; 65535us; 65535us; 65535us; 16432us; 65535us; 16434us; 65535us; 65535us; 65535us; 16435us; 65535us; 65535us; 65535us; 16436us; 16437us; 16438us; 16439us; 65535us; 65535us; 65535us; 65535us; 16440us; 65535us; 65535us; 16444us; 65535us; 65535us; 65535us; 65535us; 16445us; 65535us; 16447us; 65535us; 65535us; 65535us; 16448us; 65535us; 65535us; 16449us; 65535us; 65535us; 16451us; 65535us; 65535us; 65535us; 65535us; 16452us; 65535us; 65535us; 16453us; 65535us; 16454us; 65535us; 16455us; 65535us; 65535us; 65535us; 65535us; 65535us; 16456us; 65535us; 65535us; 65535us; 65535us; 65535us; 16457us; 65535us; 65535us; 65535us; 65535us; 65535us; 16458us; 16459us; 16460us; 65535us; 65535us; 65535us; 16461us; 65535us; 65535us; 65535us; 65535us; 65535us; 16462us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16463us; 16464us; 16465us; 16466us; 65535us; 65535us; 65535us; 65535us; 65535us; 16469us; 65535us; 65535us; 65535us; 16470us; 65535us; 65535us; 65535us; 16471us; 65535us; 65535us; 65535us; 16472us; 16473us; 65535us; 65535us; 16474us; 65535us; 65535us; 16475us; 65535us; 65535us; 65535us; 65535us; 16477us; 16484us; 16485us; 16486us; 65535us; 16488us; 16489us; 16490us; 16491us; 16492us; 65535us; 65535us; 16493us; 65535us; 65535us; 65535us; 16494us; 65535us; 16495us; 65535us; 16496us; 65535us; 65535us; 16497us; 65535us; 65535us; 16498us; 65535us; 65535us; 16499us; 65535us; 65535us; 16500us; 65535us; 65535us; 16501us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16504us; 16505us; 65535us; 16506us; 65535us; 16507us; 16508us; 65535us; 16509us; 65535us; 16510us; 65535us; 65535us; 16511us; 16513us; 16514us; 65535us; 65535us; 65535us; 65535us; 16518us; 65535us; 16519us; 65535us; 16520us; 65535us; 16521us; 65535us; 16522us; 65535us; 16523us; 65535us; 65535us; 16524us; 16525us; 65535us; 16526us; 16527us; 16528us; 16529us; 65535us; 65535us; 16530us; 16531us; 65535us; 16532us; 65535us; 65535us; 65535us; 65535us; 65535us; 16536us; 16537us; 16538us; 65535us; 65535us; 65535us; 65535us; 65535us; 16539us; 16540us; 16541us; 16544us; 16545us; 16546us; 16547us; 16548us; 16549us; 16550us; 16551us; 16552us; 16553us; 65535us; 16554us; 65535us; 16555us; 65535us; 16556us; 16557us; 16558us; 65535us; 16559us; 16560us; 16561us; 16562us; 16563us; 16564us; 16565us; 16566us; 16567us; 16568us; 16569us; 16570us; 16571us; 16572us; 16573us; 16574us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16575us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16576us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16577us; 16578us; 65535us; 65535us; 65535us; 65535us; 16579us; 65535us; 65535us; 16580us; 65535us; 65535us; 16581us; 16583us; 16585us; 65535us; 65535us; 16586us; 65535us; 16588us; 65535us; 65535us; 65535us; 16589us; 65535us; 65535us; 65535us; 65535us; 16590us; 16591us; 16592us; 65535us; 65535us; 65535us; 16593us; 65535us; 65535us; 65535us; 65535us; 16594us; 65535us; 65535us; 65535us; 16595us; 65535us; 65535us; 65535us; 16596us; 65535us; 65535us; 65535us; 16597us; 65535us; 65535us; 65535us; 16598us; 65535us; 65535us; 65535us; 16599us; 65535us; 65535us; 65535us; 16600us; 65535us; 65535us; 65535us; 16601us; 65535us; 65535us; 65535us; 16602us; 65535us; 65535us; 16604us; 16605us; 16606us; 16607us; 16608us; 16609us; 16610us; 65535us; 65535us; 65535us; 65535us; 65535us; 16612us; 65535us; 65535us; 65535us; 65535us; 16614us; 65535us; 65535us; 16615us; 65535us; 65535us; 65535us; 16616us; 65535us; 65535us; 65535us; 65535us; 65535us; 16619us; 16620us; 65535us; 16621us; 16622us; 65535us; 65535us; 65535us; 65535us; 16625us; 16626us; 65535us; 16627us; 16628us; 65535us; 65535us; 65535us; 16629us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16630us; 16631us; 16632us; 65535us; 65535us; 65535us; 16633us; 65535us; 65535us; 16635us; 65535us; 65535us; 16636us; 16637us; 16638us; 65535us; 65535us; 16640us; 16641us; 16642us; 65535us; 16643us; 16644us; 16645us; 16646us; 65535us; 65535us; 65535us; 16647us; 16648us; 16649us; 65535us; 16651us; 65535us; 16653us; 65535us; 65535us; 65535us; 65535us; 65535us; 16654us; 65535us; 65535us; 65535us; 65535us; 16656us; 16657us; 16658us; 16659us; 16660us; 16661us; 16662us; 65535us; 16663us; 65535us; 16665us; 16666us; 65535us; 65535us; 16667us; 16668us; 16669us; 16670us; 16671us; 16672us; 65535us; 65535us; 16673us; 65535us; 65535us; 16674us; 65535us; 65535us; 16675us; 65535us; 65535us; 16676us; 65535us; 65535us; 65535us; 16677us; |]
let _fsyacc_reductions ()  =    [| 
# 1207 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  Unit  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startunit));
# 1216 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_main in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 ".\Parser.fsy"
                                                             UMain(_1, _2, _3) 
                   )
# 100 ".\Parser.fsy"
                 :  Unit ));
# 1229 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_export in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 ".\Parser.fsy"
                                                            UExport(_1, _2, _3) 
                   )
# 101 ".\Parser.fsy"
                 :  Unit ));
# 1242 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 ".\Parser.fsy"
                                          [] 
                   )
# 103 ".\Parser.fsy"
                 : 'gentype_import_list));
# 1252 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import in
            let _2 = parseState.GetInput(2) :?> 'gentype_import_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 ".\Parser.fsy"
                                                  _1 :: _2 
                   )
# 104 ".\Parser.fsy"
                 : 'gentype_import_list));
# 1264 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 ".\Parser.fsy"
                                         [] 
                   )
# 106 ".\Parser.fsy"
                 : 'gentype_decl_list));
# 1274 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_declaration in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 ".\Parser.fsy"
                                                   _1 :: _2 
                   )
# 107 ".\Parser.fsy"
                 : 'gentype_decl_list));
# 1286 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 ".\Parser.fsy"
                                                      _3 
                   )
# 109 ".\Parser.fsy"
                 : 'gentype_main));
# 1297 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_import_path in
            let _4 = parseState.GetInput(4) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 ".\Parser.fsy"
                                                                    { Native = false; Explicit = []; Path = _2; Alias = _4 } 
                   )
# 111 ".\Parser.fsy"
                 : 'gentype_import));
# 1309 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_brace_names in
            let _3 = parseState.GetInput(3) :?> 'gentype_import_path in
            let _5 = parseState.GetInput(5) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 ".\Parser.fsy"
                                                                          { Native = false; Explicit = _2; Path = _3; Alias = _5 } 
                   )
# 112 ".\Parser.fsy"
                 : 'gentype_import));
# 1322 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 ".\Parser.fsy"
                                                        { Native = true; Explicit = []; Path = IPLocal (_3); Alias = stringToSmallName "" } 
                   )
# 113 ".\Parser.fsy"
                 : 'gentype_import));
# 1333 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 ".\Parser.fsy"
                                            IPLocal (_1) 
                   )
# 115 ".\Parser.fsy"
                 : 'gentype_import_path));
# 1344 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_remote in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 ".\Parser.fsy"
                                   IPRemote (_1) 
                   )
# 116 ".\Parser.fsy"
                 : 'gentype_import_path));
# 1355 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> Name in
            let _7 = parseState.GetInput(7) :?> IntegerLiteral in
            let _9 = parseState.GetInput(9) :?> IntegerLiteral in
            let _11 = parseState.GetInput(11) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 ".\Parser.fsy"
                          { Org = _1; Project = _3; Unit = _5; Major = _7; Minor = _9; Patch = _11 } 
                   )
# 119 ".\Parser.fsy"
                 : 'gentype_remote));
# 1371 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_brace_names in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 ".\Parser.fsy"
                                                   _2 
                   )
# 121 ".\Parser.fsy"
                 : 'gentype_export));
# 1382 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_name_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 ".\Parser.fsy"
                                                               _2 
                   )
# 123 ".\Parser.fsy"
                 : 'gentype_brace_names));
# 1393 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 ".\Parser.fsy"
                                       [] 
                   )
# 125 ".\Parser.fsy"
                 : 'gentype_name_list));
# 1403 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_name in
            let _2 = parseState.GetInput(2) :?> 'gentype_name_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 ".\Parser.fsy"
                                            _1 :: _2 
                   )
# 126 ".\Parser.fsy"
                 : 'gentype_name_list));
# 1415 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 ".\Parser.fsy"
                                          _1 
                   )
# 128 ".\Parser.fsy"
                 : 'gentype_name));
# 1426 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 ".\Parser.fsy"
                                         _1 
                   )
# 129 ".\Parser.fsy"
                 : 'gentype_name));
# 1437 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 ".\Parser.fsy"
                                          _1 
                   )
# 130 ".\Parser.fsy"
                 : 'gentype_name));
# 1448 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 ".\Parser.fsy"
                                                        DFunc (_1) 
                   )
# 134 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1459 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 ".\Parser.fsy"
                                                      DRecFuncs ([_2]) 
                   )
# 135 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1470 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_function_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 ".\Parser.fsy"
                                                                      DRecFuncs (_3) 
                   )
# 136 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1481 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_native in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 ".\Parser.fsy"
                                             DNative (_1) 
                   )
# 137 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1492 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 ".\Parser.fsy"
                                                                            DPattern (_2, _3, _5) 
                   )
# 138 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1505 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_userkind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 ".\Parser.fsy"
                                               DKind (_1) 
                   )
# 139 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1516 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 ".\Parser.fsy"
                                               DType (_1) 
                   )
# 140 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1527 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 ".\Parser.fsy"
                                                      DRecTypes ([_2]) 
                   )
# 141 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1538 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_datatype_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 ".\Parser.fsy"
                                                                      DRecTypes (_3) 
                   )
# 142 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1549 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_overload in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 ".\Parser.fsy"
                                               _1 
                   )
# 143 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1560 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_instance in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 ".\Parser.fsy"
                                               _1 
                   )
# 144 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1571 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rule in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 ".\Parser.fsy"
                                            _1 
                   )
# 145 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1582 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_effect in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 ".\Parser.fsy"
                                             DEffect (_1) 
                   )
# 146 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1593 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_test in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 ".\Parser.fsy"
                                            DTest (_1) 
                   )
# 147 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1604 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_law in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 ".\Parser.fsy"
                                           DLaw (_1) 
                   )
# 148 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1615 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_check in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 ".\Parser.fsy"
                                             DCheck (_1) 
                   )
# 149 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1626 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tag in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 ".\Parser.fsy"
                                           _1 
                   )
# 150 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1637 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_documentation_lines in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 ".\Parser.fsy"
                                                                        _3 
                   )
# 152 ".\Parser.fsy"
                 : 'gentype_documentation));
# 1648 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 ".\Parser.fsy"
                                                       [] 
                   )
# 154 ".\Parser.fsy"
                 : 'gentype_documentation_lines));
# 1658 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> DocumentationLine in
            let _2 = parseState.GetInput(2) :?> 'gentype_documentation_lines in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 ".\Parser.fsy"
                                                                     _1 :: _2 
                   )
# 155 ".\Parser.fsy"
                 : 'gentype_documentation_lines));
# 1670 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 ".\Parser.fsy"
                          { Name = _2; Docs = []; Body = _4 } 
                   )
# 158 ".\Parser.fsy"
                 : 'gentype_function));
# 1682 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_no_dot_pattern_expr_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 ".\Parser.fsy"
                           { Name = _2; Docs = []; Body = [EStatementBlock([SLet { Matcher = _3; Body = [] }; SExpression(_5)])] } 
                   )
# 160 ".\Parser.fsy"
                 : 'gentype_function));
# 1695 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 ".\Parser.fsy"
                           { Name = _3; Docs = _1; Body = _5 } 
                   )
# 162 ".\Parser.fsy"
                 : 'gentype_function));
# 1708 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_no_dot_pattern_expr_list in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 ".\Parser.fsy"
                           { Name = _3; Docs = _1; Body = [EStatementBlock([SLet { Matcher = _4; Body = [] }; SExpression(_6)])] } 
                   )
# 164 ".\Parser.fsy"
                 : 'gentype_function));
# 1722 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 ".\Parser.fsy"
                                                   [_1] 
                   )
# 166 ".\Parser.fsy"
                 : 'gentype_function_list));
# 1733 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            let _2 = parseState.GetInput(2) :?> 'gentype_function_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 ".\Parser.fsy"
                                                     _1 :: _2 
                   )
# 167 ".\Parser.fsy"
                 : 'gentype_function_list));
# 1745 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_qual_fn_type in
            let _6 = parseState.GetInput(6) :?> 'gentype_native_code_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 ".\Parser.fsy"
                          { Name = _2; Docs = []; Type = _4; Lines = _6 } 
                   )
# 170 ".\Parser.fsy"
                 : 'gentype_native));
# 1758 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_qual_fn_type in
            let _7 = parseState.GetInput(7) :?> 'gentype_native_code_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 ".\Parser.fsy"
                             { Name = _3; Docs = _1; Type = _5; Lines = _7 } 
                   )
# 172 ".\Parser.fsy"
                 : 'gentype_native));
# 1772 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 ".\Parser.fsy"
                                                    [] 
                   )
# 174 ".\Parser.fsy"
                 : 'gentype_native_code_list));
# 1782 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> NativeCodeLine in
            let _2 = parseState.GetInput(2) :?> 'gentype_native_code_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 ".\Parser.fsy"
                                                                _1 :: _2 
                   )
# 175 ".\Parser.fsy"
                 : 'gentype_native_code_list));
# 1794 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_kind_unify in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 ".\Parser.fsy"
                          { Name = _2; Docs = []; Unify = _4 } 
                   )
# 178 ".\Parser.fsy"
                 : 'gentype_userkind));
# 1806 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_kind_unify in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 ".\Parser.fsy"
                           { Name = _3; Docs = _1; Unify = _5 } 
                   )
# 180 ".\Parser.fsy"
                 : 'gentype_userkind));
# 1819 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 ".\Parser.fsy"
                                             KUBoolean 
                   )
# 182 ".\Parser.fsy"
                 : 'gentype_kind_unify));
# 1829 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 ".\Parser.fsy"
                                       KUAbelian 
                   )
# 183 ".\Parser.fsy"
                 : 'gentype_kind_unify));
# 1839 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 ".\Parser.fsy"
                                         KUSyntactic 
                   )
# 184 ".\Parser.fsy"
                 : 'gentype_kind_unify));
# 1849 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_type_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_constructor_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 ".\Parser.fsy"
                          { Name = _2; Docs = []; Params = _3; Constructors = _5; Kind = SKBase (sIdentifier [] (stringToBigName "Data")) } 
                   )
# 187 ".\Parser.fsy"
                 : 'gentype_datatype));
# 1862 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_type_param_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 ".\Parser.fsy"
                           { Name = _2; Docs = []; Params = _3; Constructors = []; Kind = SKBase (sIdentifier [] (stringToBigName "Data")) } 
                   )
# 189 ".\Parser.fsy"
                 : 'gentype_datatype));
# 1874 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_any_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 ".\Parser.fsy"
                           { Name = _2; Docs = []; Params = []; Constructors = []; Kind = _4 } 
                   )
# 191 ".\Parser.fsy"
                 : 'gentype_datatype));
# 1886 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 ".\Parser.fsy"
                            [] 
                   )
# 194 ".\Parser.fsy"
                 : 'gentype_type_param_list));
# 1896 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_param_list in
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 ".\Parser.fsy"
                            List.append _1 [(_2, SKBase (sIdentifier [] (stringToBigName "Val")))] 
                   )
# 196 ".\Parser.fsy"
                 : 'gentype_type_param_list));
# 1908 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_param_list in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_any_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 ".\Parser.fsy"
                            List.append _1 [(_3, _5)] 
                   )
# 198 ".\Parser.fsy"
                 : 'gentype_type_param_list));
# 1921 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 ".\Parser.fsy"
                                                   [_1] 
                   )
# 200 ".\Parser.fsy"
                 : 'gentype_datatype_list));
# 1932 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            let _2 = parseState.GetInput(2) :?> 'gentype_datatype_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 ".\Parser.fsy"
                                                     _1 :: _2 
                   )
# 201 ".\Parser.fsy"
                 : 'gentype_datatype_list));
# 1944 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 ".\Parser.fsy"
                           { Name = _1; Docs = []; Components = []; Result = _4 } 
                   )
# 204 ".\Parser.fsy"
                 : 'gentype_constructor));
# 1956 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_type_arg_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 ".\Parser.fsy"
                           { Name = _1; Docs = []; Components = List.rev _3; Result = _5 } 
                   )
# 206 ".\Parser.fsy"
                 : 'gentype_constructor));
# 1969 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constructor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 ".\Parser.fsy"
                                                           [_1] 
                   )
# 208 ".\Parser.fsy"
                 : 'gentype_constructor_list));
# 1980 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constructor in
            let _3 = parseState.GetInput(3) :?> 'gentype_constructor_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 ".\Parser.fsy"
                                                               _1 :: _3 
                   )
# 209 ".\Parser.fsy"
                 : 'gentype_constructor_list));
# 1992 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 ".\Parser.fsy"
                                                                     DPropagationRule (_2, [], []) 
                   )
# 211 ".\Parser.fsy"
                 : 'gentype_rule));
# 2003 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_type_arg_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 ".\Parser.fsy"
                                                                                DPropagationRule (_2, _4, []) 
                   )
# 212 ".\Parser.fsy"
                 : 'gentype_rule));
# 2015 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_type_arg_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 ".\Parser.fsy"
                                                                                DPropagationRule (_2, [], _5) 
                   )
# 213 ".\Parser.fsy"
                 : 'gentype_rule));
# 2027 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_type_arg_list in
            let _6 = parseState.GetInput(6) :?> 'gentype_type_arg_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 ".\Parser.fsy"
                                                                                              DPropagationRule (_2, _4, _6) 
                   )
# 214 ".\Parser.fsy"
                 : 'gentype_rule));
# 2040 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> Name in
            let _6 = parseState.GetInput(6) :?> 'gentype_qual_fn_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 ".\Parser.fsy"
                                                                                           DOverload (_2, _4, _6, []) 
                   )
# 216 ".\Parser.fsy"
                 : 'gentype_overload));
# 2053 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_qual_fn_type in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 ".\Parser.fsy"
                                                                                            DInstance(_2, _4, _6) 
                   )
# 218 ".\Parser.fsy"
                 : 'gentype_instance));
# 2066 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_handler_template_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 221 ".\Parser.fsy"
                          { Name = _2; Docs = []; Params = _3; Handlers = _5 } 
                   )
# 221 ".\Parser.fsy"
                 : 'gentype_effect));
# 2079 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handler_template in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 ".\Parser.fsy"
                                                                     [_1] 
                   )
# 223 ".\Parser.fsy"
                 : 'gentype_handler_template_list));
# 2090 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handler_template_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_handler_template in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 ".\Parser.fsy"
                                                                       List.append _1 [_2] 
                   )
# 224 ".\Parser.fsy"
                 : 'gentype_handler_template_list));
# 2102 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_qual_fn_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 ".\Parser.fsy"
                                                                                { Name = _2; Type = _4 } 
                   )
# 226 ".\Parser.fsy"
                 : 'gentype_handler_template));
# 2114 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_test_all in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 ".\Parser.fsy"
                         { Name = _2; Left = _4; Right = _6; Kind = _5 } 
                   )
# 229 ".\Parser.fsy"
                 : 'gentype_test));
# 2128 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_test_all in
            let _7 = parseState.GetInput(7) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 232 ".\Parser.fsy"
                         { Name = _2; Exhaustive = false; Params = _3; Left = _5; Right = _7; Kind = _6 } 
                   )
# 232 ".\Parser.fsy"
                 : 'gentype_law));
# 2143 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 234 ".\Parser.fsy"
                                            TKSatisfies 
                   )
# 234 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2153 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 235 ".\Parser.fsy"
                                      TKViolates 
                   )
# 235 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2163 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 ".\Parser.fsy"
                                       TKIsRoughly 
                   )
# 236 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2173 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 237 ".\Parser.fsy"
                                 TKIs [] 
                   )
# 237 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2183 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 ".\Parser.fsy"
                                    TKIsNot [] 
                   )
# 238 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2193 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 239 ".\Parser.fsy"
                                                               TKIs _4 
                   )
# 239 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2204 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 240 ".\Parser.fsy"
                                                                  TKIsNot _4 
                   )
# 240 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2215 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_qual_fn_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 242 ".\Parser.fsy"
                                                                    { Name = _2; Matcher = _4 } 
                   )
# 242 ".\Parser.fsy"
                 : 'gentype_check));
# 2227 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 244 ".\Parser.fsy"
                                                            DTag (_2, _4) 
                   )
# 244 ".\Parser.fsy"
                 : 'gentype_tag));
# 2239 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_identifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 248 ".\Parser.fsy"
                                                       SKBase _1 
                   )
# 248 ".\Parser.fsy"
                 : 'gentype_any_kind));
# 2250 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 249 ".\Parser.fsy"
                                                           SKSeq _2 
                   )
# 249 ".\Parser.fsy"
                 : 'gentype_any_kind));
# 2261 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 250 ".\Parser.fsy"
                                                        SKRow _2 
                   )
# 250 ".\Parser.fsy"
                 : 'gentype_any_kind));
# 2272 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_any_kind in
            let _3 = parseState.GetInput(3) :?> 'gentype_any_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 251 ".\Parser.fsy"
                                                        SKArrow (_1, _3) 
                   )
# 251 ".\Parser.fsy"
                 : 'gentype_any_kind));
# 2284 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 252 ".\Parser.fsy"
                                                        _2 
                   )
# 252 ".\Parser.fsy"
                 : 'gentype_any_kind));
# 2295 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_predicate in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 256 ".\Parser.fsy"
                                                         ind _1 SEnd 
                   )
# 256 ".\Parser.fsy"
                 : 'gentype_predicate_list));
# 2306 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_predicate in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 257 ".\Parser.fsy"
                                                    dot _1 SEnd 
                   )
# 257 ".\Parser.fsy"
                 : 'gentype_predicate_list));
# 2317 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_predicate in
            let _3 = parseState.GetInput(3) :?> 'gentype_predicate_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 258 ".\Parser.fsy"
                                                                ind _1 _3 
                   )
# 258 ".\Parser.fsy"
                 : 'gentype_predicate_list));
# 2329 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_predicate in
            let _4 = parseState.GetInput(4) :?> 'gentype_predicate_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 259 ".\Parser.fsy"
                                                                   dot _1 _4 
                   )
# 259 ".\Parser.fsy"
                 : 'gentype_predicate_list));
# 2341 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_identifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 261 ".\Parser.fsy"
                                                         STCon _1 
                   )
# 261 ".\Parser.fsy"
                 : 'gentype_predicate));
# 2352 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_identifier in
            let _2 = parseState.GetInput(2) :?> 'gentype_type_arg_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 262 ".\Parser.fsy"
                                                             appendTypeArgs (STCon _1) (List.rev _2) 
                   )
# 262 ".\Parser.fsy"
                 : 'gentype_predicate));
# 2364 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fn_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 264 ".\Parser.fsy"
                                                     sQualType SEnd _1 
                   )
# 264 ".\Parser.fsy"
                 : 'gentype_qual_fn_type));
# 2375 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 267 ".\Parser.fsy"
                                                  STTrue 
                   )
# 267 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2385 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 268 ".\Parser.fsy"
                                             STFalse 
                   )
# 268 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2395 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 269 ".\Parser.fsy"
                                                 STVar _1 
                   )
# 269 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2406 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 270 ".\Parser.fsy"
                                                        STDotVar _1 
                   )
# 270 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2417 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_identifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 271 ".\Parser.fsy"
                                                     STCon _1 
                   )
# 271 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2428 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 272 ".\Parser.fsy"
                                               STPrim PrFunction 
                   )
# 272 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2438 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 273 ".\Parser.fsy"
                                            STAbelianOne 
                   )
# 273 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2448 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 274 ".\Parser.fsy"
                                            STRowEmpty 
                   )
# 274 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2458 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_fn_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 275 ".\Parser.fsy"
                                                            _2 
                   )
# 275 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2469 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_type_arg_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 276 ".\Parser.fsy"
                                                                          appendTypeArgs _2 (List.rev _3) 
                   )
# 276 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2481 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_or_sequence in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 277 ".\Parser.fsy"
                                                              _2 
                   )
# 277 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2492 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_and_sequence in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 278 ".\Parser.fsy"
                                                              _2 
                   )
# 278 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2503 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_field_row_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 279 ".\Parser.fsy"
                                                                appendTypeArgs (STPrim PrRecord) [_2] 
                   )
# 279 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2514 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_field_row_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 280 ".\Parser.fsy"
                                                                   appendTypeArgs (STPrim PrVariant) [_2] 
                   )
# 280 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2525 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 281 ".\Parser.fsy"
                                                                  appendTypeArgs (STPrim PrList) [_2] 
                   )
# 281 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2536 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_fn_type_seq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 282 ".\Parser.fsy"
                                                           appendTypeArgs (STPrim PrTuple) [STSeq (dotVarToDotSeq (ofList (List.rev _2)), KValue)] 
                   )
# 282 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2547 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 284 ".\Parser.fsy"
                                                              appendTypeArgs (STPrim PrValue) [_3; _1] 
                   )
# 284 ".\Parser.fsy"
                 : 'gentype_val_type));
# 2559 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fn_type_seq in
            let _3 = parseState.GetInput(3) :?> 'gentype_fn_row_type in
            let _5 = parseState.GetInput(5) :?> 'gentype_fn_row_type in
            let _7 = parseState.GetInput(7) :?> 'gentype_compound_type in
            let _9 = parseState.GetInput(9) :?> 'gentype_fn_type_seq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 287 ".\Parser.fsy"
                          appendTypeArgs (STPrim PrValue)
                                       [STFalse;
                                        appendTypeArgs (STPrim PrFunction)
                                           [STSeq (dotVarToDotSeq (ofList (List.rev _9)), KValue);
                                            STSeq (dotVarToDotSeq (ofList (List.rev _1)), KValue);
                                            _7; _5; _3]] 
                   )
# 287 ".\Parser.fsy"
                 : 'gentype_fn_type));
# 2579 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 294 ".\Parser.fsy"
                                             [] 
                   )
# 294 ".\Parser.fsy"
                 : 'gentype_fn_type_seq));
# 2589 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fn_type_seq in
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 295 ".\Parser.fsy"
                                                       List.append _1 [_2] 
                   )
# 295 ".\Parser.fsy"
                 : 'gentype_fn_type_seq));
# 2601 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 297 ".\Parser.fsy"
                                               STRowEmpty 
                   )
# 297 ".\Parser.fsy"
                 : 'gentype_fn_row_type));
# 2611 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 298 ".\Parser.fsy"
                                                  STVar _1 
                   )
# 298 ".\Parser.fsy"
                 : 'gentype_fn_row_type));
# 2622 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fn_row_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 299 ".\Parser.fsy"
                                                            appendTypeArgs STRowExtend [_1; _3] 
                   )
# 299 ".\Parser.fsy"
                 : 'gentype_fn_row_type));
# 2634 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 301 ".\Parser.fsy"
                                                   STRowEmpty 
                   )
# 301 ".\Parser.fsy"
                 : 'gentype_field_row_type));
# 2644 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 302 ".\Parser.fsy"
                                                      STVar _1 
                   )
# 302 ".\Parser.fsy"
                 : 'gentype_field_row_type));
# 2655 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_field_row_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_field_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 303 ".\Parser.fsy"
                                                               appendTypeArgs STRowExtend [_1; _3] 
                   )
# 303 ".\Parser.fsy"
                 : 'gentype_field_row_type));
# 2667 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 305 ".\Parser.fsy"
                                                                     appendTypeArgs (STCon { Qualifier = []; Name = _1 }) [_3] 
                   )
# 305 ".\Parser.fsy"
                 : 'gentype_field_type));
# 2679 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 307 ".\Parser.fsy"
                                                       _1 
                   )
# 307 ".\Parser.fsy"
                 : 'gentype_compound_type));
# 2690 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_val_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 308 ".\Parser.fsy"
                                             _1 
                   )
# 308 ".\Parser.fsy"
                 : 'gentype_compound_type));
# 2701 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_type in
            let _3 = parseState.GetInput(3) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 309 ".\Parser.fsy"
                                                         STExponent (_1, _3) 
                   )
# 309 ".\Parser.fsy"
                 : 'gentype_compound_type));
# 2713 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_and_sequence in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 310 ".\Parser.fsy"
                                                _1 
                   )
# 310 ".\Parser.fsy"
                 : 'gentype_compound_type));
# 2724 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_or_sequence in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 311 ".\Parser.fsy"
                                                _1 
                   )
# 311 ".\Parser.fsy"
                 : 'gentype_compound_type));
# 2735 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_mul_sequence in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 312 ".\Parser.fsy"
                                                _1 
                   )
# 312 ".\Parser.fsy"
                 : 'gentype_compound_type));
# 2746 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 313 ".\Parser.fsy"
                                                    STNot _2 
                   )
# 313 ".\Parser.fsy"
                 : 'gentype_compound_type));
# 2757 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 315 ".\Parser.fsy"
                                                                 STAnd (_1, _3) 
                   )
# 315 ".\Parser.fsy"
                 : 'gentype_and_sequence));
# 2769 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_and_sequence in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 316 ".\Parser.fsy"
                                                          STAnd (_1, _3) 
                   )
# 316 ".\Parser.fsy"
                 : 'gentype_and_sequence));
# 2781 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 318 ".\Parser.fsy"
                                                            STOr (_1, _3) 
                   )
# 318 ".\Parser.fsy"
                 : 'gentype_or_sequence));
# 2793 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_or_sequence in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 319 ".\Parser.fsy"
                                                     STOr (_1, _3) 
                   )
# 319 ".\Parser.fsy"
                 : 'gentype_or_sequence));
# 2805 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 321 ".\Parser.fsy"
                                                                STMultiply (_1, _3) 
                   )
# 321 ".\Parser.fsy"
                 : 'gentype_mul_sequence));
# 2817 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 322 ".\Parser.fsy"
                                                     STMultiply (STFixedConst _1, _3) 
                   )
# 322 ".\Parser.fsy"
                 : 'gentype_mul_sequence));
# 2829 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_type in
            let _3 = parseState.GetInput(3) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 323 ".\Parser.fsy"
                                                     STMultiply (_1, STFixedConst _3) 
                   )
# 323 ".\Parser.fsy"
                 : 'gentype_mul_sequence));
# 2841 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_mul_sequence in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 324 ".\Parser.fsy"
                                                         STMultiply (_1, _3) 
                   )
# 324 ".\Parser.fsy"
                 : 'gentype_mul_sequence));
# 2853 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_mul_sequence in
            let _3 = parseState.GetInput(3) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 325 ".\Parser.fsy"
                                                       STMultiply (_1, STFixedConst _3) 
                   )
# 325 ".\Parser.fsy"
                 : 'gentype_mul_sequence));
# 2865 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 327 ".\Parser.fsy"
                                                        [_1] 
                   )
# 327 ".\Parser.fsy"
                 : 'gentype_type_arg_list));
# 2876 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_arg_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 328 ".\Parser.fsy"
                                                          List.append _1 [_2] 
                   )
# 328 ".\Parser.fsy"
                 : 'gentype_type_arg_list));
# 2888 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term_statement_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 332 ".\Parser.fsy"
                                                                                  _2 
                   )
# 332 ".\Parser.fsy"
                 : 'gentype_term_statement_block));
# 2899 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_statement in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 334 ".\Parser.fsy"
                                                                   [_1] 
                   )
# 334 ".\Parser.fsy"
                 : 'gentype_term_statement_list));
# 2910 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_statement_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 335 ".\Parser.fsy"
                                                                            List.append _1 [_3] 
                   )
# 335 ".\Parser.fsy"
                 : 'gentype_term_statement_list));
# 2922 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_no_dot_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 337 ".\Parser.fsy"
                                                                            SLet { Matcher = _2; Body = [] } 
                   )
# 337 ".\Parser.fsy"
                 : 'gentype_term_statement));
# 2933 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_no_dot_pattern_expr_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 338 ".\Parser.fsy"
                                                                                         SLet { Matcher = _2; Body = _4 } 
                   )
# 338 ".\Parser.fsy"
                 : 'gentype_term_statement));
# 2945 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 341 ".\Parser.fsy"
                                                              SExpression (_1) 
                   )
# 341 ".\Parser.fsy"
                 : 'gentype_term_statement));
# 2956 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 348 ".\Parser.fsy"
                                                            [_1] 
                   )
# 348 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 2967 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_record_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 349 ".\Parser.fsy"
                                                     _1 
                   )
# 349 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 2978 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tuple_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 350 ".\Parser.fsy"
                                                    _1 
                   )
# 350 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 2989 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 351 ".\Parser.fsy"
                                                              List.append _1 [_2] 
                   )
# 351 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 3001 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_record_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 352 ".\Parser.fsy"
                                                                     List.append _1 _2 
                   )
# 352 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 3013 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_tuple_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 353 ".\Parser.fsy"
                                                                     List.append _1 _2 
                   )
# 353 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 3025 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 355 ".\Parser.fsy"
                                            [] 
                   )
# 355 ".\Parser.fsy"
                 : 'gentype_simple_expr));
# 3035 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 356 ".\Parser.fsy"
                                                    _1 
                   )
# 356 ".\Parser.fsy"
                 : 'gentype_simple_expr));
# 3046 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 360 ".\Parser.fsy"
                                                      EStatementBlock (_1) 
                   )
# 360 ".\Parser.fsy"
                 : 'gentype_word));
# 3057 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handle_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 361 ".\Parser.fsy"
                                            _1 
                   )
# 361 ".\Parser.fsy"
                 : 'gentype_word));
# 3068 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_inject_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 362 ".\Parser.fsy"
                                            _1 
                   )
# 362 ".\Parser.fsy"
                 : 'gentype_word));
# 3079 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 363 ".\Parser.fsy"
                                           _1 
                   )
# 363 ".\Parser.fsy"
                 : 'gentype_word));
# 3090 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_if_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 364 ".\Parser.fsy"
                                         _1 
                   )
# 364 ".\Parser.fsy"
                 : 'gentype_word));
# 3101 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_switch_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 365 ".\Parser.fsy"
                                            _1 
                   )
# 365 ".\Parser.fsy"
                 : 'gentype_word));
# 3112 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_when_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 366 ".\Parser.fsy"
                                          _1 
                   )
# 366 ".\Parser.fsy"
                 : 'gentype_word));
# 3123 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_while_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 367 ".\Parser.fsy"
                                           _1 
                   )
# 367 ".\Parser.fsy"
                 : 'gentype_word));
# 3134 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_for_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 368 ".\Parser.fsy"
                                          _1 
                   )
# 368 ".\Parser.fsy"
                 : 'gentype_word));
# 3145 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 369 ".\Parser.fsy"
                                                EFunctionLiteral (_1) 
                   )
# 369 ".\Parser.fsy"
                 : 'gentype_word));
# 3156 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 375 ".\Parser.fsy"
                                                 EExtension (_2) 
                   )
# 375 ".\Parser.fsy"
                 : 'gentype_word));
# 3167 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 376 ".\Parser.fsy"
                                                 ESelect (false, _2) 
                   )
# 376 ".\Parser.fsy"
                 : 'gentype_word));
# 3178 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 377 ".\Parser.fsy"
                                                ESelect (true, _2) 
                   )
# 377 ".\Parser.fsy"
                 : 'gentype_word));
# 3189 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_variant_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 379 ".\Parser.fsy"
                                               _1 
                   )
# 379 ".\Parser.fsy"
                 : 'gentype_word));
# 3200 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_case_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 380 ".\Parser.fsy"
                                          _1 
                   )
# 380 ".\Parser.fsy"
                 : 'gentype_word));
# 3211 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 381 ".\Parser.fsy"
                                                           EWithState (_2) 
                   )
# 381 ".\Parser.fsy"
                 : 'gentype_word));
# 3222 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_permission in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 382 ".\Parser.fsy"
                                           _1 
                   )
# 382 ".\Parser.fsy"
                 : 'gentype_word));
# 3233 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 383 ".\Parser.fsy"
                                       ETrust 
                   )
# 383 ".\Parser.fsy"
                 : 'gentype_word));
# 3243 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 384 ".\Parser.fsy"
                                          EDistrust 
                   )
# 384 ".\Parser.fsy"
                 : 'gentype_word));
# 3253 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 385 ".\Parser.fsy"
                                       EAudit 
                   )
# 385 ".\Parser.fsy"
                 : 'gentype_word));
# 3263 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 386 ".\Parser.fsy"
                                         ENewRef 
                   )
# 386 ".\Parser.fsy"
                 : 'gentype_word));
# 3273 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 387 ".\Parser.fsy"
                                         EGetRef 
                   )
# 387 ".\Parser.fsy"
                 : 'gentype_word));
# 3283 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 388 ".\Parser.fsy"
                                         EPutRef 
                   )
# 388 ".\Parser.fsy"
                 : 'gentype_word));
# 3293 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 389 ".\Parser.fsy"
                                        EUntag 
                   )
# 389 ".\Parser.fsy"
                 : 'gentype_word));
# 3303 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 392 ".\Parser.fsy"
                                     EDo 
                   )
# 392 ".\Parser.fsy"
                 : 'gentype_word));
# 3313 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 394 ".\Parser.fsy"
                                       ETrue 
                   )
# 394 ".\Parser.fsy"
                 : 'gentype_word));
# 3323 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 395 ".\Parser.fsy"
                                       EFalse 
                   )
# 395 ".\Parser.fsy"
                 : 'gentype_word));
# 3333 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 396 ".\Parser.fsy"
                                         EInteger (_1) 
                   )
# 396 ".\Parser.fsy"
                 : 'gentype_word));
# 3344 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> DecimalLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 397 ".\Parser.fsy"
                                         EDecimal (_1) 
                   )
# 397 ".\Parser.fsy"
                 : 'gentype_word));
# 3355 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 398 ".\Parser.fsy"
                                        EString (_1) 
                   )
# 398 ".\Parser.fsy"
                 : 'gentype_word));
# 3366 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  Identifier  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 399 ".\Parser.fsy"
                                           EIdentifier (_1) 
                   )
# 399 ".\Parser.fsy"
                 : 'gentype_word));
# 3377 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_term_statement_block in
            let _7 = parseState.GetInput(7) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 402 ".\Parser.fsy"
                           EWithPermission (_3, _5, _7) 
                   )
# 402 ".\Parser.fsy"
                 : 'gentype_permission));
# 3390 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_term_statement_block in
            let _7 = parseState.GetInput(7) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 404 ".\Parser.fsy"
                           EIfPermission (_3, _5, _7) 
                   )
# 404 ".\Parser.fsy"
                 : 'gentype_permission));
# 3403 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_handler_list in
            let _7 = parseState.GetInput(7) :?> 'gentype_return in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 407 ".\Parser.fsy"
                           EHandle (_2, _3, _6, _7) 
                   )
# 407 ".\Parser.fsy"
                 : 'gentype_handle_word));
# 3417 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_handler_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 409 ".\Parser.fsy"
                           EHandle (_2, _3, _6, []) 
                   )
# 409 ".\Parser.fsy"
                 : 'gentype_handle_word));
# 3430 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?>  Identifier  in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 411 ".\Parser.fsy"
                                                                              { Name = _2; Params = _3; Body = _5; } 
                   )
# 411 ".\Parser.fsy"
                 : 'gentype_handler));
# 3443 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 414 ".\Parser.fsy"
                          _4 
                   )
# 414 ".\Parser.fsy"
                 : 'gentype_return));
# 3454 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_no_dot_pattern_expr_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 416 ".\Parser.fsy"
                             [EStatementBlock([SLet { Matcher = _3; Body = [] }; SExpression(_5)])] 
                   )
# 416 ".\Parser.fsy"
                 : 'gentype_return));
# 3466 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 418 ".\Parser.fsy"
                                         [] 
                   )
# 418 ".\Parser.fsy"
                 : 'gentype_param_list));
# 3476 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_param_list in
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 419 ".\Parser.fsy"
                                                     List.append _1 [_2] 
                   )
# 419 ".\Parser.fsy"
                 : 'gentype_param_list));
# 3488 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 421 ".\Parser.fsy"
                                           [] 
                   )
# 421 ".\Parser.fsy"
                 : 'gentype_handler_list));
# 3498 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handler_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_handler in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 422 ".\Parser.fsy"
                                                  List.append _1 [_2] 
                   )
# 422 ".\Parser.fsy"
                 : 'gentype_handler_list));
# 3510 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_eff_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 424 ".\Parser.fsy"
                                                                          EInject (_2, _3) 
                   )
# 424 ".\Parser.fsy"
                 : 'gentype_inject_word));
# 3522 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 426 ".\Parser.fsy"
                                                  [_1] 
                   )
# 426 ".\Parser.fsy"
                 : 'gentype_eff_list));
# 3533 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _2 = parseState.GetInput(2) :?> 'gentype_eff_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 427 ".\Parser.fsy"
                                                   _1 :: _2 
                   )
# 427 ".\Parser.fsy"
                 : 'gentype_eff_list));
# 3545 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_match_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 429 ".\Parser.fsy"
                                                                                    EMatch (_3, []) 
                   )
# 429 ".\Parser.fsy"
                 : 'gentype_match_word));
# 3556 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_match_clause_list in
            let _7 = parseState.GetInput(7) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 430 ".\Parser.fsy"
                                                                                                  EMatch (_3, _7) 
                   )
# 430 ".\Parser.fsy"
                 : 'gentype_match_word));
# 3568 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 432 ".\Parser.fsy"
                                                            [_1] 
                   )
# 432 ".\Parser.fsy"
                 : 'gentype_match_clause_list));
# 3579 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_clause_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_match_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 433 ".\Parser.fsy"
                                                              List.append _1 [_2] 
                   )
# 433 ".\Parser.fsy"
                 : 'gentype_match_clause_list));
# 3591 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 435 ".\Parser.fsy"
                                                                               { Matcher = _2; Body = _4 } 
                   )
# 435 ".\Parser.fsy"
                 : 'gentype_match_clause));
# 3603 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 437 ".\Parser.fsy"
                                                                                                    EIf (_2, _4, _6) 
                   )
# 437 ".\Parser.fsy"
                 : 'gentype_if_word));
# 3616 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_switch_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 439 ".\Parser.fsy"
                                                                               switchClausesToIfs _3 
                   )
# 439 ".\Parser.fsy"
                 : 'gentype_switch_word));
# 3627 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 441 ".\Parser.fsy"
                                                                               [_4] 
                   )
# 441 ".\Parser.fsy"
                 : 'gentype_switch_clause_list));
# 3638 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_switch_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 442 ".\Parser.fsy"
                                                                                      _2 :: _4 :: _5 
                   )
# 442 ".\Parser.fsy"
                 : 'gentype_switch_clause_list));
# 3651 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 444 ".\Parser.fsy"
                                                                              EIf (_2, _4, []) 
                   )
# 444 ".\Parser.fsy"
                 : 'gentype_when_word));
# 3663 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 446 ".\Parser.fsy"
                                                                                EWhile (_2, _4) 
                   )
# 446 ".\Parser.fsy"
                 : 'gentype_while_word));
# 3675 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_parallel_sequences in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 449 ".\Parser.fsy"
                          EForEffect (_2, _4) 
                   )
# 449 ".\Parser.fsy"
                 : 'gentype_for_word));
# 3687 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_parallel_sequences in
            let _4 = parseState.GetInput(4) :?> 'gentype_for_results in
            let _6 = parseState.GetInput(6) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 451 ".\Parser.fsy"
                           EForComprehension (_4, _2, _6) 
                   )
# 451 ".\Parser.fsy"
                 : 'gentype_for_word));
# 3700 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_parallel_sequences in
            let _4 = parseState.GetInput(4) :?> 'gentype_fold_inits in
            let _6 = parseState.GetInput(6) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 453 ".\Parser.fsy"
                           EForFold (_4, _2, _6) 
                   )
# 453 ".\Parser.fsy"
                 : 'gentype_for_word));
# 3713 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_for_result in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 455 ".\Parser.fsy"
                                                    [_1] 
                   )
# 455 ".\Parser.fsy"
                 : 'gentype_for_results));
# 3724 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_for_result in
            let _3 = parseState.GetInput(3) :?> 'gentype_for_results in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 456 ".\Parser.fsy"
                                                         _1 :: _3 
                   )
# 456 ".\Parser.fsy"
                 : 'gentype_for_results));
# 3736 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 458 ".\Parser.fsy"
                                           FForTuple 
                   )
# 458 ".\Parser.fsy"
                 : 'gentype_for_result));
# 3746 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 459 ".\Parser.fsy"
                                    FForList 
                   )
# 459 ".\Parser.fsy"
                 : 'gentype_for_result));
# 3756 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 460 ".\Parser.fsy"
                                      FForVector 
                   )
# 460 ".\Parser.fsy"
                 : 'gentype_for_result));
# 3766 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 462 ".\Parser.fsy"
                                            FForTuple 
                   )
# 462 ".\Parser.fsy"
                 : 'gentype_for_sequence));
# 3776 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 463 ".\Parser.fsy"
                                   FForList 
                   )
# 463 ".\Parser.fsy"
                 : 'gentype_for_sequence));
# 3786 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 464 ".\Parser.fsy"
                                    FForVector 
                   )
# 464 ".\Parser.fsy"
                 : 'gentype_for_sequence));
# 3796 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_for_sequence in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 467 ".\Parser.fsy"
                             [{ Name = _1; SeqType = _3; Assigned = _4 }] 
                   )
# 467 ".\Parser.fsy"
                 : 'gentype_parallel_sequences));
# 3809 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_for_sequence in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_parallel_sequences in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 469 ".\Parser.fsy"
                                { Name = _1; SeqType = _3; Assigned = _4 } :: _6 
                   )
# 469 ".\Parser.fsy"
                 : 'gentype_parallel_sequences));
# 3823 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 472 ".\Parser.fsy"
                           [{ Name = _1; Assigned = _3 }] 
                   )
# 472 ".\Parser.fsy"
                 : 'gentype_fold_inits));
# 3835 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_fold_inits in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 474 ".\Parser.fsy"
                              { Name = _1; Assigned = _3; } :: _5 
                   )
# 474 ".\Parser.fsy"
                 : 'gentype_fold_inits));
# 3848 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 476 ".\Parser.fsy"
                                                                      _2 
                   )
# 476 ".\Parser.fsy"
                 : 'gentype_function_literal));
# 3859 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_var_only_pattern_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 478 ".\Parser.fsy"
                             [EStatementBlock([SLet { Matcher = _2; Body = [] }; SExpression(_4)])] 
                   )
# 478 ".\Parser.fsy"
                 : 'gentype_function_literal));
# 3871 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 480 ".\Parser.fsy"
                                                                  [_1] 
                   )
# 480 ".\Parser.fsy"
                 : 'gentype_lit_expr_list));
# 3882 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_lit_expr_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 481 ".\Parser.fsy"
                                                                        List.append _1 [_3] 
                   )
# 481 ".\Parser.fsy"
                 : 'gentype_lit_expr_list));
# 3894 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 483 ".\Parser.fsy"
                                                                         [ETupleLiteral []] 
                   )
# 483 ".\Parser.fsy"
                 : 'gentype_tuple_literal));
# 3904 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_lit_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 484 ".\Parser.fsy"
                                                                           ETupleLiteral [] :: expandTupleConsSyntax _3 
                   )
# 484 ".\Parser.fsy"
                 : 'gentype_tuple_literal));
# 3915 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 485 ".\Parser.fsy"
                                                                                       [ETupleLiteral _4] 
                   )
# 485 ".\Parser.fsy"
                 : 'gentype_tuple_literal));
# 3926 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_non_empty_simple_expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_lit_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 486 ".\Parser.fsy"
                                                                                                      ETupleLiteral _4 :: expandTupleConsSyntax _6 
                   )
# 486 ".\Parser.fsy"
                 : 'gentype_tuple_literal));
# 3938 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_lit_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 488 ".\Parser.fsy"
                                                                                    EListLiteral ([], _3) 
                   )
# 488 ".\Parser.fsy"
                 : 'gentype_list_literal));
# 3949 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_non_empty_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_lit_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 489 ".\Parser.fsy"
                                                                                               EListLiteral (_3, _5) 
                   )
# 489 ".\Parser.fsy"
                 : 'gentype_list_literal));
# 3961 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_non_empty_simple_expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 497 ".\Parser.fsy"
                                                                                                              ERecordLiteral (_4) :: expandFieldSyntax _6 
                   )
# 497 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 3973 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 498 ".\Parser.fsy"
                                                                                         [ERecordLiteral (_4)] 
                   )
# 498 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 3984 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 499 ".\Parser.fsy"
                                                                          ERecordLiteral ([]) :: expandFieldSyntax _3 
                   )
# 499 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 3995 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 500 ".\Parser.fsy"
                                                                  [ERecordLiteral ([])] 
                   )
# 500 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 4005 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_field in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 502 ".\Parser.fsy"
                                                                       EVariantLiteral (_3) 
                   )
# 502 ".\Parser.fsy"
                 : 'gentype_variant_literal));
# 4016 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?>  List<CaseClause>  in
            let _7 = parseState.GetInput(7) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 504 ".\Parser.fsy"
                                                                                                     ECase (_3, _7) 
                   )
# 504 ".\Parser.fsy"
                 : 'gentype_case_word));
# 4028 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_case_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 506 ".\Parser.fsy"
                                                          [_1] 
                   )
# 506 ".\Parser.fsy"
                 :  List<CaseClause> ));
# 4039 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  List<CaseClause>  in
            let _2 = parseState.GetInput(2) :?> 'gentype_case_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 507 ".\Parser.fsy"
                                                           List.append _1 [_2] 
                   )
# 507 ".\Parser.fsy"
                 :  List<CaseClause> ));
# 4051 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 509 ".\Parser.fsy"
                                                                       { Tag = _2; Body = _4 } 
                   )
# 509 ".\Parser.fsy"
                 : 'gentype_case_clause));
# 4063 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_field in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 511 ".\Parser.fsy"
                                              [_1] 
                   )
# 511 ".\Parser.fsy"
                 : 'gentype_field_list));
# 4074 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_field in
            let _3 = parseState.GetInput(3) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 512 ".\Parser.fsy"
                                                     _1 :: _3 
                   )
# 512 ".\Parser.fsy"
                 : 'gentype_field_list));
# 4086 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 514 ".\Parser.fsy"
                                                             (_1, _3) 
                   )
# 514 ".\Parser.fsy"
                 : 'gentype_field));
# 4098 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 516 ".\Parser.fsy"
                                                   sIdentifier (List.take (List.length _1 - 1) _1) (List.last _1) 
                   )
# 516 ".\Parser.fsy"
                 :  Identifier ));
# 4109 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_qualified_ctor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 518 ".\Parser.fsy"
                                                        sIdentifier (List.take (List.length _1 - 1) _1) (List.last _1) 
                   )
# 518 ".\Parser.fsy"
                 : 'gentype_type_identifier));
# 4120 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 520 ".\Parser.fsy"
                                                          [_1] 
                   )
# 520 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 4131 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 521 ".\Parser.fsy"
                                               [_1] 
                   )
# 521 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 4142 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 522 ".\Parser.fsy"
                                                   [_1] 
                   )
# 522 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 4153 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 523 ".\Parser.fsy"
                                                    [_1] 
                   )
# 523 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 4164 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 524 ".\Parser.fsy"
                                                                      _1 :: _3 
                   )
# 524 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 4176 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 526 ".\Parser.fsy"
                                                        [_1] 
                   )
# 526 ".\Parser.fsy"
                 : 'gentype_qualified_ctor));
# 4187 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 527 ".\Parser.fsy"
                                                   [_1] 
                   )
# 527 ".\Parser.fsy"
                 : 'gentype_qualified_ctor));
# 4198 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 528 ".\Parser.fsy"
                                                    [_1] 
                   )
# 528 ".\Parser.fsy"
                 : 'gentype_qualified_ctor));
# 4209 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_qualified_ctor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 529 ".\Parser.fsy"
                                                                      _1 :: _3 
                   )
# 529 ".\Parser.fsy"
                 : 'gentype_qualified_ctor));
# 4221 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 533 ".\Parser.fsy"
                                                                      ind _1 SEnd 
                   )
# 533 ".\Parser.fsy"
                 : 'gentype_no_dot_pattern_expr_list));
# 4232 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_no_dot_pattern_expr_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 534 ".\Parser.fsy"
                                                                      ind _2 _1 
                   )
# 534 ".\Parser.fsy"
                 : 'gentype_no_dot_pattern_expr_list));
# 4244 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 536 ".\Parser.fsy"
                                                        SEnd 
                   )
# 536 ".\Parser.fsy"
                 : 'gentype_var_only_pattern_list));
# 4254 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _2 = parseState.GetInput(2) :?> 'gentype_var_only_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 537 ".\Parser.fsy"
                                                                 ind (PNamed (_1, PWildcard)) _2 
                   )
# 537 ".\Parser.fsy"
                 : 'gentype_var_only_pattern_list));
# 4266 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 539 ".\Parser.fsy"
                                                            ind _1 SEnd 
                   )
# 539 ".\Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 4277 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 540 ".\Parser.fsy"
                                                       dot _1 SEnd 
                   )
# 540 ".\Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 4288 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 541 ".\Parser.fsy"
                                                               ind _2 _1 
                   )
# 541 ".\Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 4300 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 543 ".\Parser.fsy"
                                                                                  [(_1, _3)] 
                   )
# 543 ".\Parser.fsy"
                 : 'gentype_field_pattern_list));
# 4312 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_field_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 544 ".\Parser.fsy"
                                                                                        (_1, _3) :: _5 
                   )
# 544 ".\Parser.fsy"
                 : 'gentype_field_pattern_list));
# 4325 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 546 ".\Parser.fsy"
                                                      PTrue 
                   )
# 546 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4335 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 547 ".\Parser.fsy"
                                             PFalse 
                   )
# 547 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4345 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 548 ".\Parser.fsy"
                                               PInteger (_1) 
                   )
# 548 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4356 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> DecimalLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 549 ".\Parser.fsy"
                                               PDecimal (_1) 
                   )
# 549 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4367 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 550 ".\Parser.fsy"
                                              PString (_1) 
                   )
# 550 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4378 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 551 ".\Parser.fsy"
                                                 PWildcard 
                   )
# 551 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4388 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 552 ".\Parser.fsy"
                                                      PRef (_2) 
                   )
# 552 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4399 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 553 ".\Parser.fsy"
                                                 PNamed (_1, PWildcard) 
                   )
# 553 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4410 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 554 ".\Parser.fsy"
                                                              PNamed (_1, _3) 
                   )
# 554 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4422 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_identifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 556 ".\Parser.fsy"
                            PConstructor (_1, SEnd) 
                   )
# 556 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4433 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_type_identifier in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 558 ".\Parser.fsy"
                            PConstructor (_2, _3) 
                   )
# 558 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4445 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tuple_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 559 ".\Parser.fsy"
                                                   _1 
                   )
# 559 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4456 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_list_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 560 ".\Parser.fsy"
                                                   _1 
                   )
# 560 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4467 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_vector_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 561 ".\Parser.fsy"
                                                    _1 
                   )
# 561 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4478 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_slice_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 562 ".\Parser.fsy"
                                                   _1 
                   )
# 562 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4489 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_record_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 563 ".\Parser.fsy"
                                                    _1 
                   )
# 563 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4500 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 565 ".\Parser.fsy"
                                                                                 PTuple (_3) 
                   )
# 565 ".\Parser.fsy"
                 : 'gentype_tuple_pattern));
# 4511 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 567 ".\Parser.fsy"
                                                                               PList (_3) 
                   )
# 567 ".\Parser.fsy"
                 : 'gentype_list_pattern));
# 4522 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 569 ".\Parser.fsy"
                                                                                  PVector (_3) 
                   )
# 569 ".\Parser.fsy"
                 : 'gentype_vector_pattern));
# 4533 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 571 ".\Parser.fsy"
                                                                                 PSlice (_3) 
                   )
# 571 ".\Parser.fsy"
                 : 'gentype_slice_pattern));
# 4544 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_field_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 573 ".\Parser.fsy"
                                                                                   PRecord (_3) 
                   )
# 573 ".\Parser.fsy"
                 : 'gentype_record_pattern));
|]
# 4556 "Parser.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 127;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let unit lexer lexbuf :  Unit  =
    engine lexer lexbuf 0 :?> _
