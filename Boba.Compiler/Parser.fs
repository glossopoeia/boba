// Implementation file for parser generated by fsyacc
module Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "./Parser.fsy"


open Boba.Compiler.Syntax
open Boba.Core.DotSeq
open Boba.Core.Types


# 14 "Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | IS
  | TRUE
  | FALSE
  | TUPLE
  | LIST
  | VECTOR
  | SLICE
  | DICTIONARY
  | CASE
  | RECORD
  | VARIANT
  | FOR
  | BREAK
  | FINAL
  | FILL
  | LENGTH
  | RESULT
  | IF
  | WHEN
  | WHILE
  | THEN
  | ELSE
  | DO
  | MATCH
  | INJECT
  | WITH
  | AFTER
  | HANDLE
  | UNTAG
  | PUT_REF
  | GET_REF
  | NEW_REF
  | WITH_STATE
  | WITH_PERMISSION
  | FUNCTION
  | LOCAL
  | LET
  | IS_ROUGHLY
  | IS_NOT
  | SATISFIES
  | VIOLATES
  | TEST
  | LAW
  | EXHAUSTIVE
  | SYNONYM
  | TAG
  | EFFECT
  | CLASS
  | INSTANCE
  | DERIVING
  | RULE
  | CHECK
  | PATTERN
  | RECURSIVE
  | DATA
  | MAIN
  | EXPORT
  | FROM
  | AS
  | IMPORT
  | REF
  | UNDERSCORE
  | EQUALS
  | ELLIPSIS
  | BAR
  | DOUBLE_BAR
  | DOT
  | PLUS
  | MINUS
  | COLON
  | DOUBLE_COLON
  | COMMA
  | SEMICOLON
  | L_BIND
  | R_BIND
  | L_ARROW
  | R_ARROW
  | L_BRACKET
  | R_BRACKET
  | L_BRACE
  | R_BRACE
  | L_PAREN
  | R_PAREN
  | L_ANGLE
  | R_ANGLE
  | STRING of (StringLiteral)
  | DECIMAL of (DecimalLiteral)
  | INTEGER of (IntegerLiteral)
  | TEST_NAME of (Name)
  | PREDICATE_NAME of (Name)
  | OPERATOR_NAME of (Name)
  | BIG_NAME of (Name)
  | SMALL_NAME of (Name)
  | EOF
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_IS
    | TOKEN_TRUE
    | TOKEN_FALSE
    | TOKEN_TUPLE
    | TOKEN_LIST
    | TOKEN_VECTOR
    | TOKEN_SLICE
    | TOKEN_DICTIONARY
    | TOKEN_CASE
    | TOKEN_RECORD
    | TOKEN_VARIANT
    | TOKEN_FOR
    | TOKEN_BREAK
    | TOKEN_FINAL
    | TOKEN_FILL
    | TOKEN_LENGTH
    | TOKEN_RESULT
    | TOKEN_IF
    | TOKEN_WHEN
    | TOKEN_WHILE
    | TOKEN_THEN
    | TOKEN_ELSE
    | TOKEN_DO
    | TOKEN_MATCH
    | TOKEN_INJECT
    | TOKEN_WITH
    | TOKEN_AFTER
    | TOKEN_HANDLE
    | TOKEN_UNTAG
    | TOKEN_PUT_REF
    | TOKEN_GET_REF
    | TOKEN_NEW_REF
    | TOKEN_WITH_STATE
    | TOKEN_WITH_PERMISSION
    | TOKEN_FUNCTION
    | TOKEN_LOCAL
    | TOKEN_LET
    | TOKEN_IS_ROUGHLY
    | TOKEN_IS_NOT
    | TOKEN_SATISFIES
    | TOKEN_VIOLATES
    | TOKEN_TEST
    | TOKEN_LAW
    | TOKEN_EXHAUSTIVE
    | TOKEN_SYNONYM
    | TOKEN_TAG
    | TOKEN_EFFECT
    | TOKEN_CLASS
    | TOKEN_INSTANCE
    | TOKEN_DERIVING
    | TOKEN_RULE
    | TOKEN_CHECK
    | TOKEN_PATTERN
    | TOKEN_RECURSIVE
    | TOKEN_DATA
    | TOKEN_MAIN
    | TOKEN_EXPORT
    | TOKEN_FROM
    | TOKEN_AS
    | TOKEN_IMPORT
    | TOKEN_REF
    | TOKEN_UNDERSCORE
    | TOKEN_EQUALS
    | TOKEN_ELLIPSIS
    | TOKEN_BAR
    | TOKEN_DOUBLE_BAR
    | TOKEN_DOT
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_COLON
    | TOKEN_DOUBLE_COLON
    | TOKEN_COMMA
    | TOKEN_SEMICOLON
    | TOKEN_L_BIND
    | TOKEN_R_BIND
    | TOKEN_L_ARROW
    | TOKEN_R_ARROW
    | TOKEN_L_BRACKET
    | TOKEN_R_BRACKET
    | TOKEN_L_BRACE
    | TOKEN_R_BRACE
    | TOKEN_L_PAREN
    | TOKEN_R_PAREN
    | TOKEN_L_ANGLE
    | TOKEN_R_ANGLE
    | TOKEN_STRING
    | TOKEN_DECIMAL
    | TOKEN_INTEGER
    | TOKEN_TEST_NAME
    | TOKEN_PREDICATE_NAME
    | TOKEN_OPERATOR_NAME
    | TOKEN_BIG_NAME
    | TOKEN_SMALL_NAME
    | TOKEN_EOF
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startunit
    | NONTERM_unit
    | NONTERM_import_list
    | NONTERM_decl_list
    | NONTERM_main
    | NONTERM_import
    | NONTERM_import_path
    | NONTERM_remote
    | NONTERM_export
    | NONTERM_brace_names
    | NONTERM_name_list
    | NONTERM_name
    | NONTERM_declaration
    | NONTERM_function
    | NONTERM_function_list
    | NONTERM_datatype
    | NONTERM_datatype_list
    | NONTERM_constructor
    | NONTERM_constructor_list
    | NONTERM_effect
    | NONTERM_handler_template_list
    | NONTERM_handler_template
    | NONTERM_test
    | NONTERM_test_all
    | NONTERM_test_is
    | NONTERM_term_statement_block
    | NONTERM_term_statement_list
    | NONTERM_term_statement
    | NONTERM_local_function_list
    | NONTERM_local_function
    | NONTERM_simple_expr
    | NONTERM_simple_expr_list
    | NONTERM_word
    | NONTERM_with_permission
    | NONTERM_handle_word
    | NONTERM_handler
    | NONTERM_return
    | NONTERM_param_list
    | NONTERM_handler_list
    | NONTERM_inject_word
    | NONTERM_eff_list
    | NONTERM_match_word
    | NONTERM_match_clause_list
    | NONTERM_match_clause
    | NONTERM_if_word
    | NONTERM_when_word
    | NONTERM_while_word
    | NONTERM_function_literal
    | NONTERM_tuple_literal
    | NONTERM_list_literal
    | NONTERM_vector_literal
    | NONTERM_slice_literal
    | NONTERM_dictionary_literal
    | NONTERM_record_literal
    | NONTERM_variant_literal
    | NONTERM_case_word
    | NONTERM_case_clause_list
    | NONTERM_case_clause
    | NONTERM_field_list
    | NONTERM_field
    | NONTERM_identifier
    | NONTERM_qualified_name
    | NONTERM_qualified_ctor
    | NONTERM_no_dot_pattern_expr_list
    | NONTERM_pattern_expr_list
    | NONTERM_field_pattern_list
    | NONTERM_dict_pattern_list
    | NONTERM_pattern_expr
    | NONTERM_tuple_pattern
    | NONTERM_list_pattern
    | NONTERM_vector_pattern
    | NONTERM_slice_pattern
    | NONTERM_record_pattern
    | NONTERM_dict_pattern
    | NONTERM_fixed_size_term_expr
    | NONTERM_fixed_size_term_factor_list
    | NONTERM_fixed_size_term_factor

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | IS  -> 0 
  | TRUE  -> 1 
  | FALSE  -> 2 
  | TUPLE  -> 3 
  | LIST  -> 4 
  | VECTOR  -> 5 
  | SLICE  -> 6 
  | DICTIONARY  -> 7 
  | CASE  -> 8 
  | RECORD  -> 9 
  | VARIANT  -> 10 
  | FOR  -> 11 
  | BREAK  -> 12 
  | FINAL  -> 13 
  | FILL  -> 14 
  | LENGTH  -> 15 
  | RESULT  -> 16 
  | IF  -> 17 
  | WHEN  -> 18 
  | WHILE  -> 19 
  | THEN  -> 20 
  | ELSE  -> 21 
  | DO  -> 22 
  | MATCH  -> 23 
  | INJECT  -> 24 
  | WITH  -> 25 
  | AFTER  -> 26 
  | HANDLE  -> 27 
  | UNTAG  -> 28 
  | PUT_REF  -> 29 
  | GET_REF  -> 30 
  | NEW_REF  -> 31 
  | WITH_STATE  -> 32 
  | WITH_PERMISSION  -> 33 
  | FUNCTION  -> 34 
  | LOCAL  -> 35 
  | LET  -> 36 
  | IS_ROUGHLY  -> 37 
  | IS_NOT  -> 38 
  | SATISFIES  -> 39 
  | VIOLATES  -> 40 
  | TEST  -> 41 
  | LAW  -> 42 
  | EXHAUSTIVE  -> 43 
  | SYNONYM  -> 44 
  | TAG  -> 45 
  | EFFECT  -> 46 
  | CLASS  -> 47 
  | INSTANCE  -> 48 
  | DERIVING  -> 49 
  | RULE  -> 50 
  | CHECK  -> 51 
  | PATTERN  -> 52 
  | RECURSIVE  -> 53 
  | DATA  -> 54 
  | MAIN  -> 55 
  | EXPORT  -> 56 
  | FROM  -> 57 
  | AS  -> 58 
  | IMPORT  -> 59 
  | REF  -> 60 
  | UNDERSCORE  -> 61 
  | EQUALS  -> 62 
  | ELLIPSIS  -> 63 
  | BAR  -> 64 
  | DOUBLE_BAR  -> 65 
  | DOT  -> 66 
  | PLUS  -> 67 
  | MINUS  -> 68 
  | COLON  -> 69 
  | DOUBLE_COLON  -> 70 
  | COMMA  -> 71 
  | SEMICOLON  -> 72 
  | L_BIND  -> 73 
  | R_BIND  -> 74 
  | L_ARROW  -> 75 
  | R_ARROW  -> 76 
  | L_BRACKET  -> 77 
  | R_BRACKET  -> 78 
  | L_BRACE  -> 79 
  | R_BRACE  -> 80 
  | L_PAREN  -> 81 
  | R_PAREN  -> 82 
  | L_ANGLE  -> 83 
  | R_ANGLE  -> 84 
  | STRING _ -> 85 
  | DECIMAL _ -> 86 
  | INTEGER _ -> 87 
  | TEST_NAME _ -> 88 
  | PREDICATE_NAME _ -> 89 
  | OPERATOR_NAME _ -> 90 
  | BIG_NAME _ -> 91 
  | SMALL_NAME _ -> 92 
  | EOF  -> 93 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_IS 
  | 1 -> TOKEN_TRUE 
  | 2 -> TOKEN_FALSE 
  | 3 -> TOKEN_TUPLE 
  | 4 -> TOKEN_LIST 
  | 5 -> TOKEN_VECTOR 
  | 6 -> TOKEN_SLICE 
  | 7 -> TOKEN_DICTIONARY 
  | 8 -> TOKEN_CASE 
  | 9 -> TOKEN_RECORD 
  | 10 -> TOKEN_VARIANT 
  | 11 -> TOKEN_FOR 
  | 12 -> TOKEN_BREAK 
  | 13 -> TOKEN_FINAL 
  | 14 -> TOKEN_FILL 
  | 15 -> TOKEN_LENGTH 
  | 16 -> TOKEN_RESULT 
  | 17 -> TOKEN_IF 
  | 18 -> TOKEN_WHEN 
  | 19 -> TOKEN_WHILE 
  | 20 -> TOKEN_THEN 
  | 21 -> TOKEN_ELSE 
  | 22 -> TOKEN_DO 
  | 23 -> TOKEN_MATCH 
  | 24 -> TOKEN_INJECT 
  | 25 -> TOKEN_WITH 
  | 26 -> TOKEN_AFTER 
  | 27 -> TOKEN_HANDLE 
  | 28 -> TOKEN_UNTAG 
  | 29 -> TOKEN_PUT_REF 
  | 30 -> TOKEN_GET_REF 
  | 31 -> TOKEN_NEW_REF 
  | 32 -> TOKEN_WITH_STATE 
  | 33 -> TOKEN_WITH_PERMISSION 
  | 34 -> TOKEN_FUNCTION 
  | 35 -> TOKEN_LOCAL 
  | 36 -> TOKEN_LET 
  | 37 -> TOKEN_IS_ROUGHLY 
  | 38 -> TOKEN_IS_NOT 
  | 39 -> TOKEN_SATISFIES 
  | 40 -> TOKEN_VIOLATES 
  | 41 -> TOKEN_TEST 
  | 42 -> TOKEN_LAW 
  | 43 -> TOKEN_EXHAUSTIVE 
  | 44 -> TOKEN_SYNONYM 
  | 45 -> TOKEN_TAG 
  | 46 -> TOKEN_EFFECT 
  | 47 -> TOKEN_CLASS 
  | 48 -> TOKEN_INSTANCE 
  | 49 -> TOKEN_DERIVING 
  | 50 -> TOKEN_RULE 
  | 51 -> TOKEN_CHECK 
  | 52 -> TOKEN_PATTERN 
  | 53 -> TOKEN_RECURSIVE 
  | 54 -> TOKEN_DATA 
  | 55 -> TOKEN_MAIN 
  | 56 -> TOKEN_EXPORT 
  | 57 -> TOKEN_FROM 
  | 58 -> TOKEN_AS 
  | 59 -> TOKEN_IMPORT 
  | 60 -> TOKEN_REF 
  | 61 -> TOKEN_UNDERSCORE 
  | 62 -> TOKEN_EQUALS 
  | 63 -> TOKEN_ELLIPSIS 
  | 64 -> TOKEN_BAR 
  | 65 -> TOKEN_DOUBLE_BAR 
  | 66 -> TOKEN_DOT 
  | 67 -> TOKEN_PLUS 
  | 68 -> TOKEN_MINUS 
  | 69 -> TOKEN_COLON 
  | 70 -> TOKEN_DOUBLE_COLON 
  | 71 -> TOKEN_COMMA 
  | 72 -> TOKEN_SEMICOLON 
  | 73 -> TOKEN_L_BIND 
  | 74 -> TOKEN_R_BIND 
  | 75 -> TOKEN_L_ARROW 
  | 76 -> TOKEN_R_ARROW 
  | 77 -> TOKEN_L_BRACKET 
  | 78 -> TOKEN_R_BRACKET 
  | 79 -> TOKEN_L_BRACE 
  | 80 -> TOKEN_R_BRACE 
  | 81 -> TOKEN_L_PAREN 
  | 82 -> TOKEN_R_PAREN 
  | 83 -> TOKEN_L_ANGLE 
  | 84 -> TOKEN_R_ANGLE 
  | 85 -> TOKEN_STRING 
  | 86 -> TOKEN_DECIMAL 
  | 87 -> TOKEN_INTEGER 
  | 88 -> TOKEN_TEST_NAME 
  | 89 -> TOKEN_PREDICATE_NAME 
  | 90 -> TOKEN_OPERATOR_NAME 
  | 91 -> TOKEN_BIG_NAME 
  | 92 -> TOKEN_SMALL_NAME 
  | 93 -> TOKEN_EOF 
  | 96 -> TOKEN_end_of_input
  | 94 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startunit 
    | 1 -> NONTERM_unit 
    | 2 -> NONTERM_unit 
    | 3 -> NONTERM_import_list 
    | 4 -> NONTERM_import_list 
    | 5 -> NONTERM_decl_list 
    | 6 -> NONTERM_decl_list 
    | 7 -> NONTERM_main 
    | 8 -> NONTERM_import 
    | 9 -> NONTERM_import 
    | 10 -> NONTERM_import_path 
    | 11 -> NONTERM_import_path 
    | 12 -> NONTERM_remote 
    | 13 -> NONTERM_export 
    | 14 -> NONTERM_brace_names 
    | 15 -> NONTERM_name_list 
    | 16 -> NONTERM_name_list 
    | 17 -> NONTERM_name 
    | 18 -> NONTERM_name 
    | 19 -> NONTERM_name 
    | 20 -> NONTERM_declaration 
    | 21 -> NONTERM_declaration 
    | 22 -> NONTERM_declaration 
    | 23 -> NONTERM_declaration 
    | 24 -> NONTERM_declaration 
    | 25 -> NONTERM_declaration 
    | 26 -> NONTERM_declaration 
    | 27 -> NONTERM_declaration 
    | 28 -> NONTERM_declaration 
    | 29 -> NONTERM_function 
    | 30 -> NONTERM_function 
    | 31 -> NONTERM_function 
    | 32 -> NONTERM_function 
    | 33 -> NONTERM_function_list 
    | 34 -> NONTERM_function_list 
    | 35 -> NONTERM_datatype 
    | 36 -> NONTERM_datatype_list 
    | 37 -> NONTERM_datatype_list 
    | 38 -> NONTERM_constructor 
    | 39 -> NONTERM_constructor_list 
    | 40 -> NONTERM_constructor_list 
    | 41 -> NONTERM_effect 
    | 42 -> NONTERM_handler_template_list 
    | 43 -> NONTERM_handler_template_list 
    | 44 -> NONTERM_handler_template 
    | 45 -> NONTERM_handler_template 
    | 46 -> NONTERM_test 
    | 47 -> NONTERM_test 
    | 48 -> NONTERM_test_all 
    | 49 -> NONTERM_test_all 
    | 50 -> NONTERM_test_all 
    | 51 -> NONTERM_test_all 
    | 52 -> NONTERM_test_is 
    | 53 -> NONTERM_test_is 
    | 54 -> NONTERM_term_statement_block 
    | 55 -> NONTERM_term_statement_list 
    | 56 -> NONTERM_term_statement_list 
    | 57 -> NONTERM_term_statement 
    | 58 -> NONTERM_term_statement 
    | 59 -> NONTERM_term_statement 
    | 60 -> NONTERM_term_statement 
    | 61 -> NONTERM_term_statement 
    | 62 -> NONTERM_local_function_list 
    | 63 -> NONTERM_local_function_list 
    | 64 -> NONTERM_local_function 
    | 65 -> NONTERM_simple_expr 
    | 66 -> NONTERM_simple_expr 
    | 67 -> NONTERM_simple_expr_list 
    | 68 -> NONTERM_simple_expr_list 
    | 69 -> NONTERM_word 
    | 70 -> NONTERM_word 
    | 71 -> NONTERM_word 
    | 72 -> NONTERM_word 
    | 73 -> NONTERM_word 
    | 74 -> NONTERM_word 
    | 75 -> NONTERM_word 
    | 76 -> NONTERM_word 
    | 77 -> NONTERM_word 
    | 78 -> NONTERM_word 
    | 79 -> NONTERM_word 
    | 80 -> NONTERM_word 
    | 81 -> NONTERM_word 
    | 82 -> NONTERM_word 
    | 83 -> NONTERM_word 
    | 84 -> NONTERM_word 
    | 85 -> NONTERM_word 
    | 86 -> NONTERM_word 
    | 87 -> NONTERM_word 
    | 88 -> NONTERM_word 
    | 89 -> NONTERM_word 
    | 90 -> NONTERM_word 
    | 91 -> NONTERM_word 
    | 92 -> NONTERM_word 
    | 93 -> NONTERM_word 
    | 94 -> NONTERM_word 
    | 95 -> NONTERM_word 
    | 96 -> NONTERM_word 
    | 97 -> NONTERM_word 
    | 98 -> NONTERM_word 
    | 99 -> NONTERM_word 
    | 100 -> NONTERM_word 
    | 101 -> NONTERM_word 
    | 102 -> NONTERM_with_permission 
    | 103 -> NONTERM_handle_word 
    | 104 -> NONTERM_handle_word 
    | 105 -> NONTERM_handler 
    | 106 -> NONTERM_return 
    | 107 -> NONTERM_return 
    | 108 -> NONTERM_param_list 
    | 109 -> NONTERM_param_list 
    | 110 -> NONTERM_handler_list 
    | 111 -> NONTERM_handler_list 
    | 112 -> NONTERM_inject_word 
    | 113 -> NONTERM_eff_list 
    | 114 -> NONTERM_eff_list 
    | 115 -> NONTERM_match_word 
    | 116 -> NONTERM_match_word 
    | 117 -> NONTERM_match_clause_list 
    | 118 -> NONTERM_match_clause_list 
    | 119 -> NONTERM_match_clause 
    | 120 -> NONTERM_if_word 
    | 121 -> NONTERM_when_word 
    | 122 -> NONTERM_while_word 
    | 123 -> NONTERM_function_literal 
    | 124 -> NONTERM_function_literal 
    | 125 -> NONTERM_tuple_literal 
    | 126 -> NONTERM_tuple_literal 
    | 127 -> NONTERM_list_literal 
    | 128 -> NONTERM_list_literal 
    | 129 -> NONTERM_vector_literal 
    | 130 -> NONTERM_vector_literal 
    | 131 -> NONTERM_slice_literal 
    | 132 -> NONTERM_dictionary_literal 
    | 133 -> NONTERM_dictionary_literal 
    | 134 -> NONTERM_record_literal 
    | 135 -> NONTERM_record_literal 
    | 136 -> NONTERM_variant_literal 
    | 137 -> NONTERM_case_word 
    | 138 -> NONTERM_case_clause_list 
    | 139 -> NONTERM_case_clause_list 
    | 140 -> NONTERM_case_clause 
    | 141 -> NONTERM_field_list 
    | 142 -> NONTERM_field_list 
    | 143 -> NONTERM_field 
    | 144 -> NONTERM_identifier 
    | 145 -> NONTERM_identifier 
    | 146 -> NONTERM_qualified_name 
    | 147 -> NONTERM_qualified_name 
    | 148 -> NONTERM_qualified_name 
    | 149 -> NONTERM_qualified_name 
    | 150 -> NONTERM_qualified_name 
    | 151 -> NONTERM_qualified_ctor 
    | 152 -> NONTERM_qualified_ctor 
    | 153 -> NONTERM_no_dot_pattern_expr_list 
    | 154 -> NONTERM_no_dot_pattern_expr_list 
    | 155 -> NONTERM_pattern_expr_list 
    | 156 -> NONTERM_pattern_expr_list 
    | 157 -> NONTERM_pattern_expr_list 
    | 158 -> NONTERM_field_pattern_list 
    | 159 -> NONTERM_field_pattern_list 
    | 160 -> NONTERM_field_pattern_list 
    | 161 -> NONTERM_dict_pattern_list 
    | 162 -> NONTERM_dict_pattern_list 
    | 163 -> NONTERM_dict_pattern_list 
    | 164 -> NONTERM_pattern_expr 
    | 165 -> NONTERM_pattern_expr 
    | 166 -> NONTERM_pattern_expr 
    | 167 -> NONTERM_pattern_expr 
    | 168 -> NONTERM_pattern_expr 
    | 169 -> NONTERM_pattern_expr 
    | 170 -> NONTERM_pattern_expr 
    | 171 -> NONTERM_pattern_expr 
    | 172 -> NONTERM_pattern_expr 
    | 173 -> NONTERM_pattern_expr 
    | 174 -> NONTERM_pattern_expr 
    | 175 -> NONTERM_pattern_expr 
    | 176 -> NONTERM_pattern_expr 
    | 177 -> NONTERM_pattern_expr 
    | 178 -> NONTERM_pattern_expr 
    | 179 -> NONTERM_pattern_expr 
    | 180 -> NONTERM_pattern_expr 
    | 181 -> NONTERM_tuple_pattern 
    | 182 -> NONTERM_list_pattern 
    | 183 -> NONTERM_vector_pattern 
    | 184 -> NONTERM_slice_pattern 
    | 185 -> NONTERM_record_pattern 
    | 186 -> NONTERM_dict_pattern 
    | 187 -> NONTERM_fixed_size_term_expr 
    | 188 -> NONTERM_fixed_size_term_factor_list 
    | 189 -> NONTERM_fixed_size_term_factor_list 
    | 190 -> NONTERM_fixed_size_term_factor 
    | 191 -> NONTERM_fixed_size_term_factor 
    | 192 -> NONTERM_fixed_size_term_factor 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 96 
let _fsyacc_tagOfErrorTerminal = 94

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | IS  -> "IS" 
  | TRUE  -> "TRUE" 
  | FALSE  -> "FALSE" 
  | TUPLE  -> "TUPLE" 
  | LIST  -> "LIST" 
  | VECTOR  -> "VECTOR" 
  | SLICE  -> "SLICE" 
  | DICTIONARY  -> "DICTIONARY" 
  | CASE  -> "CASE" 
  | RECORD  -> "RECORD" 
  | VARIANT  -> "VARIANT" 
  | FOR  -> "FOR" 
  | BREAK  -> "BREAK" 
  | FINAL  -> "FINAL" 
  | FILL  -> "FILL" 
  | LENGTH  -> "LENGTH" 
  | RESULT  -> "RESULT" 
  | IF  -> "IF" 
  | WHEN  -> "WHEN" 
  | WHILE  -> "WHILE" 
  | THEN  -> "THEN" 
  | ELSE  -> "ELSE" 
  | DO  -> "DO" 
  | MATCH  -> "MATCH" 
  | INJECT  -> "INJECT" 
  | WITH  -> "WITH" 
  | AFTER  -> "AFTER" 
  | HANDLE  -> "HANDLE" 
  | UNTAG  -> "UNTAG" 
  | PUT_REF  -> "PUT_REF" 
  | GET_REF  -> "GET_REF" 
  | NEW_REF  -> "NEW_REF" 
  | WITH_STATE  -> "WITH_STATE" 
  | WITH_PERMISSION  -> "WITH_PERMISSION" 
  | FUNCTION  -> "FUNCTION" 
  | LOCAL  -> "LOCAL" 
  | LET  -> "LET" 
  | IS_ROUGHLY  -> "IS_ROUGHLY" 
  | IS_NOT  -> "IS_NOT" 
  | SATISFIES  -> "SATISFIES" 
  | VIOLATES  -> "VIOLATES" 
  | TEST  -> "TEST" 
  | LAW  -> "LAW" 
  | EXHAUSTIVE  -> "EXHAUSTIVE" 
  | SYNONYM  -> "SYNONYM" 
  | TAG  -> "TAG" 
  | EFFECT  -> "EFFECT" 
  | CLASS  -> "CLASS" 
  | INSTANCE  -> "INSTANCE" 
  | DERIVING  -> "DERIVING" 
  | RULE  -> "RULE" 
  | CHECK  -> "CHECK" 
  | PATTERN  -> "PATTERN" 
  | RECURSIVE  -> "RECURSIVE" 
  | DATA  -> "DATA" 
  | MAIN  -> "MAIN" 
  | EXPORT  -> "EXPORT" 
  | FROM  -> "FROM" 
  | AS  -> "AS" 
  | IMPORT  -> "IMPORT" 
  | REF  -> "REF" 
  | UNDERSCORE  -> "UNDERSCORE" 
  | EQUALS  -> "EQUALS" 
  | ELLIPSIS  -> "ELLIPSIS" 
  | BAR  -> "BAR" 
  | DOUBLE_BAR  -> "DOUBLE_BAR" 
  | DOT  -> "DOT" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | COLON  -> "COLON" 
  | DOUBLE_COLON  -> "DOUBLE_COLON" 
  | COMMA  -> "COMMA" 
  | SEMICOLON  -> "SEMICOLON" 
  | L_BIND  -> "L_BIND" 
  | R_BIND  -> "R_BIND" 
  | L_ARROW  -> "L_ARROW" 
  | R_ARROW  -> "R_ARROW" 
  | L_BRACKET  -> "L_BRACKET" 
  | R_BRACKET  -> "R_BRACKET" 
  | L_BRACE  -> "L_BRACE" 
  | R_BRACE  -> "R_BRACE" 
  | L_PAREN  -> "L_PAREN" 
  | R_PAREN  -> "R_PAREN" 
  | L_ANGLE  -> "L_ANGLE" 
  | R_ANGLE  -> "R_ANGLE" 
  | STRING _ -> "STRING" 
  | DECIMAL _ -> "DECIMAL" 
  | INTEGER _ -> "INTEGER" 
  | TEST_NAME _ -> "TEST_NAME" 
  | PREDICATE_NAME _ -> "PREDICATE_NAME" 
  | OPERATOR_NAME _ -> "OPERATOR_NAME" 
  | BIG_NAME _ -> "BIG_NAME" 
  | SMALL_NAME _ -> "SMALL_NAME" 
  | EOF  -> "EOF" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | IS  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | TUPLE  -> (null : System.Object) 
  | LIST  -> (null : System.Object) 
  | VECTOR  -> (null : System.Object) 
  | SLICE  -> (null : System.Object) 
  | DICTIONARY  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | RECORD  -> (null : System.Object) 
  | VARIANT  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | BREAK  -> (null : System.Object) 
  | FINAL  -> (null : System.Object) 
  | FILL  -> (null : System.Object) 
  | LENGTH  -> (null : System.Object) 
  | RESULT  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | WHEN  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | INJECT  -> (null : System.Object) 
  | WITH  -> (null : System.Object) 
  | AFTER  -> (null : System.Object) 
  | HANDLE  -> (null : System.Object) 
  | UNTAG  -> (null : System.Object) 
  | PUT_REF  -> (null : System.Object) 
  | GET_REF  -> (null : System.Object) 
  | NEW_REF  -> (null : System.Object) 
  | WITH_STATE  -> (null : System.Object) 
  | WITH_PERMISSION  -> (null : System.Object) 
  | FUNCTION  -> (null : System.Object) 
  | LOCAL  -> (null : System.Object) 
  | LET  -> (null : System.Object) 
  | IS_ROUGHLY  -> (null : System.Object) 
  | IS_NOT  -> (null : System.Object) 
  | SATISFIES  -> (null : System.Object) 
  | VIOLATES  -> (null : System.Object) 
  | TEST  -> (null : System.Object) 
  | LAW  -> (null : System.Object) 
  | EXHAUSTIVE  -> (null : System.Object) 
  | SYNONYM  -> (null : System.Object) 
  | TAG  -> (null : System.Object) 
  | EFFECT  -> (null : System.Object) 
  | CLASS  -> (null : System.Object) 
  | INSTANCE  -> (null : System.Object) 
  | DERIVING  -> (null : System.Object) 
  | RULE  -> (null : System.Object) 
  | CHECK  -> (null : System.Object) 
  | PATTERN  -> (null : System.Object) 
  | RECURSIVE  -> (null : System.Object) 
  | DATA  -> (null : System.Object) 
  | MAIN  -> (null : System.Object) 
  | EXPORT  -> (null : System.Object) 
  | FROM  -> (null : System.Object) 
  | AS  -> (null : System.Object) 
  | IMPORT  -> (null : System.Object) 
  | REF  -> (null : System.Object) 
  | UNDERSCORE  -> (null : System.Object) 
  | EQUALS  -> (null : System.Object) 
  | ELLIPSIS  -> (null : System.Object) 
  | BAR  -> (null : System.Object) 
  | DOUBLE_BAR  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | DOUBLE_COLON  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | L_BIND  -> (null : System.Object) 
  | R_BIND  -> (null : System.Object) 
  | L_ARROW  -> (null : System.Object) 
  | R_ARROW  -> (null : System.Object) 
  | L_BRACKET  -> (null : System.Object) 
  | R_BRACKET  -> (null : System.Object) 
  | L_BRACE  -> (null : System.Object) 
  | R_BRACE  -> (null : System.Object) 
  | L_PAREN  -> (null : System.Object) 
  | R_PAREN  -> (null : System.Object) 
  | L_ANGLE  -> (null : System.Object) 
  | R_ANGLE  -> (null : System.Object) 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DECIMAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INTEGER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | TEST_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PREDICATE_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OPERATOR_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BIG_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | SMALL_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EOF  -> (null : System.Object) 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 8us; 9us; 2us; 65535us; 2us; 3us; 10us; 11us; 1us; 65535us; 3us; 4us; 2us; 65535us; 0us; 8us; 8us; 8us; 2us; 65535us; 15us; 16us; 19us; 20us; 2us; 65535us; 15us; 24us; 19us; 24us; 1us; 65535us; 3us; 6us; 2us; 65535us; 15us; 19us; 36us; 37us; 2us; 65535us; 38us; 39us; 41us; 42us; 2us; 65535us; 38us; 41us; 41us; 41us; 2us; 65535us; 2us; 10us; 10us; 10us; 5us; 65535us; 2us; 46us; 10us; 46us; 47us; 48us; 49us; 78us; 78us; 78us; 2us; 65535us; 49us; 50us; 78us; 79us; 5us; 65535us; 2us; 57us; 10us; 57us; 47us; 58us; 49us; 85us; 85us; 85us; 2us; 65535us; 49us; 59us; 85us; 86us; 2us; 65535us; 83us; 88us; 89us; 88us; 2us; 65535us; 83us; 84us; 89us; 90us; 2us; 65535us; 2us; 61us; 10us; 61us; 2us; 65535us; 94us; 95us; 97us; 98us; 2us; 65535us; 94us; 97us; 97us; 97us; 2us; 65535us; 2us; 62us; 10us; 62us; 1us; 65535us; 106us; 107us; 1us; 65535us; 106us; 109us; 49us; 65535us; 13us; 152us; 65us; 152us; 70us; 152us; 73us; 152us; 76us; 152us; 105us; 152us; 107us; 152us; 111us; 152us; 113us; 152us; 120us; 152us; 124us; 152us; 128us; 152us; 141us; 152us; 143us; 152us; 150us; 152us; 176us; 177us; 197us; 198us; 200us; 201us; 211us; 152us; 215us; 152us; 218us; 152us; 225us; 226us; 234us; 152us; 241us; 152us; 244us; 152us; 246us; 247us; 248us; 249us; 250us; 152us; 252us; 253us; 254us; 152us; 256us; 257us; 258us; 152us; 259us; 152us; 263us; 152us; 268us; 152us; 271us; 152us; 276us; 152us; 279us; 152us; 284us; 152us; 287us; 152us; 299us; 152us; 300us; 152us; 301us; 152us; 308us; 152us; 309us; 152us; 324us; 152us; 331us; 152us; 340us; 152us; 341us; 152us; 2us; 65535us; 120us; 121us; 124us; 125us; 2us; 65535us; 120us; 123us; 124us; 123us; 2us; 65535us; 132us; 133us; 136us; 137us; 4us; 65535us; 120us; 130us; 124us; 130us; 132us; 136us; 136us; 136us; 41us; 65535us; 13us; 14us; 65us; 66us; 70us; 71us; 73us; 74us; 76us; 77us; 105us; 106us; 107us; 108us; 111us; 112us; 113us; 114us; 120us; 135us; 124us; 135us; 128us; 129us; 141us; 142us; 143us; 144us; 150us; 145us; 211us; 212us; 215us; 216us; 218us; 219us; 234us; 235us; 241us; 242us; 244us; 245us; 250us; 251us; 254us; 255us; 258us; 260us; 259us; 260us; 263us; 264us; 268us; 146us; 271us; 145us; 276us; 147us; 279us; 145us; 284us; 148us; 287us; 145us; 299us; 149us; 300us; 149us; 301us; 145us; 308us; 310us; 309us; 310us; 324us; 325us; 331us; 332us; 340us; 342us; 341us; 342us; 10us; 65535us; 150us; 151us; 268us; 269us; 271us; 272us; 276us; 277us; 279us; 280us; 284us; 285us; 287us; 288us; 299us; 304us; 300us; 304us; 301us; 302us; 41us; 65535us; 13us; 143us; 65us; 143us; 70us; 143us; 73us; 143us; 76us; 143us; 105us; 143us; 107us; 143us; 111us; 143us; 113us; 143us; 120us; 143us; 124us; 143us; 128us; 143us; 141us; 143us; 143us; 143us; 150us; 143us; 211us; 143us; 215us; 143us; 218us; 143us; 234us; 143us; 241us; 143us; 244us; 143us; 250us; 143us; 254us; 143us; 258us; 143us; 259us; 143us; 263us; 143us; 268us; 143us; 271us; 143us; 276us; 143us; 279us; 143us; 284us; 143us; 287us; 143us; 299us; 143us; 300us; 143us; 301us; 143us; 308us; 143us; 309us; 143us; 324us; 143us; 331us; 143us; 340us; 143us; 341us; 143us; 41us; 65535us; 13us; 178us; 65us; 178us; 70us; 178us; 73us; 178us; 76us; 178us; 105us; 178us; 107us; 178us; 111us; 178us; 113us; 178us; 120us; 178us; 124us; 178us; 128us; 178us; 141us; 178us; 143us; 178us; 150us; 178us; 211us; 178us; 215us; 178us; 218us; 178us; 234us; 178us; 241us; 178us; 244us; 178us; 250us; 178us; 254us; 178us; 258us; 178us; 259us; 178us; 263us; 178us; 268us; 178us; 271us; 178us; 276us; 178us; 279us; 178us; 284us; 178us; 287us; 178us; 299us; 178us; 300us; 178us; 301us; 178us; 308us; 178us; 309us; 178us; 324us; 178us; 331us; 178us; 340us; 178us; 341us; 178us; 41us; 65535us; 13us; 153us; 65us; 153us; 70us; 153us; 73us; 153us; 76us; 153us; 105us; 153us; 107us; 153us; 111us; 153us; 113us; 153us; 120us; 153us; 124us; 153us; 128us; 153us; 141us; 153us; 143us; 153us; 150us; 153us; 211us; 153us; 215us; 153us; 218us; 153us; 234us; 153us; 241us; 153us; 244us; 153us; 250us; 153us; 254us; 153us; 258us; 153us; 259us; 153us; 263us; 153us; 268us; 153us; 271us; 153us; 276us; 153us; 279us; 153us; 284us; 153us; 287us; 153us; 299us; 153us; 300us; 153us; 301us; 153us; 308us; 153us; 309us; 153us; 324us; 153us; 331us; 153us; 340us; 153us; 341us; 153us; 2us; 65535us; 203us; 222us; 222us; 222us; 1us; 65535us; 204us; 205us; 9us; 65535us; 53us; 54us; 67us; 68us; 81us; 82us; 92us; 93us; 100us; 101us; 196us; 197us; 199us; 200us; 209us; 210us; 220us; 221us; 2us; 65535us; 203us; 204us; 222us; 223us; 41us; 65535us; 13us; 154us; 65us; 154us; 70us; 154us; 73us; 154us; 76us; 154us; 105us; 154us; 107us; 154us; 111us; 154us; 113us; 154us; 120us; 154us; 124us; 154us; 128us; 154us; 141us; 154us; 143us; 154us; 150us; 154us; 211us; 154us; 215us; 154us; 218us; 154us; 234us; 154us; 241us; 154us; 244us; 154us; 250us; 154us; 254us; 154us; 258us; 154us; 259us; 154us; 263us; 154us; 268us; 154us; 271us; 154us; 276us; 154us; 279us; 154us; 284us; 154us; 287us; 154us; 299us; 154us; 300us; 154us; 301us; 154us; 308us; 154us; 309us; 154us; 324us; 154us; 331us; 154us; 340us; 154us; 341us; 154us; 2us; 65535us; 224us; 225us; 227us; 228us; 41us; 65535us; 13us; 155us; 65us; 155us; 70us; 155us; 73us; 155us; 76us; 155us; 105us; 155us; 107us; 155us; 111us; 155us; 113us; 155us; 120us; 155us; 124us; 155us; 128us; 155us; 141us; 155us; 143us; 155us; 150us; 155us; 211us; 155us; 215us; 155us; 218us; 155us; 234us; 155us; 241us; 155us; 244us; 155us; 250us; 155us; 254us; 155us; 258us; 155us; 259us; 155us; 263us; 155us; 268us; 155us; 271us; 155us; 276us; 155us; 279us; 155us; 284us; 155us; 287us; 155us; 299us; 155us; 300us; 155us; 301us; 155us; 308us; 155us; 309us; 155us; 324us; 155us; 331us; 155us; 340us; 155us; 341us; 155us; 2us; 65535us; 230us; 231us; 238us; 239us; 2us; 65535us; 230us; 238us; 238us; 238us; 41us; 65535us; 13us; 156us; 65us; 156us; 70us; 156us; 73us; 156us; 76us; 156us; 105us; 156us; 107us; 156us; 111us; 156us; 113us; 156us; 120us; 156us; 124us; 156us; 128us; 156us; 141us; 156us; 143us; 156us; 150us; 156us; 211us; 156us; 215us; 156us; 218us; 156us; 234us; 156us; 241us; 156us; 244us; 156us; 250us; 156us; 254us; 156us; 258us; 156us; 259us; 156us; 263us; 156us; 268us; 156us; 271us; 156us; 276us; 156us; 279us; 156us; 284us; 156us; 287us; 156us; 299us; 156us; 300us; 156us; 301us; 156us; 308us; 156us; 309us; 156us; 324us; 156us; 331us; 156us; 340us; 156us; 341us; 156us; 41us; 65535us; 13us; 157us; 65us; 157us; 70us; 157us; 73us; 157us; 76us; 157us; 105us; 157us; 107us; 157us; 111us; 157us; 113us; 157us; 120us; 157us; 124us; 157us; 128us; 157us; 141us; 157us; 143us; 157us; 150us; 157us; 211us; 157us; 215us; 157us; 218us; 157us; 234us; 157us; 241us; 157us; 244us; 157us; 250us; 157us; 254us; 157us; 258us; 157us; 259us; 157us; 263us; 157us; 268us; 157us; 271us; 157us; 276us; 157us; 279us; 157us; 284us; 157us; 287us; 157us; 299us; 157us; 300us; 157us; 301us; 157us; 308us; 157us; 309us; 157us; 324us; 157us; 331us; 157us; 340us; 157us; 341us; 157us; 41us; 65535us; 13us; 158us; 65us; 158us; 70us; 158us; 73us; 158us; 76us; 158us; 105us; 158us; 107us; 158us; 111us; 158us; 113us; 158us; 120us; 158us; 124us; 158us; 128us; 158us; 141us; 158us; 143us; 158us; 150us; 158us; 211us; 158us; 215us; 158us; 218us; 158us; 234us; 158us; 241us; 158us; 244us; 158us; 250us; 158us; 254us; 158us; 258us; 158us; 259us; 158us; 263us; 158us; 268us; 158us; 271us; 158us; 276us; 158us; 279us; 158us; 284us; 158us; 287us; 158us; 299us; 158us; 300us; 158us; 301us; 158us; 308us; 158us; 309us; 158us; 324us; 158us; 331us; 158us; 340us; 158us; 341us; 158us; 41us; 65535us; 13us; 159us; 65us; 159us; 70us; 159us; 73us; 159us; 76us; 159us; 105us; 159us; 107us; 159us; 111us; 159us; 113us; 159us; 120us; 159us; 124us; 159us; 128us; 159us; 141us; 159us; 143us; 159us; 150us; 159us; 211us; 159us; 215us; 159us; 218us; 159us; 234us; 159us; 241us; 159us; 244us; 159us; 250us; 159us; 254us; 159us; 258us; 159us; 259us; 159us; 263us; 159us; 268us; 159us; 271us; 159us; 276us; 159us; 279us; 159us; 284us; 159us; 287us; 159us; 299us; 159us; 300us; 159us; 301us; 159us; 308us; 159us; 309us; 159us; 324us; 159us; 331us; 159us; 340us; 159us; 341us; 159us; 41us; 65535us; 13us; 160us; 65us; 160us; 70us; 160us; 73us; 160us; 76us; 160us; 105us; 160us; 107us; 160us; 111us; 160us; 113us; 160us; 120us; 160us; 124us; 160us; 128us; 160us; 141us; 160us; 143us; 160us; 150us; 160us; 211us; 160us; 215us; 160us; 218us; 160us; 234us; 160us; 241us; 160us; 244us; 160us; 250us; 160us; 254us; 160us; 258us; 160us; 259us; 160us; 263us; 160us; 268us; 160us; 271us; 160us; 276us; 160us; 279us; 160us; 284us; 160us; 287us; 160us; 299us; 160us; 300us; 160us; 301us; 160us; 308us; 160us; 309us; 160us; 324us; 160us; 331us; 160us; 340us; 160us; 341us; 160us; 41us; 65535us; 13us; 161us; 65us; 161us; 70us; 161us; 73us; 161us; 76us; 161us; 105us; 161us; 107us; 161us; 111us; 161us; 113us; 161us; 120us; 161us; 124us; 161us; 128us; 161us; 141us; 161us; 143us; 161us; 150us; 161us; 211us; 161us; 215us; 161us; 218us; 161us; 234us; 161us; 241us; 161us; 244us; 161us; 250us; 161us; 254us; 161us; 258us; 161us; 259us; 161us; 263us; 161us; 268us; 161us; 271us; 161us; 276us; 161us; 279us; 161us; 284us; 161us; 287us; 161us; 299us; 161us; 300us; 161us; 301us; 161us; 308us; 161us; 309us; 161us; 324us; 161us; 331us; 161us; 340us; 161us; 341us; 161us; 41us; 65535us; 13us; 162us; 65us; 162us; 70us; 162us; 73us; 162us; 76us; 162us; 105us; 162us; 107us; 162us; 111us; 162us; 113us; 162us; 120us; 162us; 124us; 162us; 128us; 162us; 141us; 162us; 143us; 162us; 150us; 162us; 211us; 162us; 215us; 162us; 218us; 162us; 234us; 162us; 241us; 162us; 244us; 162us; 250us; 162us; 254us; 162us; 258us; 162us; 259us; 162us; 263us; 162us; 268us; 162us; 271us; 162us; 276us; 162us; 279us; 162us; 284us; 162us; 287us; 162us; 299us; 162us; 300us; 162us; 301us; 162us; 308us; 162us; 309us; 162us; 324us; 162us; 331us; 162us; 340us; 162us; 341us; 162us; 41us; 65535us; 13us; 163us; 65us; 163us; 70us; 163us; 73us; 163us; 76us; 163us; 105us; 163us; 107us; 163us; 111us; 163us; 113us; 163us; 120us; 163us; 124us; 163us; 128us; 163us; 141us; 163us; 143us; 163us; 150us; 163us; 211us; 163us; 215us; 163us; 218us; 163us; 234us; 163us; 241us; 163us; 244us; 163us; 250us; 163us; 254us; 163us; 258us; 163us; 259us; 163us; 263us; 163us; 268us; 163us; 271us; 163us; 276us; 163us; 279us; 163us; 284us; 163us; 287us; 163us; 299us; 163us; 300us; 163us; 301us; 163us; 308us; 163us; 309us; 163us; 324us; 163us; 331us; 163us; 340us; 163us; 341us; 163us; 41us; 65535us; 13us; 164us; 65us; 164us; 70us; 164us; 73us; 164us; 76us; 164us; 105us; 164us; 107us; 164us; 111us; 164us; 113us; 164us; 120us; 164us; 124us; 164us; 128us; 164us; 141us; 164us; 143us; 164us; 150us; 164us; 211us; 164us; 215us; 164us; 218us; 164us; 234us; 164us; 241us; 164us; 244us; 164us; 250us; 164us; 254us; 164us; 258us; 164us; 259us; 164us; 263us; 164us; 268us; 164us; 271us; 164us; 276us; 164us; 279us; 164us; 284us; 164us; 287us; 164us; 299us; 164us; 300us; 164us; 301us; 164us; 308us; 164us; 309us; 164us; 324us; 164us; 331us; 164us; 340us; 164us; 341us; 164us; 41us; 65535us; 13us; 165us; 65us; 165us; 70us; 165us; 73us; 165us; 76us; 165us; 105us; 165us; 107us; 165us; 111us; 165us; 113us; 165us; 120us; 165us; 124us; 165us; 128us; 165us; 141us; 165us; 143us; 165us; 150us; 165us; 211us; 165us; 215us; 165us; 218us; 165us; 234us; 165us; 241us; 165us; 244us; 165us; 250us; 165us; 254us; 165us; 258us; 165us; 259us; 165us; 263us; 165us; 268us; 165us; 271us; 165us; 276us; 165us; 279us; 165us; 284us; 165us; 287us; 165us; 299us; 165us; 300us; 165us; 301us; 165us; 308us; 165us; 309us; 165us; 324us; 165us; 331us; 165us; 340us; 165us; 341us; 165us; 41us; 65535us; 13us; 172us; 65us; 172us; 70us; 172us; 73us; 172us; 76us; 172us; 105us; 172us; 107us; 172us; 111us; 172us; 113us; 172us; 120us; 172us; 124us; 172us; 128us; 172us; 141us; 172us; 143us; 172us; 150us; 172us; 211us; 172us; 215us; 172us; 218us; 172us; 234us; 172us; 241us; 172us; 244us; 172us; 250us; 172us; 254us; 172us; 258us; 172us; 259us; 172us; 263us; 172us; 268us; 172us; 271us; 172us; 276us; 172us; 279us; 172us; 284us; 172us; 287us; 172us; 299us; 172us; 300us; 172us; 301us; 172us; 308us; 172us; 309us; 172us; 324us; 172us; 331us; 172us; 340us; 172us; 341us; 172us; 41us; 65535us; 13us; 175us; 65us; 175us; 70us; 175us; 73us; 175us; 76us; 175us; 105us; 175us; 107us; 175us; 111us; 175us; 113us; 175us; 120us; 175us; 124us; 175us; 128us; 175us; 141us; 175us; 143us; 175us; 150us; 175us; 211us; 175us; 215us; 175us; 218us; 175us; 234us; 175us; 241us; 175us; 244us; 175us; 250us; 175us; 254us; 175us; 258us; 175us; 259us; 175us; 263us; 175us; 268us; 175us; 271us; 175us; 276us; 175us; 279us; 175us; 284us; 175us; 287us; 175us; 299us; 175us; 300us; 175us; 301us; 175us; 308us; 175us; 309us; 175us; 324us; 175us; 331us; 175us; 340us; 175us; 341us; 175us; 2us; 65535us; 321us; 322us; 328us; 329us; 2us; 65535us; 321us; 328us; 328us; 328us; 4us; 65535us; 308us; 314us; 309us; 314us; 311us; 312us; 335us; 336us; 5us; 65535us; 308us; 334us; 309us; 334us; 311us; 334us; 317us; 318us; 335us; 334us; 43us; 65535us; 13us; 195us; 65us; 195us; 70us; 195us; 73us; 195us; 76us; 195us; 105us; 195us; 107us; 195us; 111us; 195us; 113us; 195us; 120us; 195us; 124us; 195us; 128us; 195us; 141us; 195us; 143us; 195us; 150us; 195us; 203us; 209us; 211us; 195us; 215us; 195us; 218us; 195us; 222us; 209us; 234us; 195us; 241us; 195us; 244us; 195us; 250us; 195us; 254us; 195us; 258us; 195us; 259us; 195us; 263us; 195us; 268us; 195us; 271us; 195us; 276us; 195us; 279us; 195us; 284us; 195us; 287us; 195us; 299us; 195us; 300us; 195us; 301us; 195us; 308us; 195us; 309us; 195us; 324us; 195us; 331us; 195us; 340us; 195us; 341us; 195us; 46us; 65535us; 13us; 343us; 65us; 343us; 70us; 343us; 73us; 343us; 76us; 343us; 105us; 343us; 107us; 343us; 111us; 343us; 113us; 343us; 120us; 343us; 124us; 343us; 128us; 343us; 141us; 343us; 143us; 343us; 150us; 343us; 182us; 183us; 203us; 343us; 211us; 343us; 215us; 343us; 218us; 343us; 222us; 343us; 234us; 343us; 241us; 343us; 244us; 343us; 250us; 343us; 254us; 343us; 258us; 343us; 259us; 343us; 263us; 343us; 268us; 343us; 271us; 343us; 276us; 343us; 279us; 343us; 284us; 343us; 287us; 343us; 299us; 343us; 300us; 343us; 301us; 343us; 308us; 343us; 309us; 343us; 324us; 343us; 331us; 343us; 340us; 343us; 341us; 343us; 354us; 356us; 355us; 356us; 28us; 65535us; 55us; 387us; 64us; 387us; 69us; 387us; 126us; 387us; 214us; 387us; 230us; 387us; 238us; 387us; 258us; 387us; 259us; 388us; 300us; 387us; 341us; 387us; 355us; 361us; 360us; 361us; 362us; 387us; 364us; 387us; 368us; 387us; 373us; 387us; 374us; 387us; 383us; 387us; 385us; 387us; 388us; 387us; 389us; 390us; 390us; 387us; 400us; 387us; 404us; 387us; 408us; 387us; 412us; 387us; 420us; 387us; 6us; 65535us; 64us; 72us; 69us; 75us; 126us; 127us; 214us; 217us; 258us; 262us; 259us; 262us; 10us; 65535us; 230us; 240us; 238us; 240us; 362us; 363us; 364us; 366us; 388us; 391us; 390us; 391us; 400us; 401us; 404us; 405us; 408us; 409us; 412us; 413us; 3us; 65535us; 309us; 417us; 369us; 371us; 416us; 417us; 3us; 65535us; 300us; 421us; 374us; 376us; 420us; 421us; 25us; 65535us; 55us; 56us; 64us; 362us; 69us; 362us; 126us; 362us; 214us; 362us; 230us; 364us; 238us; 364us; 258us; 362us; 259us; 362us; 300us; 372us; 341us; 369us; 362us; 364us; 364us; 364us; 368us; 369us; 373us; 374us; 374us; 372us; 383us; 384us; 385us; 386us; 388us; 364us; 390us; 364us; 400us; 364us; 404us; 364us; 408us; 364us; 412us; 364us; 420us; 372us; 25us; 65535us; 55us; 393us; 64us; 393us; 69us; 393us; 126us; 393us; 214us; 393us; 230us; 393us; 238us; 393us; 258us; 393us; 259us; 393us; 300us; 393us; 341us; 393us; 362us; 393us; 364us; 393us; 368us; 393us; 373us; 393us; 374us; 393us; 383us; 393us; 385us; 393us; 388us; 393us; 390us; 393us; 400us; 393us; 404us; 393us; 408us; 393us; 412us; 393us; 420us; 393us; 25us; 65535us; 55us; 394us; 64us; 394us; 69us; 394us; 126us; 394us; 214us; 394us; 230us; 394us; 238us; 394us; 258us; 394us; 259us; 394us; 300us; 394us; 341us; 394us; 362us; 394us; 364us; 394us; 368us; 394us; 373us; 394us; 374us; 394us; 383us; 394us; 385us; 394us; 388us; 394us; 390us; 394us; 400us; 394us; 404us; 394us; 408us; 394us; 412us; 394us; 420us; 394us; 25us; 65535us; 55us; 395us; 64us; 395us; 69us; 395us; 126us; 395us; 214us; 395us; 230us; 395us; 238us; 395us; 258us; 395us; 259us; 395us; 300us; 395us; 341us; 395us; 362us; 395us; 364us; 395us; 368us; 395us; 373us; 395us; 374us; 395us; 383us; 395us; 385us; 395us; 388us; 395us; 390us; 395us; 400us; 395us; 404us; 395us; 408us; 395us; 412us; 395us; 420us; 395us; 25us; 65535us; 55us; 396us; 64us; 396us; 69us; 396us; 126us; 396us; 214us; 396us; 230us; 396us; 238us; 396us; 258us; 396us; 259us; 396us; 300us; 396us; 341us; 396us; 362us; 396us; 364us; 396us; 368us; 396us; 373us; 396us; 374us; 396us; 383us; 396us; 385us; 396us; 388us; 396us; 390us; 396us; 400us; 396us; 404us; 396us; 408us; 396us; 412us; 396us; 420us; 396us; 25us; 65535us; 55us; 397us; 64us; 397us; 69us; 397us; 126us; 397us; 214us; 397us; 230us; 397us; 238us; 397us; 258us; 397us; 259us; 397us; 300us; 397us; 341us; 397us; 362us; 397us; 364us; 397us; 368us; 397us; 373us; 397us; 374us; 397us; 383us; 397us; 385us; 397us; 388us; 397us; 390us; 397us; 400us; 397us; 404us; 397us; 408us; 397us; 412us; 397us; 420us; 397us; 25us; 65535us; 55us; 398us; 64us; 398us; 69us; 398us; 126us; 398us; 214us; 398us; 230us; 398us; 238us; 398us; 258us; 398us; 259us; 398us; 300us; 398us; 341us; 398us; 362us; 398us; 364us; 398us; 368us; 398us; 373us; 398us; 374us; 398us; 383us; 398us; 385us; 398us; 388us; 398us; 390us; 398us; 400us; 398us; 404us; 398us; 408us; 398us; 412us; 398us; 420us; 398us; 3us; 65535us; 292us; 293us; 294us; 295us; 344us; 345us; 4us; 65535us; 292us; 423us; 294us; 423us; 344us; 423us; 425us; 426us; 4us; 65535us; 292us; 424us; 294us; 424us; 344us; 424us; 425us; 424us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 11us; 14us; 17us; 20us; 22us; 25us; 28us; 31us; 34us; 40us; 43us; 49us; 52us; 55us; 58us; 61us; 64us; 67us; 70us; 72us; 74us; 124us; 127us; 130us; 133us; 138us; 180us; 191us; 233us; 275us; 317us; 320us; 322us; 332us; 335us; 377us; 380us; 422us; 425us; 428us; 470us; 512us; 554us; 596us; 638us; 680us; 722us; 764us; 806us; 848us; 890us; 932us; 935us; 938us; 943us; 949us; 993us; 1040us; 1069us; 1076us; 1087us; 1091us; 1095us; 1121us; 1147us; 1173us; 1199us; 1225us; 1251us; 1277us; 1281us; 1286us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 2us; 1us; 2us; 2us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 2us; 1us; 4us; 1us; 4us; 1us; 6us; 1us; 6us; 1us; 7us; 1us; 7us; 1us; 7us; 2us; 8us; 9us; 1us; 8us; 1us; 8us; 1us; 8us; 1us; 9us; 1us; 9us; 1us; 9us; 1us; 9us; 1us; 10us; 1us; 11us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 16us; 1us; 16us; 1us; 17us; 1us; 18us; 1us; 19us; 1us; 20us; 4us; 21us; 22us; 25us; 26us; 1us; 21us; 2us; 22us; 26us; 1us; 22us; 1us; 22us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 25us; 1us; 26us; 1us; 26us; 1us; 27us; 1us; 28us; 4us; 29us; 30us; 31us; 32us; 4us; 29us; 30us; 31us; 32us; 1us; 29us; 1us; 29us; 2us; 30us; 32us; 2us; 30us; 32us; 2us; 30us; 32us; 1us; 30us; 1us; 30us; 1us; 31us; 1us; 31us; 1us; 31us; 1us; 32us; 1us; 32us; 1us; 32us; 2us; 33us; 34us; 1us; 34us; 1us; 35us; 1us; 35us; 1us; 35us; 1us; 35us; 1us; 35us; 2us; 36us; 37us; 1us; 37us; 1us; 38us; 2us; 39us; 40us; 1us; 40us; 1us; 40us; 1us; 41us; 1us; 41us; 1us; 41us; 1us; 41us; 1us; 41us; 1us; 41us; 2us; 42us; 43us; 1us; 43us; 2us; 44us; 45us; 1us; 45us; 1us; 45us; 1us; 45us; 2us; 46us; 47us; 2us; 46us; 47us; 2us; 46us; 47us; 2us; 46us; 47us; 1us; 46us; 1us; 46us; 2us; 47us; 51us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 48us; 1us; 49us; 1us; 50us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 54us; 1us; 54us; 2us; 55us; 56us; 1us; 56us; 1us; 56us; 2us; 57us; 58us; 2us; 57us; 58us; 1us; 58us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 60us; 1us; 60us; 1us; 60us; 1us; 61us; 2us; 62us; 63us; 1us; 63us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 66us; 1us; 66us; 1us; 68us; 2us; 68us; 126us; 2us; 68us; 128us; 2us; 68us; 130us; 2us; 68us; 132us; 1us; 68us; 1us; 68us; 1us; 69us; 1us; 70us; 1us; 71us; 1us; 72us; 1us; 73us; 1us; 74us; 1us; 75us; 1us; 76us; 1us; 77us; 1us; 78us; 1us; 79us; 1us; 80us; 1us; 81us; 1us; 82us; 1us; 83us; 1us; 83us; 1us; 84us; 1us; 84us; 1us; 85us; 1us; 85us; 1us; 86us; 1us; 87us; 1us; 87us; 1us; 88us; 1us; 89us; 1us; 89us; 1us; 90us; 1us; 91us; 1us; 92us; 1us; 93us; 1us; 94us; 1us; 94us; 1us; 95us; 1us; 96us; 2us; 96us; 164us; 1us; 97us; 2us; 97us; 165us; 1us; 98us; 2us; 98us; 166us; 1us; 99us; 2us; 99us; 167us; 1us; 100us; 2us; 100us; 168us; 1us; 101us; 1us; 102us; 1us; 102us; 1us; 102us; 2us; 103us; 104us; 2us; 103us; 104us; 2us; 103us; 104us; 2us; 103us; 104us; 2us; 103us; 104us; 2us; 103us; 104us; 1us; 103us; 1us; 103us; 1us; 103us; 1us; 104us; 1us; 105us; 1us; 105us; 1us; 105us; 1us; 105us; 1us; 105us; 2us; 106us; 107us; 1us; 106us; 1us; 106us; 1us; 107us; 1us; 107us; 1us; 107us; 1us; 109us; 1us; 109us; 1us; 111us; 1us; 111us; 1us; 112us; 1us; 112us; 1us; 112us; 2us; 113us; 114us; 1us; 114us; 2us; 115us; 116us; 2us; 115us; 116us; 2us; 115us; 116us; 1us; 115us; 1us; 116us; 1us; 116us; 1us; 116us; 1us; 116us; 1us; 116us; 2us; 117us; 118us; 1us; 118us; 1us; 119us; 1us; 119us; 1us; 119us; 1us; 119us; 1us; 120us; 1us; 120us; 1us; 120us; 1us; 120us; 1us; 120us; 1us; 120us; 1us; 121us; 1us; 121us; 1us; 121us; 1us; 121us; 1us; 122us; 1us; 122us; 1us; 122us; 1us; 122us; 2us; 123us; 124us; 3us; 123us; 124us; 174us; 1us; 123us; 1us; 123us; 1us; 124us; 1us; 124us; 1us; 124us; 1us; 124us; 2us; 125us; 126us; 3us; 125us; 126us; 181us; 2us; 125us; 126us; 1us; 125us; 1us; 125us; 1us; 126us; 1us; 126us; 1us; 126us; 2us; 127us; 128us; 3us; 127us; 128us; 182us; 2us; 127us; 128us; 1us; 127us; 1us; 127us; 1us; 128us; 1us; 128us; 1us; 128us; 2us; 129us; 130us; 3us; 129us; 130us; 183us; 2us; 129us; 130us; 1us; 129us; 1us; 129us; 1us; 130us; 1us; 130us; 1us; 130us; 1us; 131us; 2us; 131us; 184us; 1us; 131us; 1us; 131us; 1us; 131us; 1us; 131us; 1us; 131us; 2us; 132us; 133us; 3us; 132us; 133us; 186us; 2us; 132us; 133us; 3us; 132us; 133us; 186us; 1us; 132us; 1us; 132us; 1us; 132us; 1us; 133us; 1us; 133us; 2us; 134us; 135us; 3us; 134us; 135us; 185us; 2us; 134us; 135us; 3us; 134us; 135us; 185us; 1us; 134us; 1us; 134us; 1us; 134us; 1us; 134us; 1us; 135us; 1us; 135us; 1us; 136us; 1us; 136us; 1us; 136us; 1us; 136us; 1us; 137us; 1us; 137us; 1us; 137us; 1us; 137us; 1us; 137us; 1us; 137us; 1us; 137us; 1us; 137us; 2us; 138us; 139us; 1us; 139us; 1us; 140us; 1us; 140us; 1us; 140us; 1us; 140us; 1us; 142us; 1us; 142us; 1us; 142us; 1us; 143us; 3us; 143us; 146us; 150us; 6us; 143us; 146us; 150us; 158us; 159us; 160us; 1us; 143us; 3us; 143us; 158us; 160us; 1us; 143us; 2us; 144us; 145us; 1us; 144us; 1us; 144us; 1us; 144us; 2us; 146us; 150us; 3us; 146us; 150us; 152us; 5us; 146us; 150us; 152us; 171us; 172us; 1us; 147us; 2us; 147us; 151us; 1us; 148us; 1us; 149us; 1us; 150us; 2us; 150us; 152us; 1us; 150us; 1us; 151us; 1us; 152us; 3us; 152us; 171us; 172us; 1us; 152us; 1us; 152us; 2us; 153us; 154us; 1us; 154us; 3us; 155us; 156us; 157us; 1us; 156us; 1us; 157us; 3us; 158us; 159us; 160us; 2us; 158us; 160us; 2us; 158us; 160us; 1us; 159us; 1us; 160us; 3us; 161us; 162us; 163us; 2us; 161us; 163us; 2us; 161us; 163us; 1us; 162us; 1us; 163us; 1us; 164us; 1us; 165us; 1us; 166us; 1us; 167us; 1us; 168us; 1us; 169us; 1us; 170us; 1us; 170us; 1us; 172us; 1us; 172us; 1us; 173us; 2us; 173us; 174us; 1us; 174us; 1us; 174us; 1us; 174us; 1us; 174us; 1us; 175us; 1us; 176us; 1us; 177us; 1us; 178us; 1us; 179us; 1us; 180us; 1us; 181us; 1us; 181us; 1us; 181us; 1us; 181us; 1us; 182us; 1us; 182us; 1us; 182us; 1us; 182us; 1us; 183us; 1us; 183us; 1us; 183us; 1us; 183us; 1us; 184us; 1us; 184us; 1us; 184us; 1us; 184us; 1us; 185us; 1us; 185us; 1us; 185us; 1us; 185us; 1us; 186us; 1us; 186us; 1us; 186us; 1us; 186us; 1us; 187us; 2us; 188us; 189us; 1us; 189us; 1us; 189us; 2us; 190us; 192us; 1us; 191us; 1us; 192us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 7us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 26us; 28us; 30us; 32us; 35us; 37us; 39us; 41us; 43us; 45us; 47us; 49us; 51us; 53us; 55us; 57us; 59us; 61us; 63us; 65us; 67us; 69us; 71us; 73us; 75us; 77us; 79us; 81us; 83us; 85us; 87us; 89us; 91us; 93us; 95us; 97us; 102us; 104us; 107us; 109us; 111us; 113us; 115us; 117us; 119us; 121us; 123us; 125us; 127us; 129us; 131us; 133us; 138us; 143us; 145us; 147us; 150us; 153us; 156us; 158us; 160us; 162us; 164us; 166us; 168us; 170us; 172us; 175us; 177us; 179us; 181us; 183us; 185us; 187us; 190us; 192us; 194us; 197us; 199us; 201us; 203us; 205us; 207us; 209us; 211us; 213us; 216us; 218us; 221us; 223us; 225us; 227us; 230us; 233us; 236us; 239us; 241us; 243us; 246us; 248us; 250us; 252us; 254us; 256us; 258us; 260us; 262us; 264us; 266us; 268us; 270us; 272us; 275us; 277us; 279us; 282us; 285us; 287us; 289us; 291us; 293us; 295us; 297us; 299us; 301us; 304us; 306us; 308us; 310us; 312us; 314us; 316us; 318us; 320us; 322us; 325us; 328us; 331us; 334us; 336us; 338us; 340us; 342us; 344us; 346us; 348us; 350us; 352us; 354us; 356us; 358us; 360us; 362us; 364us; 366us; 368us; 370us; 372us; 374us; 376us; 378us; 380us; 382us; 384us; 386us; 388us; 390us; 392us; 394us; 396us; 398us; 400us; 402us; 404us; 406us; 409us; 411us; 414us; 416us; 419us; 421us; 424us; 426us; 429us; 431us; 433us; 435us; 437us; 440us; 443us; 446us; 449us; 452us; 455us; 457us; 459us; 461us; 463us; 465us; 467us; 469us; 471us; 473us; 476us; 478us; 480us; 482us; 484us; 486us; 488us; 490us; 492us; 494us; 496us; 498us; 500us; 503us; 505us; 508us; 511us; 514us; 516us; 518us; 520us; 522us; 524us; 526us; 529us; 531us; 533us; 535us; 537us; 539us; 541us; 543us; 545us; 547us; 549us; 551us; 553us; 555us; 557us; 559us; 561us; 563us; 565us; 567us; 570us; 574us; 576us; 578us; 580us; 582us; 584us; 586us; 589us; 593us; 596us; 598us; 600us; 602us; 604us; 606us; 609us; 613us; 616us; 618us; 620us; 622us; 624us; 626us; 629us; 633us; 636us; 638us; 640us; 642us; 644us; 646us; 648us; 651us; 653us; 655us; 657us; 659us; 661us; 664us; 668us; 671us; 675us; 677us; 679us; 681us; 683us; 685us; 688us; 692us; 695us; 699us; 701us; 703us; 705us; 707us; 709us; 711us; 713us; 715us; 717us; 719us; 721us; 723us; 725us; 727us; 729us; 731us; 733us; 735us; 738us; 740us; 742us; 744us; 746us; 748us; 750us; 752us; 754us; 756us; 760us; 767us; 769us; 773us; 775us; 778us; 780us; 782us; 784us; 787us; 791us; 797us; 799us; 802us; 804us; 806us; 808us; 811us; 813us; 815us; 817us; 821us; 823us; 825us; 828us; 830us; 834us; 836us; 838us; 842us; 845us; 848us; 850us; 852us; 856us; 859us; 862us; 864us; 866us; 868us; 870us; 872us; 874us; 876us; 878us; 880us; 882us; 884us; 886us; 888us; 891us; 893us; 895us; 897us; 899us; 901us; 903us; 905us; 907us; 909us; 911us; 913us; 915us; 917us; 919us; 921us; 923us; 925us; 927us; 929us; 931us; 933us; 935us; 937us; 939us; 941us; 943us; 945us; 947us; 949us; 951us; 953us; 955us; 957us; 959us; 961us; 964us; 966us; 968us; 971us; 973us; |]
let _fsyacc_action_rows = 430
let _fsyacc_actionTableElements = [|1us; 16387us; 59us; 15us; 0us; 49152us; 6us; 16389us; 34us; 63us; 41us; 103us; 46us; 91us; 52us; 52us; 53us; 47us; 54us; 80us; 2us; 32768us; 55us; 12us; 56us; 36us; 1us; 32768us; 93us; 5us; 0us; 16385us; 1us; 32768us; 93us; 7us; 0us; 16386us; 1us; 16387us; 59us; 15us; 0us; 16388us; 6us; 16389us; 34us; 63us; 41us; 103us; 46us; 91us; 52us; 52us; 53us; 47us; 54us; 80us; 0us; 16390us; 1us; 32768us; 62us; 13us; 36us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 0us; 16391us; 3us; 32768us; 79us; 38us; 85us; 23us; 92us; 25us; 1us; 32768us; 58us; 17us; 1us; 32768us; 92us; 18us; 0us; 16392us; 2us; 32768us; 85us; 23us; 92us; 25us; 1us; 32768us; 58us; 21us; 1us; 32768us; 92us; 22us; 0us; 16393us; 0us; 16394us; 0us; 16395us; 1us; 32768us; 66us; 26us; 1us; 32768us; 92us; 27us; 1us; 32768us; 66us; 28us; 1us; 32768us; 92us; 29us; 1us; 32768us; 69us; 30us; 1us; 32768us; 87us; 31us; 1us; 32768us; 66us; 32us; 1us; 32768us; 87us; 33us; 1us; 32768us; 66us; 34us; 1us; 32768us; 87us; 35us; 0us; 16396us; 1us; 32768us; 79us; 38us; 0us; 16397us; 3us; 16399us; 89us; 45us; 91us; 44us; 92us; 43us; 1us; 32768us; 80us; 40us; 0us; 16398us; 3us; 16399us; 89us; 45us; 91us; 44us; 92us; 43us; 0us; 16400us; 0us; 16401us; 0us; 16402us; 0us; 16403us; 0us; 16404us; 3us; 32768us; 34us; 63us; 54us; 80us; 79us; 49us; 0us; 16405us; 2us; 32768us; 34us; 63us; 54us; 80us; 1us; 32768us; 80us; 51us; 0us; 16406us; 1us; 32768us; 91us; 53us; 1us; 16492us; 92us; 220us; 1us; 32768us; 62us; 55us; 16us; 32768us; 1us; 377us; 2us; 378us; 3us; 399us; 4us; 403us; 5us; 407us; 6us; 411us; 7us; 419us; 9us; 415us; 60us; 383us; 61us; 382us; 81us; 389us; 85us; 381us; 86us; 380us; 87us; 379us; 91us; 357us; 92us; 359us; 0us; 16407us; 0us; 16408us; 0us; 16409us; 1us; 32768us; 80us; 60us; 0us; 16410us; 0us; 16411us; 0us; 16412us; 1us; 32768us; 92us; 64us; 18us; 32768us; 1us; 377us; 2us; 378us; 3us; 399us; 4us; 403us; 5us; 407us; 6us; 411us; 7us; 419us; 9us; 415us; 60us; 383us; 61us; 382us; 62us; 65us; 81us; 389us; 83us; 67us; 85us; 381us; 86us; 380us; 87us; 379us; 91us; 357us; 92us; 359us; 36us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 0us; 16413us; 1us; 16492us; 92us; 220us; 1us; 32768us; 84us; 69us; 17us; 32768us; 1us; 377us; 2us; 378us; 3us; 399us; 4us; 403us; 5us; 407us; 6us; 411us; 7us; 419us; 9us; 415us; 60us; 383us; 61us; 382us; 62us; 70us; 81us; 389us; 85us; 381us; 86us; 380us; 87us; 379us; 91us; 357us; 92us; 359us; 36us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 0us; 16414us; 1us; 32768us; 62us; 73us; 36us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 0us; 16415us; 1us; 32768us; 62us; 76us; 36us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 0us; 16416us; 1us; 16417us; 34us; 63us; 0us; 16418us; 1us; 32768us; 91us; 81us; 1us; 16492us; 92us; 220us; 1us; 32768us; 62us; 83us; 1us; 32768us; 91us; 87us; 0us; 16419us; 1us; 16420us; 54us; 80us; 0us; 16421us; 0us; 16422us; 1us; 16423us; 64us; 89us; 1us; 32768us; 91us; 87us; 0us; 16424us; 1us; 32768us; 90us; 92us; 1us; 16492us; 92us; 220us; 1us; 32768us; 79us; 94us; 1us; 32768us; 90us; 99us; 1us; 32768us; 80us; 96us; 0us; 16425us; 1us; 16426us; 90us; 99us; 0us; 16427us; 1us; 16428us; 83us; 100us; 1us; 16492us; 92us; 220us; 1us; 32768us; 84us; 102us; 0us; 16429us; 1us; 32768us; 88us; 104us; 1us; 32768us; 62us; 105us; 36us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 5us; 32768us; 0us; 118us; 37us; 117us; 38us; 119us; 39us; 115us; 40us; 116us; 36us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 0us; 16430us; 1us; 16435us; 25us; 110us; 1us; 32768us; 79us; 111us; 36us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 1us; 32768us; 80us; 113us; 36us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 0us; 16431us; 0us; 16432us; 0us; 16433us; 0us; 16434us; 0us; 16436us; 0us; 16437us; 39us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 35us; 138us; 36us; 126us; 53us; 131us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 1us; 32768us; 80us; 122us; 0us; 16438us; 1us; 16439us; 72us; 124us; 39us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 35us; 138us; 36us; 126us; 53us; 131us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 0us; 16440us; 16us; 32768us; 1us; 377us; 2us; 378us; 3us; 399us; 4us; 403us; 5us; 407us; 6us; 411us; 7us; 419us; 9us; 415us; 60us; 383us; 61us; 382us; 81us; 389us; 85us; 381us; 86us; 380us; 87us; 379us; 91us; 357us; 92us; 359us; 1us; 16441us; 62us; 128us; 36us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 0us; 16442us; 0us; 16443us; 1us; 32768us; 79us; 132us; 1us; 32768us; 35us; 138us; 1us; 32768us; 80us; 134us; 0us; 16444us; 0us; 16445us; 1us; 16446us; 35us; 138us; 0us; 16447us; 1us; 32768us; 34us; 139us; 1us; 32768us; 92us; 140us; 1us; 32768us; 62us; 141us; 36us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 0us; 16448us; 36us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 0us; 16450us; 1us; 32768us; 71us; 150us; 2us; 32768us; 25us; 271us; 71us; 150us; 2us; 32768us; 25us; 279us; 71us; 150us; 2us; 32768us; 25us; 287us; 71us; 150us; 2us; 32768us; 25us; 301us; 71us; 150us; 38us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 78us; 16451us; 79us; 120us; 80us; 16451us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 0us; 16452us; 0us; 16453us; 0us; 16454us; 0us; 16455us; 0us; 16456us; 0us; 16457us; 0us; 16458us; 0us; 16459us; 0us; 16460us; 0us; 16461us; 0us; 16462us; 0us; 16463us; 0us; 16464us; 0us; 16465us; 0us; 16466us; 1us; 32768us; 92us; 167us; 0us; 16467us; 1us; 32768us; 92us; 169us; 0us; 16468us; 1us; 32768us; 92us; 171us; 0us; 16469us; 0us; 16470us; 1us; 32768us; 92us; 174us; 0us; 16471us; 0us; 16472us; 1us; 32768us; 79us; 120us; 0us; 16473us; 0us; 16474us; 0us; 16475us; 0us; 16476us; 0us; 16477us; 4us; 32768us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 0us; 16478us; 0us; 16479us; 0us; 16480us; 6us; 16480us; 60us; 16548us; 61us; 16548us; 62us; 16548us; 63us; 16548us; 74us; 16548us; 80us; 16548us; 0us; 16481us; 6us; 16481us; 60us; 16549us; 61us; 16549us; 62us; 16549us; 63us; 16549us; 74us; 16549us; 80us; 16549us; 0us; 16482us; 6us; 16482us; 60us; 16550us; 61us; 16550us; 62us; 16550us; 63us; 16550us; 74us; 16550us; 80us; 16550us; 0us; 16483us; 6us; 16483us; 60us; 16551us; 61us; 16551us; 62us; 16551us; 63us; 16551us; 74us; 16551us; 80us; 16551us; 0us; 16484us; 6us; 16484us; 60us; 16552us; 61us; 16552us; 62us; 16552us; 63us; 16552us; 74us; 16552us; 80us; 16552us; 0us; 16485us; 1us; 16492us; 92us; 220us; 1us; 32768us; 79us; 120us; 0us; 16486us; 1us; 16492us; 92us; 220us; 1us; 32768us; 79us; 120us; 1us; 32768us; 25us; 202us; 1us; 32768us; 79us; 203us; 4us; 16494us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 2us; 32768us; 26us; 214us; 80us; 208us; 1us; 32768us; 72us; 206us; 1us; 32768us; 80us; 207us; 0us; 16487us; 0us; 16488us; 1us; 16492us; 92us; 220us; 1us; 32768us; 74us; 211us; 36us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 1us; 32768us; 72us; 213us; 0us; 16489us; 17us; 32768us; 1us; 377us; 2us; 378us; 3us; 399us; 4us; 403us; 5us; 407us; 6us; 411us; 7us; 419us; 9us; 415us; 60us; 383us; 61us; 382us; 74us; 215us; 81us; 389us; 85us; 381us; 86us; 380us; 87us; 379us; 91us; 357us; 92us; 359us; 36us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 0us; 16490us; 1us; 32768us; 74us; 218us; 36us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 0us; 16491us; 1us; 16492us; 92us; 220us; 0us; 16493us; 4us; 16494us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 0us; 16495us; 1us; 32768us; 90us; 227us; 1us; 32768us; 79us; 120us; 0us; 16496us; 1us; 16497us; 90us; 227us; 0us; 16498us; 1us; 32768us; 79us; 230us; 16us; 32768us; 1us; 377us; 2us; 378us; 3us; 399us; 4us; 403us; 5us; 407us; 6us; 411us; 7us; 419us; 9us; 415us; 60us; 383us; 61us; 382us; 81us; 389us; 85us; 381us; 86us; 380us; 87us; 379us; 91us; 357us; 92us; 359us; 2us; 32768us; 21us; 233us; 80us; 232us; 0us; 16499us; 1us; 32768us; 74us; 234us; 36us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 1us; 32768us; 72us; 236us; 1us; 32768us; 80us; 237us; 0us; 16500us; 16us; 16501us; 1us; 377us; 2us; 378us; 3us; 399us; 4us; 403us; 5us; 407us; 6us; 411us; 7us; 419us; 9us; 415us; 60us; 383us; 61us; 382us; 81us; 389us; 85us; 381us; 86us; 380us; 87us; 379us; 91us; 357us; 92us; 359us; 0us; 16502us; 1us; 32768us; 74us; 241us; 36us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 1us; 32768us; 72us; 243us; 0us; 16503us; 36us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 1us; 32768us; 20us; 246us; 1us; 32768us; 79us; 120us; 1us; 32768us; 21us; 248us; 1us; 32768us; 79us; 120us; 0us; 16504us; 36us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 1us; 32768us; 20us; 252us; 1us; 32768us; 79us; 120us; 0us; 16505us; 36us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 1us; 32768us; 20us; 256us; 1us; 32768us; 79us; 120us; 0us; 16506us; 38us; 16449us; 1us; 186us; 2us; 188us; 3us; 267us; 4us; 275us; 5us; 283us; 6us; 291us; 7us; 298us; 8us; 320us; 9us; 307us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 60us; 383us; 61us; 382us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 81us; 259us; 85us; 194us; 86us; 192us; 87us; 190us; 89us; 353us; 90us; 352us; 91us; 351us; 92us; 349us; 38us; 16449us; 1us; 186us; 2us; 188us; 3us; 267us; 4us; 275us; 5us; 283us; 6us; 291us; 7us; 298us; 8us; 320us; 9us; 307us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 60us; 383us; 61us; 382us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 81us; 259us; 85us; 194us; 86us; 192us; 87us; 190us; 89us; 353us; 90us; 352us; 91us; 351us; 92us; 349us; 1us; 32768us; 82us; 261us; 0us; 16507us; 1us; 32768us; 74us; 263us; 36us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 1us; 32768us; 82us; 265us; 0us; 16508us; 1us; 32768us; 77us; 268us; 2us; 32768us; 77us; 268us; 79us; 400us; 37us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 78us; 16451us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 1us; 32768us; 78us; 270us; 0us; 16509us; 37us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 78us; 16451us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 1us; 32768us; 78us; 273us; 0us; 16510us; 1us; 32768us; 77us; 276us; 2us; 32768us; 77us; 276us; 79us; 404us; 37us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 78us; 16451us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 1us; 32768us; 78us; 278us; 0us; 16511us; 37us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 78us; 16451us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 1us; 32768us; 78us; 281us; 0us; 16512us; 1us; 32768us; 77us; 284us; 2us; 32768us; 77us; 284us; 79us; 408us; 37us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 78us; 16451us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 1us; 32768us; 78us; 286us; 0us; 16513us; 37us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 78us; 16451us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 1us; 32768us; 78us; 289us; 0us; 16514us; 1us; 32768us; 77us; 292us; 2us; 32768us; 77us; 292us; 79us; 412us; 2us; 32768us; 87us; 427us; 92us; 428us; 1us; 32768us; 63us; 294us; 2us; 32768us; 87us; 427us; 92us; 428us; 1us; 32768us; 78us; 296us; 0us; 16515us; 1us; 32768us; 79us; 299us; 1us; 32768us; 79us; 300us; 37us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 80us; 16451us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 39us; 16449us; 1us; 186us; 2us; 188us; 3us; 267us; 4us; 275us; 5us; 283us; 6us; 291us; 7us; 298us; 8us; 320us; 9us; 307us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 60us; 383us; 61us; 382us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 80us; 16451us; 81us; 259us; 85us; 194us; 86us; 192us; 87us; 190us; 89us; 353us; 90us; 352us; 91us; 351us; 92us; 349us; 37us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 80us; 16451us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 1us; 32768us; 80us; 303us; 0us; 16516us; 1us; 32768us; 80us; 305us; 0us; 16517us; 1us; 32768us; 79us; 308us; 1us; 32768us; 79us; 309us; 37us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 80us; 16525us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 338us; 37us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 80us; 16525us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 339us; 1us; 32768us; 25us; 311us; 1us; 16525us; 92us; 337us; 1us; 32768us; 80us; 313us; 0us; 16518us; 1us; 32768us; 80us; 315us; 0us; 16519us; 1us; 32768us; 79us; 317us; 1us; 32768us; 92us; 337us; 1us; 32768us; 80us; 319us; 0us; 16520us; 1us; 32768us; 79us; 321us; 1us; 32768us; 92us; 330us; 1us; 32768us; 21us; 323us; 1us; 32768us; 74us; 324us; 36us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 1us; 32768us; 72us; 326us; 1us; 32768us; 80us; 327us; 0us; 16521us; 1us; 16522us; 92us; 330us; 0us; 16523us; 1us; 32768us; 74us; 331us; 36us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 1us; 32768us; 72us; 333us; 0us; 16524us; 1us; 32768us; 71us; 335us; 1us; 16525us; 92us; 337us; 0us; 16526us; 1us; 32768us; 62us; 340us; 2us; 16530us; 62us; 340us; 70us; 354us; 3us; 16530us; 62us; 341us; 63us; 370us; 70us; 354us; 36us; 16449us; 1us; 185us; 2us; 187us; 3us; 266us; 4us; 274us; 5us; 282us; 6us; 290us; 7us; 297us; 8us; 320us; 9us; 306us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 81us; 258us; 85us; 193us; 86us; 191us; 87us; 189us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 38us; 16449us; 1us; 186us; 2us; 188us; 3us; 267us; 4us; 275us; 5us; 283us; 6us; 291us; 7us; 298us; 8us; 320us; 9us; 307us; 10us; 316us; 17us; 244us; 18us; 250us; 19us; 254us; 22us; 184us; 23us; 229us; 24us; 224us; 27us; 199us; 28us; 182us; 29us; 181us; 30us; 180us; 31us; 179us; 32us; 176us; 33us; 196us; 60us; 383us; 61us; 382us; 65us; 173us; 67us; 166us; 68us; 168us; 76us; 170us; 79us; 120us; 81us; 259us; 85us; 194us; 86us; 192us; 87us; 190us; 89us; 353us; 90us; 352us; 91us; 351us; 92us; 349us; 0us; 16527us; 1us; 16529us; 83us; 344us; 2us; 32768us; 87us; 427us; 92us; 428us; 1us; 32768us; 84us; 346us; 0us; 16528us; 1us; 16530us; 70us; 354us; 1us; 16530us; 70us; 355us; 8us; 16530us; 0us; 385us; 60us; 16555us; 61us; 16555us; 62us; 16555us; 63us; 16555us; 70us; 355us; 74us; 16555us; 80us; 16555us; 0us; 16531us; 6us; 16531us; 60us; 16535us; 61us; 16535us; 62us; 16535us; 63us; 16535us; 74us; 16535us; 80us; 16535us; 0us; 16532us; 0us; 16533us; 4us; 32768us; 89us; 353us; 90us; 352us; 91us; 350us; 92us; 347us; 4us; 32768us; 89us; 353us; 90us; 352us; 91us; 351us; 92us; 348us; 0us; 16534us; 0us; 16535us; 1us; 32768us; 70us; 360us; 2us; 16555us; 0us; 385us; 70us; 360us; 2us; 32768us; 91us; 357us; 92us; 358us; 0us; 16536us; 16us; 16537us; 1us; 377us; 2us; 378us; 3us; 399us; 4us; 403us; 5us; 407us; 6us; 411us; 7us; 419us; 9us; 415us; 60us; 383us; 61us; 382us; 81us; 389us; 85us; 381us; 86us; 380us; 87us; 379us; 91us; 357us; 92us; 359us; 0us; 16538us; 17us; 16539us; 1us; 377us; 2us; 378us; 3us; 399us; 4us; 403us; 5us; 407us; 6us; 411us; 7us; 419us; 9us; 415us; 60us; 383us; 61us; 382us; 63us; 365us; 81us; 389us; 85us; 381us; 86us; 380us; 87us; 379us; 91us; 357us; 92us; 359us; 0us; 16540us; 0us; 16541us; 2us; 32768us; 62us; 368us; 63us; 370us; 16us; 32768us; 1us; 377us; 2us; 378us; 3us; 399us; 4us; 403us; 5us; 407us; 6us; 411us; 7us; 419us; 9us; 415us; 60us; 383us; 61us; 382us; 81us; 389us; 85us; 381us; 86us; 380us; 87us; 379us; 91us; 357us; 92us; 359us; 1us; 16542us; 92us; 367us; 0us; 16543us; 0us; 16544us; 2us; 32768us; 62us; 373us; 63us; 375us; 16us; 32768us; 1us; 377us; 2us; 378us; 3us; 399us; 4us; 403us; 5us; 407us; 6us; 411us; 7us; 419us; 9us; 415us; 60us; 383us; 61us; 382us; 81us; 389us; 85us; 381us; 86us; 380us; 87us; 379us; 91us; 357us; 92us; 359us; 16us; 16545us; 1us; 377us; 2us; 378us; 3us; 399us; 4us; 403us; 5us; 407us; 6us; 411us; 7us; 419us; 9us; 415us; 60us; 383us; 61us; 382us; 81us; 389us; 85us; 381us; 86us; 380us; 87us; 379us; 91us; 357us; 92us; 359us; 0us; 16546us; 0us; 16547us; 0us; 16548us; 0us; 16549us; 0us; 16550us; 0us; 16551us; 0us; 16552us; 0us; 16553us; 16us; 32768us; 1us; 377us; 2us; 378us; 3us; 399us; 4us; 403us; 5us; 407us; 6us; 411us; 7us; 419us; 9us; 415us; 60us; 383us; 61us; 382us; 81us; 389us; 85us; 381us; 86us; 380us; 87us; 379us; 91us; 357us; 92us; 359us; 0us; 16554us; 16us; 32768us; 1us; 377us; 2us; 378us; 3us; 399us; 4us; 403us; 5us; 407us; 6us; 411us; 7us; 419us; 9us; 415us; 60us; 383us; 61us; 382us; 81us; 389us; 85us; 381us; 86us; 380us; 87us; 379us; 91us; 357us; 92us; 359us; 0us; 16556us; 0us; 16557us; 16us; 16557us; 1us; 377us; 2us; 378us; 3us; 399us; 4us; 403us; 5us; 407us; 6us; 411us; 7us; 419us; 9us; 415us; 60us; 383us; 61us; 382us; 81us; 389us; 85us; 381us; 86us; 380us; 87us; 379us; 91us; 357us; 92us; 359us; 2us; 32768us; 91us; 357us; 92us; 358us; 16us; 32768us; 1us; 377us; 2us; 378us; 3us; 399us; 4us; 403us; 5us; 407us; 6us; 411us; 7us; 419us; 9us; 415us; 60us; 383us; 61us; 382us; 81us; 389us; 85us; 381us; 86us; 380us; 87us; 379us; 91us; 357us; 92us; 359us; 1us; 32768us; 82us; 392us; 0us; 16558us; 0us; 16559us; 0us; 16560us; 0us; 16561us; 0us; 16562us; 0us; 16563us; 0us; 16564us; 1us; 32768us; 79us; 400us; 16us; 32768us; 1us; 377us; 2us; 378us; 3us; 399us; 4us; 403us; 5us; 407us; 6us; 411us; 7us; 419us; 9us; 415us; 60us; 383us; 61us; 382us; 81us; 389us; 85us; 381us; 86us; 380us; 87us; 379us; 91us; 357us; 92us; 359us; 1us; 32768us; 80us; 402us; 0us; 16565us; 1us; 32768us; 79us; 404us; 16us; 32768us; 1us; 377us; 2us; 378us; 3us; 399us; 4us; 403us; 5us; 407us; 6us; 411us; 7us; 419us; 9us; 415us; 60us; 383us; 61us; 382us; 81us; 389us; 85us; 381us; 86us; 380us; 87us; 379us; 91us; 357us; 92us; 359us; 1us; 32768us; 80us; 406us; 0us; 16566us; 1us; 32768us; 79us; 408us; 16us; 32768us; 1us; 377us; 2us; 378us; 3us; 399us; 4us; 403us; 5us; 407us; 6us; 411us; 7us; 419us; 9us; 415us; 60us; 383us; 61us; 382us; 81us; 389us; 85us; 381us; 86us; 380us; 87us; 379us; 91us; 357us; 92us; 359us; 1us; 32768us; 80us; 410us; 0us; 16567us; 1us; 32768us; 79us; 412us; 16us; 32768us; 1us; 377us; 2us; 378us; 3us; 399us; 4us; 403us; 5us; 407us; 6us; 411us; 7us; 419us; 9us; 415us; 60us; 383us; 61us; 382us; 81us; 389us; 85us; 381us; 86us; 380us; 87us; 379us; 91us; 357us; 92us; 359us; 1us; 32768us; 80us; 414us; 0us; 16568us; 1us; 32768us; 79us; 416us; 1us; 32768us; 92us; 367us; 1us; 32768us; 80us; 418us; 0us; 16569us; 1us; 32768us; 79us; 420us; 16us; 32768us; 1us; 377us; 2us; 378us; 3us; 399us; 4us; 403us; 5us; 407us; 6us; 411us; 7us; 419us; 9us; 415us; 60us; 383us; 61us; 382us; 81us; 389us; 85us; 381us; 86us; 380us; 87us; 379us; 91us; 357us; 92us; 359us; 1us; 32768us; 80us; 422us; 0us; 16570us; 0us; 16571us; 1us; 16572us; 67us; 425us; 2us; 32768us; 87us; 427us; 92us; 428us; 0us; 16573us; 1us; 16574us; 92us; 429us; 0us; 16575us; 0us; 16576us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 2us; 3us; 10us; 13us; 15us; 16us; 18us; 19us; 21us; 22us; 29us; 30us; 32us; 69us; 70us; 74us; 76us; 78us; 79us; 82us; 84us; 86us; 87us; 88us; 89us; 91us; 93us; 95us; 97us; 99us; 101us; 103us; 105us; 107us; 109us; 110us; 112us; 113us; 117us; 119us; 120us; 124us; 125us; 126us; 127us; 128us; 129us; 133us; 134us; 137us; 139us; 140us; 142us; 144us; 146us; 163us; 164us; 165us; 166us; 168us; 169us; 170us; 171us; 173us; 192us; 229us; 230us; 232us; 234us; 252us; 289us; 290us; 292us; 329us; 330us; 332us; 369us; 370us; 372us; 373us; 375us; 377us; 379us; 381us; 382us; 384us; 385us; 386us; 388us; 390us; 391us; 393us; 395us; 397us; 399us; 401us; 402us; 404us; 405us; 407us; 409us; 411us; 412us; 414us; 416us; 453us; 459us; 496us; 497us; 499us; 501us; 538us; 540us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 623us; 625us; 626us; 628us; 668us; 669us; 686us; 688us; 725us; 726us; 727us; 729us; 731us; 733us; 734us; 735us; 737us; 738us; 740us; 742us; 744us; 781us; 782us; 819us; 820us; 822us; 825us; 828us; 831us; 834us; 873us; 874us; 875us; 876us; 877us; 878us; 879us; 880us; 881us; 882us; 883us; 884us; 885us; 886us; 887us; 888us; 890us; 891us; 893us; 894us; 896us; 897us; 898us; 900us; 901us; 902us; 904us; 905us; 906us; 907us; 908us; 909us; 914us; 915us; 916us; 917us; 924us; 925us; 932us; 933us; 940us; 941us; 948us; 949us; 956us; 957us; 959us; 961us; 962us; 964us; 966us; 968us; 970us; 975us; 978us; 980us; 982us; 983us; 984us; 986us; 988us; 1025us; 1027us; 1028us; 1046us; 1083us; 1084us; 1086us; 1123us; 1124us; 1126us; 1127us; 1132us; 1133us; 1135us; 1137us; 1138us; 1140us; 1141us; 1143us; 1160us; 1163us; 1164us; 1166us; 1203us; 1205us; 1207us; 1208us; 1225us; 1226us; 1228us; 1265us; 1267us; 1268us; 1305us; 1307us; 1309us; 1311us; 1313us; 1314us; 1351us; 1353us; 1355us; 1356us; 1393us; 1395us; 1397us; 1398us; 1437us; 1476us; 1478us; 1479us; 1481us; 1518us; 1520us; 1521us; 1523us; 1526us; 1564us; 1566us; 1567us; 1605us; 1607us; 1608us; 1610us; 1613us; 1651us; 1653us; 1654us; 1692us; 1694us; 1695us; 1697us; 1700us; 1738us; 1740us; 1741us; 1779us; 1781us; 1782us; 1784us; 1787us; 1790us; 1792us; 1795us; 1797us; 1798us; 1800us; 1802us; 1840us; 1880us; 1918us; 1920us; 1921us; 1923us; 1924us; 1926us; 1928us; 1966us; 2004us; 2006us; 2008us; 2010us; 2011us; 2013us; 2014us; 2016us; 2018us; 2020us; 2021us; 2023us; 2025us; 2027us; 2029us; 2066us; 2068us; 2070us; 2071us; 2073us; 2074us; 2076us; 2113us; 2115us; 2116us; 2118us; 2120us; 2121us; 2123us; 2126us; 2130us; 2167us; 2206us; 2207us; 2209us; 2212us; 2214us; 2215us; 2217us; 2219us; 2228us; 2229us; 2236us; 2237us; 2238us; 2243us; 2248us; 2249us; 2250us; 2252us; 2255us; 2258us; 2259us; 2276us; 2277us; 2295us; 2296us; 2297us; 2300us; 2317us; 2319us; 2320us; 2321us; 2324us; 2341us; 2358us; 2359us; 2360us; 2361us; 2362us; 2363us; 2364us; 2365us; 2366us; 2383us; 2384us; 2401us; 2402us; 2403us; 2420us; 2423us; 2440us; 2442us; 2443us; 2444us; 2445us; 2446us; 2447us; 2448us; 2449us; 2451us; 2468us; 2470us; 2471us; 2473us; 2490us; 2492us; 2493us; 2495us; 2512us; 2514us; 2515us; 2517us; 2534us; 2536us; 2537us; 2539us; 2541us; 2543us; 2544us; 2546us; 2563us; 2565us; 2566us; 2567us; 2569us; 2572us; 2573us; 2575us; 2576us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 4us; 4us; 0us; 2us; 0us; 2us; 3us; 4us; 5us; 1us; 1us; 11us; 2us; 3us; 0us; 2us; 1us; 1us; 1us; 1us; 2us; 4us; 5us; 1us; 2us; 4us; 1us; 1us; 4us; 7us; 5us; 8us; 1us; 2us; 5us; 1us; 2us; 1us; 1us; 3us; 6us; 1us; 2us; 1us; 4us; 6us; 10us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 2us; 4us; 1us; 4us; 1us; 1us; 2us; 5us; 0us; 2us; 0us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 2us; 1us; 2us; 1us; 2us; 1us; 1us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 9us; 7us; 5us; 3us; 4us; 0us; 2us; 0us; 2us; 3us; 1us; 2us; 4us; 8us; 1us; 2us; 4us; 6us; 4us; 4us; 3us; 5us; 4us; 6us; 4us; 6us; 4us; 6us; 6us; 6us; 4us; 6us; 4us; 4us; 8us; 1us; 2us; 4us; 0us; 3us; 3us; 4us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 2us; 1us; 2us; 2us; 3us; 2us; 4us; 3us; 2us; 4us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 3us; 1us; 4us; 1us; 1us; 1us; 1us; 1us; 1us; 4us; 4us; 4us; 4us; 4us; 4us; 1us; 1us; 3us; 1us; 1us; 2us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 6us; 6us; 7us; 8us; 9us; 10us; 10us; 11us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 13us; 13us; 13us; 14us; 14us; 15us; 16us; 16us; 17us; 18us; 18us; 19us; 20us; 20us; 21us; 21us; 22us; 22us; 23us; 23us; 23us; 23us; 24us; 24us; 25us; 26us; 26us; 27us; 27us; 27us; 27us; 27us; 28us; 28us; 29us; 30us; 30us; 31us; 31us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 32us; 33us; 34us; 34us; 35us; 36us; 36us; 37us; 37us; 38us; 38us; 39us; 40us; 40us; 41us; 41us; 42us; 42us; 43us; 44us; 45us; 46us; 47us; 47us; 48us; 48us; 49us; 49us; 50us; 50us; 51us; 52us; 52us; 53us; 53us; 54us; 55us; 56us; 56us; 57us; 58us; 58us; 59us; 60us; 60us; 61us; 61us; 61us; 61us; 61us; 62us; 62us; 63us; 63us; 64us; 64us; 64us; 65us; 65us; 65us; 66us; 66us; 66us; 67us; 67us; 67us; 67us; 67us; 67us; 67us; 67us; 67us; 67us; 67us; 67us; 67us; 67us; 67us; 67us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 75us; 76us; 76us; 76us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 65535us; 65535us; 16385us; 65535us; 16386us; 65535us; 16388us; 65535us; 16390us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 16392us; 65535us; 65535us; 65535us; 16393us; 16394us; 16395us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16396us; 65535us; 16397us; 65535us; 65535us; 16398us; 65535us; 16400us; 16401us; 16402us; 16403us; 16404us; 65535us; 16405us; 65535us; 65535us; 16406us; 65535us; 65535us; 65535us; 65535us; 16407us; 16408us; 16409us; 65535us; 16410us; 16411us; 16412us; 65535us; 65535us; 65535us; 16413us; 65535us; 65535us; 65535us; 65535us; 16414us; 65535us; 65535us; 16415us; 65535us; 65535us; 16416us; 65535us; 16418us; 65535us; 65535us; 65535us; 65535us; 16419us; 65535us; 16421us; 16422us; 65535us; 65535us; 16424us; 65535us; 65535us; 65535us; 65535us; 65535us; 16425us; 65535us; 16427us; 65535us; 65535us; 65535us; 16429us; 65535us; 65535us; 65535us; 65535us; 65535us; 16430us; 65535us; 65535us; 65535us; 65535us; 65535us; 16431us; 16432us; 16433us; 16434us; 16436us; 16437us; 65535us; 65535us; 16438us; 65535us; 65535us; 16440us; 65535us; 65535us; 65535us; 16442us; 16443us; 65535us; 65535us; 65535us; 16444us; 16445us; 65535us; 16447us; 65535us; 65535us; 65535us; 65535us; 16448us; 65535us; 16450us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16452us; 16453us; 16454us; 16455us; 16456us; 16457us; 16458us; 16459us; 16460us; 16461us; 16462us; 16463us; 16464us; 16465us; 16466us; 65535us; 16467us; 65535us; 16468us; 65535us; 16469us; 16470us; 65535us; 16471us; 16472us; 65535us; 16473us; 16474us; 16475us; 16476us; 16477us; 65535us; 16478us; 16479us; 16480us; 65535us; 16481us; 65535us; 16482us; 65535us; 16483us; 65535us; 16484us; 65535us; 16485us; 65535us; 65535us; 16486us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16487us; 16488us; 65535us; 65535us; 65535us; 65535us; 16489us; 65535us; 65535us; 16490us; 65535us; 65535us; 16491us; 65535us; 16493us; 65535us; 16495us; 65535us; 65535us; 16496us; 65535us; 16498us; 65535us; 65535us; 65535us; 16499us; 65535us; 65535us; 65535us; 65535us; 16500us; 65535us; 16502us; 65535us; 65535us; 65535us; 16503us; 65535us; 65535us; 65535us; 65535us; 65535us; 16504us; 65535us; 65535us; 65535us; 16505us; 65535us; 65535us; 65535us; 16506us; 65535us; 65535us; 65535us; 16507us; 65535us; 65535us; 65535us; 16508us; 65535us; 65535us; 65535us; 65535us; 16509us; 65535us; 65535us; 16510us; 65535us; 65535us; 65535us; 65535us; 16511us; 65535us; 65535us; 16512us; 65535us; 65535us; 65535us; 65535us; 16513us; 65535us; 65535us; 16514us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16515us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16516us; 65535us; 16517us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16518us; 65535us; 16519us; 65535us; 65535us; 65535us; 16520us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16521us; 65535us; 16523us; 65535us; 65535us; 65535us; 16524us; 65535us; 65535us; 16526us; 65535us; 65535us; 65535us; 65535us; 65535us; 16527us; 65535us; 65535us; 65535us; 16528us; 65535us; 65535us; 65535us; 16531us; 65535us; 16532us; 16533us; 65535us; 65535us; 16534us; 16535us; 65535us; 65535us; 65535us; 16536us; 65535us; 16538us; 65535us; 16540us; 16541us; 65535us; 65535us; 65535us; 16543us; 16544us; 65535us; 65535us; 65535us; 16546us; 16547us; 16548us; 16549us; 16550us; 16551us; 16552us; 16553us; 65535us; 16554us; 65535us; 16556us; 16557us; 65535us; 65535us; 65535us; 65535us; 16558us; 16559us; 16560us; 16561us; 16562us; 16563us; 16564us; 65535us; 65535us; 65535us; 16565us; 65535us; 65535us; 65535us; 16566us; 65535us; 65535us; 65535us; 16567us; 65535us; 65535us; 65535us; 16568us; 65535us; 65535us; 65535us; 16569us; 65535us; 65535us; 65535us; 16570us; 16571us; 65535us; 65535us; 16573us; 65535us; 16575us; 16576us; |]
let _fsyacc_reductions ()  =    [| 
# 895 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  Unit  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startunit));
# 904 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_main in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "./Parser.fsy"
                                                             UMain(_1, _2, _3) 
                   )
# 86 "./Parser.fsy"
                 :  Unit ));
# 917 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_export in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "./Parser.fsy"
                                                            UExport(_1, _2, _3) 
                   )
# 87 "./Parser.fsy"
                 :  Unit ));
# 930 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 89 "./Parser.fsy"
                                          [] 
                   )
# 89 "./Parser.fsy"
                 : 'gentype_import_list));
# 940 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import in
            let _2 = parseState.GetInput(2) :?> 'gentype_import_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 90 "./Parser.fsy"
                                                  _1 :: _2 
                   )
# 90 "./Parser.fsy"
                 : 'gentype_import_list));
# 952 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "./Parser.fsy"
                                         [] 
                   )
# 92 "./Parser.fsy"
                 : 'gentype_decl_list));
# 962 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_declaration in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "./Parser.fsy"
                                                   _1 :: _2 
                   )
# 93 "./Parser.fsy"
                 : 'gentype_decl_list));
# 974 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "./Parser.fsy"
                                                      _3 
                   )
# 95 "./Parser.fsy"
                 : 'gentype_main));
# 985 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_import_path in
            let _4 = parseState.GetInput(4) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 "./Parser.fsy"
                                                                    { Explicit = []; Path = _2; Alias = _4 } 
                   )
# 97 "./Parser.fsy"
                 : 'gentype_import));
# 997 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_brace_names in
            let _3 = parseState.GetInput(3) :?> 'gentype_import_path in
            let _5 = parseState.GetInput(5) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "./Parser.fsy"
                                                                          { Explicit = _2; Path = _3; Alias = _5 } 
                   )
# 98 "./Parser.fsy"
                 : 'gentype_import));
# 1010 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "./Parser.fsy"
                                            IPLocal (_1) 
                   )
# 100 "./Parser.fsy"
                 : 'gentype_import_path));
# 1021 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_remote in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "./Parser.fsy"
                                   IPRemote (_1) 
                   )
# 101 "./Parser.fsy"
                 : 'gentype_import_path));
# 1032 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> Name in
            let _7 = parseState.GetInput(7) :?> IntegerLiteral in
            let _9 = parseState.GetInput(9) :?> IntegerLiteral in
            let _11 = parseState.GetInput(11) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "./Parser.fsy"
                          { Org = _1; Project = _3; Unit = _5; Major = _7; Minor = _9; Patch = _11 } 
                   )
# 104 "./Parser.fsy"
                 : 'gentype_remote));
# 1048 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_brace_names in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "./Parser.fsy"
                                                   _2 
                   )
# 106 "./Parser.fsy"
                 : 'gentype_export));
# 1059 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_name_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "./Parser.fsy"
                                                               _2 
                   )
# 108 "./Parser.fsy"
                 : 'gentype_brace_names));
# 1070 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "./Parser.fsy"
                                       [] 
                   )
# 110 "./Parser.fsy"
                 : 'gentype_name_list));
# 1080 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_name in
            let _2 = parseState.GetInput(2) :?> 'gentype_name_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "./Parser.fsy"
                                            _1 :: _2 
                   )
# 111 "./Parser.fsy"
                 : 'gentype_name_list));
# 1092 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "./Parser.fsy"
                                          _1 
                   )
# 113 "./Parser.fsy"
                 : 'gentype_name));
# 1103 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "./Parser.fsy"
                                         _1 
                   )
# 114 "./Parser.fsy"
                 : 'gentype_name));
# 1114 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "./Parser.fsy"
                                          _1 
                   )
# 115 "./Parser.fsy"
                 : 'gentype_name));
# 1125 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "./Parser.fsy"
                                                        DFunc (_1) 
                   )
# 119 "./Parser.fsy"
                 : 'gentype_declaration));
# 1136 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "./Parser.fsy"
                                                      DRecFuncs ([_2]) 
                   )
# 120 "./Parser.fsy"
                 : 'gentype_declaration));
# 1147 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_function_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "./Parser.fsy"
                                                                      DRecFuncs (_3) 
                   )
# 121 "./Parser.fsy"
                 : 'gentype_declaration));
# 1158 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "./Parser.fsy"
                                                                            DPattern (_2, _3, _5) 
                   )
# 122 "./Parser.fsy"
                 : 'gentype_declaration));
# 1171 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "./Parser.fsy"
                                               DType (_1) 
                   )
# 123 "./Parser.fsy"
                 : 'gentype_declaration));
# 1182 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "./Parser.fsy"
                                                      DRecTypes ([_2]) 
                   )
# 124 "./Parser.fsy"
                 : 'gentype_declaration));
# 1193 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_datatype_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "./Parser.fsy"
                                                                      DRecTypes (_3) 
                   )
# 125 "./Parser.fsy"
                 : 'gentype_declaration));
# 1204 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_effect in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "./Parser.fsy"
                                             DEffect (_1) 
                   )
# 126 "./Parser.fsy"
                 : 'gentype_declaration));
# 1215 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_test in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "./Parser.fsy"
                                            DTest (_1) 
                   )
# 127 "./Parser.fsy"
                 : 'gentype_declaration));
# 1226 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "./Parser.fsy"
                          { Name = _2; FixedParams = []; Body = _4 } 
                   )
# 130 "./Parser.fsy"
                 : 'gentype_function));
# 1238 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_param_list in
            let _7 = parseState.GetInput(7) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "./Parser.fsy"
                           { Name = _2; FixedParams = _4; Body = _7 } 
                   )
# 132 "./Parser.fsy"
                 : 'gentype_function));
# 1251 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_no_dot_pattern_expr_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "./Parser.fsy"
                           { Name = _2; FixedParams = []; Body = [EStatementBlock([SLet { Matcher = _3; Body = [] }; SExpression(_5)])] } 
                   )
# 134 "./Parser.fsy"
                 : 'gentype_function));
# 1264 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_param_list in
            let _6 = parseState.GetInput(6) :?> 'gentype_no_dot_pattern_expr_list in
            let _8 = parseState.GetInput(8) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "./Parser.fsy"
                           { Name = _2; FixedParams = _4; Body = [EStatementBlock([SLet { Matcher = _6; Body = [] }; SExpression(_8)])] } 
                   )
# 136 "./Parser.fsy"
                 : 'gentype_function));
# 1278 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "./Parser.fsy"
                                                   [_1] 
                   )
# 138 "./Parser.fsy"
                 : 'gentype_function_list));
# 1289 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            let _2 = parseState.GetInput(2) :?> 'gentype_function_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "./Parser.fsy"
                                                     _1 :: _2 
                   )
# 139 "./Parser.fsy"
                 : 'gentype_function_list));
# 1301 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_constructor_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "./Parser.fsy"
                                                                                   { Name = _2; Params = _3; Constructors = _5 } 
                   )
# 141 "./Parser.fsy"
                 : 'gentype_datatype));
# 1314 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "./Parser.fsy"
                                                   [_1] 
                   )
# 143 "./Parser.fsy"
                 : 'gentype_datatype_list));
# 1325 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            let _2 = parseState.GetInput(2) :?> 'gentype_datatype_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "./Parser.fsy"
                                                     _1 :: _2 
                   )
# 144 "./Parser.fsy"
                 : 'gentype_datatype_list));
# 1337 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "./Parser.fsy"
                                              { Name = _1; Components = [] } 
                   )
# 146 "./Parser.fsy"
                 : 'gentype_constructor));
# 1348 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constructor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "./Parser.fsy"
                                                           [_1] 
                   )
# 148 "./Parser.fsy"
                 : 'gentype_constructor_list));
# 1359 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constructor in
            let _3 = parseState.GetInput(3) :?> 'gentype_constructor_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "./Parser.fsy"
                                                               _1 :: _3 
                   )
# 149 "./Parser.fsy"
                 : 'gentype_constructor_list));
# 1371 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_handler_template_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "./Parser.fsy"
                          { Name = _2; Params = _3; Handlers = _5 } 
                   )
# 152 "./Parser.fsy"
                 : 'gentype_effect));
# 1384 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handler_template in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "./Parser.fsy"
                                                                     [_1] 
                   )
# 154 "./Parser.fsy"
                 : 'gentype_handler_template_list));
# 1395 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handler_template in
            let _2 = parseState.GetInput(2) :?> 'gentype_handler_template_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "./Parser.fsy"
                                                                       _1 :: _2 
                   )
# 155 "./Parser.fsy"
                 : 'gentype_handler_template_list));
# 1407 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "./Parser.fsy"
                            { Name = _1; FixedParams = []; Type = { Context = []; Head = TFixedConst 1 } } 
                   )
# 158 "./Parser.fsy"
                 : 'gentype_handler_template));
# 1418 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "./Parser.fsy"
                             { Name = _1; FixedParams = _3; Type = { Context = []; Head = TFixedConst 1 } } 
                   )
# 160 "./Parser.fsy"
                 : 'gentype_handler_template));
# 1430 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_test_all in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "./Parser.fsy"
                         { Name = _2; Left = _4; Right = _6; Kind = _5 } 
                   )
# 163 "./Parser.fsy"
                 : 'gentype_test));
# 1444 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_test_is in
            let _8 = parseState.GetInput(8) :?> 'gentype_simple_expr in
            let _10 = parseState.GetInput(10) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "./Parser.fsy"
                          { Name = _2; Left = _4; Right = _10; Kind = _5 _8 } 
                   )
# 165 "./Parser.fsy"
                 : 'gentype_test));
# 1459 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "./Parser.fsy"
                                            TKSatisfies 
                   )
# 167 "./Parser.fsy"
                 : 'gentype_test_all));
# 1469 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "./Parser.fsy"
                                      TKViolates 
                   )
# 168 "./Parser.fsy"
                 : 'gentype_test_all));
# 1479 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "./Parser.fsy"
                                       TKIsRoughly 
                   )
# 169 "./Parser.fsy"
                 : 'gentype_test_all));
# 1489 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_test_is in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "./Parser.fsy"
                                     _1 [] 
                   )
# 170 "./Parser.fsy"
                 : 'gentype_test_all));
# 1500 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "./Parser.fsy"
                                     TKIs 
                   )
# 172 "./Parser.fsy"
                 : 'gentype_test_is));
# 1510 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "./Parser.fsy"
                                  TKIsNot 
                   )
# 173 "./Parser.fsy"
                 : 'gentype_test_is));
# 1520 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term_statement_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "./Parser.fsy"
                                                                                  _2 
                   )
# 177 "./Parser.fsy"
                 : 'gentype_term_statement_block));
# 1531 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_statement in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "./Parser.fsy"
                                                                   [_1] 
                   )
# 179 "./Parser.fsy"
                 : 'gentype_term_statement_list));
# 1542 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_statement in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "./Parser.fsy"
                                                                            _1 :: _3 
                   )
# 180 "./Parser.fsy"
                 : 'gentype_term_statement_list));
# 1554 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_no_dot_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "./Parser.fsy"
                                                                          SLet { Matcher = _2; Body = [] } 
                   )
# 182 "./Parser.fsy"
                 : 'gentype_term_statement));
# 1565 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_no_dot_pattern_expr_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "./Parser.fsy"
                                                                               SLet { Matcher = _2; Body = _4 } 
                   )
# 183 "./Parser.fsy"
                 : 'gentype_term_statement));
# 1577 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_local_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "./Parser.fsy"
                                                       SLocals ([_1]) 
                   )
# 184 "./Parser.fsy"
                 : 'gentype_term_statement));
# 1588 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_local_function_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "./Parser.fsy"
                                                                              SLocals (_3) 
                   )
# 185 "./Parser.fsy"
                 : 'gentype_term_statement));
# 1599 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "./Parser.fsy"
                                                    SExpression (_1) 
                   )
# 186 "./Parser.fsy"
                 : 'gentype_term_statement));
# 1610 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_local_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "./Parser.fsy"
                                                                 [_1] 
                   )
# 188 "./Parser.fsy"
                 : 'gentype_local_function_list));
# 1621 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_local_function in
            let _2 = parseState.GetInput(2) :?> 'gentype_local_function_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "./Parser.fsy"
                                                                 _1 :: _2 
                   )
# 189 "./Parser.fsy"
                 : 'gentype_local_function_list));
# 1633 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "./Parser.fsy"
                                                                                     { Name = _3; Body = _5 } 
                   )
# 191 "./Parser.fsy"
                 : 'gentype_local_function));
# 1645 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "./Parser.fsy"
                                         [] 
                   )
# 193 "./Parser.fsy"
                 : 'gentype_simple_expr));
# 1655 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_word in
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "./Parser.fsy"
                                             _1 :: _2 
                   )
# 194 "./Parser.fsy"
                 : 'gentype_simple_expr));
# 1667 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "./Parser.fsy"
                                                   [] 
                   )
# 197 "./Parser.fsy"
                 : 'gentype_simple_expr_list));
# 1677 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_simple_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "./Parser.fsy"
                                                                 _1 :: _3 
                   )
# 198 "./Parser.fsy"
                 : 'gentype_simple_expr_list));
# 1689 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "./Parser.fsy"
                                                      EStatementBlock (_1) 
                   )
# 202 "./Parser.fsy"
                 : 'gentype_word));
# 1700 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handle_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "./Parser.fsy"
                                            _1 
                   )
# 203 "./Parser.fsy"
                 : 'gentype_word));
# 1711 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_inject_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "./Parser.fsy"
                                            _1 
                   )
# 204 "./Parser.fsy"
                 : 'gentype_word));
# 1722 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 "./Parser.fsy"
                                           _1 
                   )
# 205 "./Parser.fsy"
                 : 'gentype_word));
# 1733 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_if_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "./Parser.fsy"
                                         _1 
                   )
# 206 "./Parser.fsy"
                 : 'gentype_word));
# 1744 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_when_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "./Parser.fsy"
                                          _1 
                   )
# 207 "./Parser.fsy"
                 : 'gentype_word));
# 1755 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_while_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "./Parser.fsy"
                                           _1 
                   )
# 208 "./Parser.fsy"
                 : 'gentype_word));
# 1766 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "./Parser.fsy"
                                                EFunctionLiteral (_1) 
                   )
# 209 "./Parser.fsy"
                 : 'gentype_word));
# 1777 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tuple_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "./Parser.fsy"
                                             _1 
                   )
# 210 "./Parser.fsy"
                 : 'gentype_word));
# 1788 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_list_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "./Parser.fsy"
                                             _1 
                   )
# 211 "./Parser.fsy"
                 : 'gentype_word));
# 1799 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_vector_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "./Parser.fsy"
                                              _1 
                   )
# 212 "./Parser.fsy"
                 : 'gentype_word));
# 1810 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_slice_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "./Parser.fsy"
                                             _1 
                   )
# 213 "./Parser.fsy"
                 : 'gentype_word));
# 1821 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_dictionary_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "./Parser.fsy"
                                                 _1 
                   )
# 214 "./Parser.fsy"
                 : 'gentype_word));
# 1832 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_record_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "./Parser.fsy"
                                              _1 
                   )
# 215 "./Parser.fsy"
                 : 'gentype_word));
# 1843 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "./Parser.fsy"
                                               EExtension (_2) 
                   )
# 216 "./Parser.fsy"
                 : 'gentype_word));
# 1854 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "./Parser.fsy"
                                                ERestriction (_2) 
                   )
# 217 "./Parser.fsy"
                 : 'gentype_word));
# 1865 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "./Parser.fsy"
                                                 ESelect (_2) 
                   )
# 218 "./Parser.fsy"
                 : 'gentype_word));
# 1876 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_variant_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "./Parser.fsy"
                                               _1 
                   )
# 220 "./Parser.fsy"
                 : 'gentype_word));
# 1887 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 221 "./Parser.fsy"
                                                   EEmbedding (_2) 
                   )
# 221 "./Parser.fsy"
                 : 'gentype_word));
# 1898 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_case_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 222 "./Parser.fsy"
                                          _1 
                   )
# 222 "./Parser.fsy"
                 : 'gentype_word));
# 1909 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 "./Parser.fsy"
                                                           EWithState (_2) 
                   )
# 223 "./Parser.fsy"
                 : 'gentype_word));
# 1920 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_with_permission in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "./Parser.fsy"
                                               _1 
                   )
# 224 "./Parser.fsy"
                 : 'gentype_word));
# 1931 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 225 "./Parser.fsy"
                                         ENewRef 
                   )
# 225 "./Parser.fsy"
                 : 'gentype_word));
# 1941 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 "./Parser.fsy"
                                         EGetRef 
                   )
# 226 "./Parser.fsy"
                 : 'gentype_word));
# 1951 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 "./Parser.fsy"
                                         EPutRef 
                   )
# 227 "./Parser.fsy"
                 : 'gentype_word));
# 1961 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "./Parser.fsy"
                                                   EUntag (_2) 
                   )
# 228 "./Parser.fsy"
                 : 'gentype_word));
# 1972 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "./Parser.fsy"
                                     EDo 
                   )
# 229 "./Parser.fsy"
                 : 'gentype_word));
# 1982 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 "./Parser.fsy"
                                       ETrue 
                   )
# 231 "./Parser.fsy"
                 : 'gentype_word));
# 1992 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 232 "./Parser.fsy"
                                       EFalse 
                   )
# 232 "./Parser.fsy"
                 : 'gentype_word));
# 2002 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 233 "./Parser.fsy"
                                         EInteger (_1) 
                   )
# 233 "./Parser.fsy"
                 : 'gentype_word));
# 2013 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> DecimalLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 234 "./Parser.fsy"
                                         EDecimal (_1) 
                   )
# 234 "./Parser.fsy"
                 : 'gentype_word));
# 2024 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 235 "./Parser.fsy"
                                        EString (_1) 
                   )
# 235 "./Parser.fsy"
                 : 'gentype_word));
# 2035 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  Identifier  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 "./Parser.fsy"
                                           EIdentifier (_1) 
                   )
# 236 "./Parser.fsy"
                 : 'gentype_word));
# 2046 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 "./Parser.fsy"
                                                                                         EWithPermission (_2, _3) 
                   )
# 238 "./Parser.fsy"
                 : 'gentype_with_permission));
# 2058 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_handler_list in
            let _7 = parseState.GetInput(7) :?> 'gentype_return in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 240 "./Parser.fsy"
                                                                                                                               EHandle (_2, _3, _6, _7) 
                   )
# 240 "./Parser.fsy"
                 : 'gentype_handle_word));
# 2072 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_handler_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 241 "./Parser.fsy"
                                                                                                         EHandle (_2, _3, _6, []) 
                   )
# 241 "./Parser.fsy"
                 : 'gentype_handle_word));
# 2085 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  Identifier  in
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 243 "./Parser.fsy"
                                                                                    { Name = _1; Params = _2; Body = _4; } 
                   )
# 243 "./Parser.fsy"
                 : 'gentype_handler));
# 2098 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 246 "./Parser.fsy"
                          _3 
                   )
# 246 "./Parser.fsy"
                 : 'gentype_return));
# 2109 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_no_dot_pattern_expr_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 248 "./Parser.fsy"
                             [EStatementBlock([SLet { Matcher = _2; Body = [] }; SExpression(_4)])] 
                   )
# 248 "./Parser.fsy"
                 : 'gentype_return));
# 2121 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 250 "./Parser.fsy"
                                         [] 
                   )
# 250 "./Parser.fsy"
                 : 'gentype_param_list));
# 2131 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 251 "./Parser.fsy"
                                                     _1 :: _2 
                   )
# 251 "./Parser.fsy"
                 : 'gentype_param_list));
# 2143 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 253 "./Parser.fsy"
                                           [] 
                   )
# 253 "./Parser.fsy"
                 : 'gentype_handler_list));
# 2153 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handler in
            let _2 = parseState.GetInput(2) :?> 'gentype_handler_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 254 "./Parser.fsy"
                                                  _1 :: _2 
                   )
# 254 "./Parser.fsy"
                 : 'gentype_handler_list));
# 2165 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_eff_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 256 "./Parser.fsy"
                                                                          EInject (_2, _3) 
                   )
# 256 "./Parser.fsy"
                 : 'gentype_inject_word));
# 2177 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 258 "./Parser.fsy"
                                                  [_1] 
                   )
# 258 "./Parser.fsy"
                 : 'gentype_eff_list));
# 2188 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _2 = parseState.GetInput(2) :?> 'gentype_eff_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 259 "./Parser.fsy"
                                                   _1 :: _2 
                   )
# 259 "./Parser.fsy"
                 : 'gentype_eff_list));
# 2200 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_match_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 261 "./Parser.fsy"
                                                                                    EMatch (_3, []) 
                   )
# 261 "./Parser.fsy"
                 : 'gentype_match_word));
# 2211 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_match_clause_list in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 262 "./Parser.fsy"
                                                                                                        EMatch (_3, _6) 
                   )
# 262 "./Parser.fsy"
                 : 'gentype_match_word));
# 2223 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 264 "./Parser.fsy"
                                                            [_1] 
                   )
# 264 "./Parser.fsy"
                 : 'gentype_match_clause_list));
# 2234 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_clause in
            let _2 = parseState.GetInput(2) :?> 'gentype_match_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 265 "./Parser.fsy"
                                                              _1 :: _2 
                   )
# 265 "./Parser.fsy"
                 : 'gentype_match_clause_list));
# 2246 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 267 "./Parser.fsy"
                                                                                     { Matcher = _1; Body = _3 } 
                   )
# 267 "./Parser.fsy"
                 : 'gentype_match_clause));
# 2258 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 269 "./Parser.fsy"
                                                                                                    EIf (_2, _4, _6) 
                   )
# 269 "./Parser.fsy"
                 : 'gentype_if_word));
# 2271 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 271 "./Parser.fsy"
                                                                              EIf (_2, _4, []) 
                   )
# 271 "./Parser.fsy"
                 : 'gentype_when_word));
# 2283 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 273 "./Parser.fsy"
                                                                                EWhile (_2, _4) 
                   )
# 273 "./Parser.fsy"
                 : 'gentype_while_word));
# 2295 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 275 "./Parser.fsy"
                                                                      _2 
                   )
# 275 "./Parser.fsy"
                 : 'gentype_function_literal));
# 2306 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_no_dot_pattern_expr_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 277 "./Parser.fsy"
                             [EStatementBlock([SLet { Matcher = _2; Body = [] }; SExpression(_4)])] 
                   )
# 277 "./Parser.fsy"
                 : 'gentype_function_literal));
# 2318 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 279 "./Parser.fsy"
                                                                                      ETupleLiteral ([], _3) 
                   )
# 279 "./Parser.fsy"
                 : 'gentype_tuple_literal));
# 2329 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 280 "./Parser.fsy"
                                                                                          ETupleLiteral (_3, _5) 
                   )
# 280 "./Parser.fsy"
                 : 'gentype_tuple_literal));
# 2341 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 282 "./Parser.fsy"
                                                                                    EListLiteral ([], _3) 
                   )
# 282 "./Parser.fsy"
                 : 'gentype_list_literal));
# 2352 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 283 "./Parser.fsy"
                                                                                        EListLiteral (_3, _5) 
                   )
# 283 "./Parser.fsy"
                 : 'gentype_list_literal));
# 2364 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 285 "./Parser.fsy"
                                                                                        EVectorLiteral ([], _3) 
                   )
# 285 "./Parser.fsy"
                 : 'gentype_vector_literal));
# 2375 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 286 "./Parser.fsy"
                                                                                            EVectorLiteral (_3, _5) 
                   )
# 286 "./Parser.fsy"
                 : 'gentype_vector_literal));
# 2387 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_fixed_size_term_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_fixed_size_term_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 288 "./Parser.fsy"
                                                                                                                    ESliceLiteral (_3, _5) 
                   )
# 288 "./Parser.fsy"
                 : 'gentype_slice_literal));
# 2399 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 290 "./Parser.fsy"
                                                                                                         EDictionaryLiteral (_3, _5) 
                   )
# 290 "./Parser.fsy"
                 : 'gentype_dictionary_literal));
# 2411 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 291 "./Parser.fsy"
                                                                                EDictionaryLiteral ([], _3) 
                   )
# 291 "./Parser.fsy"
                 : 'gentype_dictionary_literal));
# 2422 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 293 "./Parser.fsy"
                                                                                           ERecordLiteral (_3, _5) 
                   )
# 293 "./Parser.fsy"
                 : 'gentype_record_literal));
# 2434 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 294 "./Parser.fsy"
                                                                     ERecordLiteral ([], _3) 
                   )
# 294 "./Parser.fsy"
                 : 'gentype_record_literal));
# 2445 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_field in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 296 "./Parser.fsy"
                                                                       EVariantLiteral (_3) 
                   )
# 296 "./Parser.fsy"
                 : 'gentype_variant_literal));
# 2456 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?>  List<CaseClause>  in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 298 "./Parser.fsy"
                                                                                                           ECase (_3, _6) 
                   )
# 298 "./Parser.fsy"
                 : 'gentype_case_word));
# 2468 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_case_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 300 "./Parser.fsy"
                                                          [_1] 
                   )
# 300 "./Parser.fsy"
                 :  List<CaseClause> ));
# 2479 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_case_clause in
            let _2 = parseState.GetInput(2) :?>  List<CaseClause>  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 301 "./Parser.fsy"
                                                           _1 :: _2 
                   )
# 301 "./Parser.fsy"
                 :  List<CaseClause> ));
# 2491 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 303 "./Parser.fsy"
                                                                             { Tag = _1; Body = _3 } 
                   )
# 303 "./Parser.fsy"
                 : 'gentype_case_clause));
# 2503 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 305 "./Parser.fsy"
                                         [] 
                   )
# 305 "./Parser.fsy"
                 : 'gentype_field_list));
# 2513 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_field in
            let _3 = parseState.GetInput(3) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 306 "./Parser.fsy"
                                                     _1 :: _3 
                   )
# 306 "./Parser.fsy"
                 : 'gentype_field_list));
# 2525 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 308 "./Parser.fsy"
                                                             (_1, _3) 
                   )
# 308 "./Parser.fsy"
                 : 'gentype_field));
# 2537 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_qualified_name in
            let _3 = parseState.GetInput(3) :?> 'gentype_fixed_size_term_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 310 "./Parser.fsy"
                                                                                        { Qualifier = List.take (_1.Length - 1) _1; Name = List.last _1; Size = Some (_3) } 
                   )
# 310 "./Parser.fsy"
                 :  Identifier ));
# 2549 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 311 "./Parser.fsy"
                                                       { Qualifier = List.take (_1.Length - 1) _1; Name = List.last _1; Size = None } 
                   )
# 311 "./Parser.fsy"
                 :  Identifier ));
# 2560 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 313 "./Parser.fsy"
                                                          [_1] 
                   )
# 313 "./Parser.fsy"
                 : 'gentype_qualified_name));
# 2571 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 314 "./Parser.fsy"
                                               [_1] 
                   )
# 314 "./Parser.fsy"
                 : 'gentype_qualified_name));
# 2582 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 315 "./Parser.fsy"
                                                   [_1] 
                   )
# 315 "./Parser.fsy"
                 : 'gentype_qualified_name));
# 2593 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 316 "./Parser.fsy"
                                                    [_1] 
                   )
# 316 "./Parser.fsy"
                 : 'gentype_qualified_name));
# 2604 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 317 "./Parser.fsy"
                                                                      _1 :: _3 
                   )
# 317 "./Parser.fsy"
                 : 'gentype_qualified_name));
# 2616 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 319 "./Parser.fsy"
                                                        [_1] 
                   )
# 319 "./Parser.fsy"
                 : 'gentype_qualified_ctor));
# 2627 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_qualified_ctor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 320 "./Parser.fsy"
                                                                      _1 :: _3 
                   )
# 320 "./Parser.fsy"
                 : 'gentype_qualified_ctor));
# 2639 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 324 "./Parser.fsy"
                                                                    ind _1 SEnd 
                   )
# 324 "./Parser.fsy"
                 : 'gentype_no_dot_pattern_expr_list));
# 2650 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 325 "./Parser.fsy"
                                                               ind _1 _2 
                   )
# 325 "./Parser.fsy"
                 : 'gentype_no_dot_pattern_expr_list));
# 2662 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 327 "./Parser.fsy"
                                                            ind _1 SEnd 
                   )
# 327 "./Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 2673 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 328 "./Parser.fsy"
                                                       dot _1 SEnd 
                   )
# 328 "./Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 2684 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 329 "./Parser.fsy"
                                                               ind _1 _2 
                   )
# 329 "./Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 2696 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 331 "./Parser.fsy"
                                                                                ind (_1, _3) SEnd 
                   )
# 331 "./Parser.fsy"
                 : 'gentype_field_pattern_list));
# 2708 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 332 "./Parser.fsy"
                                                           dot (_1, PWildcard) SEnd 
                   )
# 332 "./Parser.fsy"
                 : 'gentype_field_pattern_list));
# 2719 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_field_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 333 "./Parser.fsy"
                                                                                  ind (_1, _3) _4 
                   )
# 333 "./Parser.fsy"
                 : 'gentype_field_pattern_list));
# 2732 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 335 "./Parser.fsy"
                                                                                 ind (_1, _3) SEnd 
                   )
# 335 "./Parser.fsy"
                 : 'gentype_dict_pattern_list));
# 2744 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 336 "./Parser.fsy"
                                                             dot (_1, PWildcard) SEnd 
                   )
# 336 "./Parser.fsy"
                 : 'gentype_dict_pattern_list));
# 2755 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_dict_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 337 "./Parser.fsy"
                                                                                   ind (_1, _3) _4 
                   )
# 337 "./Parser.fsy"
                 : 'gentype_dict_pattern_list));
# 2768 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 339 "./Parser.fsy"
                                                      PTrue 
                   )
# 339 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2778 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 340 "./Parser.fsy"
                                             PFalse 
                   )
# 340 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2788 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 341 "./Parser.fsy"
                                               PInteger (_1) 
                   )
# 341 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2799 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> DecimalLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 342 "./Parser.fsy"
                                               PDecimal (_1) 
                   )
# 342 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2810 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 343 "./Parser.fsy"
                                              PString (_1) 
                   )
# 343 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2821 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 344 "./Parser.fsy"
                                                 PWildcard 
                   )
# 344 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2831 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 345 "./Parser.fsy"
                                                      PRef (_2) 
                   )
# 345 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2842 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 346 "./Parser.fsy"
                                                 PNamed (_1, PWildcard) 
                   )
# 346 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2853 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 347 "./Parser.fsy"
                                                              PNamed (_1, _3) 
                   )
# 347 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2865 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_qualified_ctor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 348 "./Parser.fsy"
                                                    PConstructor (_1, SEnd) 
                   )
# 348 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2876 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_qualified_ctor in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 349 "./Parser.fsy"
                                                                              PConstructor (_2, _3) 
                   )
# 349 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2888 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tuple_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 350 "./Parser.fsy"
                                                   _1 
                   )
# 350 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2899 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_list_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 351 "./Parser.fsy"
                                                   _1 
                   )
# 351 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2910 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_vector_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 352 "./Parser.fsy"
                                                    _1 
                   )
# 352 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2921 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_slice_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 353 "./Parser.fsy"
                                                   _1 
                   )
# 353 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2932 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_record_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 354 "./Parser.fsy"
                                                    _1 
                   )
# 354 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2943 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_dict_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 355 "./Parser.fsy"
                                                   _1 
                   )
# 355 "./Parser.fsy"
                 : 'gentype_pattern_expr));
# 2954 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 357 "./Parser.fsy"
                                                                                 PTuple (_3) 
                   )
# 357 "./Parser.fsy"
                 : 'gentype_tuple_pattern));
# 2965 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 359 "./Parser.fsy"
                                                                               PList (_3) 
                   )
# 359 "./Parser.fsy"
                 : 'gentype_list_pattern));
# 2976 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 361 "./Parser.fsy"
                                                                                  PVector (_3) 
                   )
# 361 "./Parser.fsy"
                 : 'gentype_vector_pattern));
# 2987 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 363 "./Parser.fsy"
                                                                                 PSlice (_3) 
                   )
# 363 "./Parser.fsy"
                 : 'gentype_slice_pattern));
# 2998 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_field_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 365 "./Parser.fsy"
                                                                                   PRecord (_3) 
                   )
# 365 "./Parser.fsy"
                 : 'gentype_record_pattern));
# 3009 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_dict_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 367 "./Parser.fsy"
                                                                                    PDictionary (_3) 
                   )
# 367 "./Parser.fsy"
                 : 'gentype_dict_pattern));
# 3020 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fixed_size_term_factor_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 371 "./Parser.fsy"
                                                                          _1 
                   )
# 371 "./Parser.fsy"
                 : 'gentype_fixed_size_term_expr));
# 3031 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fixed_size_term_factor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 373 "./Parser.fsy"
                                                                                    [_1] 
                   )
# 373 "./Parser.fsy"
                 : 'gentype_fixed_size_term_factor_list));
# 3042 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fixed_size_term_factor in
            let _3 = parseState.GetInput(3) :?> 'gentype_fixed_size_term_factor_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 374 "./Parser.fsy"
                                                                                         _1 :: _3 
                   )
# 374 "./Parser.fsy"
                 : 'gentype_fixed_size_term_factor_list));
# 3054 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 376 "./Parser.fsy"
                                                          FixConst (_1) 
                   )
# 376 "./Parser.fsy"
                 : 'gentype_fixed_size_term_factor));
# 3065 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 377 "./Parser.fsy"
                                              FixVar (_1) 
                   )
# 377 "./Parser.fsy"
                 : 'gentype_fixed_size_term_factor));
# 3076 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 378 "./Parser.fsy"
                                                    FixCoeff (_1, _2) 
                   )
# 378 "./Parser.fsy"
                 : 'gentype_fixed_size_term_factor));
|]
# 3089 "Parser.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 97;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let unit lexer lexbuf :  Unit  =
    engine lexer lexbuf 0 :?> _
