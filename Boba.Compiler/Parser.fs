// Implementation file for parser generated by fsyacc
module Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 ".\Parser.fsy"


open Boba.Compiler.Syntax
open Boba.Core.DotSeq
open Boba.Core.Kinds
open Boba.Core.Types
open Boba.Core.TypeBuilder


# 16 "Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | IS
  | ONE
  | TRUE
  | FALSE
  | AND
  | OR
  | NOT
  | TUPLE
  | LIST
  | VECTOR
  | SLICE
  | DICTIONARY
  | CASE
  | RECORD
  | VARIANT
  | FOR
  | FOLD
  | MAP
  | BREAK
  | FINAL
  | FILL
  | LENGTH
  | RESULT
  | IF
  | WHEN
  | SWITCH
  | WHILE
  | THEN
  | ELSE
  | DO
  | MATCH
  | INJECT
  | WITH
  | AFTER
  | HANDLE
  | UNTAG
  | BY
  | PER
  | TRUST
  | DISTRUST
  | AUDIT
  | NEW_REF
  | GET_REF
  | PUT_REF
  | WITH_STATE
  | PERMISSION
  | FUNCTION
  | NATIVE
  | LOCAL
  | LET
  | BOOLEAN
  | ABELIAN
  | SYNTACTIC
  | IS_ROUGHLY
  | IS_NOT
  | SATISFIES
  | VIOLATES
  | TEST
  | LAW
  | EXHAUSTIVE
  | SYNONYM
  | TAG
  | EFFECT
  | OVERLOAD
  | INSTANCE
  | RULE
  | CHECK
  | PATTERN
  | RECURSIVE
  | KIND
  | DATA
  | ABOUT
  | MAIN
  | EXPORT
  | FROM
  | AS
  | IMPORT
  | REF
  | UNDERSCORE
  | EQUALS
  | ELLIPSIS
  | BAR
  | DOT
  | PLUS
  | MINUS
  | STAR
  | COLON
  | DOUBLE_COLON
  | COMMA
  | SEMICOLON
  | FN_CTOR
  | L_BIND
  | R_BIND
  | L_STAR
  | R_STAR
  | L_ARROW
  | R_ARROW
  | L_BRACKET
  | R_BRACKET
  | L_BRACE
  | R_BRACE
  | L_PAREN
  | R_PAREN
  | DOCUMENTATION_LINE of (DocumentationLine)
  | NATIVE_CODE_LINE of (NativeCodeLine)
  | STRING of (StringLiteral)
  | DECIMAL of (DecimalLiteral)
  | INTEGER of (IntegerLiteral)
  | TEST_NAME of (Name)
  | PREDICATE_NAME of (Name)
  | OPERATOR_NAME of (Name)
  | BIG_NAME of (Name)
  | SMALL_NAME of (Name)
  | EOF
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_IS
    | TOKEN_ONE
    | TOKEN_TRUE
    | TOKEN_FALSE
    | TOKEN_AND
    | TOKEN_OR
    | TOKEN_NOT
    | TOKEN_TUPLE
    | TOKEN_LIST
    | TOKEN_VECTOR
    | TOKEN_SLICE
    | TOKEN_DICTIONARY
    | TOKEN_CASE
    | TOKEN_RECORD
    | TOKEN_VARIANT
    | TOKEN_FOR
    | TOKEN_FOLD
    | TOKEN_MAP
    | TOKEN_BREAK
    | TOKEN_FINAL
    | TOKEN_FILL
    | TOKEN_LENGTH
    | TOKEN_RESULT
    | TOKEN_IF
    | TOKEN_WHEN
    | TOKEN_SWITCH
    | TOKEN_WHILE
    | TOKEN_THEN
    | TOKEN_ELSE
    | TOKEN_DO
    | TOKEN_MATCH
    | TOKEN_INJECT
    | TOKEN_WITH
    | TOKEN_AFTER
    | TOKEN_HANDLE
    | TOKEN_UNTAG
    | TOKEN_BY
    | TOKEN_PER
    | TOKEN_TRUST
    | TOKEN_DISTRUST
    | TOKEN_AUDIT
    | TOKEN_NEW_REF
    | TOKEN_GET_REF
    | TOKEN_PUT_REF
    | TOKEN_WITH_STATE
    | TOKEN_PERMISSION
    | TOKEN_FUNCTION
    | TOKEN_NATIVE
    | TOKEN_LOCAL
    | TOKEN_LET
    | TOKEN_BOOLEAN
    | TOKEN_ABELIAN
    | TOKEN_SYNTACTIC
    | TOKEN_IS_ROUGHLY
    | TOKEN_IS_NOT
    | TOKEN_SATISFIES
    | TOKEN_VIOLATES
    | TOKEN_TEST
    | TOKEN_LAW
    | TOKEN_EXHAUSTIVE
    | TOKEN_SYNONYM
    | TOKEN_TAG
    | TOKEN_EFFECT
    | TOKEN_OVERLOAD
    | TOKEN_INSTANCE
    | TOKEN_RULE
    | TOKEN_CHECK
    | TOKEN_PATTERN
    | TOKEN_RECURSIVE
    | TOKEN_KIND
    | TOKEN_DATA
    | TOKEN_ABOUT
    | TOKEN_MAIN
    | TOKEN_EXPORT
    | TOKEN_FROM
    | TOKEN_AS
    | TOKEN_IMPORT
    | TOKEN_REF
    | TOKEN_UNDERSCORE
    | TOKEN_EQUALS
    | TOKEN_ELLIPSIS
    | TOKEN_BAR
    | TOKEN_DOT
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_STAR
    | TOKEN_COLON
    | TOKEN_DOUBLE_COLON
    | TOKEN_COMMA
    | TOKEN_SEMICOLON
    | TOKEN_FN_CTOR
    | TOKEN_L_BIND
    | TOKEN_R_BIND
    | TOKEN_L_STAR
    | TOKEN_R_STAR
    | TOKEN_L_ARROW
    | TOKEN_R_ARROW
    | TOKEN_L_BRACKET
    | TOKEN_R_BRACKET
    | TOKEN_L_BRACE
    | TOKEN_R_BRACE
    | TOKEN_L_PAREN
    | TOKEN_R_PAREN
    | TOKEN_DOCUMENTATION_LINE
    | TOKEN_NATIVE_CODE_LINE
    | TOKEN_STRING
    | TOKEN_DECIMAL
    | TOKEN_INTEGER
    | TOKEN_TEST_NAME
    | TOKEN_PREDICATE_NAME
    | TOKEN_OPERATOR_NAME
    | TOKEN_BIG_NAME
    | TOKEN_SMALL_NAME
    | TOKEN_EOF
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startunit
    | NONTERM_unit
    | NONTERM_import_list
    | NONTERM_decl_list
    | NONTERM_main
    | NONTERM_import
    | NONTERM_import_path
    | NONTERM_remote
    | NONTERM_export
    | NONTERM_brace_names
    | NONTERM_name_list
    | NONTERM_name
    | NONTERM_declaration
    | NONTERM_documentation
    | NONTERM_documentation_lines
    | NONTERM_function
    | NONTERM_function_list
    | NONTERM_native
    | NONTERM_native_code_list
    | NONTERM_userkind
    | NONTERM_kind_unify
    | NONTERM_datatype
    | NONTERM_type_param_list
    | NONTERM_datatype_list
    | NONTERM_constructor
    | NONTERM_constructor_list
    | NONTERM_rule
    | NONTERM_overload
    | NONTERM_instance
    | NONTERM_effect
    | NONTERM_handler_template_list
    | NONTERM_handler_template
    | NONTERM_test
    | NONTERM_law
    | NONTERM_test_all
    | NONTERM_check
    | NONTERM_tag
    | NONTERM_any_kind
    | NONTERM_qual_type
    | NONTERM_predicate_list
    | NONTERM_predicate
    | NONTERM_any_type
    | NONTERM_any_type_list
    | NONTERM_term_statement_block
    | NONTERM_term_statement_list
    | NONTERM_term_statement
    | NONTERM_non_empty_simple_expr
    | NONTERM_simple_expr
    | NONTERM_word
    | NONTERM_permission
    | NONTERM_handle_word
    | NONTERM_handler
    | NONTERM_return
    | NONTERM_param_list
    | NONTERM_handler_list
    | NONTERM_inject_word
    | NONTERM_eff_list
    | NONTERM_match_word
    | NONTERM_match_clause_list
    | NONTERM_match_clause
    | NONTERM_if_word
    | NONTERM_switch_word
    | NONTERM_switch_clause_list
    | NONTERM_when_word
    | NONTERM_while_word
    | NONTERM_for_word
    | NONTERM_for_results
    | NONTERM_for_result
    | NONTERM_for_sequence
    | NONTERM_parallel_sequences
    | NONTERM_fold_inits
    | NONTERM_function_literal
    | NONTERM_lit_expr_list
    | NONTERM_tuple_literal
    | NONTERM_list_literal
    | NONTERM_record_literal
    | NONTERM_variant_literal
    | NONTERM_case_word
    | NONTERM_case_clause_list
    | NONTERM_case_clause
    | NONTERM_field_list
    | NONTERM_field
    | NONTERM_identifier
    | NONTERM_type_identifier
    | NONTERM_qualified_name
    | NONTERM_qualified_ctor
    | NONTERM_no_dot_pattern_expr_list
    | NONTERM_var_only_pattern_list
    | NONTERM_pattern_expr_list
    | NONTERM_field_pattern_list
    | NONTERM_pattern_expr
    | NONTERM_tuple_pattern
    | NONTERM_list_pattern
    | NONTERM_vector_pattern
    | NONTERM_slice_pattern
    | NONTERM_record_pattern

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | IS  -> 0 
  | ONE  -> 1 
  | TRUE  -> 2 
  | FALSE  -> 3 
  | AND  -> 4 
  | OR  -> 5 
  | NOT  -> 6 
  | TUPLE  -> 7 
  | LIST  -> 8 
  | VECTOR  -> 9 
  | SLICE  -> 10 
  | DICTIONARY  -> 11 
  | CASE  -> 12 
  | RECORD  -> 13 
  | VARIANT  -> 14 
  | FOR  -> 15 
  | FOLD  -> 16 
  | MAP  -> 17 
  | BREAK  -> 18 
  | FINAL  -> 19 
  | FILL  -> 20 
  | LENGTH  -> 21 
  | RESULT  -> 22 
  | IF  -> 23 
  | WHEN  -> 24 
  | SWITCH  -> 25 
  | WHILE  -> 26 
  | THEN  -> 27 
  | ELSE  -> 28 
  | DO  -> 29 
  | MATCH  -> 30 
  | INJECT  -> 31 
  | WITH  -> 32 
  | AFTER  -> 33 
  | HANDLE  -> 34 
  | UNTAG  -> 35 
  | BY  -> 36 
  | PER  -> 37 
  | TRUST  -> 38 
  | DISTRUST  -> 39 
  | AUDIT  -> 40 
  | NEW_REF  -> 41 
  | GET_REF  -> 42 
  | PUT_REF  -> 43 
  | WITH_STATE  -> 44 
  | PERMISSION  -> 45 
  | FUNCTION  -> 46 
  | NATIVE  -> 47 
  | LOCAL  -> 48 
  | LET  -> 49 
  | BOOLEAN  -> 50 
  | ABELIAN  -> 51 
  | SYNTACTIC  -> 52 
  | IS_ROUGHLY  -> 53 
  | IS_NOT  -> 54 
  | SATISFIES  -> 55 
  | VIOLATES  -> 56 
  | TEST  -> 57 
  | LAW  -> 58 
  | EXHAUSTIVE  -> 59 
  | SYNONYM  -> 60 
  | TAG  -> 61 
  | EFFECT  -> 62 
  | OVERLOAD  -> 63 
  | INSTANCE  -> 64 
  | RULE  -> 65 
  | CHECK  -> 66 
  | PATTERN  -> 67 
  | RECURSIVE  -> 68 
  | KIND  -> 69 
  | DATA  -> 70 
  | ABOUT  -> 71 
  | MAIN  -> 72 
  | EXPORT  -> 73 
  | FROM  -> 74 
  | AS  -> 75 
  | IMPORT  -> 76 
  | REF  -> 77 
  | UNDERSCORE  -> 78 
  | EQUALS  -> 79 
  | ELLIPSIS  -> 80 
  | BAR  -> 81 
  | DOT  -> 82 
  | PLUS  -> 83 
  | MINUS  -> 84 
  | STAR  -> 85 
  | COLON  -> 86 
  | DOUBLE_COLON  -> 87 
  | COMMA  -> 88 
  | SEMICOLON  -> 89 
  | FN_CTOR  -> 90 
  | L_BIND  -> 91 
  | R_BIND  -> 92 
  | L_STAR  -> 93 
  | R_STAR  -> 94 
  | L_ARROW  -> 95 
  | R_ARROW  -> 96 
  | L_BRACKET  -> 97 
  | R_BRACKET  -> 98 
  | L_BRACE  -> 99 
  | R_BRACE  -> 100 
  | L_PAREN  -> 101 
  | R_PAREN  -> 102 
  | DOCUMENTATION_LINE _ -> 103 
  | NATIVE_CODE_LINE _ -> 104 
  | STRING _ -> 105 
  | DECIMAL _ -> 106 
  | INTEGER _ -> 107 
  | TEST_NAME _ -> 108 
  | PREDICATE_NAME _ -> 109 
  | OPERATOR_NAME _ -> 110 
  | BIG_NAME _ -> 111 
  | SMALL_NAME _ -> 112 
  | EOF  -> 113 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_IS 
  | 1 -> TOKEN_ONE 
  | 2 -> TOKEN_TRUE 
  | 3 -> TOKEN_FALSE 
  | 4 -> TOKEN_AND 
  | 5 -> TOKEN_OR 
  | 6 -> TOKEN_NOT 
  | 7 -> TOKEN_TUPLE 
  | 8 -> TOKEN_LIST 
  | 9 -> TOKEN_VECTOR 
  | 10 -> TOKEN_SLICE 
  | 11 -> TOKEN_DICTIONARY 
  | 12 -> TOKEN_CASE 
  | 13 -> TOKEN_RECORD 
  | 14 -> TOKEN_VARIANT 
  | 15 -> TOKEN_FOR 
  | 16 -> TOKEN_FOLD 
  | 17 -> TOKEN_MAP 
  | 18 -> TOKEN_BREAK 
  | 19 -> TOKEN_FINAL 
  | 20 -> TOKEN_FILL 
  | 21 -> TOKEN_LENGTH 
  | 22 -> TOKEN_RESULT 
  | 23 -> TOKEN_IF 
  | 24 -> TOKEN_WHEN 
  | 25 -> TOKEN_SWITCH 
  | 26 -> TOKEN_WHILE 
  | 27 -> TOKEN_THEN 
  | 28 -> TOKEN_ELSE 
  | 29 -> TOKEN_DO 
  | 30 -> TOKEN_MATCH 
  | 31 -> TOKEN_INJECT 
  | 32 -> TOKEN_WITH 
  | 33 -> TOKEN_AFTER 
  | 34 -> TOKEN_HANDLE 
  | 35 -> TOKEN_UNTAG 
  | 36 -> TOKEN_BY 
  | 37 -> TOKEN_PER 
  | 38 -> TOKEN_TRUST 
  | 39 -> TOKEN_DISTRUST 
  | 40 -> TOKEN_AUDIT 
  | 41 -> TOKEN_NEW_REF 
  | 42 -> TOKEN_GET_REF 
  | 43 -> TOKEN_PUT_REF 
  | 44 -> TOKEN_WITH_STATE 
  | 45 -> TOKEN_PERMISSION 
  | 46 -> TOKEN_FUNCTION 
  | 47 -> TOKEN_NATIVE 
  | 48 -> TOKEN_LOCAL 
  | 49 -> TOKEN_LET 
  | 50 -> TOKEN_BOOLEAN 
  | 51 -> TOKEN_ABELIAN 
  | 52 -> TOKEN_SYNTACTIC 
  | 53 -> TOKEN_IS_ROUGHLY 
  | 54 -> TOKEN_IS_NOT 
  | 55 -> TOKEN_SATISFIES 
  | 56 -> TOKEN_VIOLATES 
  | 57 -> TOKEN_TEST 
  | 58 -> TOKEN_LAW 
  | 59 -> TOKEN_EXHAUSTIVE 
  | 60 -> TOKEN_SYNONYM 
  | 61 -> TOKEN_TAG 
  | 62 -> TOKEN_EFFECT 
  | 63 -> TOKEN_OVERLOAD 
  | 64 -> TOKEN_INSTANCE 
  | 65 -> TOKEN_RULE 
  | 66 -> TOKEN_CHECK 
  | 67 -> TOKEN_PATTERN 
  | 68 -> TOKEN_RECURSIVE 
  | 69 -> TOKEN_KIND 
  | 70 -> TOKEN_DATA 
  | 71 -> TOKEN_ABOUT 
  | 72 -> TOKEN_MAIN 
  | 73 -> TOKEN_EXPORT 
  | 74 -> TOKEN_FROM 
  | 75 -> TOKEN_AS 
  | 76 -> TOKEN_IMPORT 
  | 77 -> TOKEN_REF 
  | 78 -> TOKEN_UNDERSCORE 
  | 79 -> TOKEN_EQUALS 
  | 80 -> TOKEN_ELLIPSIS 
  | 81 -> TOKEN_BAR 
  | 82 -> TOKEN_DOT 
  | 83 -> TOKEN_PLUS 
  | 84 -> TOKEN_MINUS 
  | 85 -> TOKEN_STAR 
  | 86 -> TOKEN_COLON 
  | 87 -> TOKEN_DOUBLE_COLON 
  | 88 -> TOKEN_COMMA 
  | 89 -> TOKEN_SEMICOLON 
  | 90 -> TOKEN_FN_CTOR 
  | 91 -> TOKEN_L_BIND 
  | 92 -> TOKEN_R_BIND 
  | 93 -> TOKEN_L_STAR 
  | 94 -> TOKEN_R_STAR 
  | 95 -> TOKEN_L_ARROW 
  | 96 -> TOKEN_R_ARROW 
  | 97 -> TOKEN_L_BRACKET 
  | 98 -> TOKEN_R_BRACKET 
  | 99 -> TOKEN_L_BRACE 
  | 100 -> TOKEN_R_BRACE 
  | 101 -> TOKEN_L_PAREN 
  | 102 -> TOKEN_R_PAREN 
  | 103 -> TOKEN_DOCUMENTATION_LINE 
  | 104 -> TOKEN_NATIVE_CODE_LINE 
  | 105 -> TOKEN_STRING 
  | 106 -> TOKEN_DECIMAL 
  | 107 -> TOKEN_INTEGER 
  | 108 -> TOKEN_TEST_NAME 
  | 109 -> TOKEN_PREDICATE_NAME 
  | 110 -> TOKEN_OPERATOR_NAME 
  | 111 -> TOKEN_BIG_NAME 
  | 112 -> TOKEN_SMALL_NAME 
  | 113 -> TOKEN_EOF 
  | 116 -> TOKEN_end_of_input
  | 114 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startunit 
    | 1 -> NONTERM_unit 
    | 2 -> NONTERM_unit 
    | 3 -> NONTERM_import_list 
    | 4 -> NONTERM_import_list 
    | 5 -> NONTERM_decl_list 
    | 6 -> NONTERM_decl_list 
    | 7 -> NONTERM_main 
    | 8 -> NONTERM_import 
    | 9 -> NONTERM_import 
    | 10 -> NONTERM_import 
    | 11 -> NONTERM_import_path 
    | 12 -> NONTERM_import_path 
    | 13 -> NONTERM_remote 
    | 14 -> NONTERM_export 
    | 15 -> NONTERM_brace_names 
    | 16 -> NONTERM_name_list 
    | 17 -> NONTERM_name_list 
    | 18 -> NONTERM_name 
    | 19 -> NONTERM_name 
    | 20 -> NONTERM_name 
    | 21 -> NONTERM_declaration 
    | 22 -> NONTERM_declaration 
    | 23 -> NONTERM_declaration 
    | 24 -> NONTERM_declaration 
    | 25 -> NONTERM_declaration 
    | 26 -> NONTERM_declaration 
    | 27 -> NONTERM_declaration 
    | 28 -> NONTERM_declaration 
    | 29 -> NONTERM_declaration 
    | 30 -> NONTERM_declaration 
    | 31 -> NONTERM_declaration 
    | 32 -> NONTERM_declaration 
    | 33 -> NONTERM_declaration 
    | 34 -> NONTERM_declaration 
    | 35 -> NONTERM_declaration 
    | 36 -> NONTERM_declaration 
    | 37 -> NONTERM_declaration 
    | 38 -> NONTERM_documentation 
    | 39 -> NONTERM_documentation_lines 
    | 40 -> NONTERM_documentation_lines 
    | 41 -> NONTERM_function 
    | 42 -> NONTERM_function 
    | 43 -> NONTERM_function 
    | 44 -> NONTERM_function 
    | 45 -> NONTERM_function_list 
    | 46 -> NONTERM_function_list 
    | 47 -> NONTERM_native 
    | 48 -> NONTERM_native 
    | 49 -> NONTERM_native_code_list 
    | 50 -> NONTERM_native_code_list 
    | 51 -> NONTERM_userkind 
    | 52 -> NONTERM_userkind 
    | 53 -> NONTERM_kind_unify 
    | 54 -> NONTERM_kind_unify 
    | 55 -> NONTERM_kind_unify 
    | 56 -> NONTERM_datatype 
    | 57 -> NONTERM_datatype 
    | 58 -> NONTERM_type_param_list 
    | 59 -> NONTERM_type_param_list 
    | 60 -> NONTERM_type_param_list 
    | 61 -> NONTERM_datatype_list 
    | 62 -> NONTERM_datatype_list 
    | 63 -> NONTERM_constructor 
    | 64 -> NONTERM_constructor 
    | 65 -> NONTERM_constructor_list 
    | 66 -> NONTERM_constructor_list 
    | 67 -> NONTERM_rule 
    | 68 -> NONTERM_rule 
    | 69 -> NONTERM_rule 
    | 70 -> NONTERM_rule 
    | 71 -> NONTERM_overload 
    | 72 -> NONTERM_instance 
    | 73 -> NONTERM_effect 
    | 74 -> NONTERM_handler_template_list 
    | 75 -> NONTERM_handler_template_list 
    | 76 -> NONTERM_handler_template 
    | 77 -> NONTERM_test 
    | 78 -> NONTERM_law 
    | 79 -> NONTERM_test_all 
    | 80 -> NONTERM_test_all 
    | 81 -> NONTERM_test_all 
    | 82 -> NONTERM_test_all 
    | 83 -> NONTERM_test_all 
    | 84 -> NONTERM_test_all 
    | 85 -> NONTERM_test_all 
    | 86 -> NONTERM_check 
    | 87 -> NONTERM_tag 
    | 88 -> NONTERM_any_kind 
    | 89 -> NONTERM_any_kind 
    | 90 -> NONTERM_any_kind 
    | 91 -> NONTERM_any_kind 
    | 92 -> NONTERM_qual_type 
    | 93 -> NONTERM_qual_type 
    | 94 -> NONTERM_predicate_list 
    | 95 -> NONTERM_predicate_list 
    | 96 -> NONTERM_predicate_list 
    | 97 -> NONTERM_predicate_list 
    | 98 -> NONTERM_predicate 
    | 99 -> NONTERM_predicate 
    | 100 -> NONTERM_any_type 
    | 101 -> NONTERM_any_type 
    | 102 -> NONTERM_any_type 
    | 103 -> NONTERM_any_type 
    | 104 -> NONTERM_any_type 
    | 105 -> NONTERM_any_type 
    | 106 -> NONTERM_any_type 
    | 107 -> NONTERM_any_type 
    | 108 -> NONTERM_any_type 
    | 109 -> NONTERM_any_type 
    | 110 -> NONTERM_any_type 
    | 111 -> NONTERM_any_type 
    | 112 -> NONTERM_any_type 
    | 113 -> NONTERM_any_type 
    | 114 -> NONTERM_any_type 
    | 115 -> NONTERM_any_type 
    | 116 -> NONTERM_any_type 
    | 117 -> NONTERM_any_type 
    | 118 -> NONTERM_any_type 
    | 119 -> NONTERM_any_type 
    | 120 -> NONTERM_any_type_list 
    | 121 -> NONTERM_any_type_list 
    | 122 -> NONTERM_term_statement_block 
    | 123 -> NONTERM_term_statement_list 
    | 124 -> NONTERM_term_statement_list 
    | 125 -> NONTERM_term_statement 
    | 126 -> NONTERM_term_statement 
    | 127 -> NONTERM_term_statement 
    | 128 -> NONTERM_non_empty_simple_expr 
    | 129 -> NONTERM_non_empty_simple_expr 
    | 130 -> NONTERM_non_empty_simple_expr 
    | 131 -> NONTERM_non_empty_simple_expr 
    | 132 -> NONTERM_non_empty_simple_expr 
    | 133 -> NONTERM_non_empty_simple_expr 
    | 134 -> NONTERM_simple_expr 
    | 135 -> NONTERM_simple_expr 
    | 136 -> NONTERM_word 
    | 137 -> NONTERM_word 
    | 138 -> NONTERM_word 
    | 139 -> NONTERM_word 
    | 140 -> NONTERM_word 
    | 141 -> NONTERM_word 
    | 142 -> NONTERM_word 
    | 143 -> NONTERM_word 
    | 144 -> NONTERM_word 
    | 145 -> NONTERM_word 
    | 146 -> NONTERM_word 
    | 147 -> NONTERM_word 
    | 148 -> NONTERM_word 
    | 149 -> NONTERM_word 
    | 150 -> NONTERM_word 
    | 151 -> NONTERM_word 
    | 152 -> NONTERM_word 
    | 153 -> NONTERM_word 
    | 154 -> NONTERM_word 
    | 155 -> NONTERM_word 
    | 156 -> NONTERM_word 
    | 157 -> NONTERM_word 
    | 158 -> NONTERM_word 
    | 159 -> NONTERM_word 
    | 160 -> NONTERM_word 
    | 161 -> NONTERM_word 
    | 162 -> NONTERM_word 
    | 163 -> NONTERM_word 
    | 164 -> NONTERM_word 
    | 165 -> NONTERM_word 
    | 166 -> NONTERM_word 
    | 167 -> NONTERM_word 
    | 168 -> NONTERM_word 
    | 169 -> NONTERM_permission 
    | 170 -> NONTERM_permission 
    | 171 -> NONTERM_handle_word 
    | 172 -> NONTERM_handle_word 
    | 173 -> NONTERM_handler 
    | 174 -> NONTERM_return 
    | 175 -> NONTERM_return 
    | 176 -> NONTERM_param_list 
    | 177 -> NONTERM_param_list 
    | 178 -> NONTERM_handler_list 
    | 179 -> NONTERM_handler_list 
    | 180 -> NONTERM_inject_word 
    | 181 -> NONTERM_eff_list 
    | 182 -> NONTERM_eff_list 
    | 183 -> NONTERM_match_word 
    | 184 -> NONTERM_match_word 
    | 185 -> NONTERM_match_clause_list 
    | 186 -> NONTERM_match_clause_list 
    | 187 -> NONTERM_match_clause 
    | 188 -> NONTERM_if_word 
    | 189 -> NONTERM_switch_word 
    | 190 -> NONTERM_switch_clause_list 
    | 191 -> NONTERM_switch_clause_list 
    | 192 -> NONTERM_switch_clause_list 
    | 193 -> NONTERM_when_word 
    | 194 -> NONTERM_while_word 
    | 195 -> NONTERM_for_word 
    | 196 -> NONTERM_for_word 
    | 197 -> NONTERM_for_word 
    | 198 -> NONTERM_for_results 
    | 199 -> NONTERM_for_results 
    | 200 -> NONTERM_for_result 
    | 201 -> NONTERM_for_result 
    | 202 -> NONTERM_for_result 
    | 203 -> NONTERM_for_sequence 
    | 204 -> NONTERM_for_sequence 
    | 205 -> NONTERM_for_sequence 
    | 206 -> NONTERM_parallel_sequences 
    | 207 -> NONTERM_parallel_sequences 
    | 208 -> NONTERM_fold_inits 
    | 209 -> NONTERM_fold_inits 
    | 210 -> NONTERM_function_literal 
    | 211 -> NONTERM_function_literal 
    | 212 -> NONTERM_lit_expr_list 
    | 213 -> NONTERM_lit_expr_list 
    | 214 -> NONTERM_tuple_literal 
    | 215 -> NONTERM_tuple_literal 
    | 216 -> NONTERM_tuple_literal 
    | 217 -> NONTERM_tuple_literal 
    | 218 -> NONTERM_list_literal 
    | 219 -> NONTERM_list_literal 
    | 220 -> NONTERM_record_literal 
    | 221 -> NONTERM_record_literal 
    | 222 -> NONTERM_record_literal 
    | 223 -> NONTERM_record_literal 
    | 224 -> NONTERM_variant_literal 
    | 225 -> NONTERM_case_word 
    | 226 -> NONTERM_case_clause_list 
    | 227 -> NONTERM_case_clause_list 
    | 228 -> NONTERM_case_clause 
    | 229 -> NONTERM_field_list 
    | 230 -> NONTERM_field_list 
    | 231 -> NONTERM_field 
    | 232 -> NONTERM_identifier 
    | 233 -> NONTERM_type_identifier 
    | 234 -> NONTERM_qualified_name 
    | 235 -> NONTERM_qualified_name 
    | 236 -> NONTERM_qualified_name 
    | 237 -> NONTERM_qualified_name 
    | 238 -> NONTERM_qualified_name 
    | 239 -> NONTERM_qualified_ctor 
    | 240 -> NONTERM_qualified_ctor 
    | 241 -> NONTERM_qualified_ctor 
    | 242 -> NONTERM_qualified_ctor 
    | 243 -> NONTERM_no_dot_pattern_expr_list 
    | 244 -> NONTERM_no_dot_pattern_expr_list 
    | 245 -> NONTERM_var_only_pattern_list 
    | 246 -> NONTERM_var_only_pattern_list 
    | 247 -> NONTERM_pattern_expr_list 
    | 248 -> NONTERM_pattern_expr_list 
    | 249 -> NONTERM_pattern_expr_list 
    | 250 -> NONTERM_field_pattern_list 
    | 251 -> NONTERM_field_pattern_list 
    | 252 -> NONTERM_pattern_expr 
    | 253 -> NONTERM_pattern_expr 
    | 254 -> NONTERM_pattern_expr 
    | 255 -> NONTERM_pattern_expr 
    | 256 -> NONTERM_pattern_expr 
    | 257 -> NONTERM_pattern_expr 
    | 258 -> NONTERM_pattern_expr 
    | 259 -> NONTERM_pattern_expr 
    | 260 -> NONTERM_pattern_expr 
    | 261 -> NONTERM_pattern_expr 
    | 262 -> NONTERM_pattern_expr 
    | 263 -> NONTERM_pattern_expr 
    | 264 -> NONTERM_pattern_expr 
    | 265 -> NONTERM_pattern_expr 
    | 266 -> NONTERM_pattern_expr 
    | 267 -> NONTERM_pattern_expr 
    | 268 -> NONTERM_tuple_pattern 
    | 269 -> NONTERM_list_pattern 
    | 270 -> NONTERM_vector_pattern 
    | 271 -> NONTERM_slice_pattern 
    | 272 -> NONTERM_record_pattern 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 116 
let _fsyacc_tagOfErrorTerminal = 114

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | IS  -> "IS" 
  | ONE  -> "ONE" 
  | TRUE  -> "TRUE" 
  | FALSE  -> "FALSE" 
  | AND  -> "AND" 
  | OR  -> "OR" 
  | NOT  -> "NOT" 
  | TUPLE  -> "TUPLE" 
  | LIST  -> "LIST" 
  | VECTOR  -> "VECTOR" 
  | SLICE  -> "SLICE" 
  | DICTIONARY  -> "DICTIONARY" 
  | CASE  -> "CASE" 
  | RECORD  -> "RECORD" 
  | VARIANT  -> "VARIANT" 
  | FOR  -> "FOR" 
  | FOLD  -> "FOLD" 
  | MAP  -> "MAP" 
  | BREAK  -> "BREAK" 
  | FINAL  -> "FINAL" 
  | FILL  -> "FILL" 
  | LENGTH  -> "LENGTH" 
  | RESULT  -> "RESULT" 
  | IF  -> "IF" 
  | WHEN  -> "WHEN" 
  | SWITCH  -> "SWITCH" 
  | WHILE  -> "WHILE" 
  | THEN  -> "THEN" 
  | ELSE  -> "ELSE" 
  | DO  -> "DO" 
  | MATCH  -> "MATCH" 
  | INJECT  -> "INJECT" 
  | WITH  -> "WITH" 
  | AFTER  -> "AFTER" 
  | HANDLE  -> "HANDLE" 
  | UNTAG  -> "UNTAG" 
  | BY  -> "BY" 
  | PER  -> "PER" 
  | TRUST  -> "TRUST" 
  | DISTRUST  -> "DISTRUST" 
  | AUDIT  -> "AUDIT" 
  | NEW_REF  -> "NEW_REF" 
  | GET_REF  -> "GET_REF" 
  | PUT_REF  -> "PUT_REF" 
  | WITH_STATE  -> "WITH_STATE" 
  | PERMISSION  -> "PERMISSION" 
  | FUNCTION  -> "FUNCTION" 
  | NATIVE  -> "NATIVE" 
  | LOCAL  -> "LOCAL" 
  | LET  -> "LET" 
  | BOOLEAN  -> "BOOLEAN" 
  | ABELIAN  -> "ABELIAN" 
  | SYNTACTIC  -> "SYNTACTIC" 
  | IS_ROUGHLY  -> "IS_ROUGHLY" 
  | IS_NOT  -> "IS_NOT" 
  | SATISFIES  -> "SATISFIES" 
  | VIOLATES  -> "VIOLATES" 
  | TEST  -> "TEST" 
  | LAW  -> "LAW" 
  | EXHAUSTIVE  -> "EXHAUSTIVE" 
  | SYNONYM  -> "SYNONYM" 
  | TAG  -> "TAG" 
  | EFFECT  -> "EFFECT" 
  | OVERLOAD  -> "OVERLOAD" 
  | INSTANCE  -> "INSTANCE" 
  | RULE  -> "RULE" 
  | CHECK  -> "CHECK" 
  | PATTERN  -> "PATTERN" 
  | RECURSIVE  -> "RECURSIVE" 
  | KIND  -> "KIND" 
  | DATA  -> "DATA" 
  | ABOUT  -> "ABOUT" 
  | MAIN  -> "MAIN" 
  | EXPORT  -> "EXPORT" 
  | FROM  -> "FROM" 
  | AS  -> "AS" 
  | IMPORT  -> "IMPORT" 
  | REF  -> "REF" 
  | UNDERSCORE  -> "UNDERSCORE" 
  | EQUALS  -> "EQUALS" 
  | ELLIPSIS  -> "ELLIPSIS" 
  | BAR  -> "BAR" 
  | DOT  -> "DOT" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | STAR  -> "STAR" 
  | COLON  -> "COLON" 
  | DOUBLE_COLON  -> "DOUBLE_COLON" 
  | COMMA  -> "COMMA" 
  | SEMICOLON  -> "SEMICOLON" 
  | FN_CTOR  -> "FN_CTOR" 
  | L_BIND  -> "L_BIND" 
  | R_BIND  -> "R_BIND" 
  | L_STAR  -> "L_STAR" 
  | R_STAR  -> "R_STAR" 
  | L_ARROW  -> "L_ARROW" 
  | R_ARROW  -> "R_ARROW" 
  | L_BRACKET  -> "L_BRACKET" 
  | R_BRACKET  -> "R_BRACKET" 
  | L_BRACE  -> "L_BRACE" 
  | R_BRACE  -> "R_BRACE" 
  | L_PAREN  -> "L_PAREN" 
  | R_PAREN  -> "R_PAREN" 
  | DOCUMENTATION_LINE _ -> "DOCUMENTATION_LINE" 
  | NATIVE_CODE_LINE _ -> "NATIVE_CODE_LINE" 
  | STRING _ -> "STRING" 
  | DECIMAL _ -> "DECIMAL" 
  | INTEGER _ -> "INTEGER" 
  | TEST_NAME _ -> "TEST_NAME" 
  | PREDICATE_NAME _ -> "PREDICATE_NAME" 
  | OPERATOR_NAME _ -> "OPERATOR_NAME" 
  | BIG_NAME _ -> "BIG_NAME" 
  | SMALL_NAME _ -> "SMALL_NAME" 
  | EOF  -> "EOF" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | IS  -> (null : System.Object) 
  | ONE  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | TUPLE  -> (null : System.Object) 
  | LIST  -> (null : System.Object) 
  | VECTOR  -> (null : System.Object) 
  | SLICE  -> (null : System.Object) 
  | DICTIONARY  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | RECORD  -> (null : System.Object) 
  | VARIANT  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | FOLD  -> (null : System.Object) 
  | MAP  -> (null : System.Object) 
  | BREAK  -> (null : System.Object) 
  | FINAL  -> (null : System.Object) 
  | FILL  -> (null : System.Object) 
  | LENGTH  -> (null : System.Object) 
  | RESULT  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | WHEN  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | INJECT  -> (null : System.Object) 
  | WITH  -> (null : System.Object) 
  | AFTER  -> (null : System.Object) 
  | HANDLE  -> (null : System.Object) 
  | UNTAG  -> (null : System.Object) 
  | BY  -> (null : System.Object) 
  | PER  -> (null : System.Object) 
  | TRUST  -> (null : System.Object) 
  | DISTRUST  -> (null : System.Object) 
  | AUDIT  -> (null : System.Object) 
  | NEW_REF  -> (null : System.Object) 
  | GET_REF  -> (null : System.Object) 
  | PUT_REF  -> (null : System.Object) 
  | WITH_STATE  -> (null : System.Object) 
  | PERMISSION  -> (null : System.Object) 
  | FUNCTION  -> (null : System.Object) 
  | NATIVE  -> (null : System.Object) 
  | LOCAL  -> (null : System.Object) 
  | LET  -> (null : System.Object) 
  | BOOLEAN  -> (null : System.Object) 
  | ABELIAN  -> (null : System.Object) 
  | SYNTACTIC  -> (null : System.Object) 
  | IS_ROUGHLY  -> (null : System.Object) 
  | IS_NOT  -> (null : System.Object) 
  | SATISFIES  -> (null : System.Object) 
  | VIOLATES  -> (null : System.Object) 
  | TEST  -> (null : System.Object) 
  | LAW  -> (null : System.Object) 
  | EXHAUSTIVE  -> (null : System.Object) 
  | SYNONYM  -> (null : System.Object) 
  | TAG  -> (null : System.Object) 
  | EFFECT  -> (null : System.Object) 
  | OVERLOAD  -> (null : System.Object) 
  | INSTANCE  -> (null : System.Object) 
  | RULE  -> (null : System.Object) 
  | CHECK  -> (null : System.Object) 
  | PATTERN  -> (null : System.Object) 
  | RECURSIVE  -> (null : System.Object) 
  | KIND  -> (null : System.Object) 
  | DATA  -> (null : System.Object) 
  | ABOUT  -> (null : System.Object) 
  | MAIN  -> (null : System.Object) 
  | EXPORT  -> (null : System.Object) 
  | FROM  -> (null : System.Object) 
  | AS  -> (null : System.Object) 
  | IMPORT  -> (null : System.Object) 
  | REF  -> (null : System.Object) 
  | UNDERSCORE  -> (null : System.Object) 
  | EQUALS  -> (null : System.Object) 
  | ELLIPSIS  -> (null : System.Object) 
  | BAR  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | DOUBLE_COLON  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | FN_CTOR  -> (null : System.Object) 
  | L_BIND  -> (null : System.Object) 
  | R_BIND  -> (null : System.Object) 
  | L_STAR  -> (null : System.Object) 
  | R_STAR  -> (null : System.Object) 
  | L_ARROW  -> (null : System.Object) 
  | R_ARROW  -> (null : System.Object) 
  | L_BRACKET  -> (null : System.Object) 
  | R_BRACKET  -> (null : System.Object) 
  | L_BRACE  -> (null : System.Object) 
  | R_BRACE  -> (null : System.Object) 
  | L_PAREN  -> (null : System.Object) 
  | R_PAREN  -> (null : System.Object) 
  | DOCUMENTATION_LINE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NATIVE_CODE_LINE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DECIMAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INTEGER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | TEST_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PREDICATE_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OPERATOR_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BIG_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | SMALL_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EOF  -> (null : System.Object) 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 8us; 9us; 2us; 65535us; 2us; 3us; 10us; 11us; 1us; 65535us; 3us; 4us; 2us; 65535us; 0us; 8us; 8us; 8us; 2us; 65535us; 15us; 16us; 19us; 20us; 2us; 65535us; 15us; 26us; 19us; 26us; 1us; 65535us; 3us; 6us; 2us; 65535us; 15us; 19us; 38us; 39us; 2us; 65535us; 40us; 41us; 43us; 44us; 2us; 65535us; 40us; 43us; 43us; 43us; 2us; 65535us; 2us; 10us; 10us; 10us; 5us; 65535us; 2us; 86us; 10us; 86us; 49us; 85us; 51us; 85us; 94us; 85us; 2us; 65535us; 74us; 75us; 76us; 77us; 5us; 65535us; 2us; 48us; 10us; 48us; 49us; 50us; 51us; 94us; 94us; 94us; 2us; 65535us; 51us; 52us; 94us; 95us; 2us; 65535us; 2us; 54us; 10us; 54us; 3us; 65535us; 100us; 101us; 106us; 107us; 108us; 109us; 2us; 65535us; 2us; 60us; 10us; 60us; 2us; 65535us; 112us; 113us; 116us; 117us; 5us; 65535us; 2us; 61us; 10us; 61us; 49us; 62us; 51us; 132us; 132us; 132us; 1us; 65535us; 122us; 123us; 2us; 65535us; 51us; 63us; 132us; 133us; 2us; 65535us; 124us; 141us; 142us; 141us; 2us; 65535us; 124us; 125us; 142us; 143us; 2us; 65535us; 2us; 67us; 10us; 67us; 2us; 65535us; 2us; 65us; 10us; 65us; 2us; 65535us; 2us; 66us; 10us; 66us; 2us; 65535us; 2us; 68us; 10us; 68us; 1us; 65535us; 171us; 172us; 2us; 65535us; 171us; 174us; 172us; 175us; 2us; 65535us; 2us; 69us; 10us; 69us; 2us; 65535us; 2us; 70us; 10us; 70us; 2us; 65535us; 183us; 184us; 190us; 191us; 2us; 65535us; 2us; 71us; 10us; 71us; 2us; 65535us; 2us; 72us; 10us; 72us; 5us; 65535us; 129us; 130us; 215us; 216us; 218us; 219us; 221us; 222us; 222us; 223us; 3us; 65535us; 164us; 165us; 178us; 179us; 208us; 209us; 5us; 65535us; 164us; 225us; 178us; 225us; 208us; 225us; 231us; 232us; 233us; 234us; 5us; 65535us; 164us; 229us; 178us; 229us; 208us; 229us; 231us; 229us; 233us; 229us; 32us; 65535us; 98us; 99us; 104us; 105us; 135us; 278us; 136us; 137us; 138us; 279us; 139us; 140us; 146us; 278us; 147us; 278us; 149us; 279us; 150us; 278us; 152us; 279us; 154us; 279us; 160us; 161us; 164us; 228us; 178us; 228us; 208us; 228us; 226us; 227us; 235us; 278us; 236us; 278us; 237us; 279us; 244us; 245us; 245us; 278us; 246us; 247us; 249us; 250us; 252us; 253us; 255us; 256us; 262us; 263us; 267us; 278us; 269us; 279us; 272us; 279us; 274us; 275us; 275us; 276us; 8us; 65535us; 135us; 138us; 146us; 149us; 147us; 152us; 150us; 154us; 235us; 237us; 236us; 237us; 245us; 272us; 267us; 269us; 59us; 65535us; 13us; 302us; 80us; 302us; 83us; 302us; 89us; 302us; 92us; 302us; 166us; 302us; 182us; 302us; 184us; 302us; 189us; 302us; 191us; 302us; 199us; 302us; 203us; 302us; 280us; 302us; 284us; 302us; 288us; 302us; 289us; 302us; 290us; 302us; 294us; 302us; 295us; 302us; 296us; 302us; 297us; 302us; 298us; 302us; 321us; 322us; 343us; 302us; 347us; 348us; 349us; 350us; 351us; 302us; 354us; 355us; 356us; 357us; 359us; 360us; 370us; 302us; 374us; 302us; 377us; 302us; 382us; 383us; 392us; 302us; 400us; 302us; 404us; 405us; 406us; 407us; 412us; 302us; 414us; 302us; 418us; 303us; 423us; 302us; 425us; 426us; 427us; 302us; 429us; 430us; 433us; 434us; 437us; 438us; 441us; 442us; 454us; 302us; 459us; 302us; 463us; 302us; 467us; 302us; 472us; 302us; 474us; 302us; 477us; 302us; 482us; 302us; 497us; 302us; 504us; 302us; 511us; 302us; 1us; 65535us; 280us; 281us; 2us; 65535us; 280us; 283us; 284us; 285us; 38us; 65535us; 13us; 294us; 80us; 294us; 83us; 294us; 89us; 294us; 92us; 294us; 166us; 294us; 182us; 294us; 184us; 294us; 189us; 294us; 191us; 294us; 199us; 294us; 203us; 294us; 280us; 290us; 284us; 290us; 288us; 289us; 343us; 295us; 351us; 294us; 370us; 294us; 374us; 294us; 377us; 294us; 392us; 294us; 400us; 294us; 412us; 294us; 414us; 294us; 418us; 294us; 423us; 294us; 427us; 294us; 454us; 294us; 459us; 294us; 463us; 294us; 467us; 294us; 472us; 296us; 474us; 295us; 477us; 297us; 482us; 298us; 497us; 294us; 504us; 294us; 511us; 294us; 30us; 65535us; 13us; 14us; 80us; 81us; 83us; 84us; 89us; 90us; 92us; 93us; 166us; 167us; 182us; 183us; 184us; 185us; 189us; 190us; 191us; 192us; 199us; 200us; 203us; 204us; 351us; 403us; 370us; 371us; 374us; 375us; 377us; 378us; 392us; 393us; 400us; 401us; 412us; 417us; 414us; 415us; 418us; 419us; 423us; 424us; 427us; 428us; 454us; 455us; 459us; 460us; 463us; 464us; 467us; 468us; 497us; 498us; 504us; 505us; 511us; 512us; 45us; 65535us; 13us; 291us; 80us; 291us; 83us; 291us; 89us; 291us; 92us; 291us; 166us; 291us; 182us; 291us; 184us; 291us; 189us; 291us; 191us; 291us; 199us; 291us; 203us; 291us; 280us; 291us; 284us; 291us; 288us; 291us; 289us; 299us; 290us; 299us; 294us; 299us; 295us; 299us; 296us; 299us; 297us; 299us; 298us; 299us; 343us; 291us; 351us; 291us; 370us; 291us; 374us; 291us; 377us; 291us; 392us; 291us; 400us; 291us; 412us; 291us; 414us; 291us; 418us; 291us; 423us; 291us; 427us; 291us; 454us; 291us; 459us; 291us; 463us; 291us; 467us; 291us; 472us; 291us; 474us; 291us; 477us; 291us; 482us; 291us; 497us; 291us; 504us; 291us; 511us; 291us; 45us; 65535us; 13us; 323us; 80us; 323us; 83us; 323us; 89us; 323us; 92us; 323us; 166us; 323us; 182us; 323us; 184us; 323us; 189us; 323us; 191us; 323us; 199us; 323us; 203us; 323us; 280us; 323us; 284us; 323us; 288us; 323us; 289us; 323us; 290us; 323us; 294us; 323us; 295us; 323us; 296us; 323us; 297us; 323us; 298us; 323us; 343us; 323us; 351us; 323us; 370us; 323us; 374us; 323us; 377us; 323us; 392us; 323us; 400us; 323us; 412us; 323us; 414us; 323us; 418us; 323us; 423us; 323us; 427us; 323us; 454us; 323us; 459us; 323us; 463us; 323us; 467us; 323us; 472us; 323us; 474us; 323us; 477us; 323us; 482us; 323us; 497us; 323us; 504us; 323us; 511us; 323us; 45us; 65535us; 13us; 304us; 80us; 304us; 83us; 304us; 89us; 304us; 92us; 304us; 166us; 304us; 182us; 304us; 184us; 304us; 189us; 304us; 191us; 304us; 199us; 304us; 203us; 304us; 280us; 304us; 284us; 304us; 288us; 304us; 289us; 304us; 290us; 304us; 294us; 304us; 295us; 304us; 296us; 304us; 297us; 304us; 298us; 304us; 343us; 304us; 351us; 304us; 370us; 304us; 374us; 304us; 377us; 304us; 392us; 304us; 400us; 304us; 412us; 304us; 414us; 304us; 418us; 304us; 423us; 304us; 427us; 304us; 454us; 304us; 459us; 304us; 463us; 304us; 467us; 304us; 472us; 304us; 474us; 304us; 477us; 304us; 482us; 304us; 497us; 304us; 504us; 304us; 511us; 304us; 1us; 65535us; 363us; 380us; 1us; 65535us; 363us; 364us; 7us; 65535us; 56us; 57us; 169us; 170us; 187us; 188us; 345us; 346us; 352us; 353us; 358us; 359us; 368us; 369us; 1us; 65535us; 362us; 363us; 45us; 65535us; 13us; 305us; 80us; 305us; 83us; 305us; 89us; 305us; 92us; 305us; 166us; 305us; 182us; 305us; 184us; 305us; 189us; 305us; 191us; 305us; 199us; 305us; 203us; 305us; 280us; 305us; 284us; 305us; 288us; 305us; 289us; 305us; 290us; 305us; 294us; 305us; 295us; 305us; 296us; 305us; 297us; 305us; 298us; 305us; 343us; 305us; 351us; 305us; 370us; 305us; 374us; 305us; 377us; 305us; 392us; 305us; 400us; 305us; 412us; 305us; 414us; 305us; 418us; 305us; 423us; 305us; 427us; 305us; 454us; 305us; 459us; 305us; 463us; 305us; 467us; 305us; 472us; 305us; 474us; 305us; 477us; 305us; 482us; 305us; 497us; 305us; 504us; 305us; 511us; 305us; 2us; 65535us; 381us; 382us; 384us; 385us; 45us; 65535us; 13us; 306us; 80us; 306us; 83us; 306us; 89us; 306us; 92us; 306us; 166us; 306us; 182us; 306us; 184us; 306us; 189us; 306us; 191us; 306us; 199us; 306us; 203us; 306us; 280us; 306us; 284us; 306us; 288us; 306us; 289us; 306us; 290us; 306us; 294us; 306us; 295us; 306us; 296us; 306us; 297us; 306us; 298us; 306us; 343us; 306us; 351us; 306us; 370us; 306us; 374us; 306us; 377us; 306us; 392us; 306us; 400us; 306us; 412us; 306us; 414us; 306us; 418us; 306us; 423us; 306us; 427us; 306us; 454us; 306us; 459us; 306us; 463us; 306us; 467us; 306us; 472us; 306us; 474us; 306us; 477us; 306us; 482us; 306us; 497us; 306us; 504us; 306us; 511us; 306us; 1us; 65535us; 387us; 388us; 2us; 65535us; 387us; 396us; 388us; 397us; 45us; 65535us; 13us; 307us; 80us; 307us; 83us; 307us; 89us; 307us; 92us; 307us; 166us; 307us; 182us; 307us; 184us; 307us; 189us; 307us; 191us; 307us; 199us; 307us; 203us; 307us; 280us; 307us; 284us; 307us; 288us; 307us; 289us; 307us; 290us; 307us; 294us; 307us; 295us; 307us; 296us; 307us; 297us; 307us; 298us; 307us; 343us; 307us; 351us; 307us; 370us; 307us; 374us; 307us; 377us; 307us; 392us; 307us; 400us; 307us; 412us; 307us; 414us; 307us; 418us; 307us; 423us; 307us; 427us; 307us; 454us; 307us; 459us; 307us; 463us; 307us; 467us; 307us; 472us; 307us; 474us; 307us; 477us; 307us; 482us; 307us; 497us; 307us; 504us; 307us; 511us; 307us; 45us; 65535us; 13us; 308us; 80us; 308us; 83us; 308us; 89us; 308us; 92us; 308us; 166us; 308us; 182us; 308us; 184us; 308us; 189us; 308us; 191us; 308us; 199us; 308us; 203us; 308us; 280us; 308us; 284us; 308us; 288us; 308us; 289us; 308us; 290us; 308us; 294us; 308us; 295us; 308us; 296us; 308us; 297us; 308us; 298us; 308us; 343us; 308us; 351us; 308us; 370us; 308us; 374us; 308us; 377us; 308us; 392us; 308us; 400us; 308us; 412us; 308us; 414us; 308us; 418us; 308us; 423us; 308us; 427us; 308us; 454us; 308us; 459us; 308us; 463us; 308us; 467us; 308us; 472us; 308us; 474us; 308us; 477us; 308us; 482us; 308us; 497us; 308us; 504us; 308us; 511us; 308us; 3us; 65535us; 303us; 422us; 409us; 410us; 420us; 421us; 45us; 65535us; 13us; 309us; 80us; 309us; 83us; 309us; 89us; 309us; 92us; 309us; 166us; 309us; 182us; 309us; 184us; 309us; 189us; 309us; 191us; 309us; 199us; 309us; 203us; 309us; 280us; 309us; 284us; 309us; 288us; 309us; 289us; 309us; 290us; 309us; 294us; 309us; 295us; 309us; 296us; 309us; 297us; 309us; 298us; 309us; 343us; 309us; 351us; 309us; 370us; 309us; 374us; 309us; 377us; 309us; 392us; 309us; 400us; 309us; 412us; 309us; 414us; 309us; 418us; 309us; 423us; 309us; 427us; 309us; 454us; 309us; 459us; 309us; 463us; 309us; 467us; 309us; 472us; 309us; 474us; 309us; 477us; 309us; 482us; 309us; 497us; 309us; 504us; 309us; 511us; 309us; 45us; 65535us; 13us; 310us; 80us; 310us; 83us; 310us; 89us; 310us; 92us; 310us; 166us; 310us; 182us; 310us; 184us; 310us; 189us; 310us; 191us; 310us; 199us; 310us; 203us; 310us; 280us; 310us; 284us; 310us; 288us; 310us; 289us; 310us; 290us; 310us; 294us; 310us; 295us; 310us; 296us; 310us; 297us; 310us; 298us; 310us; 343us; 310us; 351us; 310us; 370us; 310us; 374us; 310us; 377us; 310us; 392us; 310us; 400us; 310us; 412us; 310us; 414us; 310us; 418us; 310us; 423us; 310us; 427us; 310us; 454us; 310us; 459us; 310us; 463us; 310us; 467us; 310us; 472us; 310us; 474us; 310us; 477us; 310us; 482us; 310us; 497us; 310us; 504us; 310us; 511us; 310us; 45us; 65535us; 13us; 311us; 80us; 311us; 83us; 311us; 89us; 311us; 92us; 311us; 166us; 311us; 182us; 311us; 184us; 311us; 189us; 311us; 191us; 311us; 199us; 311us; 203us; 311us; 280us; 311us; 284us; 311us; 288us; 311us; 289us; 311us; 290us; 311us; 294us; 311us; 295us; 311us; 296us; 311us; 297us; 311us; 298us; 311us; 343us; 311us; 351us; 311us; 370us; 311us; 374us; 311us; 377us; 311us; 392us; 311us; 400us; 311us; 412us; 311us; 414us; 311us; 418us; 311us; 423us; 311us; 427us; 311us; 454us; 311us; 459us; 311us; 463us; 311us; 467us; 311us; 472us; 311us; 474us; 311us; 477us; 311us; 482us; 311us; 497us; 311us; 504us; 311us; 511us; 311us; 2us; 65535us; 435us; 436us; 444us; 445us; 2us; 65535us; 435us; 443us; 444us; 443us; 1us; 65535us; 453us; 454us; 2us; 65535us; 431us; 432us; 456us; 457us; 2us; 65535us; 439us; 440us; 461us; 462us; 45us; 65535us; 13us; 312us; 80us; 312us; 83us; 312us; 89us; 312us; 92us; 312us; 166us; 312us; 182us; 312us; 184us; 312us; 189us; 312us; 191us; 312us; 199us; 312us; 203us; 312us; 280us; 312us; 284us; 312us; 288us; 312us; 289us; 312us; 290us; 312us; 294us; 312us; 295us; 312us; 296us; 312us; 297us; 312us; 298us; 312us; 343us; 312us; 351us; 312us; 370us; 312us; 374us; 312us; 377us; 312us; 392us; 312us; 400us; 312us; 412us; 312us; 414us; 312us; 418us; 312us; 423us; 312us; 427us; 312us; 454us; 312us; 459us; 312us; 463us; 312us; 467us; 312us; 472us; 312us; 474us; 312us; 477us; 312us; 482us; 312us; 497us; 312us; 504us; 312us; 511us; 312us; 2us; 65535us; 343us; 471us; 474us; 470us; 45us; 65535us; 13us; 293us; 80us; 293us; 83us; 293us; 89us; 293us; 92us; 293us; 166us; 293us; 182us; 293us; 184us; 293us; 189us; 293us; 191us; 293us; 199us; 293us; 203us; 293us; 280us; 293us; 284us; 293us; 288us; 293us; 289us; 301us; 290us; 301us; 294us; 301us; 295us; 301us; 296us; 301us; 297us; 301us; 298us; 301us; 343us; 293us; 351us; 293us; 370us; 293us; 374us; 293us; 377us; 293us; 392us; 293us; 400us; 293us; 412us; 293us; 414us; 293us; 418us; 293us; 423us; 293us; 427us; 293us; 454us; 293us; 459us; 293us; 463us; 293us; 467us; 293us; 472us; 293us; 474us; 293us; 477us; 293us; 482us; 293us; 497us; 293us; 504us; 293us; 511us; 293us; 0us; 65535us; 45us; 65535us; 13us; 292us; 80us; 292us; 83us; 292us; 89us; 292us; 92us; 292us; 166us; 292us; 182us; 292us; 184us; 292us; 189us; 292us; 191us; 292us; 199us; 292us; 203us; 292us; 280us; 292us; 284us; 292us; 288us; 292us; 289us; 300us; 290us; 300us; 294us; 300us; 295us; 300us; 296us; 300us; 297us; 300us; 298us; 300us; 343us; 292us; 351us; 292us; 370us; 292us; 374us; 292us; 377us; 292us; 392us; 292us; 400us; 292us; 412us; 292us; 414us; 292us; 418us; 292us; 423us; 292us; 427us; 292us; 454us; 292us; 459us; 292us; 463us; 292us; 467us; 292us; 472us; 292us; 474us; 292us; 477us; 292us; 482us; 292us; 497us; 292us; 504us; 292us; 511us; 292us; 45us; 65535us; 13us; 319us; 80us; 319us; 83us; 319us; 89us; 319us; 92us; 319us; 166us; 319us; 182us; 319us; 184us; 319us; 189us; 319us; 191us; 319us; 199us; 319us; 203us; 319us; 280us; 319us; 284us; 319us; 288us; 319us; 289us; 319us; 290us; 319us; 294us; 319us; 295us; 319us; 296us; 319us; 297us; 319us; 298us; 319us; 343us; 319us; 351us; 319us; 370us; 319us; 374us; 319us; 377us; 319us; 392us; 319us; 400us; 319us; 412us; 319us; 414us; 319us; 418us; 319us; 423us; 319us; 427us; 319us; 454us; 319us; 459us; 319us; 463us; 319us; 467us; 319us; 472us; 319us; 474us; 319us; 477us; 319us; 482us; 319us; 497us; 319us; 504us; 319us; 511us; 319us; 45us; 65535us; 13us; 320us; 80us; 320us; 83us; 320us; 89us; 320us; 92us; 320us; 166us; 320us; 182us; 320us; 184us; 320us; 189us; 320us; 191us; 320us; 199us; 320us; 203us; 320us; 280us; 320us; 284us; 320us; 288us; 320us; 289us; 320us; 290us; 320us; 294us; 320us; 295us; 320us; 296us; 320us; 297us; 320us; 298us; 320us; 343us; 320us; 351us; 320us; 370us; 320us; 374us; 320us; 377us; 320us; 392us; 320us; 400us; 320us; 412us; 320us; 414us; 320us; 418us; 320us; 423us; 320us; 427us; 320us; 454us; 320us; 459us; 320us; 463us; 320us; 467us; 320us; 472us; 320us; 474us; 320us; 477us; 320us; 482us; 320us; 497us; 320us; 504us; 320us; 511us; 320us; 2us; 65535us; 494us; 495us; 501us; 502us; 2us; 65535us; 494us; 501us; 501us; 501us; 3us; 65535us; 344us; 483us; 481us; 486us; 508us; 509us; 4us; 65535us; 344us; 507us; 481us; 507us; 490us; 491us; 508us; 507us; 46us; 65535us; 13us; 341us; 80us; 341us; 83us; 341us; 89us; 341us; 92us; 341us; 166us; 341us; 182us; 341us; 184us; 341us; 189us; 341us; 191us; 341us; 199us; 341us; 203us; 341us; 280us; 341us; 284us; 341us; 288us; 341us; 289us; 341us; 290us; 341us; 294us; 341us; 295us; 341us; 296us; 341us; 297us; 341us; 298us; 341us; 343us; 341us; 351us; 341us; 363us; 368us; 370us; 341us; 374us; 341us; 377us; 341us; 392us; 341us; 400us; 341us; 412us; 341us; 414us; 341us; 418us; 341us; 423us; 341us; 427us; 341us; 454us; 341us; 459us; 341us; 463us; 341us; 467us; 341us; 472us; 341us; 474us; 341us; 477us; 341us; 482us; 341us; 497us; 341us; 504us; 341us; 511us; 341us; 65us; 65535us; 58us; 556us; 79us; 556us; 82us; 556us; 88us; 556us; 91us; 556us; 98us; 239us; 104us; 239us; 129us; 214us; 135us; 239us; 136us; 239us; 138us; 239us; 139us; 239us; 146us; 239us; 147us; 239us; 149us; 239us; 150us; 239us; 152us; 239us; 154us; 239us; 160us; 239us; 164us; 236us; 178us; 236us; 208us; 236us; 215us; 214us; 218us; 214us; 221us; 214us; 222us; 214us; 226us; 239us; 231us; 235us; 233us; 235us; 235us; 239us; 236us; 239us; 237us; 239us; 244us; 239us; 245us; 239us; 246us; 239us; 249us; 239us; 252us; 239us; 255us; 239us; 262us; 239us; 267us; 239us; 269us; 239us; 272us; 239us; 274us; 239us; 275us; 239us; 286us; 556us; 287us; 556us; 373us; 556us; 376us; 556us; 390us; 556us; 398us; 556us; 399us; 556us; 535us; 556us; 536us; 556us; 537us; 556us; 538us; 556us; 539us; 556us; 542us; 556us; 552us; 556us; 554us; 556us; 557us; 558us; 558us; 556us; 566us; 556us; 569us; 556us; 572us; 556us; 575us; 556us; 49us; 65535us; 13us; 513us; 80us; 513us; 83us; 513us; 89us; 513us; 92us; 513us; 166us; 513us; 182us; 513us; 184us; 513us; 189us; 513us; 191us; 513us; 199us; 513us; 203us; 513us; 280us; 513us; 284us; 513us; 288us; 513us; 289us; 513us; 290us; 513us; 294us; 513us; 295us; 513us; 296us; 513us; 297us; 513us; 298us; 513us; 331us; 332us; 333us; 334us; 343us; 513us; 351us; 513us; 363us; 513us; 370us; 513us; 374us; 513us; 377us; 513us; 392us; 513us; 400us; 513us; 412us; 513us; 414us; 513us; 418us; 513us; 423us; 513us; 427us; 513us; 454us; 513us; 459us; 513us; 463us; 513us; 467us; 513us; 472us; 513us; 474us; 513us; 477us; 513us; 482us; 513us; 497us; 513us; 504us; 513us; 511us; 513us; 520us; 521us; 66us; 65535us; 58us; 514us; 79us; 514us; 82us; 514us; 88us; 514us; 91us; 514us; 98us; 514us; 104us; 514us; 129us; 514us; 135us; 514us; 136us; 514us; 138us; 514us; 139us; 514us; 146us; 514us; 147us; 514us; 149us; 514us; 150us; 514us; 152us; 514us; 154us; 514us; 160us; 514us; 164us; 514us; 178us; 514us; 208us; 514us; 215us; 514us; 218us; 514us; 221us; 514us; 222us; 514us; 226us; 514us; 231us; 514us; 233us; 514us; 235us; 514us; 236us; 514us; 237us; 514us; 244us; 514us; 245us; 514us; 246us; 514us; 249us; 514us; 252us; 514us; 255us; 514us; 262us; 514us; 267us; 514us; 269us; 514us; 272us; 514us; 274us; 514us; 275us; 514us; 286us; 514us; 287us; 514us; 373us; 514us; 376us; 514us; 390us; 514us; 398us; 514us; 399us; 514us; 527us; 528us; 535us; 514us; 536us; 514us; 537us; 514us; 538us; 514us; 539us; 514us; 542us; 514us; 552us; 514us; 554us; 514us; 557us; 514us; 558us; 514us; 566us; 514us; 569us; 514us; 572us; 514us; 575us; 514us; 4us; 65535us; 79us; 82us; 88us; 91us; 286us; 287us; 373us; 376us; 3us; 65535us; 463us; 466us; 516us; 532us; 531us; 532us; 7us; 65535us; 390us; 399us; 398us; 399us; 558us; 535us; 566us; 536us; 569us; 537us; 572us; 538us; 575us; 539us; 2us; 65535us; 544us; 545us; 578us; 579us; 25us; 65535us; 58us; 59us; 79us; 529us; 82us; 530us; 88us; 529us; 91us; 530us; 286us; 529us; 287us; 530us; 373us; 529us; 376us; 530us; 390us; 533us; 398us; 533us; 399us; 540us; 535us; 540us; 536us; 540us; 537us; 540us; 538us; 540us; 539us; 540us; 542us; 543us; 552us; 553us; 554us; 555us; 558us; 533us; 566us; 533us; 569us; 533us; 572us; 533us; 575us; 533us; 25us; 65535us; 58us; 560us; 79us; 560us; 82us; 560us; 88us; 560us; 91us; 560us; 286us; 560us; 287us; 560us; 373us; 560us; 376us; 560us; 390us; 560us; 398us; 560us; 399us; 560us; 535us; 560us; 536us; 560us; 537us; 560us; 538us; 560us; 539us; 560us; 542us; 560us; 552us; 560us; 554us; 560us; 558us; 560us; 566us; 560us; 569us; 560us; 572us; 560us; 575us; 560us; 25us; 65535us; 58us; 561us; 79us; 561us; 82us; 561us; 88us; 561us; 91us; 561us; 286us; 561us; 287us; 561us; 373us; 561us; 376us; 561us; 390us; 561us; 398us; 561us; 399us; 561us; 535us; 561us; 536us; 561us; 537us; 561us; 538us; 561us; 539us; 561us; 542us; 561us; 552us; 561us; 554us; 561us; 558us; 561us; 566us; 561us; 569us; 561us; 572us; 561us; 575us; 561us; 25us; 65535us; 58us; 562us; 79us; 562us; 82us; 562us; 88us; 562us; 91us; 562us; 286us; 562us; 287us; 562us; 373us; 562us; 376us; 562us; 390us; 562us; 398us; 562us; 399us; 562us; 535us; 562us; 536us; 562us; 537us; 562us; 538us; 562us; 539us; 562us; 542us; 562us; 552us; 562us; 554us; 562us; 558us; 562us; 566us; 562us; 569us; 562us; 572us; 562us; 575us; 562us; 25us; 65535us; 58us; 563us; 79us; 563us; 82us; 563us; 88us; 563us; 91us; 563us; 286us; 563us; 287us; 563us; 373us; 563us; 376us; 563us; 390us; 563us; 398us; 563us; 399us; 563us; 535us; 563us; 536us; 563us; 537us; 563us; 538us; 563us; 539us; 563us; 542us; 563us; 552us; 563us; 554us; 563us; 558us; 563us; 566us; 563us; 569us; 563us; 572us; 563us; 575us; 563us; 25us; 65535us; 58us; 564us; 79us; 564us; 82us; 564us; 88us; 564us; 91us; 564us; 286us; 564us; 287us; 564us; 373us; 564us; 376us; 564us; 390us; 564us; 398us; 564us; 399us; 564us; 535us; 564us; 536us; 564us; 537us; 564us; 538us; 564us; 539us; 564us; 542us; 564us; 552us; 564us; 554us; 564us; 558us; 564us; 566us; 564us; 569us; 564us; 572us; 564us; 575us; 564us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 11us; 14us; 17us; 20us; 22us; 25us; 28us; 31us; 34us; 40us; 43us; 49us; 52us; 55us; 59us; 62us; 65us; 71us; 73us; 76us; 79us; 82us; 85us; 88us; 91us; 94us; 96us; 99us; 102us; 105us; 108us; 111us; 114us; 120us; 124us; 130us; 136us; 169us; 178us; 238us; 240us; 243us; 282us; 313us; 359us; 405us; 451us; 453us; 455us; 463us; 465us; 511us; 514us; 560us; 562us; 565us; 611us; 657us; 661us; 707us; 753us; 799us; 802us; 805us; 807us; 810us; 813us; 859us; 862us; 908us; 909us; 955us; 1001us; 1047us; 1050us; 1053us; 1057us; 1062us; 1109us; 1175us; 1225us; 1292us; 1297us; 1301us; 1309us; 1312us; 1338us; 1364us; 1390us; 1416us; 1442us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 2us; 1us; 2us; 2us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 2us; 1us; 4us; 1us; 4us; 1us; 6us; 1us; 6us; 1us; 7us; 1us; 7us; 1us; 7us; 3us; 8us; 9us; 10us; 1us; 8us; 1us; 8us; 1us; 8us; 1us; 9us; 1us; 9us; 1us; 9us; 1us; 9us; 1us; 10us; 1us; 10us; 1us; 11us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 17us; 1us; 17us; 1us; 18us; 1us; 19us; 1us; 20us; 1us; 21us; 4us; 22us; 23us; 28us; 29us; 1us; 22us; 2us; 23us; 29us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 25us; 1us; 25us; 2us; 25us; 177us; 1us; 25us; 1us; 25us; 1us; 26us; 1us; 27us; 1us; 28us; 1us; 29us; 1us; 29us; 1us; 30us; 1us; 31us; 1us; 32us; 1us; 33us; 1us; 34us; 1us; 35us; 1us; 36us; 1us; 37us; 1us; 38us; 1us; 38us; 1us; 38us; 1us; 40us; 1us; 40us; 2us; 41us; 42us; 2us; 41us; 42us; 1us; 41us; 1us; 41us; 2us; 42us; 244us; 1us; 42us; 1us; 42us; 2us; 43us; 44us; 4us; 43us; 44us; 48us; 52us; 2us; 43us; 44us; 2us; 43us; 44us; 1us; 43us; 1us; 43us; 2us; 44us; 244us; 1us; 44us; 1us; 44us; 2us; 45us; 46us; 1us; 46us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 50us; 1us; 50us; 1us; 51us; 1us; 51us; 1us; 51us; 1us; 51us; 1us; 52us; 1us; 52us; 1us; 52us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 2us; 56us; 57us; 2us; 56us; 57us; 4us; 56us; 57us; 59us; 60us; 1us; 56us; 1us; 56us; 1us; 59us; 1us; 60us; 1us; 60us; 1us; 60us; 1us; 60us; 1us; 60us; 2us; 61us; 62us; 1us; 62us; 2us; 63us; 64us; 2us; 63us; 64us; 1us; 63us; 1us; 63us; 2us; 64us; 121us; 1us; 64us; 1us; 64us; 2us; 65us; 66us; 1us; 66us; 1us; 66us; 4us; 67us; 68us; 69us; 70us; 4us; 67us; 68us; 69us; 70us; 4us; 67us; 68us; 69us; 70us; 2us; 67us; 69us; 1us; 67us; 3us; 68us; 70us; 121us; 2us; 68us; 70us; 1us; 68us; 2us; 69us; 121us; 1us; 69us; 2us; 70us; 121us; 1us; 70us; 1us; 71us; 1us; 71us; 1us; 71us; 1us; 71us; 1us; 71us; 1us; 71us; 1us; 72us; 1us; 72us; 1us; 72us; 1us; 72us; 1us; 72us; 1us; 72us; 1us; 73us; 1us; 73us; 2us; 73us; 177us; 1us; 73us; 2us; 73us; 75us; 1us; 73us; 1us; 74us; 1us; 75us; 1us; 76us; 1us; 76us; 1us; 76us; 1us; 76us; 1us; 77us; 1us; 77us; 1us; 77us; 1us; 77us; 1us; 77us; 1us; 77us; 1us; 78us; 1us; 78us; 2us; 78us; 177us; 1us; 78us; 1us; 78us; 1us; 78us; 1us; 78us; 1us; 79us; 1us; 80us; 1us; 81us; 2us; 82us; 84us; 2us; 83us; 85us; 1us; 84us; 1us; 84us; 1us; 84us; 1us; 84us; 1us; 85us; 1us; 85us; 1us; 85us; 1us; 85us; 1us; 86us; 1us; 86us; 1us; 86us; 1us; 86us; 1us; 87us; 1us; 87us; 1us; 87us; 1us; 87us; 1us; 88us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 90us; 1us; 90us; 1us; 90us; 1us; 91us; 1us; 91us; 1us; 91us; 1us; 91us; 1us; 92us; 1us; 92us; 1us; 92us; 1us; 93us; 4us; 94us; 95us; 96us; 97us; 2us; 95us; 97us; 1us; 96us; 1us; 96us; 1us; 97us; 1us; 97us; 2us; 98us; 99us; 3us; 98us; 99us; 101us; 2us; 99us; 121us; 3us; 100us; 102us; 242us; 1us; 101us; 1us; 102us; 1us; 103us; 1us; 104us; 1us; 105us; 8us; 106us; 107us; 108us; 109us; 111us; 112us; 117us; 118us; 7us; 106us; 107us; 109us; 111us; 112us; 117us; 118us; 1us; 106us; 1us; 106us; 1us; 106us; 1us; 107us; 1us; 107us; 1us; 107us; 1us; 108us; 1us; 108us; 1us; 108us; 1us; 109us; 1us; 109us; 1us; 109us; 1us; 110us; 1us; 111us; 1us; 111us; 1us; 111us; 1us; 112us; 1us; 112us; 1us; 112us; 1us; 113us; 1us; 114us; 2us; 115us; 116us; 1us; 115us; 2us; 116us; 121us; 1us; 116us; 1us; 117us; 2us; 118us; 121us; 1us; 118us; 1us; 119us; 1us; 119us; 1us; 119us; 1us; 119us; 1us; 120us; 1us; 121us; 1us; 122us; 2us; 122us; 124us; 1us; 122us; 1us; 123us; 1us; 124us; 1us; 124us; 2us; 125us; 126us; 3us; 125us; 126us; 244us; 1us; 126us; 4us; 126us; 131us; 132us; 133us; 4us; 127us; 131us; 132us; 133us; 1us; 128us; 1us; 129us; 1us; 130us; 4us; 131us; 132us; 133us; 135us; 4us; 131us; 132us; 133us; 212us; 4us; 131us; 132us; 133us; 213us; 5us; 131us; 132us; 133us; 216us; 217us; 5us; 131us; 132us; 133us; 220us; 221us; 1us; 131us; 1us; 132us; 1us; 133us; 1us; 136us; 2us; 136us; 192us; 1us; 137us; 1us; 138us; 1us; 139us; 1us; 140us; 1us; 141us; 1us; 142us; 1us; 143us; 1us; 144us; 1us; 145us; 1us; 146us; 1us; 146us; 1us; 147us; 1us; 147us; 1us; 148us; 1us; 148us; 1us; 149us; 1us; 150us; 1us; 151us; 1us; 151us; 1us; 152us; 1us; 153us; 1us; 154us; 1us; 155us; 1us; 156us; 1us; 157us; 1us; 158us; 1us; 159us; 1us; 160us; 1us; 160us; 1us; 161us; 1us; 161us; 1us; 162us; 1us; 163us; 1us; 164us; 1us; 165us; 1us; 166us; 1us; 167us; 1us; 168us; 1us; 169us; 2us; 169us; 217us; 2us; 169us; 220us; 1us; 169us; 2us; 169us; 177us; 1us; 169us; 1us; 169us; 1us; 169us; 1us; 169us; 2us; 170us; 188us; 1us; 170us; 2us; 170us; 177us; 1us; 170us; 1us; 170us; 1us; 170us; 1us; 170us; 2us; 171us; 172us; 3us; 171us; 172us; 177us; 2us; 171us; 172us; 2us; 171us; 172us; 2us; 171us; 172us; 3us; 171us; 172us; 179us; 1us; 171us; 1us; 171us; 1us; 171us; 1us; 172us; 1us; 173us; 2us; 173us; 177us; 1us; 173us; 1us; 173us; 1us; 173us; 2us; 174us; 175us; 1us; 174us; 1us; 174us; 2us; 175us; 244us; 1us; 175us; 1us; 175us; 1us; 177us; 1us; 179us; 1us; 180us; 1us; 180us; 1us; 180us; 2us; 181us; 182us; 1us; 182us; 2us; 183us; 184us; 2us; 183us; 184us; 3us; 183us; 184us; 186us; 1us; 183us; 2us; 184us; 187us; 1us; 184us; 1us; 184us; 1us; 184us; 1us; 184us; 1us; 184us; 1us; 185us; 1us; 186us; 1us; 187us; 2us; 187us; 249us; 1us; 187us; 1us; 187us; 1us; 187us; 1us; 188us; 1us; 188us; 1us; 188us; 1us; 188us; 1us; 188us; 1us; 189us; 1us; 189us; 1us; 189us; 1us; 189us; 3us; 190us; 191us; 192us; 1us; 190us; 1us; 190us; 1us; 190us; 1us; 190us; 2us; 191us; 192us; 2us; 191us; 192us; 1us; 191us; 1us; 191us; 1us; 191us; 1us; 192us; 1us; 193us; 1us; 193us; 1us; 193us; 1us; 193us; 1us; 194us; 1us; 194us; 1us; 194us; 1us; 194us; 3us; 195us; 196us; 197us; 3us; 195us; 196us; 197us; 1us; 195us; 1us; 195us; 1us; 196us; 1us; 196us; 1us; 196us; 1us; 196us; 1us; 197us; 1us; 197us; 1us; 197us; 1us; 197us; 2us; 198us; 199us; 1us; 199us; 1us; 199us; 1us; 200us; 1us; 201us; 1us; 202us; 1us; 203us; 1us; 204us; 1us; 205us; 2us; 206us; 207us; 2us; 206us; 207us; 2us; 206us; 207us; 2us; 206us; 207us; 1us; 207us; 1us; 207us; 2us; 208us; 209us; 2us; 208us; 209us; 2us; 208us; 209us; 1us; 209us; 1us; 209us; 2us; 210us; 211us; 1us; 210us; 1us; 210us; 1us; 211us; 1us; 211us; 1us; 211us; 1us; 211us; 2us; 213us; 215us; 2us; 213us; 217us; 1us; 213us; 4us; 214us; 215us; 216us; 217us; 4us; 214us; 215us; 216us; 217us; 1us; 214us; 1us; 215us; 2us; 216us; 217us; 1us; 216us; 1us; 217us; 4us; 220us; 221us; 222us; 223us; 4us; 220us; 221us; 222us; 223us; 2us; 220us; 221us; 1us; 220us; 1us; 220us; 1us; 221us; 1us; 222us; 1us; 222us; 1us; 223us; 1us; 224us; 1us; 224us; 1us; 224us; 1us; 224us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 225us; 2us; 226us; 227us; 1us; 227us; 1us; 228us; 1us; 228us; 1us; 228us; 1us; 228us; 2us; 229us; 230us; 1us; 230us; 1us; 230us; 1us; 231us; 1us; 231us; 1us; 231us; 1us; 232us; 1us; 233us; 2us; 234us; 238us; 3us; 234us; 238us; 246us; 1us; 235us; 1us; 236us; 1us; 237us; 1us; 238us; 1us; 238us; 1us; 239us; 1us; 240us; 1us; 241us; 1us; 242us; 3us; 242us; 259us; 260us; 1us; 242us; 1us; 242us; 1us; 243us; 1us; 244us; 1us; 246us; 1us; 246us; 2us; 247us; 248us; 1us; 248us; 2us; 249us; 262us; 2us; 249us; 268us; 2us; 249us; 269us; 2us; 249us; 270us; 2us; 249us; 271us; 1us; 249us; 2us; 250us; 251us; 2us; 250us; 251us; 2us; 250us; 251us; 1us; 251us; 1us; 251us; 1us; 252us; 1us; 253us; 1us; 254us; 1us; 255us; 1us; 256us; 1us; 257us; 1us; 258us; 1us; 258us; 1us; 260us; 1us; 260us; 1us; 261us; 1us; 262us; 1us; 262us; 1us; 262us; 1us; 263us; 1us; 264us; 1us; 265us; 1us; 266us; 1us; 267us; 1us; 268us; 1us; 268us; 1us; 268us; 1us; 269us; 1us; 269us; 1us; 269us; 1us; 270us; 1us; 270us; 1us; 270us; 1us; 271us; 1us; 271us; 1us; 271us; 1us; 272us; 1us; 272us; 1us; 272us; 1us; 272us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 7us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 26us; 28us; 30us; 32us; 36us; 38us; 40us; 42us; 44us; 46us; 48us; 50us; 52us; 54us; 56us; 58us; 60us; 62us; 64us; 66us; 68us; 70us; 72us; 74us; 76us; 78us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 107us; 109us; 112us; 114us; 116us; 118us; 120us; 122us; 125us; 127us; 129us; 131us; 133us; 135us; 137us; 139us; 141us; 143us; 145us; 147us; 149us; 151us; 153us; 155us; 157us; 159us; 161us; 163us; 165us; 168us; 171us; 173us; 175us; 178us; 180us; 182us; 185us; 190us; 193us; 196us; 198us; 200us; 203us; 205us; 207us; 210us; 212us; 214us; 216us; 218us; 220us; 222us; 224us; 226us; 228us; 230us; 232us; 234us; 236us; 238us; 240us; 242us; 244us; 246us; 248us; 250us; 252us; 254us; 256us; 258us; 260us; 262us; 265us; 268us; 273us; 275us; 277us; 279us; 281us; 283us; 285us; 287us; 289us; 292us; 294us; 297us; 300us; 302us; 304us; 307us; 309us; 311us; 314us; 316us; 318us; 323us; 328us; 333us; 336us; 338us; 342us; 345us; 347us; 350us; 352us; 355us; 357us; 359us; 361us; 363us; 365us; 367us; 369us; 371us; 373us; 375us; 377us; 379us; 381us; 383us; 385us; 388us; 390us; 393us; 395us; 397us; 399us; 401us; 403us; 405us; 407us; 409us; 411us; 413us; 415us; 417us; 419us; 421us; 423us; 426us; 428us; 430us; 432us; 434us; 436us; 438us; 440us; 443us; 446us; 448us; 450us; 452us; 454us; 456us; 458us; 460us; 462us; 464us; 466us; 468us; 470us; 472us; 474us; 476us; 478us; 480us; 482us; 484us; 486us; 488us; 490us; 492us; 494us; 496us; 498us; 500us; 502us; 504us; 506us; 508us; 513us; 516us; 518us; 520us; 522us; 524us; 527us; 531us; 534us; 538us; 540us; 542us; 544us; 546us; 548us; 557us; 565us; 567us; 569us; 571us; 573us; 575us; 577us; 579us; 581us; 583us; 585us; 587us; 589us; 591us; 593us; 595us; 597us; 599us; 601us; 603us; 605us; 607us; 610us; 612us; 615us; 617us; 619us; 622us; 624us; 626us; 628us; 630us; 632us; 634us; 636us; 638us; 641us; 643us; 645us; 647us; 649us; 652us; 656us; 658us; 663us; 668us; 670us; 672us; 674us; 679us; 684us; 689us; 695us; 701us; 703us; 705us; 707us; 709us; 712us; 714us; 716us; 718us; 720us; 722us; 724us; 726us; 728us; 730us; 732us; 734us; 736us; 738us; 740us; 742us; 744us; 746us; 748us; 750us; 752us; 754us; 756us; 758us; 760us; 762us; 764us; 766us; 768us; 770us; 772us; 774us; 776us; 778us; 780us; 782us; 784us; 786us; 788us; 790us; 793us; 796us; 798us; 801us; 803us; 805us; 807us; 809us; 812us; 814us; 817us; 819us; 821us; 823us; 825us; 828us; 832us; 835us; 838us; 841us; 845us; 847us; 849us; 851us; 853us; 855us; 858us; 860us; 862us; 864us; 867us; 869us; 871us; 874us; 876us; 878us; 880us; 882us; 884us; 886us; 888us; 891us; 893us; 896us; 899us; 903us; 905us; 908us; 910us; 912us; 914us; 916us; 918us; 920us; 922us; 924us; 927us; 929us; 931us; 933us; 935us; 937us; 939us; 941us; 943us; 945us; 947us; 949us; 951us; 955us; 957us; 959us; 961us; 963us; 966us; 969us; 971us; 973us; 975us; 977us; 979us; 981us; 983us; 985us; 987us; 989us; 991us; 993us; 997us; 1001us; 1003us; 1005us; 1007us; 1009us; 1011us; 1013us; 1015us; 1017us; 1019us; 1021us; 1024us; 1026us; 1028us; 1030us; 1032us; 1034us; 1036us; 1038us; 1040us; 1043us; 1046us; 1049us; 1052us; 1054us; 1056us; 1059us; 1062us; 1065us; 1067us; 1069us; 1072us; 1074us; 1076us; 1078us; 1080us; 1082us; 1084us; 1087us; 1090us; 1092us; 1097us; 1102us; 1104us; 1106us; 1109us; 1111us; 1113us; 1118us; 1123us; 1126us; 1128us; 1130us; 1132us; 1134us; 1136us; 1138us; 1140us; 1142us; 1144us; 1146us; 1148us; 1150us; 1152us; 1154us; 1156us; 1158us; 1160us; 1162us; 1165us; 1167us; 1169us; 1171us; 1173us; 1175us; 1178us; 1180us; 1182us; 1184us; 1186us; 1188us; 1190us; 1192us; 1195us; 1199us; 1201us; 1203us; 1205us; 1207us; 1209us; 1211us; 1213us; 1215us; 1217us; 1221us; 1223us; 1225us; 1227us; 1229us; 1231us; 1233us; 1236us; 1238us; 1241us; 1244us; 1247us; 1250us; 1253us; 1255us; 1258us; 1261us; 1264us; 1266us; 1268us; 1270us; 1272us; 1274us; 1276us; 1278us; 1280us; 1282us; 1284us; 1286us; 1288us; 1290us; 1292us; 1294us; 1296us; 1298us; 1300us; 1302us; 1304us; 1306us; 1308us; 1310us; 1312us; 1314us; 1316us; 1318us; 1320us; 1322us; 1324us; 1326us; 1328us; 1330us; 1332us; 1334us; 1336us; |]
let _fsyacc_action_rows = 581
let _fsyacc_actionTableElements = [|1us; 16387us; 76us; 15us; 0us; 49152us; 15us; 16389us; 46us; 78us; 47us; 96us; 57us; 180us; 58us; 186us; 61us; 210us; 62us; 168us; 63us; 156us; 64us; 162us; 65us; 144us; 66us; 206us; 67us; 55us; 68us; 49us; 69us; 110us; 70us; 121us; 71us; 73us; 2us; 32768us; 72us; 12us; 73us; 38us; 1us; 32768us; 113us; 5us; 0us; 16385us; 1us; 32768us; 113us; 7us; 0us; 16386us; 1us; 16387us; 76us; 15us; 0us; 16388us; 15us; 16389us; 46us; 78us; 47us; 96us; 57us; 180us; 58us; 186us; 61us; 210us; 62us; 168us; 63us; 156us; 64us; 162us; 65us; 144us; 66us; 206us; 67us; 55us; 68us; 49us; 69us; 110us; 70us; 121us; 71us; 73us; 0us; 16390us; 1us; 32768us; 79us; 13us; 38us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 0us; 16391us; 4us; 32768us; 47us; 23us; 99us; 40us; 105us; 25us; 112us; 27us; 1us; 32768us; 75us; 17us; 1us; 32768us; 112us; 18us; 0us; 16392us; 2us; 32768us; 105us; 25us; 112us; 27us; 1us; 32768us; 75us; 21us; 1us; 32768us; 112us; 22us; 0us; 16393us; 1us; 32768us; 105us; 24us; 0us; 16394us; 0us; 16395us; 0us; 16396us; 1us; 32768us; 82us; 28us; 1us; 32768us; 112us; 29us; 1us; 32768us; 82us; 30us; 1us; 32768us; 112us; 31us; 1us; 32768us; 86us; 32us; 1us; 32768us; 107us; 33us; 1us; 32768us; 82us; 34us; 1us; 32768us; 107us; 35us; 1us; 32768us; 82us; 36us; 1us; 32768us; 107us; 37us; 0us; 16397us; 1us; 32768us; 99us; 40us; 0us; 16398us; 3us; 16400us; 109us; 47us; 111us; 46us; 112us; 45us; 1us; 32768us; 100us; 42us; 0us; 16399us; 3us; 16400us; 109us; 47us; 111us; 46us; 112us; 45us; 0us; 16401us; 0us; 16402us; 0us; 16403us; 0us; 16404us; 0us; 16405us; 4us; 32768us; 46us; 78us; 70us; 121us; 71us; 73us; 99us; 51us; 0us; 16406us; 3us; 32768us; 46us; 78us; 70us; 121us; 71us; 73us; 1us; 32768us; 100us; 53us; 0us; 16407us; 0us; 16408us; 1us; 32768us; 111us; 56us; 0us; 16560us; 2us; 32768us; 79us; 58us; 112us; 379us; 17us; 32768us; 2us; 546us; 3us; 547us; 7us; 565us; 8us; 568us; 9us; 571us; 10us; 574us; 13us; 577us; 77us; 552us; 78us; 551us; 101us; 557us; 105us; 550us; 106us; 549us; 107us; 548us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 526us; 0us; 16409us; 0us; 16410us; 0us; 16411us; 0us; 16412us; 1us; 32768us; 100us; 64us; 0us; 16413us; 0us; 16414us; 0us; 16415us; 0us; 16416us; 0us; 16417us; 0us; 16418us; 0us; 16419us; 0us; 16420us; 0us; 16421us; 1us; 32768us; 86us; 74us; 1us; 16423us; 103us; 76us; 0us; 16422us; 1us; 16423us; 103us; 76us; 0us; 16424us; 1us; 32768us; 112us; 79us; 18us; 32768us; 2us; 546us; 3us; 547us; 7us; 565us; 8us; 568us; 9us; 571us; 10us; 574us; 13us; 577us; 77us; 552us; 78us; 551us; 79us; 80us; 101us; 557us; 105us; 550us; 106us; 549us; 107us; 548us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 526us; 38us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 0us; 16425us; 18us; 32768us; 2us; 546us; 3us; 547us; 7us; 565us; 8us; 568us; 9us; 571us; 10us; 574us; 13us; 577us; 77us; 552us; 78us; 551us; 79us; 83us; 101us; 557us; 105us; 550us; 106us; 549us; 107us; 548us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 526us; 38us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 0us; 16426us; 1us; 32768us; 46us; 87us; 3us; 32768us; 46us; 87us; 47us; 102us; 69us; 114us; 1us; 32768us; 112us; 88us; 18us; 32768us; 2us; 546us; 3us; 547us; 7us; 565us; 8us; 568us; 9us; 571us; 10us; 574us; 13us; 577us; 77us; 552us; 78us; 551us; 79us; 89us; 101us; 557us; 105us; 550us; 106us; 549us; 107us; 548us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 526us; 38us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 0us; 16427us; 18us; 32768us; 2us; 546us; 3us; 547us; 7us; 565us; 8us; 568us; 9us; 571us; 10us; 574us; 13us; 577us; 77us; 552us; 78us; 551us; 79us; 92us; 101us; 557us; 105us; 550us; 106us; 549us; 107us; 548us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 526us; 38us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 0us; 16428us; 2us; 16429us; 46us; 78us; 71us; 73us; 0us; 16430us; 1us; 32768us; 112us; 97us; 1us; 32768us; 86us; 98us; 13us; 32768us; 1us; 258us; 2us; 242us; 3us; 243us; 82us; 266us; 90us; 241us; 97us; 267us; 99us; 274us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 1us; 32768us; 79us; 100us; 1us; 16433us; 104us; 108us; 0us; 16431us; 1us; 32768us; 112us; 103us; 1us; 32768us; 86us; 104us; 13us; 32768us; 1us; 258us; 2us; 242us; 3us; 243us; 82us; 266us; 90us; 241us; 97us; 267us; 99us; 274us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 1us; 32768us; 79us; 106us; 1us; 16433us; 104us; 108us; 0us; 16432us; 1us; 16433us; 104us; 108us; 0us; 16434us; 1us; 32768us; 111us; 111us; 1us; 32768us; 86us; 112us; 3us; 32768us; 50us; 118us; 51us; 119us; 52us; 120us; 0us; 16435us; 1us; 32768us; 111us; 115us; 1us; 32768us; 86us; 116us; 3us; 32768us; 50us; 118us; 51us; 119us; 52us; 120us; 0us; 16436us; 0us; 16437us; 0us; 16438us; 0us; 16439us; 1us; 32768us; 111us; 122us; 0us; 16442us; 3us; 16441us; 79us; 124us; 101us; 127us; 112us; 126us; 1us; 32768us; 111us; 134us; 0us; 16440us; 0us; 16443us; 1us; 32768us; 112us; 128us; 1us; 32768us; 86us; 129us; 7us; 32768us; 97us; 215us; 99us; 218us; 101us; 221us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 525us; 1us; 32768us; 102us; 131us; 0us; 16444us; 1us; 16445us; 70us; 121us; 0us; 16446us; 1us; 32768us; 86us; 135us; 14us; 32768us; 1us; 258us; 2us; 242us; 3us; 243us; 82us; 266us; 89us; 136us; 90us; 241us; 97us; 267us; 99us; 274us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 13us; 32768us; 1us; 258us; 2us; 242us; 3us; 243us; 82us; 266us; 90us; 241us; 97us; 267us; 99us; 274us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 0us; 16447us; 14us; 32768us; 1us; 258us; 2us; 242us; 3us; 243us; 82us; 266us; 89us; 139us; 90us; 241us; 97us; 267us; 99us; 274us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 13us; 32768us; 1us; 258us; 2us; 242us; 3us; 243us; 82us; 266us; 90us; 241us; 97us; 267us; 99us; 274us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 0us; 16448us; 1us; 16449us; 81us; 142us; 1us; 32768us; 111us; 134us; 0us; 16450us; 1us; 32768us; 108us; 145us; 1us; 32768us; 79us; 146us; 14us; 32768us; 1us; 258us; 2us; 242us; 3us; 243us; 82us; 266us; 90us; 241us; 92us; 147us; 97us; 267us; 99us; 274us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 14us; 32768us; 1us; 258us; 2us; 242us; 3us; 243us; 82us; 266us; 89us; 148us; 90us; 241us; 97us; 267us; 99us; 274us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 0us; 16451us; 14us; 32768us; 1us; 258us; 2us; 242us; 3us; 243us; 82us; 266us; 90us; 241us; 92us; 150us; 97us; 267us; 99us; 274us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 14us; 32768us; 1us; 258us; 2us; 242us; 3us; 243us; 82us; 266us; 89us; 151us; 90us; 241us; 97us; 267us; 99us; 274us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 0us; 16452us; 14us; 32768us; 1us; 258us; 2us; 242us; 3us; 243us; 82us; 266us; 89us; 153us; 90us; 241us; 97us; 267us; 99us; 274us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 0us; 16453us; 14us; 32768us; 1us; 258us; 2us; 242us; 3us; 243us; 82us; 266us; 89us; 155us; 90us; 241us; 97us; 267us; 99us; 274us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 0us; 16454us; 1us; 32768us; 112us; 157us; 1us; 32768us; 75us; 158us; 1us; 32768us; 109us; 159us; 1us; 32768us; 86us; 160us; 13us; 32768us; 1us; 258us; 2us; 242us; 3us; 243us; 82us; 266us; 90us; 241us; 97us; 267us; 99us; 274us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 0us; 16455us; 1us; 32768us; 112us; 163us; 1us; 32768us; 86us; 164us; 13us; 32768us; 1us; 258us; 2us; 242us; 3us; 243us; 82us; 266us; 90us; 241us; 97us; 267us; 99us; 274us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 1us; 32768us; 79us; 166us; 38us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 0us; 16456us; 1us; 32768us; 110us; 169us; 0us; 16560us; 2us; 32768us; 99us; 171us; 112us; 379us; 1us; 32768us; 32us; 176us; 2us; 32768us; 32us; 176us; 100us; 173us; 0us; 16457us; 0us; 16458us; 0us; 16459us; 1us; 32768us; 110us; 177us; 1us; 32768us; 86us; 178us; 13us; 32768us; 1us; 258us; 2us; 242us; 3us; 243us; 82us; 266us; 90us; 241us; 97us; 267us; 99us; 274us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 0us; 16460us; 1us; 32768us; 108us; 181us; 1us; 32768us; 79us; 182us; 38us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 5us; 32768us; 0us; 196us; 53us; 195us; 54us; 197us; 55us; 193us; 56us; 194us; 38us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 0us; 16461us; 1us; 32768us; 108us; 187us; 0us; 16560us; 2us; 32768us; 79us; 189us; 112us; 379us; 38us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 5us; 32768us; 0us; 196us; 53us; 195us; 54us; 197us; 55us; 193us; 56us; 194us; 38us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 0us; 16462us; 0us; 16463us; 0us; 16464us; 0us; 16465us; 1us; 16466us; 36us; 198us; 1us; 16467us; 36us; 202us; 1us; 32768us; 99us; 199us; 38us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 1us; 32768us; 100us; 201us; 0us; 16468us; 1us; 32768us; 99us; 203us; 38us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 1us; 32768us; 100us; 205us; 0us; 16469us; 1us; 32768us; 112us; 207us; 1us; 32768us; 86us; 208us; 13us; 32768us; 1us; 258us; 2us; 242us; 3us; 243us; 82us; 266us; 90us; 241us; 97us; 267us; 99us; 274us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 0us; 16470us; 1us; 32768us; 111us; 211us; 1us; 32768us; 79us; 212us; 1us; 32768us; 112us; 213us; 0us; 16471us; 0us; 16472us; 7us; 32768us; 97us; 215us; 99us; 218us; 101us; 221us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 525us; 1us; 32768us; 98us; 217us; 0us; 16473us; 7us; 32768us; 97us; 215us; 99us; 218us; 101us; 221us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 525us; 1us; 32768us; 100us; 220us; 0us; 16474us; 7us; 32768us; 97us; 215us; 99us; 218us; 101us; 221us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 525us; 7us; 32768us; 97us; 215us; 99us; 218us; 101us; 221us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 525us; 1us; 32768us; 102us; 224us; 0us; 16475us; 1us; 32768us; 92us; 226us; 13us; 32768us; 1us; 258us; 2us; 242us; 3us; 243us; 82us; 266us; 90us; 241us; 97us; 267us; 99us; 274us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 0us; 16476us; 0us; 16477us; 2us; 16478us; 85us; 230us; 88us; 231us; 1us; 16479us; 88us; 233us; 4us; 32768us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 525us; 0us; 16480us; 4us; 32768us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 525us; 0us; 16481us; 13us; 16482us; 1us; 258us; 2us; 242us; 3us; 243us; 82us; 266us; 90us; 241us; 97us; 267us; 99us; 274us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 33us; 16482us; 1us; 258us; 2us; 242us; 3us; 243us; 32us; 16485us; 46us; 16485us; 47us; 16485us; 57us; 16485us; 58us; 16485us; 61us; 16485us; 62us; 16485us; 63us; 16485us; 64us; 16485us; 65us; 16485us; 66us; 16485us; 67us; 16485us; 68us; 16485us; 69us; 16485us; 70us; 16485us; 71us; 16485us; 72us; 16485us; 73us; 16485us; 79us; 16485us; 82us; 266us; 90us; 241us; 97us; 267us; 99us; 274us; 100us; 16485us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 13us; 16483us; 1us; 258us; 2us; 242us; 3us; 243us; 82us; 266us; 90us; 241us; 97us; 267us; 99us; 274us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 2us; 16484us; 80us; 240us; 87us; 527us; 0us; 16485us; 0us; 16486us; 0us; 16487us; 0us; 16488us; 0us; 16489us; 14us; 32768us; 1us; 258us; 2us; 242us; 3us; 243us; 6us; 252us; 82us; 266us; 90us; 241us; 97us; 267us; 99us; 274us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 19us; 32768us; 1us; 258us; 2us; 242us; 3us; 243us; 4us; 246us; 5us; 249us; 81us; 255us; 82us; 266us; 83us; 262us; 85us; 259us; 90us; 241us; 97us; 267us; 99us; 274us; 101us; 244us; 102us; 271us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 13us; 32768us; 1us; 258us; 2us; 242us; 3us; 243us; 82us; 266us; 90us; 241us; 97us; 267us; 99us; 274us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 1us; 32768us; 102us; 248us; 0us; 16490us; 13us; 32768us; 1us; 258us; 2us; 242us; 3us; 243us; 82us; 266us; 90us; 241us; 97us; 267us; 99us; 274us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 1us; 32768us; 102us; 251us; 0us; 16491us; 13us; 32768us; 1us; 258us; 2us; 242us; 3us; 243us; 82us; 266us; 90us; 241us; 97us; 267us; 99us; 274us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 1us; 32768us; 102us; 254us; 0us; 16492us; 13us; 32768us; 1us; 258us; 2us; 242us; 3us; 243us; 82us; 266us; 90us; 241us; 97us; 267us; 99us; 274us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 1us; 32768us; 102us; 257us; 0us; 16493us; 0us; 16494us; 1us; 32768us; 107us; 260us; 1us; 32768us; 102us; 261us; 0us; 16495us; 13us; 32768us; 1us; 258us; 2us; 242us; 3us; 243us; 82us; 266us; 90us; 241us; 97us; 267us; 99us; 274us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 1us; 32768us; 102us; 264us; 0us; 16496us; 0us; 16497us; 0us; 16498us; 14us; 32768us; 1us; 258us; 2us; 242us; 3us; 243us; 82us; 266us; 90us; 241us; 97us; 267us; 98us; 268us; 99us; 274us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 0us; 16499us; 14us; 32768us; 1us; 258us; 2us; 242us; 3us; 243us; 82us; 266us; 90us; 241us; 97us; 267us; 98us; 270us; 99us; 274us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 0us; 16500us; 0us; 16501us; 14us; 32768us; 1us; 258us; 2us; 242us; 3us; 243us; 82us; 266us; 90us; 241us; 97us; 267us; 99us; 274us; 101us; 244us; 102us; 273us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 0us; 16502us; 13us; 32768us; 1us; 258us; 2us; 242us; 3us; 243us; 82us; 266us; 90us; 241us; 97us; 267us; 99us; 274us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 13us; 32768us; 1us; 258us; 2us; 242us; 3us; 243us; 82us; 266us; 90us; 241us; 97us; 267us; 99us; 274us; 101us; 244us; 107us; 265us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 238us; 1us; 32768us; 100us; 277us; 0us; 16503us; 0us; 16504us; 0us; 16505us; 39us; 32768us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 49us; 286us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 2us; 32768us; 89us; 284us; 100us; 282us; 0us; 16506us; 0us; 16507us; 39us; 32768us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 49us; 286us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 0us; 16508us; 17us; 32768us; 2us; 546us; 3us; 547us; 7us; 565us; 8us; 568us; 9us; 571us; 10us; 574us; 13us; 577us; 77us; 552us; 78us; 551us; 101us; 557us; 105us; 550us; 106us; 549us; 107us; 548us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 526us; 18us; 16509us; 2us; 546us; 3us; 547us; 7us; 565us; 8us; 568us; 9us; 571us; 10us; 574us; 13us; 577us; 77us; 552us; 78us; 551us; 79us; 288us; 101us; 557us; 105us; 550us; 106us; 549us; 107us; 548us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 526us; 38us; 32768us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 38us; 16510us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 38us; 16511us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 0us; 16512us; 0us; 16513us; 0us; 16514us; 38us; 16519us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 38us; 16596us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 38us; 16597us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 39us; 32768us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 343us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 100us; 478us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 39us; 32768us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 344us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 100us; 485us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 0us; 16515us; 0us; 16516us; 0us; 16517us; 0us; 16520us; 1us; 16520us; 81us; 412us; 0us; 16521us; 0us; 16522us; 0us; 16523us; 0us; 16524us; 0us; 16525us; 0us; 16526us; 0us; 16527us; 0us; 16528us; 0us; 16529us; 1us; 32768us; 112us; 314us; 0us; 16530us; 1us; 32768us; 112us; 316us; 0us; 16531us; 1us; 32768us; 112us; 318us; 0us; 16532us; 0us; 16533us; 0us; 16534us; 1us; 32768us; 99us; 280us; 0us; 16535us; 0us; 16536us; 0us; 16537us; 0us; 16538us; 0us; 16539us; 0us; 16540us; 0us; 16541us; 0us; 16542us; 0us; 16543us; 4us; 32768us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 0us; 16544us; 4us; 32768us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 0us; 16545us; 0us; 16546us; 0us; 16547us; 0us; 16548us; 0us; 16549us; 0us; 16550us; 0us; 16551us; 0us; 16552us; 1us; 32768us; 45us; 345us; 39us; 32768us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 45us; 345us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 2us; 32768us; 45us; 345us; 112us; 510us; 0us; 16560us; 2us; 32768us; 27us; 347us; 112us; 379us; 1us; 32768us; 99us; 280us; 1us; 32768us; 28us; 349us; 1us; 32768us; 99us; 280us; 0us; 16553us; 39us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 45us; 352us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 0us; 16560us; 2us; 32768us; 27us; 354us; 112us; 379us; 1us; 32768us; 99us; 280us; 1us; 32768us; 28us; 356us; 1us; 32768us; 99us; 280us; 0us; 16554us; 0us; 16560us; 2us; 32768us; 99us; 280us; 112us; 379us; 1us; 32768us; 32us; 361us; 1us; 32768us; 99us; 362us; 0us; 16562us; 6us; 32768us; 33us; 373us; 100us; 367us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 1us; 32768us; 89us; 365us; 1us; 32768us; 100us; 366us; 0us; 16555us; 0us; 16556us; 0us; 16560us; 2us; 32768us; 92us; 370us; 112us; 379us; 38us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 1us; 32768us; 89us; 372us; 0us; 16557us; 18us; 32768us; 2us; 546us; 3us; 547us; 7us; 565us; 8us; 568us; 9us; 571us; 10us; 574us; 13us; 577us; 77us; 552us; 78us; 551us; 92us; 374us; 101us; 557us; 105us; 550us; 106us; 549us; 107us; 548us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 526us; 38us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 0us; 16558us; 18us; 32768us; 2us; 546us; 3us; 547us; 7us; 565us; 8us; 568us; 9us; 571us; 10us; 574us; 13us; 577us; 77us; 552us; 78us; 551us; 92us; 377us; 101us; 557us; 105us; 550us; 106us; 549us; 107us; 548us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 526us; 38us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 0us; 16559us; 0us; 16561us; 0us; 16563us; 1us; 32768us; 110us; 384us; 1us; 32768us; 99us; 280us; 0us; 16564us; 1us; 16565us; 110us; 384us; 0us; 16566us; 1us; 32768us; 99us; 387us; 1us; 32768us; 81us; 398us; 2us; 32768us; 81us; 390us; 100us; 389us; 0us; 16567us; 18us; 32768us; 2us; 546us; 3us; 547us; 7us; 565us; 8us; 568us; 9us; 571us; 10us; 574us; 13us; 577us; 28us; 391us; 77us; 552us; 78us; 551us; 101us; 557us; 105us; 550us; 106us; 549us; 107us; 548us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 526us; 1us; 32768us; 92us; 392us; 38us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 1us; 32768us; 89us; 394us; 1us; 32768us; 100us; 395us; 0us; 16568us; 0us; 16569us; 0us; 16570us; 17us; 32768us; 2us; 546us; 3us; 547us; 7us; 565us; 8us; 568us; 9us; 571us; 10us; 574us; 13us; 577us; 77us; 552us; 78us; 551us; 101us; 557us; 105us; 550us; 106us; 549us; 107us; 548us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 526us; 18us; 32768us; 2us; 546us; 3us; 547us; 7us; 565us; 8us; 568us; 9us; 571us; 10us; 574us; 13us; 577us; 77us; 552us; 78us; 551us; 92us; 400us; 101us; 557us; 105us; 550us; 106us; 549us; 107us; 548us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 526us; 38us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 1us; 32768us; 89us; 402us; 0us; 16571us; 1us; 32768us; 27us; 404us; 1us; 32768us; 99us; 280us; 1us; 32768us; 28us; 406us; 1us; 32768us; 99us; 280us; 0us; 16572us; 1us; 32768us; 99us; 409us; 1us; 32768us; 81us; 412us; 1us; 32768us; 100us; 411us; 0us; 16573us; 39us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 28us; 413us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 1us; 32768us; 92us; 414us; 38us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 1us; 32768us; 89us; 416us; 0us; 16574us; 1us; 32768us; 92us; 418us; 38us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 1us; 32768us; 89us; 420us; 1us; 32768us; 81us; 412us; 0us; 16575us; 0us; 16576us; 38us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 1us; 32768us; 27us; 425us; 1us; 32768us; 99us; 280us; 0us; 16577us; 38us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 1us; 32768us; 27us; 429us; 1us; 32768us; 99us; 280us; 0us; 16578us; 1us; 32768us; 112us; 452us; 3us; 32768us; 16us; 439us; 17us; 435us; 27us; 433us; 1us; 32768us; 99us; 280us; 0us; 16579us; 3us; 32768us; 7us; 446us; 8us; 447us; 9us; 448us; 1us; 32768us; 27us; 437us; 1us; 32768us; 99us; 280us; 0us; 16580us; 1us; 32768us; 112us; 458us; 1us; 32768us; 27us; 441us; 1us; 32768us; 99us; 280us; 0us; 16581us; 1us; 16582us; 88us; 444us; 3us; 32768us; 7us; 446us; 8us; 447us; 9us; 448us; 0us; 16583us; 0us; 16584us; 0us; 16585us; 0us; 16586us; 0us; 16587us; 0us; 16588us; 0us; 16589us; 1us; 32768us; 91us; 453us; 3us; 32768us; 7us; 449us; 8us; 450us; 9us; 451us; 38us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 1us; 16590us; 88us; 456us; 1us; 32768us; 112us; 452us; 0us; 16591us; 1us; 32768us; 91us; 459us; 38us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 1us; 16592us; 88us; 461us; 1us; 32768us; 112us; 458us; 0us; 16593us; 39us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 92us; 16629us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 516us; 1us; 32768us; 102us; 465us; 0us; 16594us; 1us; 32768us; 92us; 467us; 38us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 1us; 32768us; 102us; 469us; 0us; 16595us; 2us; 32768us; 88us; 472us; 100us; 476us; 2us; 32768us; 88us; 472us; 100us; 479us; 38us; 32768us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 1us; 32768us; 99us; 474us; 40us; 32768us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 80us; 477us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 100us; 475us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 0us; 16598us; 0us; 16599us; 38us; 32768us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 0us; 16600us; 0us; 16601us; 1us; 32768us; 99us; 481us; 3us; 32768us; 80us; 482us; 100us; 488us; 112us; 510us; 38us; 32768us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 1us; 32768us; 100us; 484us; 0us; 16604us; 0us; 16605us; 1us; 32768us; 100us; 487us; 0us; 16606us; 0us; 16607us; 1us; 32768us; 99us; 490us; 1us; 32768us; 112us; 510us; 1us; 32768us; 100us; 492us; 0us; 16608us; 1us; 32768us; 99us; 494us; 1us; 32768us; 112us; 503us; 1us; 32768us; 28us; 496us; 1us; 32768us; 92us; 497us; 38us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 1us; 32768us; 89us; 499us; 1us; 32768us; 100us; 500us; 0us; 16609us; 1us; 16610us; 112us; 503us; 0us; 16611us; 1us; 32768us; 92us; 504us; 38us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 1us; 32768us; 89us; 506us; 0us; 16612us; 1us; 16613us; 88us; 508us; 1us; 32768us; 112us; 510us; 0us; 16614us; 1us; 32768us; 79us; 511us; 38us; 16518us; 2us; 336us; 3us; 337us; 7us; 473us; 12us; 493us; 13us; 480us; 14us; 489us; 15us; 431us; 23us; 351us; 24us; 423us; 25us; 408us; 26us; 427us; 29us; 335us; 30us; 386us; 31us; 381us; 32us; 342us; 34us; 358us; 35us; 330us; 36us; 331us; 37us; 333us; 38us; 324us; 39us; 325us; 40us; 326us; 41us; 327us; 42us; 328us; 43us; 329us; 44us; 321us; 93us; 317us; 95us; 315us; 96us; 313us; 99us; 280us; 101us; 463us; 105us; 340us; 106us; 339us; 107us; 338us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 0us; 16615us; 0us; 16616us; 0us; 16617us; 1us; 16618us; 87us; 520us; 3us; 16618us; 87us; 520us; 92us; 16629us; 112us; 531us; 0us; 16619us; 0us; 16620us; 0us; 16621us; 4us; 32768us; 109us; 519us; 110us; 518us; 111us; 517us; 112us; 515us; 0us; 16622us; 0us; 16623us; 0us; 16624us; 0us; 16625us; 1us; 32768us; 87us; 527us; 2us; 16643us; 0us; 554us; 87us; 527us; 4us; 32768us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 525us; 0us; 16626us; 0us; 16627us; 0us; 16628us; 1us; 16629us; 112us; 531us; 0us; 16630us; 1us; 16631us; 80us; 534us; 0us; 16632us; 18us; 32768us; 2us; 546us; 3us; 547us; 7us; 565us; 8us; 568us; 9us; 571us; 10us; 574us; 13us; 577us; 77us; 552us; 78us; 551us; 101us; 557us; 102us; 559us; 105us; 550us; 106us; 549us; 107us; 548us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 526us; 18us; 32768us; 2us; 546us; 3us; 547us; 7us; 565us; 8us; 568us; 9us; 571us; 10us; 574us; 13us; 577us; 77us; 552us; 78us; 551us; 100us; 567us; 101us; 557us; 105us; 550us; 106us; 549us; 107us; 548us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 526us; 18us; 32768us; 2us; 546us; 3us; 547us; 7us; 565us; 8us; 568us; 9us; 571us; 10us; 574us; 13us; 577us; 77us; 552us; 78us; 551us; 100us; 570us; 101us; 557us; 105us; 550us; 106us; 549us; 107us; 548us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 526us; 18us; 32768us; 2us; 546us; 3us; 547us; 7us; 565us; 8us; 568us; 9us; 571us; 10us; 574us; 13us; 577us; 77us; 552us; 78us; 551us; 100us; 573us; 101us; 557us; 105us; 550us; 106us; 549us; 107us; 548us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 526us; 18us; 32768us; 2us; 546us; 3us; 547us; 7us; 565us; 8us; 568us; 9us; 571us; 10us; 574us; 13us; 577us; 77us; 552us; 78us; 551us; 100us; 576us; 101us; 557us; 105us; 550us; 106us; 549us; 107us; 548us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 526us; 0us; 16633us; 1us; 32768us; 79us; 542us; 17us; 32768us; 2us; 546us; 3us; 547us; 7us; 565us; 8us; 568us; 9us; 571us; 10us; 574us; 13us; 577us; 77us; 552us; 78us; 551us; 101us; 557us; 105us; 550us; 106us; 549us; 107us; 548us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 526us; 1us; 16634us; 88us; 544us; 1us; 32768us; 112us; 541us; 0us; 16635us; 0us; 16636us; 0us; 16637us; 0us; 16638us; 0us; 16639us; 0us; 16640us; 0us; 16641us; 17us; 32768us; 2us; 546us; 3us; 547us; 7us; 565us; 8us; 568us; 9us; 571us; 10us; 574us; 13us; 577us; 77us; 552us; 78us; 551us; 101us; 557us; 105us; 550us; 106us; 549us; 107us; 548us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 526us; 0us; 16642us; 17us; 32768us; 2us; 546us; 3us; 547us; 7us; 565us; 8us; 568us; 9us; 571us; 10us; 574us; 13us; 577us; 77us; 552us; 78us; 551us; 101us; 557us; 105us; 550us; 106us; 549us; 107us; 548us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 526us; 0us; 16644us; 0us; 16645us; 4us; 32768us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 525us; 17us; 32768us; 2us; 546us; 3us; 547us; 7us; 565us; 8us; 568us; 9us; 571us; 10us; 574us; 13us; 577us; 77us; 552us; 78us; 551us; 101us; 557us; 105us; 550us; 106us; 549us; 107us; 548us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 526us; 0us; 16646us; 0us; 16647us; 0us; 16648us; 0us; 16649us; 0us; 16650us; 0us; 16651us; 1us; 32768us; 99us; 566us; 17us; 32768us; 2us; 546us; 3us; 547us; 7us; 565us; 8us; 568us; 9us; 571us; 10us; 574us; 13us; 577us; 77us; 552us; 78us; 551us; 101us; 557us; 105us; 550us; 106us; 549us; 107us; 548us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 526us; 0us; 16652us; 1us; 32768us; 99us; 569us; 17us; 32768us; 2us; 546us; 3us; 547us; 7us; 565us; 8us; 568us; 9us; 571us; 10us; 574us; 13us; 577us; 77us; 552us; 78us; 551us; 101us; 557us; 105us; 550us; 106us; 549us; 107us; 548us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 526us; 0us; 16653us; 1us; 32768us; 99us; 572us; 17us; 32768us; 2us; 546us; 3us; 547us; 7us; 565us; 8us; 568us; 9us; 571us; 10us; 574us; 13us; 577us; 77us; 552us; 78us; 551us; 101us; 557us; 105us; 550us; 106us; 549us; 107us; 548us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 526us; 0us; 16654us; 1us; 32768us; 99us; 575us; 17us; 32768us; 2us; 546us; 3us; 547us; 7us; 565us; 8us; 568us; 9us; 571us; 10us; 574us; 13us; 577us; 77us; 552us; 78us; 551us; 101us; 557us; 105us; 550us; 106us; 549us; 107us; 548us; 109us; 524us; 110us; 523us; 111us; 522us; 112us; 526us; 0us; 16655us; 1us; 32768us; 99us; 578us; 1us; 32768us; 112us; 541us; 1us; 32768us; 100us; 580us; 0us; 16656us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 2us; 3us; 19us; 22us; 24us; 25us; 27us; 28us; 30us; 31us; 47us; 48us; 50us; 89us; 90us; 95us; 97us; 99us; 100us; 103us; 105us; 107us; 108us; 110us; 111us; 112us; 113us; 115us; 117us; 119us; 121us; 123us; 125us; 127us; 129us; 131us; 133us; 134us; 136us; 137us; 141us; 143us; 144us; 148us; 149us; 150us; 151us; 152us; 153us; 158us; 159us; 163us; 165us; 166us; 167us; 169us; 170us; 173us; 191us; 192us; 193us; 194us; 195us; 197us; 198us; 199us; 200us; 201us; 202us; 203us; 204us; 205us; 206us; 208us; 210us; 211us; 213us; 214us; 216us; 235us; 274us; 275us; 294us; 333us; 334us; 336us; 340us; 342us; 361us; 400us; 401us; 420us; 459us; 460us; 463us; 464us; 466us; 468us; 482us; 484us; 486us; 487us; 489us; 491us; 505us; 507us; 509us; 510us; 512us; 513us; 515us; 517us; 521us; 522us; 524us; 526us; 530us; 531us; 532us; 533us; 534us; 536us; 537us; 541us; 543us; 544us; 545us; 547us; 549us; 557us; 559us; 560us; 562us; 563us; 565us; 580us; 594us; 595us; 610us; 624us; 625us; 627us; 629us; 630us; 632us; 634us; 649us; 664us; 665us; 680us; 695us; 696us; 711us; 712us; 727us; 728us; 730us; 732us; 734us; 736us; 750us; 751us; 753us; 755us; 769us; 771us; 810us; 811us; 813us; 814us; 817us; 819us; 822us; 823us; 824us; 825us; 827us; 829us; 843us; 844us; 846us; 848us; 887us; 893us; 932us; 933us; 935us; 936us; 939us; 978us; 984us; 1023us; 1024us; 1025us; 1026us; 1027us; 1029us; 1031us; 1033us; 1072us; 1074us; 1075us; 1077us; 1116us; 1118us; 1119us; 1121us; 1123us; 1137us; 1138us; 1140us; 1142us; 1144us; 1145us; 1146us; 1154us; 1156us; 1157us; 1165us; 1167us; 1168us; 1176us; 1184us; 1186us; 1187us; 1189us; 1203us; 1204us; 1205us; 1208us; 1210us; 1215us; 1216us; 1221us; 1222us; 1236us; 1270us; 1284us; 1287us; 1288us; 1289us; 1290us; 1291us; 1292us; 1307us; 1327us; 1341us; 1343us; 1344us; 1358us; 1360us; 1361us; 1375us; 1377us; 1378us; 1392us; 1394us; 1395us; 1396us; 1398us; 1400us; 1401us; 1415us; 1417us; 1418us; 1419us; 1420us; 1435us; 1436us; 1451us; 1452us; 1453us; 1468us; 1469us; 1483us; 1497us; 1499us; 1500us; 1501us; 1502us; 1542us; 1545us; 1546us; 1547us; 1587us; 1588us; 1606us; 1625us; 1664us; 1703us; 1742us; 1743us; 1744us; 1745us; 1784us; 1823us; 1862us; 1902us; 1942us; 1943us; 1944us; 1945us; 1946us; 1948us; 1949us; 1950us; 1951us; 1952us; 1953us; 1954us; 1955us; 1956us; 1957us; 1959us; 1960us; 1962us; 1963us; 1965us; 1966us; 1967us; 1968us; 1970us; 1971us; 1972us; 1973us; 1974us; 1975us; 1976us; 1977us; 1978us; 1979us; 1984us; 1985us; 1990us; 1991us; 1992us; 1993us; 1994us; 1995us; 1996us; 1997us; 1998us; 2000us; 2040us; 2043us; 2044us; 2047us; 2049us; 2051us; 2053us; 2054us; 2094us; 2095us; 2098us; 2100us; 2102us; 2104us; 2105us; 2106us; 2109us; 2111us; 2113us; 2114us; 2121us; 2123us; 2125us; 2126us; 2127us; 2128us; 2131us; 2170us; 2172us; 2173us; 2192us; 2231us; 2232us; 2251us; 2290us; 2291us; 2292us; 2293us; 2295us; 2297us; 2298us; 2300us; 2301us; 2303us; 2305us; 2308us; 2309us; 2328us; 2330us; 2369us; 2371us; 2373us; 2374us; 2375us; 2376us; 2394us; 2413us; 2452us; 2454us; 2455us; 2457us; 2459us; 2461us; 2463us; 2464us; 2466us; 2468us; 2470us; 2471us; 2511us; 2513us; 2552us; 2554us; 2555us; 2557us; 2596us; 2598us; 2600us; 2601us; 2602us; 2641us; 2643us; 2645us; 2646us; 2685us; 2687us; 2689us; 2690us; 2692us; 2696us; 2698us; 2699us; 2703us; 2705us; 2707us; 2708us; 2710us; 2712us; 2714us; 2715us; 2717us; 2721us; 2722us; 2723us; 2724us; 2725us; 2726us; 2727us; 2728us; 2730us; 2734us; 2773us; 2775us; 2777us; 2778us; 2780us; 2819us; 2821us; 2823us; 2824us; 2864us; 2866us; 2867us; 2869us; 2908us; 2910us; 2911us; 2914us; 2917us; 2956us; 2958us; 2999us; 3000us; 3001us; 3040us; 3041us; 3042us; 3044us; 3048us; 3087us; 3089us; 3090us; 3091us; 3093us; 3094us; 3095us; 3097us; 3099us; 3101us; 3102us; 3104us; 3106us; 3108us; 3110us; 3149us; 3151us; 3153us; 3154us; 3156us; 3157us; 3159us; 3198us; 3200us; 3201us; 3203us; 3205us; 3206us; 3208us; 3247us; 3248us; 3249us; 3250us; 3252us; 3256us; 3257us; 3258us; 3259us; 3264us; 3265us; 3266us; 3267us; 3268us; 3270us; 3273us; 3278us; 3279us; 3280us; 3281us; 3283us; 3284us; 3286us; 3287us; 3306us; 3325us; 3344us; 3363us; 3382us; 3383us; 3385us; 3403us; 3405us; 3407us; 3408us; 3409us; 3410us; 3411us; 3412us; 3413us; 3414us; 3432us; 3433us; 3451us; 3452us; 3453us; 3458us; 3476us; 3477us; 3478us; 3479us; 3480us; 3481us; 3482us; 3484us; 3502us; 3503us; 3505us; 3523us; 3524us; 3526us; 3544us; 3545us; 3547us; 3565us; 3566us; 3568us; 3570us; 3572us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 4us; 4us; 0us; 2us; 0us; 2us; 3us; 4us; 5us; 3us; 1us; 1us; 11us; 2us; 3us; 0us; 2us; 1us; 1us; 1us; 1us; 2us; 4us; 1us; 5us; 1us; 1us; 2us; 4us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 0us; 2us; 4us; 5us; 5us; 6us; 1us; 2us; 6us; 7us; 0us; 2us; 4us; 5us; 1us; 1us; 1us; 5us; 3us; 0us; 2us; 6us; 1us; 2us; 4us; 5us; 1us; 3us; 5us; 6us; 6us; 7us; 6us; 6us; 6us; 1us; 2us; 4us; 6us; 7us; 1us; 1us; 1us; 1us; 1us; 5us; 5us; 4us; 4us; 1us; 3us; 3us; 4us; 3us; 1us; 1us; 2us; 3us; 4us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 5us; 5us; 4us; 5us; 1us; 5us; 5us; 1us; 1us; 2us; 3us; 3us; 4us; 4us; 1us; 2us; 3us; 1us; 3us; 2us; 4us; 1us; 1us; 1us; 1us; 2us; 2us; 2us; 0us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 7us; 7us; 9us; 7us; 5us; 3us; 4us; 0us; 2us; 0us; 2us; 3us; 1us; 2us; 4us; 9us; 1us; 2us; 5us; 6us; 4us; 5us; 6us; 5us; 4us; 4us; 4us; 6us; 6us; 1us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 4us; 6us; 3us; 5us; 3us; 5us; 1us; 3us; 3us; 4us; 5us; 7us; 4us; 6us; 7us; 5us; 4us; 3us; 4us; 8us; 1us; 2us; 4us; 1us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 1us; 1us; 3us; 1us; 2us; 0us; 2us; 1us; 2us; 2us; 3us; 5us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 3us; 1us; 4us; 1us; 1us; 1us; 1us; 1us; 4us; 4us; 4us; 4us; 4us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 5us; 6us; 6us; 7us; 8us; 9us; 10us; 10us; 11us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 14us; 14us; 15us; 15us; 15us; 15us; 16us; 16us; 17us; 17us; 18us; 18us; 19us; 19us; 20us; 20us; 20us; 21us; 21us; 22us; 22us; 22us; 23us; 23us; 24us; 24us; 25us; 25us; 26us; 26us; 26us; 26us; 27us; 28us; 29us; 30us; 30us; 31us; 32us; 33us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 35us; 36us; 37us; 37us; 37us; 37us; 38us; 38us; 39us; 39us; 39us; 39us; 40us; 40us; 41us; 41us; 41us; 41us; 41us; 41us; 41us; 41us; 41us; 41us; 41us; 41us; 41us; 41us; 41us; 41us; 41us; 41us; 41us; 41us; 42us; 42us; 43us; 44us; 44us; 45us; 45us; 45us; 46us; 46us; 46us; 46us; 46us; 46us; 47us; 47us; 48us; 48us; 48us; 48us; 48us; 48us; 48us; 48us; 48us; 48us; 48us; 48us; 48us; 48us; 48us; 48us; 48us; 48us; 48us; 48us; 48us; 48us; 48us; 48us; 48us; 48us; 48us; 48us; 48us; 48us; 48us; 48us; 48us; 49us; 49us; 50us; 50us; 51us; 52us; 52us; 53us; 53us; 54us; 54us; 55us; 56us; 56us; 57us; 57us; 58us; 58us; 59us; 60us; 61us; 62us; 62us; 62us; 63us; 64us; 65us; 65us; 65us; 66us; 66us; 67us; 67us; 67us; 68us; 68us; 68us; 69us; 69us; 70us; 70us; 71us; 71us; 72us; 72us; 73us; 73us; 73us; 73us; 74us; 74us; 75us; 75us; 75us; 75us; 76us; 77us; 78us; 78us; 79us; 80us; 80us; 81us; 82us; 83us; 84us; 84us; 84us; 84us; 84us; 85us; 85us; 85us; 85us; 86us; 86us; 87us; 87us; 88us; 88us; 88us; 89us; 89us; 90us; 90us; 90us; 90us; 90us; 90us; 90us; 90us; 90us; 90us; 90us; 90us; 90us; 90us; 90us; 90us; 91us; 92us; 93us; 94us; 95us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 65535us; 65535us; 16385us; 65535us; 16386us; 65535us; 16388us; 65535us; 16390us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 16392us; 65535us; 65535us; 65535us; 16393us; 65535us; 16394us; 16395us; 16396us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16397us; 65535us; 16398us; 65535us; 65535us; 16399us; 65535us; 16401us; 16402us; 16403us; 16404us; 16405us; 65535us; 16406us; 65535us; 65535us; 16407us; 16408us; 65535us; 65535us; 65535us; 65535us; 16409us; 16410us; 16411us; 16412us; 65535us; 16413us; 16414us; 16415us; 16416us; 16417us; 16418us; 16419us; 16420us; 16421us; 65535us; 65535us; 16422us; 65535us; 16424us; 65535us; 65535us; 65535us; 16425us; 65535us; 65535us; 16426us; 65535us; 65535us; 65535us; 65535us; 65535us; 16427us; 65535us; 65535us; 16428us; 65535us; 16430us; 65535us; 65535us; 65535us; 65535us; 65535us; 16431us; 65535us; 65535us; 65535us; 65535us; 65535us; 16432us; 65535us; 16434us; 65535us; 65535us; 65535us; 16435us; 65535us; 65535us; 65535us; 16436us; 16437us; 16438us; 16439us; 65535us; 65535us; 65535us; 65535us; 16440us; 16443us; 65535us; 65535us; 65535us; 65535us; 16444us; 65535us; 16446us; 65535us; 65535us; 65535us; 16447us; 65535us; 65535us; 16448us; 65535us; 65535us; 16450us; 65535us; 65535us; 65535us; 65535us; 16451us; 65535us; 65535us; 16452us; 65535us; 16453us; 65535us; 16454us; 65535us; 65535us; 65535us; 65535us; 65535us; 16455us; 65535us; 65535us; 65535us; 65535us; 65535us; 16456us; 65535us; 65535us; 65535us; 65535us; 65535us; 16457us; 16458us; 16459us; 65535us; 65535us; 65535us; 16460us; 65535us; 65535us; 65535us; 65535us; 65535us; 16461us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16462us; 16463us; 16464us; 16465us; 65535us; 65535us; 65535us; 65535us; 65535us; 16468us; 65535us; 65535us; 65535us; 16469us; 65535us; 65535us; 65535us; 16470us; 65535us; 65535us; 65535us; 16471us; 16472us; 65535us; 65535us; 16473us; 65535us; 65535us; 16474us; 65535us; 65535us; 65535us; 16475us; 65535us; 65535us; 16476us; 16477us; 65535us; 65535us; 65535us; 16480us; 65535us; 16481us; 65535us; 65535us; 65535us; 65535us; 16485us; 16486us; 16487us; 16488us; 16489us; 65535us; 65535us; 65535us; 65535us; 16490us; 65535us; 65535us; 16491us; 65535us; 65535us; 16492us; 65535us; 65535us; 16493us; 16494us; 65535us; 65535us; 16495us; 65535us; 65535us; 16496us; 16497us; 16498us; 65535us; 16499us; 65535us; 16500us; 16501us; 65535us; 16502us; 65535us; 65535us; 65535us; 16503us; 16504us; 16505us; 65535us; 65535us; 16506us; 16507us; 65535us; 16508us; 65535us; 65535us; 65535us; 65535us; 65535us; 16512us; 16513us; 16514us; 65535us; 65535us; 65535us; 65535us; 65535us; 16515us; 16516us; 16517us; 16520us; 65535us; 16521us; 16522us; 16523us; 16524us; 16525us; 16526us; 16527us; 16528us; 16529us; 65535us; 16530us; 65535us; 16531us; 65535us; 16532us; 16533us; 16534us; 65535us; 16535us; 16536us; 16537us; 16538us; 16539us; 16540us; 16541us; 16542us; 16543us; 65535us; 16544us; 65535us; 16545us; 16546us; 16547us; 16548us; 16549us; 16550us; 16551us; 16552us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16553us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16554us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16555us; 16556us; 65535us; 65535us; 65535us; 65535us; 16557us; 65535us; 65535us; 16558us; 65535us; 65535us; 16559us; 16561us; 16563us; 65535us; 65535us; 16564us; 65535us; 16566us; 65535us; 65535us; 65535us; 16567us; 65535us; 65535us; 65535us; 65535us; 65535us; 16568us; 16569us; 16570us; 65535us; 65535us; 65535us; 65535us; 16571us; 65535us; 65535us; 65535us; 65535us; 16572us; 65535us; 65535us; 65535us; 16573us; 65535us; 65535us; 65535us; 65535us; 16574us; 65535us; 65535us; 65535us; 65535us; 16575us; 16576us; 65535us; 65535us; 65535us; 16577us; 65535us; 65535us; 65535us; 16578us; 65535us; 65535us; 65535us; 16579us; 65535us; 65535us; 65535us; 16580us; 65535us; 65535us; 65535us; 16581us; 65535us; 65535us; 16583us; 16584us; 16585us; 16586us; 16587us; 16588us; 16589us; 65535us; 65535us; 65535us; 65535us; 65535us; 16591us; 65535us; 65535us; 65535us; 65535us; 16593us; 65535us; 65535us; 16594us; 65535us; 65535us; 65535us; 16595us; 65535us; 65535us; 65535us; 65535us; 65535us; 16598us; 16599us; 65535us; 16600us; 16601us; 65535us; 65535us; 65535us; 65535us; 16604us; 16605us; 65535us; 16606us; 16607us; 65535us; 65535us; 65535us; 16608us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16609us; 65535us; 16611us; 65535us; 65535us; 65535us; 16612us; 65535us; 65535us; 16614us; 65535us; 65535us; 16615us; 16616us; 16617us; 65535us; 65535us; 16619us; 16620us; 16621us; 65535us; 16622us; 16623us; 16624us; 16625us; 65535us; 65535us; 65535us; 16626us; 16627us; 16628us; 65535us; 16630us; 65535us; 16632us; 65535us; 65535us; 65535us; 65535us; 65535us; 16633us; 65535us; 65535us; 65535us; 65535us; 16635us; 16636us; 16637us; 16638us; 16639us; 16640us; 16641us; 65535us; 16642us; 65535us; 16644us; 16645us; 65535us; 65535us; 16646us; 16647us; 16648us; 16649us; 16650us; 16651us; 65535us; 65535us; 16652us; 65535us; 65535us; 16653us; 65535us; 65535us; 16654us; 65535us; 65535us; 16655us; 65535us; 65535us; 65535us; 16656us; |]
let _fsyacc_reductions ()  =    [| 
# 1116 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  Unit  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startunit));
# 1125 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_main in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 ".\Parser.fsy"
                                                             UMain(_1, _2, _3) 
                   )
# 96 ".\Parser.fsy"
                 :  Unit ));
# 1138 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_export in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 ".\Parser.fsy"
                                                            UExport(_1, _2, _3) 
                   )
# 97 ".\Parser.fsy"
                 :  Unit ));
# 1151 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 ".\Parser.fsy"
                                          [] 
                   )
# 99 ".\Parser.fsy"
                 : 'gentype_import_list));
# 1161 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import in
            let _2 = parseState.GetInput(2) :?> 'gentype_import_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 ".\Parser.fsy"
                                                  _1 :: _2 
                   )
# 100 ".\Parser.fsy"
                 : 'gentype_import_list));
# 1173 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 ".\Parser.fsy"
                                         [] 
                   )
# 102 ".\Parser.fsy"
                 : 'gentype_decl_list));
# 1183 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_declaration in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 ".\Parser.fsy"
                                                   _1 :: _2 
                   )
# 103 ".\Parser.fsy"
                 : 'gentype_decl_list));
# 1195 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 ".\Parser.fsy"
                                                      _3 
                   )
# 105 ".\Parser.fsy"
                 : 'gentype_main));
# 1206 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_import_path in
            let _4 = parseState.GetInput(4) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 ".\Parser.fsy"
                                                                    { Native = false; Explicit = []; Path = _2; Alias = _4 } 
                   )
# 107 ".\Parser.fsy"
                 : 'gentype_import));
# 1218 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_brace_names in
            let _3 = parseState.GetInput(3) :?> 'gentype_import_path in
            let _5 = parseState.GetInput(5) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 ".\Parser.fsy"
                                                                          { Native = false; Explicit = _2; Path = _3; Alias = _5 } 
                   )
# 108 ".\Parser.fsy"
                 : 'gentype_import));
# 1231 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 ".\Parser.fsy"
                                                        { Native = true; Explicit = []; Path = IPLocal (_3); Alias = stringToSmallName "" } 
                   )
# 109 ".\Parser.fsy"
                 : 'gentype_import));
# 1242 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 ".\Parser.fsy"
                                            IPLocal (_1) 
                   )
# 111 ".\Parser.fsy"
                 : 'gentype_import_path));
# 1253 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_remote in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 ".\Parser.fsy"
                                   IPRemote (_1) 
                   )
# 112 ".\Parser.fsy"
                 : 'gentype_import_path));
# 1264 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> Name in
            let _7 = parseState.GetInput(7) :?> IntegerLiteral in
            let _9 = parseState.GetInput(9) :?> IntegerLiteral in
            let _11 = parseState.GetInput(11) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 ".\Parser.fsy"
                          { Org = _1; Project = _3; Unit = _5; Major = _7; Minor = _9; Patch = _11 } 
                   )
# 115 ".\Parser.fsy"
                 : 'gentype_remote));
# 1280 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_brace_names in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 ".\Parser.fsy"
                                                   _2 
                   )
# 117 ".\Parser.fsy"
                 : 'gentype_export));
# 1291 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_name_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 ".\Parser.fsy"
                                                               _2 
                   )
# 119 ".\Parser.fsy"
                 : 'gentype_brace_names));
# 1302 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 ".\Parser.fsy"
                                       [] 
                   )
# 121 ".\Parser.fsy"
                 : 'gentype_name_list));
# 1312 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_name in
            let _2 = parseState.GetInput(2) :?> 'gentype_name_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 ".\Parser.fsy"
                                            _1 :: _2 
                   )
# 122 ".\Parser.fsy"
                 : 'gentype_name_list));
# 1324 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 ".\Parser.fsy"
                                          _1 
                   )
# 124 ".\Parser.fsy"
                 : 'gentype_name));
# 1335 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 ".\Parser.fsy"
                                         _1 
                   )
# 125 ".\Parser.fsy"
                 : 'gentype_name));
# 1346 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 ".\Parser.fsy"
                                          _1 
                   )
# 126 ".\Parser.fsy"
                 : 'gentype_name));
# 1357 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 ".\Parser.fsy"
                                                        DFunc (_1) 
                   )
# 130 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1368 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 ".\Parser.fsy"
                                                      DRecFuncs ([_2]) 
                   )
# 131 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1379 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_function_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 ".\Parser.fsy"
                                                                      DRecFuncs (_3) 
                   )
# 132 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1390 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_native in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 ".\Parser.fsy"
                                             DNative (_1) 
                   )
# 133 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1401 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 ".\Parser.fsy"
                                                                            DPattern (_2, _3, _5) 
                   )
# 134 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1414 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_userkind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 ".\Parser.fsy"
                                               DKind (_1) 
                   )
# 135 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1425 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 ".\Parser.fsy"
                                               DType (_1) 
                   )
# 136 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1436 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 ".\Parser.fsy"
                                                      DRecTypes ([_2]) 
                   )
# 137 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1447 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_datatype_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 ".\Parser.fsy"
                                                                      DRecTypes (_3) 
                   )
# 138 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1458 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_overload in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 ".\Parser.fsy"
                                               _1 
                   )
# 139 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1469 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_instance in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 ".\Parser.fsy"
                                               _1 
                   )
# 140 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1480 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rule in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 ".\Parser.fsy"
                                            _1 
                   )
# 141 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1491 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_effect in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 ".\Parser.fsy"
                                             DEffect (_1) 
                   )
# 142 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1502 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_test in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 ".\Parser.fsy"
                                            DTest (_1) 
                   )
# 143 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1513 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_law in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 ".\Parser.fsy"
                                           DLaw (_1) 
                   )
# 144 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1524 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_check in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 ".\Parser.fsy"
                                             DCheck (_1) 
                   )
# 145 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1535 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tag in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 ".\Parser.fsy"
                                           _1 
                   )
# 146 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1546 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_documentation_lines in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 ".\Parser.fsy"
                                                                        _3 
                   )
# 148 ".\Parser.fsy"
                 : 'gentype_documentation));
# 1557 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 ".\Parser.fsy"
                                                       [] 
                   )
# 150 ".\Parser.fsy"
                 : 'gentype_documentation_lines));
# 1567 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> DocumentationLine in
            let _2 = parseState.GetInput(2) :?> 'gentype_documentation_lines in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 ".\Parser.fsy"
                                                                     _1 :: _2 
                   )
# 151 ".\Parser.fsy"
                 : 'gentype_documentation_lines));
# 1579 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 ".\Parser.fsy"
                          { Name = _2; Docs = []; Body = _4 } 
                   )
# 154 ".\Parser.fsy"
                 : 'gentype_function));
# 1591 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_no_dot_pattern_expr_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 ".\Parser.fsy"
                           { Name = _2; Docs = []; Body = [EStatementBlock([SLet { Matcher = _3; Body = [] }; SExpression(_5)])] } 
                   )
# 156 ".\Parser.fsy"
                 : 'gentype_function));
# 1604 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 ".\Parser.fsy"
                           { Name = _3; Docs = _1; Body = _5 } 
                   )
# 158 ".\Parser.fsy"
                 : 'gentype_function));
# 1617 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_no_dot_pattern_expr_list in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 ".\Parser.fsy"
                           { Name = _3; Docs = _1; Body = [EStatementBlock([SLet { Matcher = _4; Body = [] }; SExpression(_6)])] } 
                   )
# 160 ".\Parser.fsy"
                 : 'gentype_function));
# 1631 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 ".\Parser.fsy"
                                                   [_1] 
                   )
# 162 ".\Parser.fsy"
                 : 'gentype_function_list));
# 1642 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            let _2 = parseState.GetInput(2) :?> 'gentype_function_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 ".\Parser.fsy"
                                                     _1 :: _2 
                   )
# 163 ".\Parser.fsy"
                 : 'gentype_function_list));
# 1654 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_any_type in
            let _6 = parseState.GetInput(6) :?> 'gentype_native_code_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 ".\Parser.fsy"
                          { Name = _2; Docs = []; Type = _4; Lines = _6 } 
                   )
# 166 ".\Parser.fsy"
                 : 'gentype_native));
# 1667 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_any_type in
            let _7 = parseState.GetInput(7) :?> 'gentype_native_code_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 ".\Parser.fsy"
                             { Name = _3; Docs = _1; Type = _5; Lines = _7 } 
                   )
# 168 ".\Parser.fsy"
                 : 'gentype_native));
# 1681 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 ".\Parser.fsy"
                                                    [] 
                   )
# 170 ".\Parser.fsy"
                 : 'gentype_native_code_list));
# 1691 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> NativeCodeLine in
            let _2 = parseState.GetInput(2) :?> 'gentype_native_code_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 ".\Parser.fsy"
                                                                _1 :: _2 
                   )
# 171 ".\Parser.fsy"
                 : 'gentype_native_code_list));
# 1703 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_kind_unify in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 ".\Parser.fsy"
                          { Name = _2; Docs = []; Unify = _4 } 
                   )
# 174 ".\Parser.fsy"
                 : 'gentype_userkind));
# 1715 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_kind_unify in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 ".\Parser.fsy"
                           { Name = _3; Docs = _1; Unify = _5 } 
                   )
# 176 ".\Parser.fsy"
                 : 'gentype_userkind));
# 1728 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 ".\Parser.fsy"
                                             KUBoolean 
                   )
# 178 ".\Parser.fsy"
                 : 'gentype_kind_unify));
# 1738 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 ".\Parser.fsy"
                                       KUAbelian 
                   )
# 179 ".\Parser.fsy"
                 : 'gentype_kind_unify));
# 1748 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 ".\Parser.fsy"
                                         KUSyntactic 
                   )
# 180 ".\Parser.fsy"
                 : 'gentype_kind_unify));
# 1758 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_type_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_constructor_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 ".\Parser.fsy"
                          { Name = _2; Docs = []; Params = _3; Constructors = _5 } 
                   )
# 183 ".\Parser.fsy"
                 : 'gentype_datatype));
# 1771 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_type_param_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 ".\Parser.fsy"
                           { Name = _2; Docs = []; Params = _3; Constructors = [] } 
                   )
# 185 ".\Parser.fsy"
                 : 'gentype_datatype));
# 1783 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 ".\Parser.fsy"
                            [] 
                   )
# 188 ".\Parser.fsy"
                 : 'gentype_type_param_list));
# 1793 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_param_list in
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 ".\Parser.fsy"
                            List.append _1 [(_2, SKBase (sIdentifier [] (stringToBigName "Val")))] 
                   )
# 190 ".\Parser.fsy"
                 : 'gentype_type_param_list));
# 1805 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_param_list in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_any_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 ".\Parser.fsy"
                            List.append _1 [(_3, _5)] 
                   )
# 192 ".\Parser.fsy"
                 : 'gentype_type_param_list));
# 1818 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 ".\Parser.fsy"
                                                   [_1] 
                   )
# 194 ".\Parser.fsy"
                 : 'gentype_datatype_list));
# 1829 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            let _2 = parseState.GetInput(2) :?> 'gentype_datatype_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 ".\Parser.fsy"
                                                     _1 :: _2 
                   )
# 195 ".\Parser.fsy"
                 : 'gentype_datatype_list));
# 1841 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 ".\Parser.fsy"
                           { Name = _1; Docs = []; Components = []; Result = _4 } 
                   )
# 198 ".\Parser.fsy"
                 : 'gentype_constructor));
# 1853 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_any_type_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 ".\Parser.fsy"
                           { Name = _1; Docs = []; Components = List.rev _3; Result = _5 } 
                   )
# 200 ".\Parser.fsy"
                 : 'gentype_constructor));
# 1866 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constructor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 ".\Parser.fsy"
                                                           [_1] 
                   )
# 202 ".\Parser.fsy"
                 : 'gentype_constructor_list));
# 1877 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constructor in
            let _3 = parseState.GetInput(3) :?> 'gentype_constructor_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 ".\Parser.fsy"
                                                               _1 :: _3 
                   )
# 203 ".\Parser.fsy"
                 : 'gentype_constructor_list));
# 1889 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 ".\Parser.fsy"
                                                                     DPropagationRule (_2, [], []) 
                   )
# 205 ".\Parser.fsy"
                 : 'gentype_rule));
# 1900 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_any_type_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 ".\Parser.fsy"
                                                                                DPropagationRule (_2, _4, []) 
                   )
# 206 ".\Parser.fsy"
                 : 'gentype_rule));
# 1912 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_any_type_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 ".\Parser.fsy"
                                                                                DPropagationRule (_2, [], _5) 
                   )
# 207 ".\Parser.fsy"
                 : 'gentype_rule));
# 1924 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_any_type_list in
            let _6 = parseState.GetInput(6) :?> 'gentype_any_type_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 ".\Parser.fsy"
                                                                                              DPropagationRule (_2, _4, _6) 
                   )
# 208 ".\Parser.fsy"
                 : 'gentype_rule));
# 1937 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> Name in
            let _6 = parseState.GetInput(6) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 ".\Parser.fsy"
                                                                                       DOverload (_2, _4, _6, []) 
                   )
# 210 ".\Parser.fsy"
                 : 'gentype_overload));
# 1950 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_qual_type in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 ".\Parser.fsy"
                                                                                         DInstance(_2, _4, _6) 
                   )
# 212 ".\Parser.fsy"
                 : 'gentype_instance));
# 1963 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_handler_template_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 ".\Parser.fsy"
                          { Name = _2; Docs = []; Params = _3; Handlers = _5 } 
                   )
# 215 ".\Parser.fsy"
                 : 'gentype_effect));
# 1976 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handler_template in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 ".\Parser.fsy"
                                                                     [_1] 
                   )
# 217 ".\Parser.fsy"
                 : 'gentype_handler_template_list));
# 1987 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handler_template_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_handler_template in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 ".\Parser.fsy"
                                                                       List.append _1 [_2] 
                   )
# 218 ".\Parser.fsy"
                 : 'gentype_handler_template_list));
# 1999 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_qual_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 ".\Parser.fsy"
                                                                             { Name = _2; Type = _4 } 
                   )
# 220 ".\Parser.fsy"
                 : 'gentype_handler_template));
# 2011 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_test_all in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 ".\Parser.fsy"
                         { Name = _2; Left = _4; Right = _6; Kind = _5 } 
                   )
# 223 ".\Parser.fsy"
                 : 'gentype_test));
# 2025 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_test_all in
            let _7 = parseState.GetInput(7) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 ".\Parser.fsy"
                         { Name = _2; Exhaustive = false; Params = _3; Left = _5; Right = _7; Kind = _6 } 
                   )
# 226 ".\Parser.fsy"
                 : 'gentype_law));
# 2040 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 ".\Parser.fsy"
                                            TKSatisfies 
                   )
# 228 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2050 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 ".\Parser.fsy"
                                      TKViolates 
                   )
# 229 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2060 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 ".\Parser.fsy"
                                       TKIsRoughly 
                   )
# 230 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2070 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 ".\Parser.fsy"
                                 TKIs [] 
                   )
# 231 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2080 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 232 ".\Parser.fsy"
                                    TKIsNot [] 
                   )
# 232 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2090 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 233 ".\Parser.fsy"
                                                               TKIs _4 
                   )
# 233 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2101 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 234 ".\Parser.fsy"
                                                                  TKIsNot _4 
                   )
# 234 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2112 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_qual_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 ".\Parser.fsy"
                                                                { Name = _2; Matcher = _4 } 
                   )
# 236 ".\Parser.fsy"
                 : 'gentype_check));
# 2124 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 ".\Parser.fsy"
                                                            DTag (_2, _4) 
                   )
# 238 ".\Parser.fsy"
                 : 'gentype_tag));
# 2136 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_identifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 242 ".\Parser.fsy"
                                                       SKBase _1 
                   )
# 242 ".\Parser.fsy"
                 : 'gentype_any_kind));
# 2147 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 243 ".\Parser.fsy"
                                                           SKSeq _2 
                   )
# 243 ".\Parser.fsy"
                 : 'gentype_any_kind));
# 2158 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 244 ".\Parser.fsy"
                                                        SKRow _2 
                   )
# 244 ".\Parser.fsy"
                 : 'gentype_any_kind));
# 2169 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_kind in
            let _3 = parseState.GetInput(3) :?> 'gentype_any_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 245 ".\Parser.fsy"
                                                              SKArrow (_2, _3) 
                   )
# 245 ".\Parser.fsy"
                 : 'gentype_any_kind));
# 2181 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_predicate_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 249 ".\Parser.fsy"
                                                                    sQualType _1 _3 
                   )
# 249 ".\Parser.fsy"
                 : 'gentype_qual_type));
# 2193 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 250 ".\Parser.fsy"
                                             sQualType SEnd _1 
                   )
# 250 ".\Parser.fsy"
                 : 'gentype_qual_type));
# 2204 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_predicate in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 252 ".\Parser.fsy"
                                                         ind _1 SEnd 
                   )
# 252 ".\Parser.fsy"
                 : 'gentype_predicate_list));
# 2215 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_predicate in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 253 ".\Parser.fsy"
                                                    dot _1 SEnd 
                   )
# 253 ".\Parser.fsy"
                 : 'gentype_predicate_list));
# 2226 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_predicate in
            let _3 = parseState.GetInput(3) :?> 'gentype_predicate_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 254 ".\Parser.fsy"
                                                                ind _1 _3 
                   )
# 254 ".\Parser.fsy"
                 : 'gentype_predicate_list));
# 2238 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_predicate in
            let _4 = parseState.GetInput(4) :?> 'gentype_predicate_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 255 ".\Parser.fsy"
                                                                   dot _1 _4 
                   )
# 255 ".\Parser.fsy"
                 : 'gentype_predicate_list));
# 2250 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_identifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 257 ".\Parser.fsy"
                                                         STCon _1 
                   )
# 257 ".\Parser.fsy"
                 : 'gentype_predicate));
# 2261 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_identifier in
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 258 ".\Parser.fsy"
                                                             appendTypeArgs (STCon _1) (List.rev _2) 
                   )
# 258 ".\Parser.fsy"
                 : 'gentype_predicate));
# 2273 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 260 ".\Parser.fsy"
                                                    STVar _1 
                   )
# 260 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2284 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_identifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 261 ".\Parser.fsy"
                                                  STCon _1 
                   )
# 261 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2295 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 262 ".\Parser.fsy"
                                                     STDotVar _1 
                   )
# 262 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2306 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 263 ".\Parser.fsy"
                                            STPrim PrFunction 
                   )
# 263 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2316 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 264 ".\Parser.fsy"
                                          STTrue 
                   )
# 264 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2326 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 265 ".\Parser.fsy"
                                          STFalse 
                   )
# 265 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2336 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type in
            let _4 = parseState.GetInput(4) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 266 ".\Parser.fsy"
                                                                  STAnd (_2, _4) 
                   )
# 266 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2348 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type in
            let _4 = parseState.GetInput(4) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 267 ".\Parser.fsy"
                                                                  STOr (_2, _4) 
                   )
# 267 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2360 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 268 ".\Parser.fsy"
                                                            STNot (_3) 
                   )
# 268 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2371 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type in
            let _4 = parseState.GetInput(4) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 269 ".\Parser.fsy"
                                                                  appendTypeArgs STRowExtend [_4; _2] 
                   )
# 269 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2383 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 270 ".\Parser.fsy"
                                         STAbelianOne 
                   )
# 270 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2393 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type in
            let _4 = parseState.GetInput(4) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 271 ".\Parser.fsy"
                                                                  STExponent (_2, _4) 
                   )
# 271 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2405 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type in
            let _4 = parseState.GetInput(4) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 272 ".\Parser.fsy"
                                                                   STMultiply (_2, _4) 
                   )
# 272 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2417 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 273 ".\Parser.fsy"
                                            STFixedConst _1 
                   )
# 273 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2428 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 274 ".\Parser.fsy"
                                         STRowEmpty 
                   )
# 274 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2438 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 275 ".\Parser.fsy"
                                                     STSeq (SEnd, KValue) 
                   )
# 275 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2448 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 276 ".\Parser.fsy"
                                                               STSeq (dotVarToDotSeq (ofList (List.rev _2)), KValue) 
                   )
# 276 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2459 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 277 ".\Parser.fsy"
                                                         _2 
                   )
# 277 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2470 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_any_type_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 278 ".\Parser.fsy"
                                                                   appendTypeArgs _2 (List.rev _3) 
                   )
# 278 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2482 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 280 ".\Parser.fsy"
                           appendTypeArgs (STPrim PrValue) [_3; _2] 
                   )
# 280 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2494 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 282 ".\Parser.fsy"
                                                   [_1] 
                   )
# 282 ".\Parser.fsy"
                 : 'gentype_any_type_list));
# 2505 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_any_type_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 283 ".\Parser.fsy"
                                                     List.append _1 [_2] 
                   )
# 283 ".\Parser.fsy"
                 : 'gentype_any_type_list));
# 2517 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term_statement_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 287 ".\Parser.fsy"
                                                                                  _2 
                   )
# 287 ".\Parser.fsy"
                 : 'gentype_term_statement_block));
# 2528 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_statement in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 289 ".\Parser.fsy"
                                                                   [_1] 
                   )
# 289 ".\Parser.fsy"
                 : 'gentype_term_statement_list));
# 2539 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_statement_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 290 ".\Parser.fsy"
                                                                            List.append _1 [_3] 
                   )
# 290 ".\Parser.fsy"
                 : 'gentype_term_statement_list));
# 2551 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_no_dot_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 292 ".\Parser.fsy"
                                                                            SLet { Matcher = _2; Body = [] } 
                   )
# 292 ".\Parser.fsy"
                 : 'gentype_term_statement));
# 2562 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_no_dot_pattern_expr_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 293 ".\Parser.fsy"
                                                                                         SLet { Matcher = _2; Body = _4 } 
                   )
# 293 ".\Parser.fsy"
                 : 'gentype_term_statement));
# 2574 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 296 ".\Parser.fsy"
                                                              SExpression (_1) 
                   )
# 296 ".\Parser.fsy"
                 : 'gentype_term_statement));
# 2585 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 303 ".\Parser.fsy"
                                                            [_1] 
                   )
# 303 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 2596 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_record_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 304 ".\Parser.fsy"
                                                     _1 
                   )
# 304 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 2607 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tuple_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 305 ".\Parser.fsy"
                                                    _1 
                   )
# 305 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 2618 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 306 ".\Parser.fsy"
                                                              List.append _1 [_2] 
                   )
# 306 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 2630 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_record_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 307 ".\Parser.fsy"
                                                                     List.append _1 _2 
                   )
# 307 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 2642 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_tuple_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 308 ".\Parser.fsy"
                                                                     List.append _1 _2 
                   )
# 308 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 2654 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 310 ".\Parser.fsy"
                                            [] 
                   )
# 310 ".\Parser.fsy"
                 : 'gentype_simple_expr));
# 2664 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 311 ".\Parser.fsy"
                                                    _1 
                   )
# 311 ".\Parser.fsy"
                 : 'gentype_simple_expr));
# 2675 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 315 ".\Parser.fsy"
                                                      EStatementBlock (_1) 
                   )
# 315 ".\Parser.fsy"
                 : 'gentype_word));
# 2686 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handle_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 316 ".\Parser.fsy"
                                            _1 
                   )
# 316 ".\Parser.fsy"
                 : 'gentype_word));
# 2697 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_inject_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 317 ".\Parser.fsy"
                                            _1 
                   )
# 317 ".\Parser.fsy"
                 : 'gentype_word));
# 2708 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 318 ".\Parser.fsy"
                                           _1 
                   )
# 318 ".\Parser.fsy"
                 : 'gentype_word));
# 2719 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_if_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 319 ".\Parser.fsy"
                                         _1 
                   )
# 319 ".\Parser.fsy"
                 : 'gentype_word));
# 2730 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_switch_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 320 ".\Parser.fsy"
                                            _1 
                   )
# 320 ".\Parser.fsy"
                 : 'gentype_word));
# 2741 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_when_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 321 ".\Parser.fsy"
                                          _1 
                   )
# 321 ".\Parser.fsy"
                 : 'gentype_word));
# 2752 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_while_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 322 ".\Parser.fsy"
                                           _1 
                   )
# 322 ".\Parser.fsy"
                 : 'gentype_word));
# 2763 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_for_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 323 ".\Parser.fsy"
                                          _1 
                   )
# 323 ".\Parser.fsy"
                 : 'gentype_word));
# 2774 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 324 ".\Parser.fsy"
                                                EFunctionLiteral (_1) 
                   )
# 324 ".\Parser.fsy"
                 : 'gentype_word));
# 2785 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 330 ".\Parser.fsy"
                                                 EExtension (_2) 
                   )
# 330 ".\Parser.fsy"
                 : 'gentype_word));
# 2796 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 331 ".\Parser.fsy"
                                                 ESelect (false, _2) 
                   )
# 331 ".\Parser.fsy"
                 : 'gentype_word));
# 2807 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 332 ".\Parser.fsy"
                                                ESelect (true, _2) 
                   )
# 332 ".\Parser.fsy"
                 : 'gentype_word));
# 2818 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_variant_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 334 ".\Parser.fsy"
                                               _1 
                   )
# 334 ".\Parser.fsy"
                 : 'gentype_word));
# 2829 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_case_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 335 ".\Parser.fsy"
                                          _1 
                   )
# 335 ".\Parser.fsy"
                 : 'gentype_word));
# 2840 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 336 ".\Parser.fsy"
                                                           EWithState (_2) 
                   )
# 336 ".\Parser.fsy"
                 : 'gentype_word));
# 2851 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_permission in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 337 ".\Parser.fsy"
                                           _1 
                   )
# 337 ".\Parser.fsy"
                 : 'gentype_word));
# 2862 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 338 ".\Parser.fsy"
                                       ETrust 
                   )
# 338 ".\Parser.fsy"
                 : 'gentype_word));
# 2872 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 339 ".\Parser.fsy"
                                          EDistrust 
                   )
# 339 ".\Parser.fsy"
                 : 'gentype_word));
# 2882 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 340 ".\Parser.fsy"
                                       EAudit 
                   )
# 340 ".\Parser.fsy"
                 : 'gentype_word));
# 2892 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 341 ".\Parser.fsy"
                                         ENewRef 
                   )
# 341 ".\Parser.fsy"
                 : 'gentype_word));
# 2902 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 342 ".\Parser.fsy"
                                         EGetRef 
                   )
# 342 ".\Parser.fsy"
                 : 'gentype_word));
# 2912 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 343 ".\Parser.fsy"
                                         EPutRef 
                   )
# 343 ".\Parser.fsy"
                 : 'gentype_word));
# 2922 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 344 ".\Parser.fsy"
                                        EUntag 
                   )
# 344 ".\Parser.fsy"
                 : 'gentype_word));
# 2932 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 345 ".\Parser.fsy"
                                                EBy { Qualifier = List.take (List.length _2 - 1) _2; Name = List.last _2 } 
                   )
# 345 ".\Parser.fsy"
                 : 'gentype_word));
# 2943 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 346 ".\Parser.fsy"
                                                 EPer { Qualifier = List.take (List.length _2 - 1) _2; Name = List.last _2 } 
                   )
# 346 ".\Parser.fsy"
                 : 'gentype_word));
# 2954 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 347 ".\Parser.fsy"
                                     EDo 
                   )
# 347 ".\Parser.fsy"
                 : 'gentype_word));
# 2964 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 349 ".\Parser.fsy"
                                       ETrue 
                   )
# 349 ".\Parser.fsy"
                 : 'gentype_word));
# 2974 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 350 ".\Parser.fsy"
                                       EFalse 
                   )
# 350 ".\Parser.fsy"
                 : 'gentype_word));
# 2984 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 351 ".\Parser.fsy"
                                         EInteger (_1) 
                   )
# 351 ".\Parser.fsy"
                 : 'gentype_word));
# 2995 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> DecimalLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 352 ".\Parser.fsy"
                                         EDecimal (_1) 
                   )
# 352 ".\Parser.fsy"
                 : 'gentype_word));
# 3006 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 353 ".\Parser.fsy"
                                        EString (_1) 
                   )
# 353 ".\Parser.fsy"
                 : 'gentype_word));
# 3017 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  Identifier  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 354 ".\Parser.fsy"
                                           EIdentifier (_1) 
                   )
# 354 ".\Parser.fsy"
                 : 'gentype_word));
# 3028 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_term_statement_block in
            let _7 = parseState.GetInput(7) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 357 ".\Parser.fsy"
                           EWithPermission (_3, _5, _7) 
                   )
# 357 ".\Parser.fsy"
                 : 'gentype_permission));
# 3041 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_term_statement_block in
            let _7 = parseState.GetInput(7) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 359 ".\Parser.fsy"
                           EIfPermission (_3, _5, _7) 
                   )
# 359 ".\Parser.fsy"
                 : 'gentype_permission));
# 3054 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_handler_list in
            let _7 = parseState.GetInput(7) :?> 'gentype_return in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 361 ".\Parser.fsy"
                                                                                                                               EHandle (_2, _3, _6, _7) 
                   )
# 361 ".\Parser.fsy"
                 : 'gentype_handle_word));
# 3068 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_handler_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 362 ".\Parser.fsy"
                                                                                                         EHandle (_2, _3, _6, []) 
                   )
# 362 ".\Parser.fsy"
                 : 'gentype_handle_word));
# 3081 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  Identifier  in
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 364 ".\Parser.fsy"
                                                                                    { Name = _1; Params = _2; Body = _4; } 
                   )
# 364 ".\Parser.fsy"
                 : 'gentype_handler));
# 3094 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 367 ".\Parser.fsy"
                          _3 
                   )
# 367 ".\Parser.fsy"
                 : 'gentype_return));
# 3105 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_no_dot_pattern_expr_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 369 ".\Parser.fsy"
                             [EStatementBlock([SLet { Matcher = _2; Body = [] }; SExpression(_4)])] 
                   )
# 369 ".\Parser.fsy"
                 : 'gentype_return));
# 3117 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 371 ".\Parser.fsy"
                                         [] 
                   )
# 371 ".\Parser.fsy"
                 : 'gentype_param_list));
# 3127 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_param_list in
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 372 ".\Parser.fsy"
                                                     List.append _1 [_2] 
                   )
# 372 ".\Parser.fsy"
                 : 'gentype_param_list));
# 3139 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 374 ".\Parser.fsy"
                                           [] 
                   )
# 374 ".\Parser.fsy"
                 : 'gentype_handler_list));
# 3149 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handler_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_handler in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 375 ".\Parser.fsy"
                                                  List.append _1 [_2] 
                   )
# 375 ".\Parser.fsy"
                 : 'gentype_handler_list));
# 3161 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_eff_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 377 ".\Parser.fsy"
                                                                          EInject (_2, _3) 
                   )
# 377 ".\Parser.fsy"
                 : 'gentype_inject_word));
# 3173 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 379 ".\Parser.fsy"
                                                  [_1] 
                   )
# 379 ".\Parser.fsy"
                 : 'gentype_eff_list));
# 3184 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _2 = parseState.GetInput(2) :?> 'gentype_eff_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 380 ".\Parser.fsy"
                                                   _1 :: _2 
                   )
# 380 ".\Parser.fsy"
                 : 'gentype_eff_list));
# 3196 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_match_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 382 ".\Parser.fsy"
                                                                                    EMatch (_3, []) 
                   )
# 382 ".\Parser.fsy"
                 : 'gentype_match_word));
# 3207 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_match_clause_list in
            let _7 = parseState.GetInput(7) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 383 ".\Parser.fsy"
                                                                                                            EMatch (_3, _7) 
                   )
# 383 ".\Parser.fsy"
                 : 'gentype_match_word));
# 3219 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 385 ".\Parser.fsy"
                                                            [_1] 
                   )
# 385 ".\Parser.fsy"
                 : 'gentype_match_clause_list));
# 3230 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_clause_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_match_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 386 ".\Parser.fsy"
                                                              List.append _1 [_2] 
                   )
# 386 ".\Parser.fsy"
                 : 'gentype_match_clause_list));
# 3242 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 388 ".\Parser.fsy"
                                                                                         { Matcher = _2; Body = _4 } 
                   )
# 388 ".\Parser.fsy"
                 : 'gentype_match_clause));
# 3254 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 390 ".\Parser.fsy"
                                                                                                    EIf (_2, _4, _6) 
                   )
# 390 ".\Parser.fsy"
                 : 'gentype_if_word));
# 3267 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_switch_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 392 ".\Parser.fsy"
                                                                               switchClausesToIfs _3 
                   )
# 392 ".\Parser.fsy"
                 : 'gentype_switch_word));
# 3278 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 394 ".\Parser.fsy"
                                                                                         [_4] 
                   )
# 394 ".\Parser.fsy"
                 : 'gentype_switch_clause_list));
# 3289 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_switch_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 395 ".\Parser.fsy"
                                                                                                _2 :: _4 :: _6 
                   )
# 395 ".\Parser.fsy"
                 : 'gentype_switch_clause_list));
# 3302 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            let _5 = parseState.GetInput(5) :?> 'gentype_switch_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 396 ".\Parser.fsy"
                                                                                                _2 :: [EStatementBlock _4] :: _5 
                   )
# 396 ".\Parser.fsy"
                 : 'gentype_switch_clause_list));
# 3315 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 398 ".\Parser.fsy"
                                                                              EIf (_2, _4, []) 
                   )
# 398 ".\Parser.fsy"
                 : 'gentype_when_word));
# 3327 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 400 ".\Parser.fsy"
                                                                                EWhile (_2, _4) 
                   )
# 400 ".\Parser.fsy"
                 : 'gentype_while_word));
# 3339 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_parallel_sequences in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 403 ".\Parser.fsy"
                          EForEffect (_2, _4) 
                   )
# 403 ".\Parser.fsy"
                 : 'gentype_for_word));
# 3351 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_parallel_sequences in
            let _4 = parseState.GetInput(4) :?> 'gentype_for_results in
            let _6 = parseState.GetInput(6) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 405 ".\Parser.fsy"
                           EForComprehension (_4, _2, _6) 
                   )
# 405 ".\Parser.fsy"
                 : 'gentype_for_word));
# 3364 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_parallel_sequences in
            let _4 = parseState.GetInput(4) :?> 'gentype_fold_inits in
            let _6 = parseState.GetInput(6) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 407 ".\Parser.fsy"
                           EForFold (_4, _2, _6) 
                   )
# 407 ".\Parser.fsy"
                 : 'gentype_for_word));
# 3377 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_for_result in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 409 ".\Parser.fsy"
                                                    [_1] 
                   )
# 409 ".\Parser.fsy"
                 : 'gentype_for_results));
# 3388 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_for_result in
            let _3 = parseState.GetInput(3) :?> 'gentype_for_results in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 410 ".\Parser.fsy"
                                                         _1 :: _3 
                   )
# 410 ".\Parser.fsy"
                 : 'gentype_for_results));
# 3400 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 412 ".\Parser.fsy"
                                           FForTuple 
                   )
# 412 ".\Parser.fsy"
                 : 'gentype_for_result));
# 3410 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 413 ".\Parser.fsy"
                                    FForList 
                   )
# 413 ".\Parser.fsy"
                 : 'gentype_for_result));
# 3420 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 414 ".\Parser.fsy"
                                      FForVector 
                   )
# 414 ".\Parser.fsy"
                 : 'gentype_for_result));
# 3430 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 416 ".\Parser.fsy"
                                            FForTuple 
                   )
# 416 ".\Parser.fsy"
                 : 'gentype_for_sequence));
# 3440 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 417 ".\Parser.fsy"
                                   FForList 
                   )
# 417 ".\Parser.fsy"
                 : 'gentype_for_sequence));
# 3450 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 418 ".\Parser.fsy"
                                    FForVector 
                   )
# 418 ".\Parser.fsy"
                 : 'gentype_for_sequence));
# 3460 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_for_sequence in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 421 ".\Parser.fsy"
                             [{ Name = _1; SeqType = _3; Assigned = _4 }] 
                   )
# 421 ".\Parser.fsy"
                 : 'gentype_parallel_sequences));
# 3473 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_for_sequence in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_parallel_sequences in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 423 ".\Parser.fsy"
                                { Name = _1; SeqType = _3; Assigned = _4 } :: _6 
                   )
# 423 ".\Parser.fsy"
                 : 'gentype_parallel_sequences));
# 3487 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 426 ".\Parser.fsy"
                           [{ Name = _1; Assigned = _3 }] 
                   )
# 426 ".\Parser.fsy"
                 : 'gentype_fold_inits));
# 3499 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_fold_inits in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 428 ".\Parser.fsy"
                              { Name = _1; Assigned = _3; } :: _5 
                   )
# 428 ".\Parser.fsy"
                 : 'gentype_fold_inits));
# 3512 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 430 ".\Parser.fsy"
                                                                      _2 
                   )
# 430 ".\Parser.fsy"
                 : 'gentype_function_literal));
# 3523 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_var_only_pattern_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 432 ".\Parser.fsy"
                             [EStatementBlock([SLet { Matcher = _2; Body = [] }; SExpression(_4)])] 
                   )
# 432 ".\Parser.fsy"
                 : 'gentype_function_literal));
# 3535 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 434 ".\Parser.fsy"
                                                                  [_1] 
                   )
# 434 ".\Parser.fsy"
                 : 'gentype_lit_expr_list));
# 3546 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_lit_expr_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 435 ".\Parser.fsy"
                                                                        List.append _1 [_3] 
                   )
# 435 ".\Parser.fsy"
                 : 'gentype_lit_expr_list));
# 3558 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 437 ".\Parser.fsy"
                                                                         [ETupleLiteral []] 
                   )
# 437 ".\Parser.fsy"
                 : 'gentype_tuple_literal));
# 3568 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_lit_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 438 ".\Parser.fsy"
                                                                           ETupleLiteral [] :: expandTupleConsSyntax _3 
                   )
# 438 ".\Parser.fsy"
                 : 'gentype_tuple_literal));
# 3579 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 439 ".\Parser.fsy"
                                                                                       [ETupleLiteral _4] 
                   )
# 439 ".\Parser.fsy"
                 : 'gentype_tuple_literal));
# 3590 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_non_empty_simple_expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_lit_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 440 ".\Parser.fsy"
                                                                                                      ETupleLiteral _4 :: expandTupleConsSyntax _6 
                   )
# 440 ".\Parser.fsy"
                 : 'gentype_tuple_literal));
# 3602 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_lit_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 442 ".\Parser.fsy"
                                                                                    EListLiteral ([], _3) 
                   )
# 442 ".\Parser.fsy"
                 : 'gentype_list_literal));
# 3613 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_non_empty_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_lit_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 443 ".\Parser.fsy"
                                                                                               EListLiteral (_3, _5) 
                   )
# 443 ".\Parser.fsy"
                 : 'gentype_list_literal));
# 3625 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_non_empty_simple_expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 451 ".\Parser.fsy"
                                                                                                              ERecordLiteral (_4) :: expandFieldSyntax _6 
                   )
# 451 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 3637 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 452 ".\Parser.fsy"
                                                                                         [ERecordLiteral (_4)] 
                   )
# 452 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 3648 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 453 ".\Parser.fsy"
                                                                          ERecordLiteral ([]) :: expandFieldSyntax _3 
                   )
# 453 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 3659 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 454 ".\Parser.fsy"
                                                                  [ERecordLiteral ([])] 
                   )
# 454 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 3669 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_field in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 456 ".\Parser.fsy"
                                                                       EVariantLiteral (_3) 
                   )
# 456 ".\Parser.fsy"
                 : 'gentype_variant_literal));
# 3680 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?>  List<CaseClause>  in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 458 ".\Parser.fsy"
                                                                                                           ECase (_3, _6) 
                   )
# 458 ".\Parser.fsy"
                 : 'gentype_case_word));
# 3692 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_case_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 460 ".\Parser.fsy"
                                                          [_1] 
                   )
# 460 ".\Parser.fsy"
                 :  List<CaseClause> ));
# 3703 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_case_clause in
            let _2 = parseState.GetInput(2) :?>  List<CaseClause>  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 461 ".\Parser.fsy"
                                                           _1 :: _2 
                   )
# 461 ".\Parser.fsy"
                 :  List<CaseClause> ));
# 3715 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 463 ".\Parser.fsy"
                                                                             { Tag = _1; Body = _3 } 
                   )
# 463 ".\Parser.fsy"
                 : 'gentype_case_clause));
# 3727 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_field in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 465 ".\Parser.fsy"
                                              [_1] 
                   )
# 465 ".\Parser.fsy"
                 : 'gentype_field_list));
# 3738 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_field in
            let _3 = parseState.GetInput(3) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 466 ".\Parser.fsy"
                                                     _1 :: _3 
                   )
# 466 ".\Parser.fsy"
                 : 'gentype_field_list));
# 3750 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 468 ".\Parser.fsy"
                                                             (_1, _3) 
                   )
# 468 ".\Parser.fsy"
                 : 'gentype_field));
# 3762 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 470 ".\Parser.fsy"
                                                   sIdentifier (List.take (_1.Length - 1) _1) (List.last _1) 
                   )
# 470 ".\Parser.fsy"
                 :  Identifier ));
# 3773 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_qualified_ctor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 472 ".\Parser.fsy"
                                                        sIdentifier (List.take (List.length _1 - 1) _1) (List.last _1) 
                   )
# 472 ".\Parser.fsy"
                 : 'gentype_type_identifier));
# 3784 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 474 ".\Parser.fsy"
                                                          [_1] 
                   )
# 474 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 3795 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 475 ".\Parser.fsy"
                                               [_1] 
                   )
# 475 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 3806 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 476 ".\Parser.fsy"
                                                   [_1] 
                   )
# 476 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 3817 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 477 ".\Parser.fsy"
                                                    [_1] 
                   )
# 477 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 3828 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 478 ".\Parser.fsy"
                                                                      _1 :: _3 
                   )
# 478 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 3840 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 480 ".\Parser.fsy"
                                                        [_1] 
                   )
# 480 ".\Parser.fsy"
                 : 'gentype_qualified_ctor));
# 3851 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 481 ".\Parser.fsy"
                                                   [_1] 
                   )
# 481 ".\Parser.fsy"
                 : 'gentype_qualified_ctor));
# 3862 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 482 ".\Parser.fsy"
                                                    [_1] 
                   )
# 482 ".\Parser.fsy"
                 : 'gentype_qualified_ctor));
# 3873 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_qualified_ctor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 483 ".\Parser.fsy"
                                                                      _1 :: _3 
                   )
# 483 ".\Parser.fsy"
                 : 'gentype_qualified_ctor));
# 3885 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 487 ".\Parser.fsy"
                                                                      ind _1 SEnd 
                   )
# 487 ".\Parser.fsy"
                 : 'gentype_no_dot_pattern_expr_list));
# 3896 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_no_dot_pattern_expr_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 488 ".\Parser.fsy"
                                                                      ind _2 _1 
                   )
# 488 ".\Parser.fsy"
                 : 'gentype_no_dot_pattern_expr_list));
# 3908 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 490 ".\Parser.fsy"
                                                        SEnd 
                   )
# 490 ".\Parser.fsy"
                 : 'gentype_var_only_pattern_list));
# 3918 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _2 = parseState.GetInput(2) :?> 'gentype_var_only_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 491 ".\Parser.fsy"
                                                                 ind (PNamed (_1, PWildcard)) _2 
                   )
# 491 ".\Parser.fsy"
                 : 'gentype_var_only_pattern_list));
# 3930 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 493 ".\Parser.fsy"
                                                            ind _1 SEnd 
                   )
# 493 ".\Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 3941 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 494 ".\Parser.fsy"
                                                       dot _1 SEnd 
                   )
# 494 ".\Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 3952 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 495 ".\Parser.fsy"
                                                               ind _2 _1 
                   )
# 495 ".\Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 3964 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 497 ".\Parser.fsy"
                                                                                  [(_1, _3)] 
                   )
# 497 ".\Parser.fsy"
                 : 'gentype_field_pattern_list));
# 3976 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_field_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 498 ".\Parser.fsy"
                                                                                        (_1, _3) :: _5 
                   )
# 498 ".\Parser.fsy"
                 : 'gentype_field_pattern_list));
# 3989 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 500 ".\Parser.fsy"
                                                      PTrue 
                   )
# 500 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3999 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 501 ".\Parser.fsy"
                                             PFalse 
                   )
# 501 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4009 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 502 ".\Parser.fsy"
                                               PInteger (_1) 
                   )
# 502 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4020 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> DecimalLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 503 ".\Parser.fsy"
                                               PDecimal (_1) 
                   )
# 503 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4031 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 504 ".\Parser.fsy"
                                              PString (_1) 
                   )
# 504 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4042 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 505 ".\Parser.fsy"
                                                 PWildcard 
                   )
# 505 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4052 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 506 ".\Parser.fsy"
                                                      PRef (_2) 
                   )
# 506 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4063 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 507 ".\Parser.fsy"
                                                 PNamed (_1, PWildcard) 
                   )
# 507 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4074 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 508 ".\Parser.fsy"
                                                              PNamed (_1, _3) 
                   )
# 508 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4086 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_identifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 510 ".\Parser.fsy"
                            PConstructor (_1, SEnd) 
                   )
# 510 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4097 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_type_identifier in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 512 ".\Parser.fsy"
                            PConstructor (_2, _3) 
                   )
# 512 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4109 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tuple_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 513 ".\Parser.fsy"
                                                   _1 
                   )
# 513 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4120 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_list_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 514 ".\Parser.fsy"
                                                   _1 
                   )
# 514 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4131 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_vector_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 515 ".\Parser.fsy"
                                                    _1 
                   )
# 515 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4142 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_slice_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 516 ".\Parser.fsy"
                                                   _1 
                   )
# 516 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4153 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_record_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 517 ".\Parser.fsy"
                                                    _1 
                   )
# 517 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4164 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 519 ".\Parser.fsy"
                                                                                 PTuple (_3) 
                   )
# 519 ".\Parser.fsy"
                 : 'gentype_tuple_pattern));
# 4175 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 521 ".\Parser.fsy"
                                                                               PList (_3) 
                   )
# 521 ".\Parser.fsy"
                 : 'gentype_list_pattern));
# 4186 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 523 ".\Parser.fsy"
                                                                                  PVector (_3) 
                   )
# 523 ".\Parser.fsy"
                 : 'gentype_vector_pattern));
# 4197 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 525 ".\Parser.fsy"
                                                                                 PSlice (_3) 
                   )
# 525 ".\Parser.fsy"
                 : 'gentype_slice_pattern));
# 4208 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_field_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 527 ".\Parser.fsy"
                                                                                   PRecord (_3) 
                   )
# 527 ".\Parser.fsy"
                 : 'gentype_record_pattern));
|]
# 4220 "Parser.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 117;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let unit lexer lexbuf :  Unit  =
    engine lexer lexbuf 0 :?> _
