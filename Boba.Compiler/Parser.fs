// Implementation file for parser generated by fsyacc
module Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 ".\Parser.fsy"


open Boba.Compiler.Syntax
open Boba.Core.DotSeq
open Boba.Core.Kinds
open Boba.Core.Types
open Boba.Core.TypeBuilder


# 16 "Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | IS
  | ONE
  | TRUE
  | FALSE
  | AND
  | OR
  | NOT
  | TUPLE
  | LIST
  | VECTOR
  | SLICE
  | DICTIONARY
  | CASE
  | RECORD
  | VARIANT
  | FOR
  | FOLD
  | MAP
  | BREAK
  | FINAL
  | FILL
  | LENGTH
  | RESULT
  | IF
  | WHEN
  | SWITCH
  | WHILE
  | THEN
  | ELSE
  | DO
  | MATCH
  | INJECT
  | WITH
  | AFTER
  | HANDLE
  | UNTAG
  | BY
  | PER
  | TRUST
  | DISTRUST
  | AUDIT
  | NEW_REF
  | GET_REF
  | PUT_REF
  | WITH_STATE
  | PERMISSION
  | FUNCTION
  | NATIVE
  | LOCAL
  | LET
  | BOOLEAN
  | ABELIAN
  | SYNTACTIC
  | IS_ROUGHLY
  | IS_NOT
  | SATISFIES
  | VIOLATES
  | TEST
  | LAW
  | EXHAUSTIVE
  | SYNONYM
  | TAG
  | EFFECT
  | OVERLOAD
  | INSTANCE
  | RULE
  | CHECK
  | PATTERN
  | RECURSIVE
  | KIND
  | DATA
  | ABOUT
  | MAIN
  | EXPORT
  | FROM
  | AS
  | IMPORT
  | REF
  | UNDERSCORE
  | EQUALS
  | ELLIPSIS
  | BAR
  | DOT
  | PLUS
  | MINUS
  | STAR
  | COLON
  | DOUBLE_COLON
  | CARET
  | COMMA
  | SEMICOLON
  | FN_CTOR
  | FN_ARROW_BACK
  | FN_ARROW_FRONT
  | FN_DIVIDE
  | L_BOX
  | R_BOX
  | L_PUMPKIN
  | R_PUMPKIN
  | L_BANANA
  | R_BANANA
  | L_BIND
  | R_BIND
  | L_STAR
  | R_STAR
  | L_ARROW
  | R_ARROW
  | L_BRACKET
  | R_BRACKET
  | L_BRACE
  | R_BRACE
  | L_PAREN
  | R_PAREN
  | DOCUMENTATION_LINE of (DocumentationLine)
  | NATIVE_CODE_LINE of (NativeCodeLine)
  | STRING of (StringLiteral)
  | DECIMAL of (DecimalLiteral)
  | INTEGER of (IntegerLiteral)
  | TEST_NAME of (Name)
  | PREDICATE_NAME of (Name)
  | OPERATOR_NAME of (Name)
  | BIG_NAME of (Name)
  | SMALL_NAME of (Name)
  | EOF
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_IS
    | TOKEN_ONE
    | TOKEN_TRUE
    | TOKEN_FALSE
    | TOKEN_AND
    | TOKEN_OR
    | TOKEN_NOT
    | TOKEN_TUPLE
    | TOKEN_LIST
    | TOKEN_VECTOR
    | TOKEN_SLICE
    | TOKEN_DICTIONARY
    | TOKEN_CASE
    | TOKEN_RECORD
    | TOKEN_VARIANT
    | TOKEN_FOR
    | TOKEN_FOLD
    | TOKEN_MAP
    | TOKEN_BREAK
    | TOKEN_FINAL
    | TOKEN_FILL
    | TOKEN_LENGTH
    | TOKEN_RESULT
    | TOKEN_IF
    | TOKEN_WHEN
    | TOKEN_SWITCH
    | TOKEN_WHILE
    | TOKEN_THEN
    | TOKEN_ELSE
    | TOKEN_DO
    | TOKEN_MATCH
    | TOKEN_INJECT
    | TOKEN_WITH
    | TOKEN_AFTER
    | TOKEN_HANDLE
    | TOKEN_UNTAG
    | TOKEN_BY
    | TOKEN_PER
    | TOKEN_TRUST
    | TOKEN_DISTRUST
    | TOKEN_AUDIT
    | TOKEN_NEW_REF
    | TOKEN_GET_REF
    | TOKEN_PUT_REF
    | TOKEN_WITH_STATE
    | TOKEN_PERMISSION
    | TOKEN_FUNCTION
    | TOKEN_NATIVE
    | TOKEN_LOCAL
    | TOKEN_LET
    | TOKEN_BOOLEAN
    | TOKEN_ABELIAN
    | TOKEN_SYNTACTIC
    | TOKEN_IS_ROUGHLY
    | TOKEN_IS_NOT
    | TOKEN_SATISFIES
    | TOKEN_VIOLATES
    | TOKEN_TEST
    | TOKEN_LAW
    | TOKEN_EXHAUSTIVE
    | TOKEN_SYNONYM
    | TOKEN_TAG
    | TOKEN_EFFECT
    | TOKEN_OVERLOAD
    | TOKEN_INSTANCE
    | TOKEN_RULE
    | TOKEN_CHECK
    | TOKEN_PATTERN
    | TOKEN_RECURSIVE
    | TOKEN_KIND
    | TOKEN_DATA
    | TOKEN_ABOUT
    | TOKEN_MAIN
    | TOKEN_EXPORT
    | TOKEN_FROM
    | TOKEN_AS
    | TOKEN_IMPORT
    | TOKEN_REF
    | TOKEN_UNDERSCORE
    | TOKEN_EQUALS
    | TOKEN_ELLIPSIS
    | TOKEN_BAR
    | TOKEN_DOT
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_STAR
    | TOKEN_COLON
    | TOKEN_DOUBLE_COLON
    | TOKEN_CARET
    | TOKEN_COMMA
    | TOKEN_SEMICOLON
    | TOKEN_FN_CTOR
    | TOKEN_FN_ARROW_BACK
    | TOKEN_FN_ARROW_FRONT
    | TOKEN_FN_DIVIDE
    | TOKEN_L_BOX
    | TOKEN_R_BOX
    | TOKEN_L_PUMPKIN
    | TOKEN_R_PUMPKIN
    | TOKEN_L_BANANA
    | TOKEN_R_BANANA
    | TOKEN_L_BIND
    | TOKEN_R_BIND
    | TOKEN_L_STAR
    | TOKEN_R_STAR
    | TOKEN_L_ARROW
    | TOKEN_R_ARROW
    | TOKEN_L_BRACKET
    | TOKEN_R_BRACKET
    | TOKEN_L_BRACE
    | TOKEN_R_BRACE
    | TOKEN_L_PAREN
    | TOKEN_R_PAREN
    | TOKEN_DOCUMENTATION_LINE
    | TOKEN_NATIVE_CODE_LINE
    | TOKEN_STRING
    | TOKEN_DECIMAL
    | TOKEN_INTEGER
    | TOKEN_TEST_NAME
    | TOKEN_PREDICATE_NAME
    | TOKEN_OPERATOR_NAME
    | TOKEN_BIG_NAME
    | TOKEN_SMALL_NAME
    | TOKEN_EOF
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startunit
    | NONTERM_unit
    | NONTERM_import_list
    | NONTERM_decl_list
    | NONTERM_main
    | NONTERM_import
    | NONTERM_import_path
    | NONTERM_remote
    | NONTERM_export
    | NONTERM_brace_names
    | NONTERM_name_list
    | NONTERM_name
    | NONTERM_declaration
    | NONTERM_documentation
    | NONTERM_documentation_lines
    | NONTERM_function
    | NONTERM_function_list
    | NONTERM_native
    | NONTERM_native_code_list
    | NONTERM_userkind
    | NONTERM_kind_unify
    | NONTERM_datatype
    | NONTERM_type_param_list
    | NONTERM_datatype_list
    | NONTERM_constructor
    | NONTERM_constructor_list
    | NONTERM_rule
    | NONTERM_overload
    | NONTERM_instance
    | NONTERM_effect
    | NONTERM_handler_template_list
    | NONTERM_handler_template
    | NONTERM_test
    | NONTERM_law
    | NONTERM_test_all
    | NONTERM_check
    | NONTERM_tag
    | NONTERM_base_kind
    | NONTERM_compound_kind
    | NONTERM_predicate_list
    | NONTERM_predicate
    | NONTERM_qual_fn_type
    | NONTERM_base_type
    | NONTERM_val_type
    | NONTERM_fn_type
    | NONTERM_fn_type_seq
    | NONTERM_fn_row_type
    | NONTERM_field_row_type
    | NONTERM_field_type
    | NONTERM_compound_type
    | NONTERM_and_sequence
    | NONTERM_or_sequence
    | NONTERM_mul_sequence
    | NONTERM_type_arg_list
    | NONTERM_term_statement_block
    | NONTERM_term_statement_list
    | NONTERM_term_statement
    | NONTERM_non_empty_simple_expr
    | NONTERM_simple_expr
    | NONTERM_word
    | NONTERM_permission
    | NONTERM_handle_word
    | NONTERM_handler
    | NONTERM_return
    | NONTERM_param_list
    | NONTERM_handler_list
    | NONTERM_inject_word
    | NONTERM_eff_list
    | NONTERM_match_word
    | NONTERM_match_clause_list
    | NONTERM_match_clause
    | NONTERM_if_word
    | NONTERM_switch_word
    | NONTERM_switch_clause_list
    | NONTERM_when_word
    | NONTERM_while_word
    | NONTERM_for_word
    | NONTERM_for_results
    | NONTERM_for_result
    | NONTERM_for_sequence
    | NONTERM_parallel_sequences
    | NONTERM_fold_inits
    | NONTERM_function_literal
    | NONTERM_lit_expr_list
    | NONTERM_tuple_literal
    | NONTERM_list_literal
    | NONTERM_record_literal
    | NONTERM_variant_literal
    | NONTERM_case_word
    | NONTERM_case_clause_list
    | NONTERM_case_clause
    | NONTERM_field_list
    | NONTERM_field
    | NONTERM_identifier
    | NONTERM_type_identifier
    | NONTERM_qualified_name
    | NONTERM_qualified_ctor
    | NONTERM_no_dot_pattern_expr_list
    | NONTERM_var_only_pattern_list
    | NONTERM_pattern_expr_list
    | NONTERM_field_pattern_list
    | NONTERM_pattern_expr
    | NONTERM_tuple_pattern
    | NONTERM_list_pattern
    | NONTERM_vector_pattern
    | NONTERM_slice_pattern
    | NONTERM_record_pattern

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | IS  -> 0 
  | ONE  -> 1 
  | TRUE  -> 2 
  | FALSE  -> 3 
  | AND  -> 4 
  | OR  -> 5 
  | NOT  -> 6 
  | TUPLE  -> 7 
  | LIST  -> 8 
  | VECTOR  -> 9 
  | SLICE  -> 10 
  | DICTIONARY  -> 11 
  | CASE  -> 12 
  | RECORD  -> 13 
  | VARIANT  -> 14 
  | FOR  -> 15 
  | FOLD  -> 16 
  | MAP  -> 17 
  | BREAK  -> 18 
  | FINAL  -> 19 
  | FILL  -> 20 
  | LENGTH  -> 21 
  | RESULT  -> 22 
  | IF  -> 23 
  | WHEN  -> 24 
  | SWITCH  -> 25 
  | WHILE  -> 26 
  | THEN  -> 27 
  | ELSE  -> 28 
  | DO  -> 29 
  | MATCH  -> 30 
  | INJECT  -> 31 
  | WITH  -> 32 
  | AFTER  -> 33 
  | HANDLE  -> 34 
  | UNTAG  -> 35 
  | BY  -> 36 
  | PER  -> 37 
  | TRUST  -> 38 
  | DISTRUST  -> 39 
  | AUDIT  -> 40 
  | NEW_REF  -> 41 
  | GET_REF  -> 42 
  | PUT_REF  -> 43 
  | WITH_STATE  -> 44 
  | PERMISSION  -> 45 
  | FUNCTION  -> 46 
  | NATIVE  -> 47 
  | LOCAL  -> 48 
  | LET  -> 49 
  | BOOLEAN  -> 50 
  | ABELIAN  -> 51 
  | SYNTACTIC  -> 52 
  | IS_ROUGHLY  -> 53 
  | IS_NOT  -> 54 
  | SATISFIES  -> 55 
  | VIOLATES  -> 56 
  | TEST  -> 57 
  | LAW  -> 58 
  | EXHAUSTIVE  -> 59 
  | SYNONYM  -> 60 
  | TAG  -> 61 
  | EFFECT  -> 62 
  | OVERLOAD  -> 63 
  | INSTANCE  -> 64 
  | RULE  -> 65 
  | CHECK  -> 66 
  | PATTERN  -> 67 
  | RECURSIVE  -> 68 
  | KIND  -> 69 
  | DATA  -> 70 
  | ABOUT  -> 71 
  | MAIN  -> 72 
  | EXPORT  -> 73 
  | FROM  -> 74 
  | AS  -> 75 
  | IMPORT  -> 76 
  | REF  -> 77 
  | UNDERSCORE  -> 78 
  | EQUALS  -> 79 
  | ELLIPSIS  -> 80 
  | BAR  -> 81 
  | DOT  -> 82 
  | PLUS  -> 83 
  | MINUS  -> 84 
  | STAR  -> 85 
  | COLON  -> 86 
  | DOUBLE_COLON  -> 87 
  | CARET  -> 88 
  | COMMA  -> 89 
  | SEMICOLON  -> 90 
  | FN_CTOR  -> 91 
  | FN_ARROW_BACK  -> 92 
  | FN_ARROW_FRONT  -> 93 
  | FN_DIVIDE  -> 94 
  | L_BOX  -> 95 
  | R_BOX  -> 96 
  | L_PUMPKIN  -> 97 
  | R_PUMPKIN  -> 98 
  | L_BANANA  -> 99 
  | R_BANANA  -> 100 
  | L_BIND  -> 101 
  | R_BIND  -> 102 
  | L_STAR  -> 103 
  | R_STAR  -> 104 
  | L_ARROW  -> 105 
  | R_ARROW  -> 106 
  | L_BRACKET  -> 107 
  | R_BRACKET  -> 108 
  | L_BRACE  -> 109 
  | R_BRACE  -> 110 
  | L_PAREN  -> 111 
  | R_PAREN  -> 112 
  | DOCUMENTATION_LINE _ -> 113 
  | NATIVE_CODE_LINE _ -> 114 
  | STRING _ -> 115 
  | DECIMAL _ -> 116 
  | INTEGER _ -> 117 
  | TEST_NAME _ -> 118 
  | PREDICATE_NAME _ -> 119 
  | OPERATOR_NAME _ -> 120 
  | BIG_NAME _ -> 121 
  | SMALL_NAME _ -> 122 
  | EOF  -> 123 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_IS 
  | 1 -> TOKEN_ONE 
  | 2 -> TOKEN_TRUE 
  | 3 -> TOKEN_FALSE 
  | 4 -> TOKEN_AND 
  | 5 -> TOKEN_OR 
  | 6 -> TOKEN_NOT 
  | 7 -> TOKEN_TUPLE 
  | 8 -> TOKEN_LIST 
  | 9 -> TOKEN_VECTOR 
  | 10 -> TOKEN_SLICE 
  | 11 -> TOKEN_DICTIONARY 
  | 12 -> TOKEN_CASE 
  | 13 -> TOKEN_RECORD 
  | 14 -> TOKEN_VARIANT 
  | 15 -> TOKEN_FOR 
  | 16 -> TOKEN_FOLD 
  | 17 -> TOKEN_MAP 
  | 18 -> TOKEN_BREAK 
  | 19 -> TOKEN_FINAL 
  | 20 -> TOKEN_FILL 
  | 21 -> TOKEN_LENGTH 
  | 22 -> TOKEN_RESULT 
  | 23 -> TOKEN_IF 
  | 24 -> TOKEN_WHEN 
  | 25 -> TOKEN_SWITCH 
  | 26 -> TOKEN_WHILE 
  | 27 -> TOKEN_THEN 
  | 28 -> TOKEN_ELSE 
  | 29 -> TOKEN_DO 
  | 30 -> TOKEN_MATCH 
  | 31 -> TOKEN_INJECT 
  | 32 -> TOKEN_WITH 
  | 33 -> TOKEN_AFTER 
  | 34 -> TOKEN_HANDLE 
  | 35 -> TOKEN_UNTAG 
  | 36 -> TOKEN_BY 
  | 37 -> TOKEN_PER 
  | 38 -> TOKEN_TRUST 
  | 39 -> TOKEN_DISTRUST 
  | 40 -> TOKEN_AUDIT 
  | 41 -> TOKEN_NEW_REF 
  | 42 -> TOKEN_GET_REF 
  | 43 -> TOKEN_PUT_REF 
  | 44 -> TOKEN_WITH_STATE 
  | 45 -> TOKEN_PERMISSION 
  | 46 -> TOKEN_FUNCTION 
  | 47 -> TOKEN_NATIVE 
  | 48 -> TOKEN_LOCAL 
  | 49 -> TOKEN_LET 
  | 50 -> TOKEN_BOOLEAN 
  | 51 -> TOKEN_ABELIAN 
  | 52 -> TOKEN_SYNTACTIC 
  | 53 -> TOKEN_IS_ROUGHLY 
  | 54 -> TOKEN_IS_NOT 
  | 55 -> TOKEN_SATISFIES 
  | 56 -> TOKEN_VIOLATES 
  | 57 -> TOKEN_TEST 
  | 58 -> TOKEN_LAW 
  | 59 -> TOKEN_EXHAUSTIVE 
  | 60 -> TOKEN_SYNONYM 
  | 61 -> TOKEN_TAG 
  | 62 -> TOKEN_EFFECT 
  | 63 -> TOKEN_OVERLOAD 
  | 64 -> TOKEN_INSTANCE 
  | 65 -> TOKEN_RULE 
  | 66 -> TOKEN_CHECK 
  | 67 -> TOKEN_PATTERN 
  | 68 -> TOKEN_RECURSIVE 
  | 69 -> TOKEN_KIND 
  | 70 -> TOKEN_DATA 
  | 71 -> TOKEN_ABOUT 
  | 72 -> TOKEN_MAIN 
  | 73 -> TOKEN_EXPORT 
  | 74 -> TOKEN_FROM 
  | 75 -> TOKEN_AS 
  | 76 -> TOKEN_IMPORT 
  | 77 -> TOKEN_REF 
  | 78 -> TOKEN_UNDERSCORE 
  | 79 -> TOKEN_EQUALS 
  | 80 -> TOKEN_ELLIPSIS 
  | 81 -> TOKEN_BAR 
  | 82 -> TOKEN_DOT 
  | 83 -> TOKEN_PLUS 
  | 84 -> TOKEN_MINUS 
  | 85 -> TOKEN_STAR 
  | 86 -> TOKEN_COLON 
  | 87 -> TOKEN_DOUBLE_COLON 
  | 88 -> TOKEN_CARET 
  | 89 -> TOKEN_COMMA 
  | 90 -> TOKEN_SEMICOLON 
  | 91 -> TOKEN_FN_CTOR 
  | 92 -> TOKEN_FN_ARROW_BACK 
  | 93 -> TOKEN_FN_ARROW_FRONT 
  | 94 -> TOKEN_FN_DIVIDE 
  | 95 -> TOKEN_L_BOX 
  | 96 -> TOKEN_R_BOX 
  | 97 -> TOKEN_L_PUMPKIN 
  | 98 -> TOKEN_R_PUMPKIN 
  | 99 -> TOKEN_L_BANANA 
  | 100 -> TOKEN_R_BANANA 
  | 101 -> TOKEN_L_BIND 
  | 102 -> TOKEN_R_BIND 
  | 103 -> TOKEN_L_STAR 
  | 104 -> TOKEN_R_STAR 
  | 105 -> TOKEN_L_ARROW 
  | 106 -> TOKEN_R_ARROW 
  | 107 -> TOKEN_L_BRACKET 
  | 108 -> TOKEN_R_BRACKET 
  | 109 -> TOKEN_L_BRACE 
  | 110 -> TOKEN_R_BRACE 
  | 111 -> TOKEN_L_PAREN 
  | 112 -> TOKEN_R_PAREN 
  | 113 -> TOKEN_DOCUMENTATION_LINE 
  | 114 -> TOKEN_NATIVE_CODE_LINE 
  | 115 -> TOKEN_STRING 
  | 116 -> TOKEN_DECIMAL 
  | 117 -> TOKEN_INTEGER 
  | 118 -> TOKEN_TEST_NAME 
  | 119 -> TOKEN_PREDICATE_NAME 
  | 120 -> TOKEN_OPERATOR_NAME 
  | 121 -> TOKEN_BIG_NAME 
  | 122 -> TOKEN_SMALL_NAME 
  | 123 -> TOKEN_EOF 
  | 126 -> TOKEN_end_of_input
  | 124 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startunit 
    | 1 -> NONTERM_unit 
    | 2 -> NONTERM_unit 
    | 3 -> NONTERM_import_list 
    | 4 -> NONTERM_import_list 
    | 5 -> NONTERM_decl_list 
    | 6 -> NONTERM_decl_list 
    | 7 -> NONTERM_main 
    | 8 -> NONTERM_import 
    | 9 -> NONTERM_import 
    | 10 -> NONTERM_import 
    | 11 -> NONTERM_import_path 
    | 12 -> NONTERM_import_path 
    | 13 -> NONTERM_remote 
    | 14 -> NONTERM_export 
    | 15 -> NONTERM_brace_names 
    | 16 -> NONTERM_name_list 
    | 17 -> NONTERM_name_list 
    | 18 -> NONTERM_name 
    | 19 -> NONTERM_name 
    | 20 -> NONTERM_name 
    | 21 -> NONTERM_declaration 
    | 22 -> NONTERM_declaration 
    | 23 -> NONTERM_declaration 
    | 24 -> NONTERM_declaration 
    | 25 -> NONTERM_declaration 
    | 26 -> NONTERM_declaration 
    | 27 -> NONTERM_declaration 
    | 28 -> NONTERM_declaration 
    | 29 -> NONTERM_declaration 
    | 30 -> NONTERM_declaration 
    | 31 -> NONTERM_declaration 
    | 32 -> NONTERM_declaration 
    | 33 -> NONTERM_declaration 
    | 34 -> NONTERM_declaration 
    | 35 -> NONTERM_declaration 
    | 36 -> NONTERM_declaration 
    | 37 -> NONTERM_declaration 
    | 38 -> NONTERM_documentation 
    | 39 -> NONTERM_documentation_lines 
    | 40 -> NONTERM_documentation_lines 
    | 41 -> NONTERM_function 
    | 42 -> NONTERM_function 
    | 43 -> NONTERM_function 
    | 44 -> NONTERM_function 
    | 45 -> NONTERM_function_list 
    | 46 -> NONTERM_function_list 
    | 47 -> NONTERM_native 
    | 48 -> NONTERM_native 
    | 49 -> NONTERM_native_code_list 
    | 50 -> NONTERM_native_code_list 
    | 51 -> NONTERM_userkind 
    | 52 -> NONTERM_userkind 
    | 53 -> NONTERM_kind_unify 
    | 54 -> NONTERM_kind_unify 
    | 55 -> NONTERM_kind_unify 
    | 56 -> NONTERM_datatype 
    | 57 -> NONTERM_datatype 
    | 58 -> NONTERM_datatype 
    | 59 -> NONTERM_datatype 
    | 60 -> NONTERM_datatype 
    | 61 -> NONTERM_datatype 
    | 62 -> NONTERM_type_param_list 
    | 63 -> NONTERM_type_param_list 
    | 64 -> NONTERM_type_param_list 
    | 65 -> NONTERM_datatype_list 
    | 66 -> NONTERM_datatype_list 
    | 67 -> NONTERM_constructor 
    | 68 -> NONTERM_constructor 
    | 69 -> NONTERM_constructor_list 
    | 70 -> NONTERM_constructor_list 
    | 71 -> NONTERM_rule 
    | 72 -> NONTERM_rule 
    | 73 -> NONTERM_rule 
    | 74 -> NONTERM_rule 
    | 75 -> NONTERM_overload 
    | 76 -> NONTERM_overload 
    | 77 -> NONTERM_instance 
    | 78 -> NONTERM_effect 
    | 79 -> NONTERM_effect 
    | 80 -> NONTERM_handler_template_list 
    | 81 -> NONTERM_handler_template_list 
    | 82 -> NONTERM_handler_template 
    | 83 -> NONTERM_test 
    | 84 -> NONTERM_law 
    | 85 -> NONTERM_test_all 
    | 86 -> NONTERM_test_all 
    | 87 -> NONTERM_test_all 
    | 88 -> NONTERM_test_all 
    | 89 -> NONTERM_test_all 
    | 90 -> NONTERM_test_all 
    | 91 -> NONTERM_test_all 
    | 92 -> NONTERM_check 
    | 93 -> NONTERM_tag 
    | 94 -> NONTERM_base_kind 
    | 95 -> NONTERM_base_kind 
    | 96 -> NONTERM_compound_kind 
    | 97 -> NONTERM_compound_kind 
    | 98 -> NONTERM_compound_kind 
    | 99 -> NONTERM_compound_kind 
    | 100 -> NONTERM_predicate_list 
    | 101 -> NONTERM_predicate_list 
    | 102 -> NONTERM_predicate_list 
    | 103 -> NONTERM_predicate_list 
    | 104 -> NONTERM_predicate 
    | 105 -> NONTERM_predicate 
    | 106 -> NONTERM_qual_fn_type 
    | 107 -> NONTERM_base_type 
    | 108 -> NONTERM_base_type 
    | 109 -> NONTERM_base_type 
    | 110 -> NONTERM_base_type 
    | 111 -> NONTERM_base_type 
    | 112 -> NONTERM_base_type 
    | 113 -> NONTERM_base_type 
    | 114 -> NONTERM_base_type 
    | 115 -> NONTERM_base_type 
    | 116 -> NONTERM_base_type 
    | 117 -> NONTERM_base_type 
    | 118 -> NONTERM_base_type 
    | 119 -> NONTERM_base_type 
    | 120 -> NONTERM_base_type 
    | 121 -> NONTERM_base_type 
    | 122 -> NONTERM_base_type 
    | 123 -> NONTERM_val_type 
    | 124 -> NONTERM_fn_type 
    | 125 -> NONTERM_fn_type_seq 
    | 126 -> NONTERM_fn_type_seq 
    | 127 -> NONTERM_fn_row_type 
    | 128 -> NONTERM_fn_row_type 
    | 129 -> NONTERM_fn_row_type 
    | 130 -> NONTERM_field_row_type 
    | 131 -> NONTERM_field_row_type 
    | 132 -> NONTERM_field_row_type 
    | 133 -> NONTERM_field_type 
    | 134 -> NONTERM_compound_type 
    | 135 -> NONTERM_compound_type 
    | 136 -> NONTERM_compound_type 
    | 137 -> NONTERM_compound_type 
    | 138 -> NONTERM_compound_type 
    | 139 -> NONTERM_compound_type 
    | 140 -> NONTERM_compound_type 
    | 141 -> NONTERM_and_sequence 
    | 142 -> NONTERM_and_sequence 
    | 143 -> NONTERM_or_sequence 
    | 144 -> NONTERM_or_sequence 
    | 145 -> NONTERM_mul_sequence 
    | 146 -> NONTERM_mul_sequence 
    | 147 -> NONTERM_mul_sequence 
    | 148 -> NONTERM_mul_sequence 
    | 149 -> NONTERM_mul_sequence 
    | 150 -> NONTERM_type_arg_list 
    | 151 -> NONTERM_type_arg_list 
    | 152 -> NONTERM_term_statement_block 
    | 153 -> NONTERM_term_statement_list 
    | 154 -> NONTERM_term_statement_list 
    | 155 -> NONTERM_term_statement 
    | 156 -> NONTERM_term_statement 
    | 157 -> NONTERM_term_statement 
    | 158 -> NONTERM_non_empty_simple_expr 
    | 159 -> NONTERM_non_empty_simple_expr 
    | 160 -> NONTERM_non_empty_simple_expr 
    | 161 -> NONTERM_non_empty_simple_expr 
    | 162 -> NONTERM_non_empty_simple_expr 
    | 163 -> NONTERM_non_empty_simple_expr 
    | 164 -> NONTERM_simple_expr 
    | 165 -> NONTERM_simple_expr 
    | 166 -> NONTERM_word 
    | 167 -> NONTERM_word 
    | 168 -> NONTERM_word 
    | 169 -> NONTERM_word 
    | 170 -> NONTERM_word 
    | 171 -> NONTERM_word 
    | 172 -> NONTERM_word 
    | 173 -> NONTERM_word 
    | 174 -> NONTERM_word 
    | 175 -> NONTERM_word 
    | 176 -> NONTERM_word 
    | 177 -> NONTERM_word 
    | 178 -> NONTERM_word 
    | 179 -> NONTERM_word 
    | 180 -> NONTERM_word 
    | 181 -> NONTERM_word 
    | 182 -> NONTERM_word 
    | 183 -> NONTERM_word 
    | 184 -> NONTERM_word 
    | 185 -> NONTERM_word 
    | 186 -> NONTERM_word 
    | 187 -> NONTERM_word 
    | 188 -> NONTERM_word 
    | 189 -> NONTERM_word 
    | 190 -> NONTERM_word 
    | 191 -> NONTERM_word 
    | 192 -> NONTERM_word 
    | 193 -> NONTERM_word 
    | 194 -> NONTERM_permission 
    | 195 -> NONTERM_permission 
    | 196 -> NONTERM_handle_word 
    | 197 -> NONTERM_handle_word 
    | 198 -> NONTERM_handler 
    | 199 -> NONTERM_return 
    | 200 -> NONTERM_return 
    | 201 -> NONTERM_param_list 
    | 202 -> NONTERM_param_list 
    | 203 -> NONTERM_handler_list 
    | 204 -> NONTERM_handler_list 
    | 205 -> NONTERM_inject_word 
    | 206 -> NONTERM_eff_list 
    | 207 -> NONTERM_eff_list 
    | 208 -> NONTERM_match_word 
    | 209 -> NONTERM_match_word 
    | 210 -> NONTERM_match_clause_list 
    | 211 -> NONTERM_match_clause_list 
    | 212 -> NONTERM_match_clause 
    | 213 -> NONTERM_if_word 
    | 214 -> NONTERM_switch_word 
    | 215 -> NONTERM_switch_clause_list 
    | 216 -> NONTERM_switch_clause_list 
    | 217 -> NONTERM_when_word 
    | 218 -> NONTERM_while_word 
    | 219 -> NONTERM_for_word 
    | 220 -> NONTERM_for_word 
    | 221 -> NONTERM_for_word 
    | 222 -> NONTERM_for_results 
    | 223 -> NONTERM_for_results 
    | 224 -> NONTERM_for_result 
    | 225 -> NONTERM_for_result 
    | 226 -> NONTERM_for_result 
    | 227 -> NONTERM_for_sequence 
    | 228 -> NONTERM_for_sequence 
    | 229 -> NONTERM_for_sequence 
    | 230 -> NONTERM_parallel_sequences 
    | 231 -> NONTERM_parallel_sequences 
    | 232 -> NONTERM_fold_inits 
    | 233 -> NONTERM_fold_inits 
    | 234 -> NONTERM_function_literal 
    | 235 -> NONTERM_function_literal 
    | 236 -> NONTERM_lit_expr_list 
    | 237 -> NONTERM_lit_expr_list 
    | 238 -> NONTERM_tuple_literal 
    | 239 -> NONTERM_tuple_literal 
    | 240 -> NONTERM_tuple_literal 
    | 241 -> NONTERM_tuple_literal 
    | 242 -> NONTERM_list_literal 
    | 243 -> NONTERM_list_literal 
    | 244 -> NONTERM_record_literal 
    | 245 -> NONTERM_record_literal 
    | 246 -> NONTERM_record_literal 
    | 247 -> NONTERM_record_literal 
    | 248 -> NONTERM_variant_literal 
    | 249 -> NONTERM_case_word 
    | 250 -> NONTERM_case_clause_list 
    | 251 -> NONTERM_case_clause_list 
    | 252 -> NONTERM_case_clause 
    | 253 -> NONTERM_field_list 
    | 254 -> NONTERM_field_list 
    | 255 -> NONTERM_field 
    | 256 -> NONTERM_identifier 
    | 257 -> NONTERM_type_identifier 
    | 258 -> NONTERM_qualified_name 
    | 259 -> NONTERM_qualified_name 
    | 260 -> NONTERM_qualified_name 
    | 261 -> NONTERM_qualified_name 
    | 262 -> NONTERM_qualified_name 
    | 263 -> NONTERM_qualified_ctor 
    | 264 -> NONTERM_qualified_ctor 
    | 265 -> NONTERM_qualified_ctor 
    | 266 -> NONTERM_qualified_ctor 
    | 267 -> NONTERM_no_dot_pattern_expr_list 
    | 268 -> NONTERM_no_dot_pattern_expr_list 
    | 269 -> NONTERM_var_only_pattern_list 
    | 270 -> NONTERM_var_only_pattern_list 
    | 271 -> NONTERM_pattern_expr_list 
    | 272 -> NONTERM_pattern_expr_list 
    | 273 -> NONTERM_pattern_expr_list 
    | 274 -> NONTERM_field_pattern_list 
    | 275 -> NONTERM_field_pattern_list 
    | 276 -> NONTERM_pattern_expr 
    | 277 -> NONTERM_pattern_expr 
    | 278 -> NONTERM_pattern_expr 
    | 279 -> NONTERM_pattern_expr 
    | 280 -> NONTERM_pattern_expr 
    | 281 -> NONTERM_pattern_expr 
    | 282 -> NONTERM_pattern_expr 
    | 283 -> NONTERM_pattern_expr 
    | 284 -> NONTERM_pattern_expr 
    | 285 -> NONTERM_pattern_expr 
    | 286 -> NONTERM_pattern_expr 
    | 287 -> NONTERM_pattern_expr 
    | 288 -> NONTERM_pattern_expr 
    | 289 -> NONTERM_pattern_expr 
    | 290 -> NONTERM_pattern_expr 
    | 291 -> NONTERM_pattern_expr 
    | 292 -> NONTERM_tuple_pattern 
    | 293 -> NONTERM_list_pattern 
    | 294 -> NONTERM_vector_pattern 
    | 295 -> NONTERM_slice_pattern 
    | 296 -> NONTERM_record_pattern 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 126 
let _fsyacc_tagOfErrorTerminal = 124

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | IS  -> "IS" 
  | ONE  -> "ONE" 
  | TRUE  -> "TRUE" 
  | FALSE  -> "FALSE" 
  | AND  -> "AND" 
  | OR  -> "OR" 
  | NOT  -> "NOT" 
  | TUPLE  -> "TUPLE" 
  | LIST  -> "LIST" 
  | VECTOR  -> "VECTOR" 
  | SLICE  -> "SLICE" 
  | DICTIONARY  -> "DICTIONARY" 
  | CASE  -> "CASE" 
  | RECORD  -> "RECORD" 
  | VARIANT  -> "VARIANT" 
  | FOR  -> "FOR" 
  | FOLD  -> "FOLD" 
  | MAP  -> "MAP" 
  | BREAK  -> "BREAK" 
  | FINAL  -> "FINAL" 
  | FILL  -> "FILL" 
  | LENGTH  -> "LENGTH" 
  | RESULT  -> "RESULT" 
  | IF  -> "IF" 
  | WHEN  -> "WHEN" 
  | SWITCH  -> "SWITCH" 
  | WHILE  -> "WHILE" 
  | THEN  -> "THEN" 
  | ELSE  -> "ELSE" 
  | DO  -> "DO" 
  | MATCH  -> "MATCH" 
  | INJECT  -> "INJECT" 
  | WITH  -> "WITH" 
  | AFTER  -> "AFTER" 
  | HANDLE  -> "HANDLE" 
  | UNTAG  -> "UNTAG" 
  | BY  -> "BY" 
  | PER  -> "PER" 
  | TRUST  -> "TRUST" 
  | DISTRUST  -> "DISTRUST" 
  | AUDIT  -> "AUDIT" 
  | NEW_REF  -> "NEW_REF" 
  | GET_REF  -> "GET_REF" 
  | PUT_REF  -> "PUT_REF" 
  | WITH_STATE  -> "WITH_STATE" 
  | PERMISSION  -> "PERMISSION" 
  | FUNCTION  -> "FUNCTION" 
  | NATIVE  -> "NATIVE" 
  | LOCAL  -> "LOCAL" 
  | LET  -> "LET" 
  | BOOLEAN  -> "BOOLEAN" 
  | ABELIAN  -> "ABELIAN" 
  | SYNTACTIC  -> "SYNTACTIC" 
  | IS_ROUGHLY  -> "IS_ROUGHLY" 
  | IS_NOT  -> "IS_NOT" 
  | SATISFIES  -> "SATISFIES" 
  | VIOLATES  -> "VIOLATES" 
  | TEST  -> "TEST" 
  | LAW  -> "LAW" 
  | EXHAUSTIVE  -> "EXHAUSTIVE" 
  | SYNONYM  -> "SYNONYM" 
  | TAG  -> "TAG" 
  | EFFECT  -> "EFFECT" 
  | OVERLOAD  -> "OVERLOAD" 
  | INSTANCE  -> "INSTANCE" 
  | RULE  -> "RULE" 
  | CHECK  -> "CHECK" 
  | PATTERN  -> "PATTERN" 
  | RECURSIVE  -> "RECURSIVE" 
  | KIND  -> "KIND" 
  | DATA  -> "DATA" 
  | ABOUT  -> "ABOUT" 
  | MAIN  -> "MAIN" 
  | EXPORT  -> "EXPORT" 
  | FROM  -> "FROM" 
  | AS  -> "AS" 
  | IMPORT  -> "IMPORT" 
  | REF  -> "REF" 
  | UNDERSCORE  -> "UNDERSCORE" 
  | EQUALS  -> "EQUALS" 
  | ELLIPSIS  -> "ELLIPSIS" 
  | BAR  -> "BAR" 
  | DOT  -> "DOT" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | STAR  -> "STAR" 
  | COLON  -> "COLON" 
  | DOUBLE_COLON  -> "DOUBLE_COLON" 
  | CARET  -> "CARET" 
  | COMMA  -> "COMMA" 
  | SEMICOLON  -> "SEMICOLON" 
  | FN_CTOR  -> "FN_CTOR" 
  | FN_ARROW_BACK  -> "FN_ARROW_BACK" 
  | FN_ARROW_FRONT  -> "FN_ARROW_FRONT" 
  | FN_DIVIDE  -> "FN_DIVIDE" 
  | L_BOX  -> "L_BOX" 
  | R_BOX  -> "R_BOX" 
  | L_PUMPKIN  -> "L_PUMPKIN" 
  | R_PUMPKIN  -> "R_PUMPKIN" 
  | L_BANANA  -> "L_BANANA" 
  | R_BANANA  -> "R_BANANA" 
  | L_BIND  -> "L_BIND" 
  | R_BIND  -> "R_BIND" 
  | L_STAR  -> "L_STAR" 
  | R_STAR  -> "R_STAR" 
  | L_ARROW  -> "L_ARROW" 
  | R_ARROW  -> "R_ARROW" 
  | L_BRACKET  -> "L_BRACKET" 
  | R_BRACKET  -> "R_BRACKET" 
  | L_BRACE  -> "L_BRACE" 
  | R_BRACE  -> "R_BRACE" 
  | L_PAREN  -> "L_PAREN" 
  | R_PAREN  -> "R_PAREN" 
  | DOCUMENTATION_LINE _ -> "DOCUMENTATION_LINE" 
  | NATIVE_CODE_LINE _ -> "NATIVE_CODE_LINE" 
  | STRING _ -> "STRING" 
  | DECIMAL _ -> "DECIMAL" 
  | INTEGER _ -> "INTEGER" 
  | TEST_NAME _ -> "TEST_NAME" 
  | PREDICATE_NAME _ -> "PREDICATE_NAME" 
  | OPERATOR_NAME _ -> "OPERATOR_NAME" 
  | BIG_NAME _ -> "BIG_NAME" 
  | SMALL_NAME _ -> "SMALL_NAME" 
  | EOF  -> "EOF" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | IS  -> (null : System.Object) 
  | ONE  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | TUPLE  -> (null : System.Object) 
  | LIST  -> (null : System.Object) 
  | VECTOR  -> (null : System.Object) 
  | SLICE  -> (null : System.Object) 
  | DICTIONARY  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | RECORD  -> (null : System.Object) 
  | VARIANT  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | FOLD  -> (null : System.Object) 
  | MAP  -> (null : System.Object) 
  | BREAK  -> (null : System.Object) 
  | FINAL  -> (null : System.Object) 
  | FILL  -> (null : System.Object) 
  | LENGTH  -> (null : System.Object) 
  | RESULT  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | WHEN  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | INJECT  -> (null : System.Object) 
  | WITH  -> (null : System.Object) 
  | AFTER  -> (null : System.Object) 
  | HANDLE  -> (null : System.Object) 
  | UNTAG  -> (null : System.Object) 
  | BY  -> (null : System.Object) 
  | PER  -> (null : System.Object) 
  | TRUST  -> (null : System.Object) 
  | DISTRUST  -> (null : System.Object) 
  | AUDIT  -> (null : System.Object) 
  | NEW_REF  -> (null : System.Object) 
  | GET_REF  -> (null : System.Object) 
  | PUT_REF  -> (null : System.Object) 
  | WITH_STATE  -> (null : System.Object) 
  | PERMISSION  -> (null : System.Object) 
  | FUNCTION  -> (null : System.Object) 
  | NATIVE  -> (null : System.Object) 
  | LOCAL  -> (null : System.Object) 
  | LET  -> (null : System.Object) 
  | BOOLEAN  -> (null : System.Object) 
  | ABELIAN  -> (null : System.Object) 
  | SYNTACTIC  -> (null : System.Object) 
  | IS_ROUGHLY  -> (null : System.Object) 
  | IS_NOT  -> (null : System.Object) 
  | SATISFIES  -> (null : System.Object) 
  | VIOLATES  -> (null : System.Object) 
  | TEST  -> (null : System.Object) 
  | LAW  -> (null : System.Object) 
  | EXHAUSTIVE  -> (null : System.Object) 
  | SYNONYM  -> (null : System.Object) 
  | TAG  -> (null : System.Object) 
  | EFFECT  -> (null : System.Object) 
  | OVERLOAD  -> (null : System.Object) 
  | INSTANCE  -> (null : System.Object) 
  | RULE  -> (null : System.Object) 
  | CHECK  -> (null : System.Object) 
  | PATTERN  -> (null : System.Object) 
  | RECURSIVE  -> (null : System.Object) 
  | KIND  -> (null : System.Object) 
  | DATA  -> (null : System.Object) 
  | ABOUT  -> (null : System.Object) 
  | MAIN  -> (null : System.Object) 
  | EXPORT  -> (null : System.Object) 
  | FROM  -> (null : System.Object) 
  | AS  -> (null : System.Object) 
  | IMPORT  -> (null : System.Object) 
  | REF  -> (null : System.Object) 
  | UNDERSCORE  -> (null : System.Object) 
  | EQUALS  -> (null : System.Object) 
  | ELLIPSIS  -> (null : System.Object) 
  | BAR  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | DOUBLE_COLON  -> (null : System.Object) 
  | CARET  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | FN_CTOR  -> (null : System.Object) 
  | FN_ARROW_BACK  -> (null : System.Object) 
  | FN_ARROW_FRONT  -> (null : System.Object) 
  | FN_DIVIDE  -> (null : System.Object) 
  | L_BOX  -> (null : System.Object) 
  | R_BOX  -> (null : System.Object) 
  | L_PUMPKIN  -> (null : System.Object) 
  | R_PUMPKIN  -> (null : System.Object) 
  | L_BANANA  -> (null : System.Object) 
  | R_BANANA  -> (null : System.Object) 
  | L_BIND  -> (null : System.Object) 
  | R_BIND  -> (null : System.Object) 
  | L_STAR  -> (null : System.Object) 
  | R_STAR  -> (null : System.Object) 
  | L_ARROW  -> (null : System.Object) 
  | R_ARROW  -> (null : System.Object) 
  | L_BRACKET  -> (null : System.Object) 
  | R_BRACKET  -> (null : System.Object) 
  | L_BRACE  -> (null : System.Object) 
  | R_BRACE  -> (null : System.Object) 
  | L_PAREN  -> (null : System.Object) 
  | R_PAREN  -> (null : System.Object) 
  | DOCUMENTATION_LINE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NATIVE_CODE_LINE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DECIMAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INTEGER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | TEST_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PREDICATE_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OPERATOR_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BIG_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | SMALL_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EOF  -> (null : System.Object) 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 8us; 9us; 2us; 65535us; 2us; 3us; 10us; 11us; 1us; 65535us; 3us; 4us; 2us; 65535us; 0us; 8us; 8us; 8us; 2us; 65535us; 15us; 16us; 19us; 20us; 2us; 65535us; 15us; 26us; 19us; 26us; 1us; 65535us; 3us; 6us; 2us; 65535us; 15us; 19us; 38us; 39us; 2us; 65535us; 40us; 41us; 43us; 44us; 2us; 65535us; 40us; 43us; 43us; 43us; 2us; 65535us; 2us; 10us; 10us; 10us; 6us; 65535us; 2us; 86us; 10us; 86us; 49us; 87us; 51us; 87us; 95us; 85us; 143us; 127us; 2us; 65535us; 74us; 75us; 76us; 77us; 5us; 65535us; 2us; 48us; 10us; 48us; 49us; 50us; 51us; 95us; 95us; 95us; 2us; 65535us; 51us; 52us; 95us; 96us; 2us; 65535us; 2us; 54us; 10us; 54us; 3us; 65535us; 101us; 102us; 107us; 108us; 109us; 110us; 2us; 65535us; 2us; 60us; 10us; 60us; 2us; 65535us; 113us; 114us; 117us; 118us; 5us; 65535us; 2us; 61us; 10us; 61us; 49us; 62us; 51us; 143us; 143us; 143us; 2us; 65535us; 123us; 124us; 129us; 130us; 2us; 65535us; 51us; 63us; 143us; 144us; 3us; 65535us; 125us; 152us; 131us; 152us; 153us; 152us; 3us; 65535us; 125us; 126us; 131us; 132us; 153us; 154us; 2us; 65535us; 2us; 67us; 10us; 67us; 2us; 65535us; 2us; 65us; 10us; 65us; 2us; 65535us; 2us; 66us; 10us; 66us; 2us; 65535us; 2us; 68us; 10us; 68us; 2us; 65535us; 188us; 189us; 194us; 195us; 4us; 65535us; 188us; 197us; 189us; 198us; 194us; 197us; 195us; 198us; 2us; 65535us; 2us; 69us; 10us; 69us; 2us; 65535us; 2us; 70us; 10us; 70us; 2us; 65535us; 206us; 207us; 213us; 214us; 2us; 65535us; 2us; 71us; 10us; 71us; 2us; 65535us; 2us; 72us; 10us; 72us; 7us; 65535us; 133us; 247us; 135us; 247us; 140us; 247us; 238us; 247us; 241us; 247us; 244us; 247us; 248us; 247us; 7us; 65535us; 133us; 134us; 135us; 136us; 140us; 141us; 238us; 239us; 241us; 242us; 244us; 245us; 248us; 249us; 0us; 65535us; 0us; 65535us; 7us; 65535us; 99us; 100us; 105us; 106us; 171us; 172us; 177us; 178us; 181us; 182us; 201us; 202us; 231us; 232us; 29us; 65535us; 146us; 282us; 147us; 282us; 149us; 282us; 150us; 282us; 157us; 282us; 158us; 282us; 160us; 282us; 161us; 282us; 163us; 282us; 165us; 282us; 262us; 282us; 263us; 282us; 264us; 282us; 276us; 282us; 280us; 282us; 283us; 284us; 285us; 282us; 290us; 282us; 293us; 282us; 298us; 282us; 306us; 282us; 313us; 282us; 315us; 316us; 317us; 318us; 319us; 320us; 321us; 322us; 323us; 324us; 326us; 327us; 329us; 330us; 21us; 65535us; 146us; 308us; 147us; 308us; 149us; 308us; 150us; 308us; 157us; 308us; 158us; 308us; 160us; 308us; 161us; 308us; 163us; 308us; 165us; 308us; 262us; 308us; 263us; 308us; 264us; 308us; 276us; 308us; 280us; 308us; 285us; 308us; 290us; 308us; 293us; 308us; 298us; 308us; 306us; 308us; 313us; 308us; 8us; 65535us; 99us; 250us; 105us; 250us; 171us; 250us; 177us; 250us; 181us; 250us; 201us; 250us; 231us; 250us; 259us; 260us; 10us; 65535us; 99us; 285us; 105us; 285us; 171us; 285us; 177us; 285us; 181us; 285us; 201us; 285us; 231us; 285us; 259us; 285us; 279us; 280us; 292us; 293us; 2us; 65535us; 286us; 287us; 288us; 289us; 2us; 65535us; 270us; 271us; 273us; 274us; 1us; 65535us; 303us; 304us; 21us; 65535us; 146us; 332us; 147us; 148us; 149us; 333us; 150us; 151us; 157us; 332us; 158us; 332us; 160us; 333us; 161us; 332us; 163us; 333us; 165us; 333us; 262us; 263us; 263us; 332us; 264us; 333us; 276us; 277us; 280us; 294us; 285us; 294us; 290us; 291us; 293us; 294us; 298us; 299us; 306us; 307us; 313us; 314us; 21us; 65535us; 146us; 310us; 147us; 310us; 149us; 310us; 150us; 310us; 157us; 310us; 158us; 310us; 160us; 310us; 161us; 310us; 163us; 310us; 165us; 310us; 262us; 268us; 263us; 310us; 264us; 310us; 276us; 310us; 280us; 310us; 285us; 310us; 290us; 310us; 293us; 310us; 298us; 310us; 306us; 310us; 313us; 310us; 21us; 65535us; 146us; 311us; 147us; 311us; 149us; 311us; 150us; 311us; 157us; 311us; 158us; 311us; 160us; 311us; 161us; 311us; 163us; 311us; 165us; 311us; 262us; 266us; 263us; 311us; 264us; 311us; 276us; 311us; 280us; 311us; 285us; 311us; 290us; 311us; 293us; 311us; 298us; 311us; 306us; 311us; 313us; 311us; 21us; 65535us; 146us; 312us; 147us; 312us; 149us; 312us; 150us; 312us; 157us; 312us; 158us; 312us; 160us; 312us; 161us; 312us; 163us; 312us; 165us; 312us; 262us; 312us; 263us; 312us; 264us; 312us; 276us; 312us; 280us; 312us; 285us; 312us; 290us; 312us; 293us; 312us; 298us; 312us; 306us; 312us; 313us; 312us; 5us; 65535us; 146us; 149us; 157us; 160us; 158us; 163us; 161us; 165us; 263us; 264us; 59us; 65535us; 13us; 356us; 80us; 356us; 83us; 356us; 90us; 356us; 93us; 356us; 183us; 356us; 205us; 356us; 207us; 356us; 212us; 356us; 214us; 356us; 222us; 356us; 226us; 356us; 334us; 356us; 338us; 356us; 342us; 356us; 343us; 356us; 344us; 356us; 348us; 356us; 349us; 356us; 350us; 356us; 351us; 356us; 352us; 356us; 374us; 375us; 389us; 356us; 393us; 394us; 395us; 396us; 397us; 356us; 400us; 401us; 402us; 403us; 405us; 406us; 416us; 356us; 419us; 356us; 422us; 356us; 427us; 428us; 437us; 356us; 444us; 356us; 447us; 448us; 449us; 450us; 455us; 356us; 457us; 356us; 460us; 356us; 463us; 356us; 465us; 466us; 467us; 356us; 469us; 470us; 473us; 474us; 477us; 478us; 481us; 482us; 494us; 356us; 499us; 356us; 503us; 356us; 507us; 356us; 512us; 356us; 513us; 356us; 516us; 356us; 521us; 356us; 536us; 356us; 543us; 356us; 549us; 356us; 1us; 65535us; 334us; 335us; 2us; 65535us; 334us; 337us; 338us; 339us; 38us; 65535us; 13us; 348us; 80us; 348us; 83us; 348us; 90us; 348us; 93us; 348us; 183us; 348us; 205us; 348us; 207us; 348us; 212us; 348us; 214us; 348us; 222us; 348us; 226us; 348us; 334us; 344us; 338us; 344us; 342us; 343us; 389us; 349us; 397us; 348us; 416us; 348us; 419us; 348us; 422us; 348us; 437us; 348us; 444us; 348us; 455us; 348us; 457us; 348us; 460us; 348us; 463us; 348us; 467us; 348us; 494us; 348us; 499us; 348us; 503us; 348us; 507us; 348us; 512us; 350us; 513us; 349us; 516us; 351us; 521us; 352us; 536us; 348us; 543us; 348us; 549us; 348us; 30us; 65535us; 13us; 14us; 80us; 81us; 83us; 84us; 90us; 91us; 93us; 94us; 183us; 184us; 205us; 206us; 207us; 208us; 212us; 213us; 214us; 215us; 222us; 223us; 226us; 227us; 397us; 446us; 416us; 417us; 419us; 420us; 422us; 423us; 437us; 438us; 444us; 445us; 455us; 459us; 457us; 458us; 460us; 461us; 463us; 464us; 467us; 468us; 494us; 495us; 499us; 500us; 503us; 504us; 507us; 508us; 536us; 537us; 543us; 544us; 549us; 550us; 45us; 65535us; 13us; 345us; 80us; 345us; 83us; 345us; 90us; 345us; 93us; 345us; 183us; 345us; 205us; 345us; 207us; 345us; 212us; 345us; 214us; 345us; 222us; 345us; 226us; 345us; 334us; 345us; 338us; 345us; 342us; 345us; 343us; 353us; 344us; 353us; 348us; 353us; 349us; 353us; 350us; 353us; 351us; 353us; 352us; 353us; 389us; 345us; 397us; 345us; 416us; 345us; 419us; 345us; 422us; 345us; 437us; 345us; 444us; 345us; 455us; 345us; 457us; 345us; 460us; 345us; 463us; 345us; 467us; 345us; 494us; 345us; 499us; 345us; 503us; 345us; 507us; 345us; 512us; 345us; 513us; 345us; 516us; 345us; 521us; 345us; 536us; 345us; 543us; 345us; 549us; 345us; 45us; 65535us; 13us; 376us; 80us; 376us; 83us; 376us; 90us; 376us; 93us; 376us; 183us; 376us; 205us; 376us; 207us; 376us; 212us; 376us; 214us; 376us; 222us; 376us; 226us; 376us; 334us; 376us; 338us; 376us; 342us; 376us; 343us; 376us; 344us; 376us; 348us; 376us; 349us; 376us; 350us; 376us; 351us; 376us; 352us; 376us; 389us; 376us; 397us; 376us; 416us; 376us; 419us; 376us; 422us; 376us; 437us; 376us; 444us; 376us; 455us; 376us; 457us; 376us; 460us; 376us; 463us; 376us; 467us; 376us; 494us; 376us; 499us; 376us; 503us; 376us; 507us; 376us; 512us; 376us; 513us; 376us; 516us; 376us; 521us; 376us; 536us; 376us; 543us; 376us; 549us; 376us; 45us; 65535us; 13us; 357us; 80us; 357us; 83us; 357us; 90us; 357us; 93us; 357us; 183us; 357us; 205us; 357us; 207us; 357us; 212us; 357us; 214us; 357us; 222us; 357us; 226us; 357us; 334us; 357us; 338us; 357us; 342us; 357us; 343us; 357us; 344us; 357us; 348us; 357us; 349us; 357us; 350us; 357us; 351us; 357us; 352us; 357us; 389us; 357us; 397us; 357us; 416us; 357us; 419us; 357us; 422us; 357us; 437us; 357us; 444us; 357us; 455us; 357us; 457us; 357us; 460us; 357us; 463us; 357us; 467us; 357us; 494us; 357us; 499us; 357us; 503us; 357us; 507us; 357us; 512us; 357us; 513us; 357us; 516us; 357us; 521us; 357us; 536us; 357us; 543us; 357us; 549us; 357us; 1us; 65535us; 409us; 425us; 1us; 65535us; 409us; 410us; 8us; 65535us; 56us; 57us; 186us; 187us; 192us; 193us; 210us; 211us; 391us; 392us; 398us; 399us; 404us; 405us; 414us; 415us; 1us; 65535us; 408us; 409us; 45us; 65535us; 13us; 358us; 80us; 358us; 83us; 358us; 90us; 358us; 93us; 358us; 183us; 358us; 205us; 358us; 207us; 358us; 212us; 358us; 214us; 358us; 222us; 358us; 226us; 358us; 334us; 358us; 338us; 358us; 342us; 358us; 343us; 358us; 344us; 358us; 348us; 358us; 349us; 358us; 350us; 358us; 351us; 358us; 352us; 358us; 389us; 358us; 397us; 358us; 416us; 358us; 419us; 358us; 422us; 358us; 437us; 358us; 444us; 358us; 455us; 358us; 457us; 358us; 460us; 358us; 463us; 358us; 467us; 358us; 494us; 358us; 499us; 358us; 503us; 358us; 507us; 358us; 512us; 358us; 513us; 358us; 516us; 358us; 521us; 358us; 536us; 358us; 543us; 358us; 549us; 358us; 2us; 65535us; 426us; 427us; 429us; 430us; 45us; 65535us; 13us; 359us; 80us; 359us; 83us; 359us; 90us; 359us; 93us; 359us; 183us; 359us; 205us; 359us; 207us; 359us; 212us; 359us; 214us; 359us; 222us; 359us; 226us; 359us; 334us; 359us; 338us; 359us; 342us; 359us; 343us; 359us; 344us; 359us; 348us; 359us; 349us; 359us; 350us; 359us; 351us; 359us; 352us; 359us; 389us; 359us; 397us; 359us; 416us; 359us; 419us; 359us; 422us; 359us; 437us; 359us; 444us; 359us; 455us; 359us; 457us; 359us; 460us; 359us; 463us; 359us; 467us; 359us; 494us; 359us; 499us; 359us; 503us; 359us; 507us; 359us; 512us; 359us; 513us; 359us; 516us; 359us; 521us; 359us; 536us; 359us; 543us; 359us; 549us; 359us; 1us; 65535us; 432us; 433us; 2us; 65535us; 432us; 440us; 433us; 441us; 45us; 65535us; 13us; 360us; 80us; 360us; 83us; 360us; 90us; 360us; 93us; 360us; 183us; 360us; 205us; 360us; 207us; 360us; 212us; 360us; 214us; 360us; 222us; 360us; 226us; 360us; 334us; 360us; 338us; 360us; 342us; 360us; 343us; 360us; 344us; 360us; 348us; 360us; 349us; 360us; 350us; 360us; 351us; 360us; 352us; 360us; 389us; 360us; 397us; 360us; 416us; 360us; 419us; 360us; 422us; 360us; 437us; 360us; 444us; 360us; 455us; 360us; 457us; 360us; 460us; 360us; 463us; 360us; 467us; 360us; 494us; 360us; 499us; 360us; 503us; 360us; 507us; 360us; 512us; 360us; 513us; 360us; 516us; 360us; 521us; 360us; 536us; 360us; 543us; 360us; 549us; 360us; 45us; 65535us; 13us; 361us; 80us; 361us; 83us; 361us; 90us; 361us; 93us; 361us; 183us; 361us; 205us; 361us; 207us; 361us; 212us; 361us; 214us; 361us; 222us; 361us; 226us; 361us; 334us; 361us; 338us; 361us; 342us; 361us; 343us; 361us; 344us; 361us; 348us; 361us; 349us; 361us; 350us; 361us; 351us; 361us; 352us; 361us; 389us; 361us; 397us; 361us; 416us; 361us; 419us; 361us; 422us; 361us; 437us; 361us; 444us; 361us; 455us; 361us; 457us; 361us; 460us; 361us; 463us; 361us; 467us; 361us; 494us; 361us; 499us; 361us; 503us; 361us; 507us; 361us; 512us; 361us; 513us; 361us; 516us; 361us; 521us; 361us; 536us; 361us; 543us; 361us; 549us; 361us; 2us; 65535us; 452us; 453us; 461us; 462us; 45us; 65535us; 13us; 362us; 80us; 362us; 83us; 362us; 90us; 362us; 93us; 362us; 183us; 362us; 205us; 362us; 207us; 362us; 212us; 362us; 214us; 362us; 222us; 362us; 226us; 362us; 334us; 362us; 338us; 362us; 342us; 362us; 343us; 362us; 344us; 362us; 348us; 362us; 349us; 362us; 350us; 362us; 351us; 362us; 352us; 362us; 389us; 362us; 397us; 362us; 416us; 362us; 419us; 362us; 422us; 362us; 437us; 362us; 444us; 362us; 455us; 362us; 457us; 362us; 460us; 362us; 463us; 362us; 467us; 362us; 494us; 362us; 499us; 362us; 503us; 362us; 507us; 362us; 512us; 362us; 513us; 362us; 516us; 362us; 521us; 362us; 536us; 362us; 543us; 362us; 549us; 362us; 45us; 65535us; 13us; 363us; 80us; 363us; 83us; 363us; 90us; 363us; 93us; 363us; 183us; 363us; 205us; 363us; 207us; 363us; 212us; 363us; 214us; 363us; 222us; 363us; 226us; 363us; 334us; 363us; 338us; 363us; 342us; 363us; 343us; 363us; 344us; 363us; 348us; 363us; 349us; 363us; 350us; 363us; 351us; 363us; 352us; 363us; 389us; 363us; 397us; 363us; 416us; 363us; 419us; 363us; 422us; 363us; 437us; 363us; 444us; 363us; 455us; 363us; 457us; 363us; 460us; 363us; 463us; 363us; 467us; 363us; 494us; 363us; 499us; 363us; 503us; 363us; 507us; 363us; 512us; 363us; 513us; 363us; 516us; 363us; 521us; 363us; 536us; 363us; 543us; 363us; 549us; 363us; 45us; 65535us; 13us; 364us; 80us; 364us; 83us; 364us; 90us; 364us; 93us; 364us; 183us; 364us; 205us; 364us; 207us; 364us; 212us; 364us; 214us; 364us; 222us; 364us; 226us; 364us; 334us; 364us; 338us; 364us; 342us; 364us; 343us; 364us; 344us; 364us; 348us; 364us; 349us; 364us; 350us; 364us; 351us; 364us; 352us; 364us; 389us; 364us; 397us; 364us; 416us; 364us; 419us; 364us; 422us; 364us; 437us; 364us; 444us; 364us; 455us; 364us; 457us; 364us; 460us; 364us; 463us; 364us; 467us; 364us; 494us; 364us; 499us; 364us; 503us; 364us; 507us; 364us; 512us; 364us; 513us; 364us; 516us; 364us; 521us; 364us; 536us; 364us; 543us; 364us; 549us; 364us; 2us; 65535us; 475us; 476us; 484us; 485us; 2us; 65535us; 475us; 483us; 484us; 483us; 1us; 65535us; 493us; 494us; 2us; 65535us; 471us; 472us; 496us; 497us; 2us; 65535us; 479us; 480us; 501us; 502us; 45us; 65535us; 13us; 365us; 80us; 365us; 83us; 365us; 90us; 365us; 93us; 365us; 183us; 365us; 205us; 365us; 207us; 365us; 212us; 365us; 214us; 365us; 222us; 365us; 226us; 365us; 334us; 365us; 338us; 365us; 342us; 365us; 343us; 365us; 344us; 365us; 348us; 365us; 349us; 365us; 350us; 365us; 351us; 365us; 352us; 365us; 389us; 365us; 397us; 365us; 416us; 365us; 419us; 365us; 422us; 365us; 437us; 365us; 444us; 365us; 455us; 365us; 457us; 365us; 460us; 365us; 463us; 365us; 467us; 365us; 494us; 365us; 499us; 365us; 503us; 365us; 507us; 365us; 512us; 365us; 513us; 365us; 516us; 365us; 521us; 365us; 536us; 365us; 543us; 365us; 549us; 365us; 2us; 65535us; 389us; 511us; 513us; 510us; 45us; 65535us; 13us; 347us; 80us; 347us; 83us; 347us; 90us; 347us; 93us; 347us; 183us; 347us; 205us; 347us; 207us; 347us; 212us; 347us; 214us; 347us; 222us; 347us; 226us; 347us; 334us; 347us; 338us; 347us; 342us; 347us; 343us; 355us; 344us; 355us; 348us; 355us; 349us; 355us; 350us; 355us; 351us; 355us; 352us; 355us; 389us; 347us; 397us; 347us; 416us; 347us; 419us; 347us; 422us; 347us; 437us; 347us; 444us; 347us; 455us; 347us; 457us; 347us; 460us; 347us; 463us; 347us; 467us; 347us; 494us; 347us; 499us; 347us; 503us; 347us; 507us; 347us; 512us; 347us; 513us; 347us; 516us; 347us; 521us; 347us; 536us; 347us; 543us; 347us; 549us; 347us; 0us; 65535us; 45us; 65535us; 13us; 346us; 80us; 346us; 83us; 346us; 90us; 346us; 93us; 346us; 183us; 346us; 205us; 346us; 207us; 346us; 212us; 346us; 214us; 346us; 222us; 346us; 226us; 346us; 334us; 346us; 338us; 346us; 342us; 346us; 343us; 354us; 344us; 354us; 348us; 354us; 349us; 354us; 350us; 354us; 351us; 354us; 352us; 354us; 389us; 346us; 397us; 346us; 416us; 346us; 419us; 346us; 422us; 346us; 437us; 346us; 444us; 346us; 455us; 346us; 457us; 346us; 460us; 346us; 463us; 346us; 467us; 346us; 494us; 346us; 499us; 346us; 503us; 346us; 507us; 346us; 512us; 346us; 513us; 346us; 516us; 346us; 521us; 346us; 536us; 346us; 543us; 346us; 549us; 346us; 45us; 65535us; 13us; 372us; 80us; 372us; 83us; 372us; 90us; 372us; 93us; 372us; 183us; 372us; 205us; 372us; 207us; 372us; 212us; 372us; 214us; 372us; 222us; 372us; 226us; 372us; 334us; 372us; 338us; 372us; 342us; 372us; 343us; 372us; 344us; 372us; 348us; 372us; 349us; 372us; 350us; 372us; 351us; 372us; 352us; 372us; 389us; 372us; 397us; 372us; 416us; 372us; 419us; 372us; 422us; 372us; 437us; 372us; 444us; 372us; 455us; 372us; 457us; 372us; 460us; 372us; 463us; 372us; 467us; 372us; 494us; 372us; 499us; 372us; 503us; 372us; 507us; 372us; 512us; 372us; 513us; 372us; 516us; 372us; 521us; 372us; 536us; 372us; 543us; 372us; 549us; 372us; 45us; 65535us; 13us; 373us; 80us; 373us; 83us; 373us; 90us; 373us; 93us; 373us; 183us; 373us; 205us; 373us; 207us; 373us; 212us; 373us; 214us; 373us; 222us; 373us; 226us; 373us; 334us; 373us; 338us; 373us; 342us; 373us; 343us; 373us; 344us; 373us; 348us; 373us; 349us; 373us; 350us; 373us; 351us; 373us; 352us; 373us; 389us; 373us; 397us; 373us; 416us; 373us; 419us; 373us; 422us; 373us; 437us; 373us; 444us; 373us; 455us; 373us; 457us; 373us; 460us; 373us; 463us; 373us; 467us; 373us; 494us; 373us; 499us; 373us; 503us; 373us; 507us; 373us; 512us; 373us; 513us; 373us; 516us; 373us; 521us; 373us; 536us; 373us; 543us; 373us; 549us; 373us; 1us; 65535us; 532us; 533us; 2us; 65535us; 532us; 539us; 533us; 540us; 3us; 65535us; 390us; 522us; 520us; 525us; 546us; 547us; 4us; 65535us; 390us; 545us; 520us; 545us; 528us; 529us; 546us; 545us; 46us; 65535us; 13us; 387us; 80us; 387us; 83us; 387us; 90us; 387us; 93us; 387us; 183us; 387us; 205us; 387us; 207us; 387us; 212us; 387us; 214us; 387us; 222us; 387us; 226us; 387us; 334us; 387us; 338us; 387us; 342us; 387us; 343us; 387us; 344us; 387us; 348us; 387us; 349us; 387us; 350us; 387us; 351us; 387us; 352us; 387us; 389us; 387us; 397us; 387us; 413us; 414us; 416us; 387us; 419us; 387us; 422us; 387us; 437us; 387us; 444us; 387us; 455us; 387us; 457us; 387us; 460us; 387us; 463us; 387us; 467us; 387us; 494us; 387us; 499us; 387us; 503us; 387us; 507us; 387us; 512us; 387us; 513us; 387us; 516us; 387us; 521us; 387us; 536us; 387us; 543us; 387us; 549us; 387us; 62us; 65535us; 58us; 594us; 79us; 594us; 82us; 594us; 89us; 594us; 92us; 594us; 133us; 237us; 135us; 237us; 140us; 237us; 146us; 255us; 147us; 255us; 149us; 255us; 150us; 255us; 157us; 255us; 158us; 255us; 160us; 255us; 161us; 255us; 163us; 255us; 165us; 255us; 238us; 237us; 241us; 237us; 244us; 237us; 248us; 237us; 262us; 255us; 263us; 255us; 264us; 255us; 276us; 255us; 280us; 255us; 283us; 255us; 285us; 255us; 290us; 255us; 293us; 255us; 298us; 255us; 306us; 255us; 313us; 255us; 315us; 255us; 317us; 255us; 319us; 255us; 321us; 255us; 323us; 255us; 326us; 255us; 329us; 255us; 340us; 594us; 341us; 594us; 418us; 594us; 421us; 594us; 435us; 594us; 442us; 594us; 443us; 594us; 573us; 594us; 574us; 594us; 575us; 594us; 576us; 594us; 577us; 594us; 580us; 594us; 590us; 594us; 592us; 594us; 595us; 596us; 596us; 594us; 603us; 594us; 605us; 594us; 608us; 594us; 611us; 594us; 47us; 65535us; 13us; 551us; 80us; 551us; 83us; 551us; 90us; 551us; 93us; 551us; 183us; 551us; 205us; 551us; 207us; 551us; 212us; 551us; 214us; 551us; 222us; 551us; 226us; 551us; 334us; 551us; 338us; 551us; 342us; 551us; 343us; 551us; 344us; 551us; 348us; 551us; 349us; 551us; 350us; 551us; 351us; 551us; 352us; 551us; 389us; 551us; 397us; 551us; 413us; 551us; 416us; 551us; 419us; 551us; 422us; 551us; 437us; 551us; 444us; 551us; 455us; 551us; 457us; 551us; 460us; 551us; 463us; 551us; 467us; 551us; 494us; 551us; 499us; 551us; 503us; 551us; 507us; 551us; 512us; 551us; 513us; 551us; 516us; 551us; 521us; 551us; 536us; 551us; 543us; 551us; 549us; 551us; 558us; 559us; 63us; 65535us; 58us; 552us; 79us; 552us; 82us; 552us; 89us; 552us; 92us; 552us; 133us; 552us; 135us; 552us; 140us; 552us; 146us; 552us; 147us; 552us; 149us; 552us; 150us; 552us; 157us; 552us; 158us; 552us; 160us; 552us; 161us; 552us; 163us; 552us; 165us; 552us; 238us; 552us; 241us; 552us; 244us; 552us; 248us; 552us; 262us; 552us; 263us; 552us; 264us; 552us; 276us; 552us; 280us; 552us; 283us; 552us; 285us; 552us; 290us; 552us; 293us; 552us; 298us; 552us; 306us; 552us; 313us; 552us; 315us; 552us; 317us; 552us; 319us; 552us; 321us; 552us; 323us; 552us; 326us; 552us; 329us; 552us; 340us; 552us; 341us; 552us; 418us; 552us; 421us; 552us; 435us; 552us; 442us; 552us; 443us; 552us; 565us; 566us; 573us; 552us; 574us; 552us; 575us; 552us; 576us; 552us; 577us; 552us; 580us; 552us; 590us; 552us; 592us; 552us; 595us; 552us; 596us; 552us; 603us; 552us; 605us; 552us; 608us; 552us; 611us; 552us; 4us; 65535us; 79us; 82us; 89us; 92us; 340us; 341us; 418us; 421us; 3us; 65535us; 503us; 506us; 554us; 570us; 569us; 570us; 7us; 65535us; 435us; 443us; 442us; 443us; 596us; 573us; 603us; 574us; 605us; 575us; 608us; 576us; 611us; 577us; 2us; 65535us; 582us; 583us; 614us; 615us; 25us; 65535us; 58us; 59us; 79us; 567us; 82us; 568us; 89us; 567us; 92us; 568us; 340us; 567us; 341us; 568us; 418us; 567us; 421us; 568us; 435us; 571us; 442us; 571us; 443us; 578us; 573us; 578us; 574us; 578us; 575us; 578us; 576us; 578us; 577us; 578us; 580us; 581us; 590us; 591us; 592us; 593us; 596us; 571us; 603us; 571us; 605us; 571us; 608us; 571us; 611us; 571us; 25us; 65535us; 58us; 598us; 79us; 598us; 82us; 598us; 89us; 598us; 92us; 598us; 340us; 598us; 341us; 598us; 418us; 598us; 421us; 598us; 435us; 598us; 442us; 598us; 443us; 598us; 573us; 598us; 574us; 598us; 575us; 598us; 576us; 598us; 577us; 598us; 580us; 598us; 590us; 598us; 592us; 598us; 596us; 598us; 603us; 598us; 605us; 598us; 608us; 598us; 611us; 598us; 25us; 65535us; 58us; 599us; 79us; 599us; 82us; 599us; 89us; 599us; 92us; 599us; 340us; 599us; 341us; 599us; 418us; 599us; 421us; 599us; 435us; 599us; 442us; 599us; 443us; 599us; 573us; 599us; 574us; 599us; 575us; 599us; 576us; 599us; 577us; 599us; 580us; 599us; 590us; 599us; 592us; 599us; 596us; 599us; 603us; 599us; 605us; 599us; 608us; 599us; 611us; 599us; 25us; 65535us; 58us; 600us; 79us; 600us; 82us; 600us; 89us; 600us; 92us; 600us; 340us; 600us; 341us; 600us; 418us; 600us; 421us; 600us; 435us; 600us; 442us; 600us; 443us; 600us; 573us; 600us; 574us; 600us; 575us; 600us; 576us; 600us; 577us; 600us; 580us; 600us; 590us; 600us; 592us; 600us; 596us; 600us; 603us; 600us; 605us; 600us; 608us; 600us; 611us; 600us; 25us; 65535us; 58us; 601us; 79us; 601us; 82us; 601us; 89us; 601us; 92us; 601us; 340us; 601us; 341us; 601us; 418us; 601us; 421us; 601us; 435us; 601us; 442us; 601us; 443us; 601us; 573us; 601us; 574us; 601us; 575us; 601us; 576us; 601us; 577us; 601us; 580us; 601us; 590us; 601us; 592us; 601us; 596us; 601us; 603us; 601us; 605us; 601us; 608us; 601us; 611us; 601us; 25us; 65535us; 58us; 602us; 79us; 602us; 82us; 602us; 89us; 602us; 92us; 602us; 340us; 602us; 341us; 602us; 418us; 602us; 421us; 602us; 435us; 602us; 442us; 602us; 443us; 602us; 573us; 602us; 574us; 602us; 575us; 602us; 576us; 602us; 577us; 602us; 580us; 602us; 590us; 602us; 592us; 602us; 596us; 602us; 603us; 602us; 605us; 602us; 608us; 602us; 611us; 602us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 11us; 14us; 17us; 20us; 22us; 25us; 28us; 31us; 34us; 41us; 44us; 50us; 53us; 56us; 60us; 63us; 66us; 72us; 75us; 78us; 82us; 86us; 89us; 92us; 95us; 98us; 101us; 106us; 109us; 112us; 115us; 118us; 121us; 129us; 137us; 138us; 139us; 147us; 177us; 199us; 208us; 219us; 222us; 225us; 227us; 249us; 271us; 293us; 315us; 321us; 381us; 383us; 386us; 425us; 456us; 502us; 548us; 594us; 596us; 598us; 607us; 609us; 655us; 658us; 704us; 706us; 709us; 755us; 801us; 804us; 850us; 896us; 942us; 945us; 948us; 950us; 953us; 956us; 1002us; 1005us; 1051us; 1052us; 1098us; 1144us; 1190us; 1192us; 1195us; 1199us; 1204us; 1251us; 1314us; 1362us; 1426us; 1431us; 1435us; 1443us; 1446us; 1472us; 1498us; 1524us; 1550us; 1576us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 2us; 1us; 2us; 2us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 2us; 1us; 4us; 1us; 4us; 1us; 6us; 1us; 6us; 1us; 7us; 1us; 7us; 1us; 7us; 3us; 8us; 9us; 10us; 1us; 8us; 1us; 8us; 1us; 8us; 1us; 9us; 1us; 9us; 1us; 9us; 1us; 9us; 1us; 10us; 1us; 10us; 1us; 11us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 17us; 1us; 17us; 1us; 18us; 1us; 19us; 1us; 20us; 1us; 21us; 4us; 22us; 23us; 28us; 29us; 1us; 22us; 2us; 23us; 29us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 25us; 1us; 25us; 2us; 25us; 202us; 1us; 25us; 1us; 25us; 1us; 26us; 1us; 27us; 1us; 28us; 1us; 29us; 1us; 29us; 1us; 30us; 1us; 31us; 1us; 32us; 1us; 33us; 1us; 34us; 1us; 35us; 1us; 36us; 1us; 37us; 1us; 38us; 1us; 38us; 1us; 38us; 1us; 40us; 1us; 40us; 2us; 41us; 42us; 2us; 41us; 42us; 1us; 41us; 1us; 41us; 2us; 42us; 268us; 1us; 42us; 1us; 42us; 2us; 43us; 44us; 9us; 43us; 44us; 48us; 52us; 57us; 59us; 61us; 76us; 79us; 5us; 43us; 44us; 57us; 59us; 61us; 2us; 43us; 44us; 2us; 43us; 44us; 1us; 43us; 1us; 43us; 2us; 44us; 268us; 1us; 44us; 1us; 44us; 2us; 45us; 46us; 1us; 46us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 50us; 1us; 50us; 1us; 51us; 1us; 51us; 1us; 51us; 1us; 51us; 1us; 52us; 1us; 52us; 1us; 52us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 3us; 56us; 58us; 60us; 3us; 56us; 58us; 60us; 4us; 56us; 58us; 63us; 64us; 1us; 56us; 1us; 56us; 3us; 57us; 59us; 61us; 3us; 57us; 59us; 61us; 3us; 57us; 59us; 61us; 4us; 57us; 59us; 63us; 64us; 1us; 57us; 1us; 57us; 1us; 60us; 1us; 60us; 1us; 61us; 1us; 61us; 1us; 63us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 64us; 2us; 65us; 66us; 1us; 66us; 2us; 67us; 68us; 2us; 67us; 68us; 1us; 67us; 1us; 67us; 2us; 68us; 151us; 1us; 68us; 1us; 68us; 2us; 69us; 70us; 1us; 70us; 1us; 70us; 4us; 71us; 72us; 73us; 74us; 4us; 71us; 72us; 73us; 74us; 4us; 71us; 72us; 73us; 74us; 2us; 71us; 73us; 1us; 71us; 3us; 72us; 74us; 151us; 2us; 72us; 74us; 1us; 72us; 2us; 73us; 151us; 1us; 73us; 2us; 74us; 151us; 1us; 74us; 1us; 75us; 1us; 75us; 1us; 75us; 1us; 75us; 1us; 75us; 1us; 75us; 1us; 76us; 1us; 76us; 1us; 76us; 1us; 76us; 1us; 76us; 1us; 76us; 1us; 77us; 1us; 77us; 1us; 77us; 1us; 77us; 1us; 77us; 1us; 77us; 1us; 78us; 1us; 78us; 2us; 78us; 202us; 1us; 78us; 2us; 78us; 81us; 1us; 78us; 1us; 79us; 1us; 79us; 2us; 79us; 202us; 1us; 79us; 2us; 79us; 81us; 1us; 79us; 1us; 80us; 1us; 81us; 1us; 82us; 1us; 82us; 1us; 82us; 1us; 82us; 1us; 83us; 1us; 83us; 1us; 83us; 1us; 83us; 1us; 83us; 1us; 83us; 1us; 84us; 1us; 84us; 2us; 84us; 202us; 1us; 84us; 1us; 84us; 1us; 84us; 1us; 84us; 1us; 85us; 1us; 86us; 1us; 87us; 2us; 88us; 90us; 2us; 89us; 91us; 1us; 90us; 1us; 90us; 1us; 90us; 1us; 90us; 1us; 91us; 1us; 91us; 1us; 91us; 1us; 91us; 1us; 92us; 1us; 92us; 1us; 92us; 1us; 92us; 1us; 93us; 1us; 93us; 1us; 93us; 1us; 93us; 1us; 94us; 1us; 95us; 1us; 95us; 1us; 95us; 1us; 96us; 1us; 96us; 1us; 96us; 1us; 97us; 1us; 97us; 1us; 97us; 2us; 98us; 99us; 1us; 99us; 1us; 99us; 1us; 106us; 1us; 107us; 1us; 108us; 3us; 109us; 110us; 266us; 1us; 110us; 1us; 111us; 1us; 112us; 1us; 113us; 1us; 114us; 1us; 115us; 1us; 115us; 1us; 115us; 3us; 116us; 117us; 118us; 1us; 116us; 2us; 116us; 151us; 1us; 116us; 3us; 117us; 138us; 144us; 1us; 117us; 3us; 118us; 137us; 142us; 1us; 118us; 1us; 119us; 2us; 119us; 132us; 1us; 119us; 1us; 120us; 2us; 120us; 132us; 1us; 120us; 1us; 121us; 1us; 121us; 1us; 121us; 1us; 122us; 2us; 122us; 126us; 1us; 122us; 7us; 123us; 134us; 136us; 141us; 143us; 145us; 147us; 2us; 123us; 136us; 1us; 123us; 2us; 124us; 126us; 1us; 124us; 2us; 124us; 129us; 1us; 124us; 2us; 124us; 129us; 1us; 124us; 1us; 124us; 1us; 124us; 2us; 124us; 126us; 1us; 126us; 1us; 127us; 1us; 128us; 1us; 128us; 1us; 129us; 1us; 129us; 1us; 130us; 1us; 131us; 1us; 131us; 1us; 132us; 1us; 132us; 1us; 133us; 1us; 133us; 1us; 133us; 1us; 135us; 1us; 136us; 2us; 137us; 142us; 2us; 138us; 144us; 3us; 139us; 148us; 149us; 1us; 140us; 1us; 140us; 1us; 141us; 1us; 141us; 1us; 142us; 1us; 142us; 1us; 143us; 1us; 143us; 1us; 144us; 1us; 144us; 2us; 145us; 147us; 1us; 145us; 1us; 146us; 1us; 146us; 1us; 146us; 1us; 147us; 2us; 148us; 149us; 1us; 148us; 1us; 149us; 1us; 150us; 1us; 151us; 1us; 152us; 2us; 152us; 154us; 1us; 152us; 1us; 153us; 1us; 154us; 1us; 154us; 2us; 155us; 156us; 3us; 155us; 156us; 268us; 1us; 156us; 4us; 156us; 161us; 162us; 163us; 4us; 157us; 161us; 162us; 163us; 1us; 158us; 1us; 159us; 1us; 160us; 4us; 161us; 162us; 163us; 165us; 4us; 161us; 162us; 163us; 236us; 4us; 161us; 162us; 163us; 237us; 5us; 161us; 162us; 163us; 240us; 241us; 5us; 161us; 162us; 163us; 244us; 245us; 1us; 161us; 1us; 162us; 1us; 163us; 1us; 166us; 1us; 167us; 1us; 168us; 1us; 169us; 1us; 170us; 1us; 171us; 1us; 172us; 1us; 173us; 1us; 174us; 1us; 175us; 1us; 176us; 1us; 176us; 1us; 177us; 1us; 177us; 1us; 178us; 1us; 178us; 1us; 179us; 1us; 180us; 1us; 181us; 1us; 181us; 1us; 182us; 1us; 183us; 1us; 184us; 1us; 185us; 1us; 186us; 1us; 187us; 1us; 188us; 1us; 189us; 1us; 190us; 1us; 191us; 1us; 192us; 1us; 193us; 1us; 194us; 2us; 194us; 241us; 2us; 194us; 244us; 1us; 194us; 2us; 194us; 202us; 1us; 194us; 1us; 194us; 1us; 194us; 1us; 194us; 2us; 195us; 213us; 1us; 195us; 2us; 195us; 202us; 1us; 195us; 1us; 195us; 1us; 195us; 1us; 195us; 2us; 196us; 197us; 3us; 196us; 197us; 202us; 2us; 196us; 197us; 2us; 196us; 197us; 2us; 196us; 197us; 3us; 196us; 197us; 204us; 1us; 196us; 1us; 196us; 1us; 197us; 3us; 198us; 199us; 200us; 1us; 198us; 2us; 198us; 202us; 1us; 198us; 1us; 198us; 2us; 199us; 200us; 1us; 199us; 1us; 199us; 2us; 200us; 268us; 1us; 200us; 1us; 200us; 1us; 202us; 1us; 204us; 1us; 205us; 1us; 205us; 1us; 205us; 2us; 206us; 207us; 1us; 207us; 2us; 208us; 209us; 2us; 208us; 209us; 3us; 208us; 209us; 211us; 1us; 208us; 2us; 209us; 212us; 1us; 209us; 1us; 209us; 1us; 209us; 1us; 209us; 1us; 210us; 1us; 211us; 1us; 212us; 2us; 212us; 273us; 1us; 212us; 1us; 212us; 1us; 213us; 1us; 213us; 1us; 213us; 1us; 213us; 1us; 213us; 1us; 214us; 1us; 214us; 1us; 214us; 1us; 214us; 2us; 215us; 216us; 1us; 215us; 1us; 215us; 1us; 215us; 1us; 216us; 1us; 216us; 1us; 216us; 1us; 216us; 1us; 217us; 1us; 217us; 1us; 217us; 1us; 217us; 1us; 218us; 1us; 218us; 1us; 218us; 1us; 218us; 3us; 219us; 220us; 221us; 3us; 219us; 220us; 221us; 1us; 219us; 1us; 219us; 1us; 220us; 1us; 220us; 1us; 220us; 1us; 220us; 1us; 221us; 1us; 221us; 1us; 221us; 1us; 221us; 2us; 222us; 223us; 1us; 223us; 1us; 223us; 1us; 224us; 1us; 225us; 1us; 226us; 1us; 227us; 1us; 228us; 1us; 229us; 2us; 230us; 231us; 2us; 230us; 231us; 2us; 230us; 231us; 2us; 230us; 231us; 1us; 231us; 1us; 231us; 2us; 232us; 233us; 2us; 232us; 233us; 2us; 232us; 233us; 1us; 233us; 1us; 233us; 2us; 234us; 235us; 1us; 234us; 1us; 234us; 1us; 235us; 1us; 235us; 1us; 235us; 1us; 235us; 2us; 237us; 239us; 2us; 237us; 241us; 1us; 237us; 4us; 238us; 239us; 240us; 241us; 1us; 238us; 1us; 239us; 2us; 240us; 241us; 1us; 240us; 1us; 241us; 4us; 244us; 245us; 246us; 247us; 4us; 244us; 245us; 246us; 247us; 2us; 244us; 245us; 1us; 244us; 1us; 244us; 1us; 245us; 1us; 246us; 1us; 246us; 1us; 247us; 1us; 248us; 1us; 248us; 1us; 248us; 1us; 249us; 1us; 249us; 2us; 249us; 251us; 2us; 249us; 252us; 1us; 249us; 1us; 249us; 1us; 249us; 1us; 249us; 1us; 250us; 1us; 251us; 1us; 252us; 1us; 252us; 1us; 252us; 1us; 252us; 2us; 253us; 254us; 1us; 254us; 1us; 254us; 1us; 255us; 1us; 255us; 1us; 255us; 1us; 256us; 1us; 257us; 2us; 258us; 262us; 3us; 258us; 262us; 270us; 1us; 259us; 1us; 260us; 1us; 261us; 1us; 262us; 1us; 262us; 1us; 263us; 1us; 264us; 1us; 265us; 1us; 266us; 3us; 266us; 283us; 284us; 1us; 266us; 1us; 266us; 1us; 267us; 1us; 268us; 1us; 270us; 1us; 270us; 2us; 271us; 272us; 1us; 272us; 2us; 273us; 286us; 2us; 273us; 292us; 2us; 273us; 293us; 2us; 273us; 294us; 2us; 273us; 295us; 1us; 273us; 2us; 274us; 275us; 2us; 274us; 275us; 2us; 274us; 275us; 1us; 275us; 1us; 275us; 1us; 276us; 1us; 277us; 1us; 278us; 1us; 279us; 1us; 280us; 1us; 281us; 1us; 282us; 1us; 282us; 1us; 284us; 1us; 284us; 1us; 285us; 1us; 286us; 1us; 286us; 1us; 286us; 1us; 287us; 1us; 288us; 1us; 289us; 1us; 290us; 1us; 291us; 1us; 292us; 1us; 292us; 1us; 293us; 1us; 293us; 1us; 294us; 1us; 294us; 1us; 294us; 1us; 295us; 1us; 295us; 1us; 295us; 1us; 296us; 1us; 296us; 1us; 296us; 1us; 296us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 7us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 26us; 28us; 30us; 32us; 36us; 38us; 40us; 42us; 44us; 46us; 48us; 50us; 52us; 54us; 56us; 58us; 60us; 62us; 64us; 66us; 68us; 70us; 72us; 74us; 76us; 78us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 107us; 109us; 112us; 114us; 116us; 118us; 120us; 122us; 125us; 127us; 129us; 131us; 133us; 135us; 137us; 139us; 141us; 143us; 145us; 147us; 149us; 151us; 153us; 155us; 157us; 159us; 161us; 163us; 165us; 168us; 171us; 173us; 175us; 178us; 180us; 182us; 185us; 195us; 201us; 204us; 207us; 209us; 211us; 214us; 216us; 218us; 221us; 223us; 225us; 227us; 229us; 231us; 233us; 235us; 237us; 239us; 241us; 243us; 245us; 247us; 249us; 251us; 253us; 255us; 257us; 259us; 261us; 263us; 265us; 267us; 269us; 271us; 273us; 277us; 281us; 286us; 288us; 290us; 294us; 298us; 302us; 307us; 309us; 311us; 313us; 315us; 317us; 319us; 321us; 323us; 325us; 327us; 329us; 331us; 334us; 336us; 339us; 342us; 344us; 346us; 349us; 351us; 353us; 356us; 358us; 360us; 365us; 370us; 375us; 378us; 380us; 384us; 387us; 389us; 392us; 394us; 397us; 399us; 401us; 403us; 405us; 407us; 409us; 411us; 413us; 415us; 417us; 419us; 421us; 423us; 425us; 427us; 429us; 431us; 433us; 435us; 437us; 439us; 442us; 444us; 447us; 449us; 451us; 453us; 456us; 458us; 461us; 463us; 465us; 467us; 469us; 471us; 473us; 475us; 477us; 479us; 481us; 483us; 485us; 487us; 489us; 491us; 494us; 496us; 498us; 500us; 502us; 504us; 506us; 508us; 511us; 514us; 516us; 518us; 520us; 522us; 524us; 526us; 528us; 530us; 532us; 534us; 536us; 538us; 540us; 542us; 544us; 546us; 548us; 550us; 552us; 554us; 556us; 558us; 560us; 562us; 564us; 566us; 569us; 571us; 573us; 575us; 577us; 579us; 583us; 585us; 587us; 589us; 591us; 593us; 595us; 597us; 599us; 603us; 605us; 608us; 610us; 614us; 616us; 620us; 622us; 624us; 627us; 629us; 631us; 634us; 636us; 638us; 640us; 642us; 644us; 647us; 649us; 657us; 660us; 662us; 665us; 667us; 670us; 672us; 675us; 677us; 679us; 681us; 684us; 686us; 688us; 690us; 692us; 694us; 696us; 698us; 700us; 702us; 704us; 706us; 708us; 710us; 712us; 714us; 716us; 719us; 722us; 726us; 728us; 730us; 732us; 734us; 736us; 738us; 740us; 742us; 744us; 746us; 749us; 751us; 753us; 755us; 757us; 759us; 762us; 764us; 766us; 768us; 770us; 772us; 775us; 777us; 779us; 781us; 783us; 786us; 790us; 792us; 797us; 802us; 804us; 806us; 808us; 813us; 818us; 823us; 829us; 835us; 837us; 839us; 841us; 843us; 845us; 847us; 849us; 851us; 853us; 855us; 857us; 859us; 861us; 863us; 865us; 867us; 869us; 871us; 873us; 875us; 877us; 879us; 881us; 883us; 885us; 887us; 889us; 891us; 893us; 895us; 897us; 899us; 901us; 903us; 905us; 907us; 910us; 913us; 915us; 918us; 920us; 922us; 924us; 926us; 929us; 931us; 934us; 936us; 938us; 940us; 942us; 945us; 949us; 952us; 955us; 958us; 962us; 964us; 966us; 968us; 972us; 974us; 977us; 979us; 981us; 984us; 986us; 988us; 991us; 993us; 995us; 997us; 999us; 1001us; 1003us; 1005us; 1008us; 1010us; 1013us; 1016us; 1020us; 1022us; 1025us; 1027us; 1029us; 1031us; 1033us; 1035us; 1037us; 1039us; 1042us; 1044us; 1046us; 1048us; 1050us; 1052us; 1054us; 1056us; 1058us; 1060us; 1062us; 1064us; 1067us; 1069us; 1071us; 1073us; 1075us; 1077us; 1079us; 1081us; 1083us; 1085us; 1087us; 1089us; 1091us; 1093us; 1095us; 1097us; 1101us; 1105us; 1107us; 1109us; 1111us; 1113us; 1115us; 1117us; 1119us; 1121us; 1123us; 1125us; 1128us; 1130us; 1132us; 1134us; 1136us; 1138us; 1140us; 1142us; 1144us; 1147us; 1150us; 1153us; 1156us; 1158us; 1160us; 1163us; 1166us; 1169us; 1171us; 1173us; 1176us; 1178us; 1180us; 1182us; 1184us; 1186us; 1188us; 1191us; 1194us; 1196us; 1201us; 1203us; 1205us; 1208us; 1210us; 1212us; 1217us; 1222us; 1225us; 1227us; 1229us; 1231us; 1233us; 1235us; 1237us; 1239us; 1241us; 1243us; 1245us; 1247us; 1250us; 1253us; 1255us; 1257us; 1259us; 1261us; 1263us; 1265us; 1267us; 1269us; 1271us; 1273us; 1276us; 1278us; 1280us; 1282us; 1284us; 1286us; 1288us; 1290us; 1293us; 1297us; 1299us; 1301us; 1303us; 1305us; 1307us; 1309us; 1311us; 1313us; 1315us; 1319us; 1321us; 1323us; 1325us; 1327us; 1329us; 1331us; 1334us; 1336us; 1339us; 1342us; 1345us; 1348us; 1351us; 1353us; 1356us; 1359us; 1362us; 1364us; 1366us; 1368us; 1370us; 1372us; 1374us; 1376us; 1378us; 1380us; 1382us; 1384us; 1386us; 1388us; 1390us; 1392us; 1394us; 1396us; 1398us; 1400us; 1402us; 1404us; 1406us; 1408us; 1410us; 1412us; 1414us; 1416us; 1418us; 1420us; 1422us; 1424us; 1426us; 1428us; 1430us; |]
let _fsyacc_action_rows = 617
let _fsyacc_actionTableElements = [|1us; 16387us; 76us; 15us; 0us; 49152us; 15us; 16389us; 46us; 78us; 47us; 97us; 57us; 203us; 58us; 209us; 61us; 233us; 62us; 185us; 63us; 167us; 64us; 179us; 65us; 155us; 66us; 229us; 67us; 55us; 68us; 49us; 69us; 111us; 70us; 122us; 71us; 73us; 2us; 32768us; 72us; 12us; 73us; 38us; 1us; 32768us; 123us; 5us; 0us; 16385us; 1us; 32768us; 123us; 7us; 0us; 16386us; 1us; 16387us; 76us; 15us; 0us; 16388us; 15us; 16389us; 46us; 78us; 47us; 97us; 57us; 203us; 58us; 209us; 61us; 233us; 62us; 185us; 63us; 167us; 64us; 179us; 65us; 155us; 66us; 229us; 67us; 55us; 68us; 49us; 69us; 111us; 70us; 122us; 71us; 73us; 0us; 16390us; 1us; 32768us; 79us; 13us; 33us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 0us; 16391us; 4us; 32768us; 47us; 23us; 109us; 40us; 115us; 25us; 122us; 27us; 1us; 32768us; 75us; 17us; 1us; 32768us; 122us; 18us; 0us; 16392us; 2us; 32768us; 115us; 25us; 122us; 27us; 1us; 32768us; 75us; 21us; 1us; 32768us; 122us; 22us; 0us; 16393us; 1us; 32768us; 115us; 24us; 0us; 16394us; 0us; 16395us; 0us; 16396us; 1us; 32768us; 82us; 28us; 1us; 32768us; 122us; 29us; 1us; 32768us; 82us; 30us; 1us; 32768us; 122us; 31us; 1us; 32768us; 86us; 32us; 1us; 32768us; 117us; 33us; 1us; 32768us; 82us; 34us; 1us; 32768us; 117us; 35us; 1us; 32768us; 82us; 36us; 1us; 32768us; 117us; 37us; 0us; 16397us; 1us; 32768us; 109us; 40us; 0us; 16398us; 3us; 16400us; 119us; 47us; 121us; 46us; 122us; 45us; 1us; 32768us; 110us; 42us; 0us; 16399us; 3us; 16400us; 119us; 47us; 121us; 46us; 122us; 45us; 0us; 16401us; 0us; 16402us; 0us; 16403us; 0us; 16404us; 0us; 16405us; 4us; 32768us; 46us; 78us; 70us; 122us; 71us; 73us; 109us; 51us; 0us; 16406us; 3us; 32768us; 46us; 78us; 70us; 122us; 71us; 73us; 1us; 32768us; 110us; 53us; 0us; 16407us; 0us; 16408us; 1us; 32768us; 121us; 56us; 0us; 16585us; 2us; 32768us; 79us; 58us; 122us; 424us; 17us; 32768us; 2us; 584us; 3us; 585us; 9us; 607us; 10us; 610us; 13us; 613us; 77us; 590us; 78us; 589us; 95us; 603us; 107us; 605us; 111us; 595us; 115us; 588us; 116us; 587us; 117us; 586us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 564us; 0us; 16409us; 0us; 16410us; 0us; 16411us; 0us; 16412us; 1us; 32768us; 110us; 64us; 0us; 16413us; 0us; 16414us; 0us; 16415us; 0us; 16416us; 0us; 16417us; 0us; 16418us; 0us; 16419us; 0us; 16420us; 0us; 16421us; 1us; 32768us; 86us; 74us; 1us; 16423us; 113us; 76us; 0us; 16422us; 1us; 16423us; 113us; 76us; 0us; 16424us; 1us; 32768us; 122us; 79us; 18us; 32768us; 2us; 584us; 3us; 585us; 9us; 607us; 10us; 610us; 13us; 613us; 77us; 590us; 78us; 589us; 79us; 80us; 95us; 603us; 107us; 605us; 111us; 595us; 115us; 588us; 116us; 587us; 117us; 586us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 564us; 33us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 0us; 16425us; 18us; 32768us; 2us; 584us; 3us; 585us; 9us; 607us; 10us; 610us; 13us; 613us; 77us; 590us; 78us; 589us; 79us; 83us; 95us; 603us; 107us; 605us; 111us; 595us; 115us; 588us; 116us; 587us; 117us; 586us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 564us; 33us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 0us; 16426us; 1us; 32768us; 46us; 88us; 6us; 32768us; 46us; 88us; 47us; 103us; 62us; 191us; 63us; 173us; 69us; 115us; 70us; 128us; 2us; 32768us; 46us; 88us; 70us; 128us; 1us; 32768us; 122us; 89us; 18us; 32768us; 2us; 584us; 3us; 585us; 9us; 607us; 10us; 610us; 13us; 613us; 77us; 590us; 78us; 589us; 79us; 90us; 95us; 603us; 107us; 605us; 111us; 595us; 115us; 588us; 116us; 587us; 117us; 586us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 564us; 33us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 0us; 16427us; 18us; 32768us; 2us; 584us; 3us; 585us; 9us; 607us; 10us; 610us; 13us; 613us; 77us; 590us; 78us; 589us; 79us; 93us; 95us; 603us; 107us; 605us; 111us; 595us; 115us; 588us; 116us; 587us; 117us; 586us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 564us; 33us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 0us; 16428us; 2us; 16429us; 46us; 78us; 71us; 73us; 0us; 16430us; 1us; 32768us; 122us; 98us; 1us; 32768us; 86us; 99us; 0us; 16509us; 1us; 32768us; 79us; 101us; 1us; 16433us; 114us; 109us; 0us; 16431us; 1us; 32768us; 122us; 104us; 1us; 32768us; 86us; 105us; 0us; 16509us; 1us; 32768us; 79us; 107us; 1us; 16433us; 114us; 109us; 0us; 16432us; 1us; 16433us; 114us; 109us; 0us; 16434us; 1us; 32768us; 121us; 112us; 1us; 32768us; 86us; 113us; 3us; 32768us; 50us; 119us; 51us; 120us; 52us; 121us; 0us; 16435us; 1us; 32768us; 121us; 116us; 1us; 32768us; 86us; 117us; 3us; 32768us; 50us; 119us; 51us; 120us; 52us; 121us; 0us; 16436us; 0us; 16437us; 0us; 16438us; 0us; 16439us; 1us; 32768us; 121us; 123us; 1us; 16446us; 86us; 133us; 3us; 16442us; 79us; 125us; 111us; 138us; 122us; 137us; 1us; 32768us; 121us; 145us; 0us; 16440us; 1us; 32768us; 70us; 128us; 1us; 32768us; 121us; 129us; 1us; 16446us; 86us; 135us; 3us; 16443us; 79us; 131us; 111us; 138us; 122us; 137us; 1us; 32768us; 121us; 145us; 0us; 16441us; 7us; 32768us; 107us; 241us; 109us; 244us; 111us; 238us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 563us; 0us; 16444us; 7us; 32768us; 107us; 241us; 109us; 244us; 111us; 238us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 563us; 0us; 16445us; 0us; 16447us; 1us; 32768us; 122us; 139us; 1us; 32768us; 86us; 140us; 7us; 32768us; 107us; 241us; 109us; 244us; 111us; 238us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 563us; 1us; 32768us; 112us; 142us; 0us; 16448us; 2us; 16449us; 70us; 122us; 71us; 73us; 0us; 16450us; 1us; 32768us; 86us; 146us; 18us; 32768us; 1us; 257us; 2us; 251us; 3us; 252us; 6us; 313us; 82us; 258us; 90us; 147us; 91us; 256us; 95us; 279us; 97us; 273us; 99us; 259us; 107us; 276us; 109us; 270us; 111us; 262us; 117us; 325us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 253us; 17us; 32768us; 1us; 257us; 2us; 251us; 3us; 252us; 6us; 313us; 82us; 258us; 91us; 256us; 95us; 279us; 97us; 273us; 99us; 259us; 107us; 276us; 109us; 270us; 111us; 262us; 117us; 325us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 253us; 0us; 16451us; 18us; 32768us; 1us; 257us; 2us; 251us; 3us; 252us; 6us; 313us; 82us; 258us; 90us; 150us; 91us; 256us; 95us; 279us; 97us; 273us; 99us; 259us; 107us; 276us; 109us; 270us; 111us; 262us; 117us; 325us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 253us; 17us; 32768us; 1us; 257us; 2us; 251us; 3us; 252us; 6us; 313us; 82us; 258us; 91us; 256us; 95us; 279us; 97us; 273us; 99us; 259us; 107us; 276us; 109us; 270us; 111us; 262us; 117us; 325us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 253us; 0us; 16452us; 1us; 16453us; 81us; 153us; 1us; 32768us; 121us; 145us; 0us; 16454us; 1us; 32768us; 118us; 156us; 1us; 32768us; 79us; 157us; 18us; 32768us; 1us; 257us; 2us; 251us; 3us; 252us; 6us; 313us; 82us; 258us; 91us; 256us; 95us; 279us; 97us; 273us; 99us; 259us; 102us; 158us; 107us; 276us; 109us; 270us; 111us; 262us; 117us; 325us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 253us; 18us; 32768us; 1us; 257us; 2us; 251us; 3us; 252us; 6us; 313us; 82us; 258us; 90us; 159us; 91us; 256us; 95us; 279us; 97us; 273us; 99us; 259us; 107us; 276us; 109us; 270us; 111us; 262us; 117us; 325us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 253us; 0us; 16455us; 18us; 32768us; 1us; 257us; 2us; 251us; 3us; 252us; 6us; 313us; 82us; 258us; 91us; 256us; 95us; 279us; 97us; 273us; 99us; 259us; 102us; 161us; 107us; 276us; 109us; 270us; 111us; 262us; 117us; 325us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 253us; 18us; 32768us; 1us; 257us; 2us; 251us; 3us; 252us; 6us; 313us; 82us; 258us; 90us; 162us; 91us; 256us; 95us; 279us; 97us; 273us; 99us; 259us; 107us; 276us; 109us; 270us; 111us; 262us; 117us; 325us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 253us; 0us; 16456us; 18us; 32768us; 1us; 257us; 2us; 251us; 3us; 252us; 6us; 313us; 82us; 258us; 90us; 164us; 91us; 256us; 95us; 279us; 97us; 273us; 99us; 259us; 107us; 276us; 109us; 270us; 111us; 262us; 117us; 325us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 253us; 0us; 16457us; 18us; 32768us; 1us; 257us; 2us; 251us; 3us; 252us; 6us; 313us; 82us; 258us; 90us; 166us; 91us; 256us; 95us; 279us; 97us; 273us; 99us; 259us; 107us; 276us; 109us; 270us; 111us; 262us; 117us; 325us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 253us; 0us; 16458us; 1us; 32768us; 122us; 168us; 1us; 32768us; 75us; 169us; 1us; 32768us; 119us; 170us; 1us; 32768us; 86us; 171us; 0us; 16509us; 0us; 16459us; 1us; 32768us; 122us; 174us; 1us; 32768us; 75us; 175us; 1us; 32768us; 119us; 176us; 1us; 32768us; 86us; 177us; 0us; 16509us; 0us; 16460us; 1us; 32768us; 122us; 180us; 1us; 32768us; 86us; 181us; 0us; 16509us; 1us; 32768us; 79us; 183us; 33us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 0us; 16461us; 1us; 32768us; 120us; 186us; 0us; 16585us; 2us; 32768us; 109us; 188us; 122us; 424us; 1us; 32768us; 32us; 199us; 2us; 32768us; 32us; 199us; 110us; 190us; 0us; 16462us; 1us; 32768us; 120us; 192us; 0us; 16585us; 2us; 32768us; 109us; 194us; 122us; 424us; 1us; 32768us; 32us; 199us; 2us; 32768us; 32us; 199us; 110us; 196us; 0us; 16463us; 0us; 16464us; 0us; 16465us; 1us; 32768us; 120us; 200us; 1us; 32768us; 86us; 201us; 0us; 16509us; 0us; 16466us; 1us; 32768us; 118us; 204us; 1us; 32768us; 79us; 205us; 33us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 5us; 32768us; 0us; 219us; 53us; 218us; 54us; 220us; 55us; 216us; 56us; 217us; 33us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 0us; 16467us; 1us; 32768us; 118us; 210us; 0us; 16585us; 2us; 32768us; 79us; 212us; 122us; 424us; 33us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 5us; 32768us; 0us; 219us; 53us; 218us; 54us; 220us; 55us; 216us; 56us; 217us; 33us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 0us; 16468us; 0us; 16469us; 0us; 16470us; 0us; 16471us; 1us; 16472us; 36us; 221us; 1us; 16473us; 36us; 225us; 1us; 32768us; 109us; 222us; 33us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 1us; 32768us; 110us; 224us; 0us; 16474us; 1us; 32768us; 109us; 226us; 33us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 1us; 32768us; 110us; 228us; 0us; 16475us; 1us; 32768us; 122us; 230us; 1us; 32768us; 86us; 231us; 0us; 16509us; 0us; 16476us; 1us; 32768us; 121us; 234us; 1us; 32768us; 79us; 235us; 1us; 32768us; 122us; 236us; 0us; 16477us; 0us; 16478us; 7us; 32768us; 107us; 241us; 109us; 244us; 111us; 238us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 563us; 1us; 32768us; 112us; 240us; 0us; 16479us; 7us; 32768us; 107us; 241us; 109us; 244us; 111us; 238us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 563us; 1us; 32768us; 108us; 243us; 0us; 16480us; 7us; 32768us; 107us; 241us; 109us; 244us; 111us; 238us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 563us; 1us; 32768us; 110us; 246us; 0us; 16481us; 1us; 16482us; 91us; 248us; 7us; 32768us; 107us; 241us; 109us; 244us; 111us; 238us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 563us; 0us; 16483us; 0us; 16490us; 0us; 16491us; 0us; 16492us; 2us; 16493us; 80us; 254us; 87us; 565us; 0us; 16494us; 0us; 16495us; 0us; 16496us; 0us; 16497us; 0us; 16498us; 0us; 16509us; 1us; 32768us; 100us; 261us; 0us; 16499us; 17us; 32768us; 1us; 257us; 2us; 251us; 3us; 252us; 6us; 313us; 82us; 258us; 91us; 256us; 95us; 279us; 97us; 273us; 99us; 259us; 107us; 276us; 109us; 270us; 111us; 262us; 117us; 325us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 253us; 17us; 32768us; 1us; 257us; 2us; 251us; 3us; 252us; 6us; 313us; 82us; 258us; 91us; 256us; 95us; 279us; 97us; 273us; 99us; 259us; 107us; 276us; 109us; 270us; 111us; 262us; 117us; 325us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 253us; 18us; 32768us; 1us; 257us; 2us; 251us; 3us; 252us; 6us; 313us; 82us; 258us; 91us; 256us; 95us; 279us; 97us; 273us; 99us; 259us; 107us; 276us; 109us; 270us; 111us; 262us; 112us; 265us; 117us; 325us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 253us; 0us; 16500us; 2us; 16522us; 5us; 321us; 112us; 267us; 0us; 16501us; 2us; 16521us; 4us; 317us; 112us; 269us; 0us; 16502us; 2us; 32768us; 82us; 300us; 122us; 301us; 2us; 32768us; 89us; 303us; 110us; 272us; 0us; 16503us; 2us; 32768us; 82us; 300us; 122us; 301us; 2us; 32768us; 89us; 303us; 98us; 275us; 0us; 16504us; 17us; 32768us; 1us; 257us; 2us; 251us; 3us; 252us; 6us; 313us; 82us; 258us; 91us; 256us; 95us; 279us; 97us; 273us; 99us; 259us; 107us; 276us; 109us; 270us; 111us; 262us; 117us; 325us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 253us; 1us; 32768us; 108us; 278us; 0us; 16505us; 0us; 16509us; 18us; 32768us; 1us; 257us; 2us; 251us; 3us; 252us; 6us; 313us; 82us; 258us; 91us; 256us; 95us; 279us; 96us; 281us; 97us; 273us; 99us; 259us; 107us; 276us; 109us; 270us; 111us; 262us; 117us; 325us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 253us; 0us; 16506us; 4us; 16518us; 4us; 315us; 5us; 319us; 85us; 323us; 88us; 283us; 16us; 32768us; 1us; 257us; 2us; 251us; 3us; 252us; 82us; 258us; 91us; 256us; 95us; 279us; 97us; 273us; 99us; 259us; 107us; 276us; 109us; 270us; 111us; 262us; 117us; 309us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 253us; 0us; 16507us; 18us; 32768us; 1us; 257us; 2us; 251us; 3us; 252us; 6us; 313us; 82us; 258us; 91us; 256us; 92us; 286us; 95us; 279us; 97us; 273us; 99us; 259us; 107us; 276us; 109us; 270us; 111us; 262us; 117us; 325us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 253us; 2us; 32768us; 82us; 295us; 122us; 296us; 2us; 32768us; 89us; 298us; 94us; 288us; 2us; 32768us; 82us; 295us; 122us; 296us; 2us; 32768us; 89us; 298us; 94us; 290us; 17us; 32768us; 1us; 257us; 2us; 251us; 3us; 252us; 6us; 313us; 82us; 258us; 91us; 256us; 95us; 279us; 97us; 273us; 99us; 259us; 107us; 276us; 109us; 270us; 111us; 262us; 117us; 325us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 253us; 1us; 32768us; 93us; 292us; 0us; 16509us; 17us; 16508us; 1us; 257us; 2us; 251us; 3us; 252us; 6us; 313us; 82us; 258us; 91us; 256us; 95us; 279us; 97us; 273us; 99us; 259us; 107us; 276us; 109us; 270us; 111us; 262us; 117us; 325us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 253us; 0us; 16510us; 0us; 16511us; 1us; 32768us; 80us; 297us; 0us; 16512us; 17us; 32768us; 1us; 257us; 2us; 251us; 3us; 252us; 6us; 313us; 82us; 258us; 91us; 256us; 95us; 279us; 97us; 273us; 99us; 259us; 107us; 276us; 109us; 270us; 111us; 262us; 117us; 325us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 253us; 0us; 16513us; 0us; 16514us; 1us; 32768us; 80us; 302us; 0us; 16515us; 1us; 32768us; 122us; 305us; 0us; 16516us; 1us; 32768us; 79us; 306us; 17us; 32768us; 1us; 257us; 2us; 251us; 3us; 252us; 6us; 313us; 82us; 258us; 91us; 256us; 95us; 279us; 97us; 273us; 99us; 259us; 107us; 276us; 109us; 270us; 111us; 262us; 117us; 325us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 253us; 0us; 16517us; 0us; 16519us; 0us; 16520us; 1us; 16521us; 4us; 317us; 1us; 16522us; 5us; 321us; 1us; 16523us; 85us; 329us; 17us; 32768us; 1us; 257us; 2us; 251us; 3us; 252us; 6us; 313us; 82us; 258us; 91us; 256us; 95us; 279us; 97us; 273us; 99us; 259us; 107us; 276us; 109us; 270us; 111us; 262us; 117us; 325us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 253us; 0us; 16524us; 15us; 32768us; 1us; 257us; 2us; 251us; 3us; 252us; 82us; 258us; 91us; 256us; 95us; 279us; 97us; 273us; 99us; 259us; 107us; 276us; 109us; 270us; 111us; 262us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 253us; 0us; 16525us; 15us; 32768us; 1us; 257us; 2us; 251us; 3us; 252us; 82us; 258us; 91us; 256us; 95us; 279us; 97us; 273us; 99us; 259us; 107us; 276us; 109us; 270us; 111us; 262us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 253us; 0us; 16526us; 15us; 32768us; 1us; 257us; 2us; 251us; 3us; 252us; 82us; 258us; 91us; 256us; 95us; 279us; 97us; 273us; 99us; 259us; 107us; 276us; 109us; 270us; 111us; 262us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 253us; 0us; 16527us; 15us; 32768us; 1us; 257us; 2us; 251us; 3us; 252us; 82us; 258us; 91us; 256us; 95us; 279us; 97us; 273us; 99us; 259us; 107us; 276us; 109us; 270us; 111us; 262us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 253us; 0us; 16528us; 16us; 32768us; 1us; 257us; 2us; 251us; 3us; 252us; 82us; 258us; 91us; 256us; 95us; 279us; 97us; 273us; 99us; 259us; 107us; 276us; 109us; 270us; 111us; 262us; 117us; 328us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 253us; 0us; 16529us; 1us; 32768us; 85us; 326us; 15us; 32768us; 1us; 257us; 2us; 251us; 3us; 252us; 82us; 258us; 91us; 256us; 95us; 279us; 97us; 273us; 99us; 259us; 107us; 276us; 109us; 270us; 111us; 262us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 253us; 0us; 16530us; 0us; 16531us; 16us; 32768us; 1us; 257us; 2us; 251us; 3us; 252us; 82us; 258us; 91us; 256us; 95us; 279us; 97us; 273us; 99us; 259us; 107us; 276us; 109us; 270us; 111us; 262us; 117us; 331us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 253us; 0us; 16532us; 0us; 16533us; 0us; 16534us; 0us; 16535us; 34us; 32768us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 49us; 340us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 2us; 32768us; 90us; 338us; 110us; 336us; 0us; 16536us; 0us; 16537us; 34us; 32768us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 49us; 340us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 0us; 16538us; 17us; 32768us; 2us; 584us; 3us; 585us; 9us; 607us; 10us; 610us; 13us; 613us; 77us; 590us; 78us; 589us; 95us; 603us; 107us; 605us; 111us; 595us; 115us; 588us; 116us; 587us; 117us; 586us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 564us; 18us; 16539us; 2us; 584us; 3us; 585us; 9us; 607us; 10us; 610us; 13us; 613us; 77us; 590us; 78us; 589us; 79us; 342us; 95us; 603us; 107us; 605us; 111us; 595us; 115us; 588us; 116us; 587us; 117us; 586us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 564us; 33us; 32768us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 33us; 16540us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 33us; 16541us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 0us; 16542us; 0us; 16543us; 0us; 16544us; 33us; 16549us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 33us; 16620us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 33us; 16621us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 34us; 32768us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 389us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 96us; 517us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 34us; 32768us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 390us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 110us; 524us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 0us; 16545us; 0us; 16546us; 0us; 16547us; 0us; 16550us; 0us; 16551us; 0us; 16552us; 0us; 16553us; 0us; 16554us; 0us; 16555us; 0us; 16556us; 0us; 16557us; 0us; 16558us; 0us; 16559us; 1us; 32768us; 122us; 367us; 0us; 16560us; 1us; 32768us; 122us; 369us; 0us; 16561us; 1us; 32768us; 122us; 371us; 0us; 16562us; 0us; 16563us; 0us; 16564us; 1us; 32768us; 109us; 334us; 0us; 16565us; 0us; 16566us; 0us; 16567us; 0us; 16568us; 0us; 16569us; 0us; 16570us; 0us; 16571us; 0us; 16572us; 0us; 16573us; 0us; 16574us; 0us; 16575us; 0us; 16576us; 0us; 16577us; 1us; 32768us; 45us; 391us; 34us; 32768us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 45us; 391us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 2us; 32768us; 45us; 391us; 122us; 548us; 0us; 16585us; 2us; 32768us; 27us; 393us; 122us; 424us; 1us; 32768us; 109us; 334us; 1us; 32768us; 28us; 395us; 1us; 32768us; 109us; 334us; 0us; 16578us; 34us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 45us; 398us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 0us; 16585us; 2us; 32768us; 27us; 400us; 122us; 424us; 1us; 32768us; 109us; 334us; 1us; 32768us; 28us; 402us; 1us; 32768us; 109us; 334us; 0us; 16579us; 0us; 16585us; 2us; 32768us; 109us; 334us; 122us; 424us; 1us; 32768us; 32us; 407us; 1us; 32768us; 109us; 408us; 0us; 16587us; 2us; 32768us; 81us; 413us; 110us; 412us; 1us; 32768us; 110us; 411us; 0us; 16580us; 0us; 16581us; 5us; 32768us; 33us; 418us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 0us; 16585us; 2us; 32768us; 102us; 416us; 122us; 424us; 33us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 0us; 16582us; 18us; 32768us; 2us; 584us; 3us; 585us; 9us; 607us; 10us; 610us; 13us; 613us; 77us; 590us; 78us; 589us; 95us; 603us; 102us; 419us; 107us; 605us; 111us; 595us; 115us; 588us; 116us; 587us; 117us; 586us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 564us; 33us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 0us; 16583us; 18us; 32768us; 2us; 584us; 3us; 585us; 9us; 607us; 10us; 610us; 13us; 613us; 77us; 590us; 78us; 589us; 95us; 603us; 102us; 422us; 107us; 605us; 111us; 595us; 115us; 588us; 116us; 587us; 117us; 586us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 564us; 33us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 0us; 16584us; 0us; 16586us; 0us; 16588us; 1us; 32768us; 120us; 429us; 1us; 32768us; 109us; 334us; 0us; 16589us; 1us; 16590us; 120us; 429us; 0us; 16591us; 1us; 32768us; 109us; 432us; 1us; 32768us; 81us; 442us; 2us; 32768us; 81us; 435us; 110us; 434us; 0us; 16592us; 18us; 32768us; 2us; 584us; 3us; 585us; 9us; 607us; 10us; 610us; 13us; 613us; 28us; 436us; 77us; 590us; 78us; 589us; 95us; 603us; 107us; 605us; 111us; 595us; 115us; 588us; 116us; 587us; 117us; 586us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 564us; 1us; 32768us; 102us; 437us; 33us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 1us; 32768us; 110us; 439us; 0us; 16593us; 0us; 16594us; 0us; 16595us; 17us; 32768us; 2us; 584us; 3us; 585us; 9us; 607us; 10us; 610us; 13us; 613us; 77us; 590us; 78us; 589us; 95us; 603us; 107us; 605us; 111us; 595us; 115us; 588us; 116us; 587us; 117us; 586us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 564us; 18us; 32768us; 2us; 584us; 3us; 585us; 9us; 607us; 10us; 610us; 13us; 613us; 77us; 590us; 78us; 589us; 95us; 603us; 102us; 444us; 107us; 605us; 111us; 595us; 115us; 588us; 116us; 587us; 117us; 586us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 564us; 33us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 0us; 16596us; 1us; 32768us; 27us; 447us; 1us; 32768us; 109us; 334us; 1us; 32768us; 28us; 449us; 1us; 32768us; 109us; 334us; 0us; 16597us; 1us; 32768us; 109us; 452us; 1us; 32768us; 81us; 455us; 1us; 32768us; 110us; 454us; 0us; 16598us; 34us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 28us; 456us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 1us; 32768us; 102us; 457us; 33us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 0us; 16599us; 1us; 32768us; 102us; 460us; 33us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 1us; 32768us; 81us; 455us; 0us; 16600us; 33us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 1us; 32768us; 27us; 465us; 1us; 32768us; 109us; 334us; 0us; 16601us; 33us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 1us; 32768us; 27us; 469us; 1us; 32768us; 109us; 334us; 0us; 16602us; 1us; 32768us; 122us; 492us; 3us; 32768us; 16us; 479us; 17us; 475us; 27us; 473us; 1us; 32768us; 109us; 334us; 0us; 16603us; 3us; 32768us; 7us; 486us; 8us; 487us; 9us; 488us; 1us; 32768us; 27us; 477us; 1us; 32768us; 109us; 334us; 0us; 16604us; 1us; 32768us; 122us; 498us; 1us; 32768us; 27us; 481us; 1us; 32768us; 109us; 334us; 0us; 16605us; 1us; 16606us; 89us; 484us; 3us; 32768us; 7us; 486us; 8us; 487us; 9us; 488us; 0us; 16607us; 0us; 16608us; 0us; 16609us; 0us; 16610us; 0us; 16611us; 0us; 16612us; 0us; 16613us; 1us; 32768us; 101us; 493us; 3us; 32768us; 7us; 489us; 8us; 490us; 9us; 491us; 33us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 1us; 16614us; 89us; 496us; 1us; 32768us; 122us; 492us; 0us; 16615us; 1us; 32768us; 101us; 499us; 33us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 1us; 16616us; 89us; 501us; 1us; 32768us; 122us; 498us; 0us; 16617us; 34us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 102us; 16653us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 554us; 1us; 32768us; 100us; 505us; 0us; 16618us; 1us; 32768us; 102us; 507us; 33us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 1us; 32768us; 100us; 509us; 0us; 16619us; 2us; 32768us; 89us; 512us; 96us; 515us; 2us; 32768us; 89us; 512us; 96us; 518us; 33us; 32768us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 35us; 32768us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 80us; 516us; 95us; 513us; 96us; 514us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 0us; 16622us; 0us; 16623us; 33us; 32768us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 0us; 16624us; 0us; 16625us; 1us; 32768us; 109us; 520us; 3us; 32768us; 80us; 521us; 110us; 527us; 122us; 548us; 33us; 32768us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 1us; 32768us; 110us; 523us; 0us; 16628us; 0us; 16629us; 1us; 32768us; 110us; 526us; 0us; 16630us; 0us; 16631us; 1us; 32768us; 122us; 548us; 1us; 32768us; 98us; 530us; 0us; 16632us; 1us; 32768us; 109us; 532us; 1us; 32768us; 81us; 541us; 1us; 32768us; 81us; 534us; 2us; 32768us; 28us; 535us; 122us; 542us; 1us; 32768us; 102us; 536us; 33us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 1us; 32768us; 110us; 538us; 0us; 16633us; 0us; 16634us; 0us; 16635us; 1us; 32768us; 122us; 542us; 1us; 32768us; 102us; 543us; 33us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 0us; 16636us; 1us; 16637us; 89us; 546us; 1us; 32768us; 122us; 548us; 0us; 16638us; 1us; 32768us; 79us; 549us; 33us; 16548us; 2us; 382us; 3us; 383us; 12us; 531us; 13us; 519us; 15us; 471us; 23us; 397us; 24us; 463us; 25us; 451us; 26us; 467us; 29us; 381us; 30us; 431us; 31us; 426us; 32us; 388us; 34us; 404us; 35us; 380us; 38us; 377us; 39us; 378us; 40us; 379us; 44us; 374us; 95us; 513us; 97us; 528us; 99us; 503us; 103us; 370us; 105us; 368us; 106us; 366us; 109us; 334us; 115us; 386us; 116us; 385us; 117us; 384us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 0us; 16639us; 0us; 16640us; 0us; 16641us; 1us; 16642us; 87us; 558us; 3us; 16642us; 87us; 558us; 102us; 16653us; 122us; 569us; 0us; 16643us; 0us; 16644us; 0us; 16645us; 4us; 32768us; 119us; 557us; 120us; 556us; 121us; 555us; 122us; 553us; 0us; 16646us; 0us; 16647us; 0us; 16648us; 0us; 16649us; 1us; 32768us; 87us; 565us; 2us; 16667us; 0us; 592us; 87us; 565us; 4us; 32768us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 563us; 0us; 16650us; 0us; 16651us; 0us; 16652us; 1us; 16653us; 122us; 569us; 0us; 16654us; 1us; 16655us; 80us; 572us; 0us; 16656us; 18us; 32768us; 2us; 584us; 3us; 585us; 9us; 607us; 10us; 610us; 13us; 613us; 77us; 590us; 78us; 589us; 95us; 603us; 107us; 605us; 111us; 595us; 112us; 597us; 115us; 588us; 116us; 587us; 117us; 586us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 564us; 18us; 32768us; 2us; 584us; 3us; 585us; 9us; 607us; 10us; 610us; 13us; 613us; 77us; 590us; 78us; 589us; 95us; 603us; 96us; 604us; 107us; 605us; 111us; 595us; 115us; 588us; 116us; 587us; 117us; 586us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 564us; 18us; 32768us; 2us; 584us; 3us; 585us; 9us; 607us; 10us; 610us; 13us; 613us; 77us; 590us; 78us; 589us; 95us; 603us; 107us; 605us; 108us; 606us; 111us; 595us; 115us; 588us; 116us; 587us; 117us; 586us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 564us; 18us; 32768us; 2us; 584us; 3us; 585us; 9us; 607us; 10us; 610us; 13us; 613us; 77us; 590us; 78us; 589us; 95us; 603us; 107us; 605us; 110us; 609us; 111us; 595us; 115us; 588us; 116us; 587us; 117us; 586us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 564us; 18us; 32768us; 2us; 584us; 3us; 585us; 9us; 607us; 10us; 610us; 13us; 613us; 77us; 590us; 78us; 589us; 95us; 603us; 107us; 605us; 110us; 612us; 111us; 595us; 115us; 588us; 116us; 587us; 117us; 586us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 564us; 0us; 16657us; 1us; 32768us; 79us; 580us; 17us; 32768us; 2us; 584us; 3us; 585us; 9us; 607us; 10us; 610us; 13us; 613us; 77us; 590us; 78us; 589us; 95us; 603us; 107us; 605us; 111us; 595us; 115us; 588us; 116us; 587us; 117us; 586us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 564us; 1us; 16658us; 89us; 582us; 1us; 32768us; 122us; 579us; 0us; 16659us; 0us; 16660us; 0us; 16661us; 0us; 16662us; 0us; 16663us; 0us; 16664us; 0us; 16665us; 17us; 32768us; 2us; 584us; 3us; 585us; 9us; 607us; 10us; 610us; 13us; 613us; 77us; 590us; 78us; 589us; 95us; 603us; 107us; 605us; 111us; 595us; 115us; 588us; 116us; 587us; 117us; 586us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 564us; 0us; 16666us; 17us; 32768us; 2us; 584us; 3us; 585us; 9us; 607us; 10us; 610us; 13us; 613us; 77us; 590us; 78us; 589us; 95us; 603us; 107us; 605us; 111us; 595us; 115us; 588us; 116us; 587us; 117us; 586us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 564us; 0us; 16668us; 0us; 16669us; 4us; 32768us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 563us; 17us; 32768us; 2us; 584us; 3us; 585us; 9us; 607us; 10us; 610us; 13us; 613us; 77us; 590us; 78us; 589us; 95us; 603us; 107us; 605us; 111us; 595us; 115us; 588us; 116us; 587us; 117us; 586us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 564us; 0us; 16670us; 0us; 16671us; 0us; 16672us; 0us; 16673us; 0us; 16674us; 0us; 16675us; 17us; 32768us; 2us; 584us; 3us; 585us; 9us; 607us; 10us; 610us; 13us; 613us; 77us; 590us; 78us; 589us; 95us; 603us; 107us; 605us; 111us; 595us; 115us; 588us; 116us; 587us; 117us; 586us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 564us; 0us; 16676us; 17us; 32768us; 2us; 584us; 3us; 585us; 9us; 607us; 10us; 610us; 13us; 613us; 77us; 590us; 78us; 589us; 95us; 603us; 107us; 605us; 111us; 595us; 115us; 588us; 116us; 587us; 117us; 586us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 564us; 0us; 16677us; 1us; 32768us; 109us; 608us; 17us; 32768us; 2us; 584us; 3us; 585us; 9us; 607us; 10us; 610us; 13us; 613us; 77us; 590us; 78us; 589us; 95us; 603us; 107us; 605us; 111us; 595us; 115us; 588us; 116us; 587us; 117us; 586us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 564us; 0us; 16678us; 1us; 32768us; 109us; 611us; 17us; 32768us; 2us; 584us; 3us; 585us; 9us; 607us; 10us; 610us; 13us; 613us; 77us; 590us; 78us; 589us; 95us; 603us; 107us; 605us; 111us; 595us; 115us; 588us; 116us; 587us; 117us; 586us; 119us; 562us; 120us; 561us; 121us; 560us; 122us; 564us; 0us; 16679us; 1us; 32768us; 109us; 614us; 1us; 32768us; 122us; 579us; 1us; 32768us; 110us; 616us; 0us; 16680us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 2us; 3us; 19us; 22us; 24us; 25us; 27us; 28us; 30us; 31us; 47us; 48us; 50us; 84us; 85us; 90us; 92us; 94us; 95us; 98us; 100us; 102us; 103us; 105us; 106us; 107us; 108us; 110us; 112us; 114us; 116us; 118us; 120us; 122us; 124us; 126us; 128us; 129us; 131us; 132us; 136us; 138us; 139us; 143us; 144us; 145us; 146us; 147us; 148us; 153us; 154us; 158us; 160us; 161us; 162us; 164us; 165us; 168us; 186us; 187us; 188us; 189us; 190us; 192us; 193us; 194us; 195us; 196us; 197us; 198us; 199us; 200us; 201us; 203us; 205us; 206us; 208us; 209us; 211us; 230us; 264us; 265us; 284us; 318us; 319us; 321us; 328us; 331us; 333us; 352us; 386us; 387us; 406us; 440us; 441us; 444us; 445us; 447us; 449us; 450us; 452us; 454us; 455us; 457us; 459us; 460us; 462us; 464us; 465us; 467us; 468us; 470us; 472us; 476us; 477us; 479us; 481us; 485us; 486us; 487us; 488us; 489us; 491us; 493us; 497us; 499us; 500us; 502us; 504us; 506us; 510us; 512us; 513us; 521us; 522us; 530us; 531us; 532us; 534us; 536us; 544us; 546us; 547us; 550us; 551us; 553us; 572us; 590us; 591us; 610us; 628us; 629us; 631us; 633us; 634us; 636us; 638us; 657us; 676us; 677us; 696us; 715us; 716us; 735us; 736us; 755us; 756us; 758us; 760us; 762us; 764us; 765us; 766us; 768us; 770us; 772us; 774us; 775us; 776us; 778us; 780us; 781us; 783us; 817us; 818us; 820us; 821us; 824us; 826us; 829us; 830us; 832us; 833us; 836us; 838us; 841us; 842us; 843us; 844us; 846us; 848us; 849us; 850us; 852us; 854us; 888us; 894us; 928us; 929us; 931us; 932us; 935us; 969us; 975us; 1009us; 1010us; 1011us; 1012us; 1013us; 1015us; 1017us; 1019us; 1053us; 1055us; 1056us; 1058us; 1092us; 1094us; 1095us; 1097us; 1099us; 1100us; 1101us; 1103us; 1105us; 1107us; 1108us; 1109us; 1117us; 1119us; 1120us; 1128us; 1130us; 1131us; 1139us; 1141us; 1142us; 1144us; 1152us; 1153us; 1154us; 1155us; 1156us; 1159us; 1160us; 1161us; 1162us; 1163us; 1164us; 1165us; 1167us; 1168us; 1186us; 1204us; 1223us; 1224us; 1227us; 1228us; 1231us; 1232us; 1235us; 1238us; 1239us; 1242us; 1245us; 1246us; 1264us; 1266us; 1267us; 1268us; 1287us; 1288us; 1293us; 1310us; 1311us; 1330us; 1333us; 1336us; 1339us; 1342us; 1360us; 1362us; 1363us; 1381us; 1382us; 1383us; 1385us; 1386us; 1404us; 1405us; 1406us; 1408us; 1409us; 1411us; 1412us; 1414us; 1432us; 1433us; 1434us; 1435us; 1437us; 1439us; 1441us; 1459us; 1460us; 1476us; 1477us; 1493us; 1494us; 1510us; 1511us; 1527us; 1528us; 1545us; 1546us; 1548us; 1564us; 1565us; 1566us; 1583us; 1584us; 1585us; 1586us; 1587us; 1622us; 1625us; 1626us; 1627us; 1662us; 1663us; 1681us; 1700us; 1734us; 1768us; 1802us; 1803us; 1804us; 1805us; 1839us; 1873us; 1907us; 1942us; 1977us; 1978us; 1979us; 1980us; 1981us; 1982us; 1983us; 1984us; 1985us; 1986us; 1987us; 1988us; 1989us; 1990us; 1992us; 1993us; 1995us; 1996us; 1998us; 1999us; 2000us; 2001us; 2003us; 2004us; 2005us; 2006us; 2007us; 2008us; 2009us; 2010us; 2011us; 2012us; 2013us; 2014us; 2015us; 2016us; 2018us; 2053us; 2056us; 2057us; 2060us; 2062us; 2064us; 2066us; 2067us; 2102us; 2103us; 2106us; 2108us; 2110us; 2112us; 2113us; 2114us; 2117us; 2119us; 2121us; 2122us; 2125us; 2127us; 2128us; 2129us; 2135us; 2136us; 2139us; 2173us; 2174us; 2193us; 2227us; 2228us; 2247us; 2281us; 2282us; 2283us; 2284us; 2286us; 2288us; 2289us; 2291us; 2292us; 2294us; 2296us; 2299us; 2300us; 2319us; 2321us; 2355us; 2357us; 2358us; 2359us; 2360us; 2378us; 2397us; 2431us; 2432us; 2434us; 2436us; 2438us; 2440us; 2441us; 2443us; 2445us; 2447us; 2448us; 2483us; 2485us; 2519us; 2520us; 2522us; 2556us; 2558us; 2559us; 2593us; 2595us; 2597us; 2598us; 2632us; 2634us; 2636us; 2637us; 2639us; 2643us; 2645us; 2646us; 2650us; 2652us; 2654us; 2655us; 2657us; 2659us; 2661us; 2662us; 2664us; 2668us; 2669us; 2670us; 2671us; 2672us; 2673us; 2674us; 2675us; 2677us; 2681us; 2715us; 2717us; 2719us; 2720us; 2722us; 2756us; 2758us; 2760us; 2761us; 2796us; 2798us; 2799us; 2801us; 2835us; 2837us; 2838us; 2841us; 2844us; 2878us; 2914us; 2915us; 2916us; 2950us; 2951us; 2952us; 2954us; 2958us; 2992us; 2994us; 2995us; 2996us; 2998us; 2999us; 3000us; 3002us; 3004us; 3005us; 3007us; 3009us; 3011us; 3014us; 3016us; 3050us; 3052us; 3053us; 3054us; 3055us; 3057us; 3059us; 3093us; 3094us; 3096us; 3098us; 3099us; 3101us; 3135us; 3136us; 3137us; 3138us; 3140us; 3144us; 3145us; 3146us; 3147us; 3152us; 3153us; 3154us; 3155us; 3156us; 3158us; 3161us; 3166us; 3167us; 3168us; 3169us; 3171us; 3172us; 3174us; 3175us; 3194us; 3213us; 3232us; 3251us; 3270us; 3271us; 3273us; 3291us; 3293us; 3295us; 3296us; 3297us; 3298us; 3299us; 3300us; 3301us; 3302us; 3320us; 3321us; 3339us; 3340us; 3341us; 3346us; 3364us; 3365us; 3366us; 3367us; 3368us; 3369us; 3370us; 3388us; 3389us; 3407us; 3408us; 3410us; 3428us; 3429us; 3431us; 3449us; 3450us; 3452us; 3454us; 3456us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 4us; 4us; 0us; 2us; 0us; 2us; 3us; 4us; 5us; 3us; 1us; 1us; 11us; 2us; 3us; 0us; 2us; 1us; 1us; 1us; 1us; 2us; 4us; 1us; 5us; 1us; 1us; 2us; 4us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 0us; 2us; 4us; 5us; 5us; 6us; 1us; 2us; 6us; 7us; 0us; 2us; 4us; 5us; 1us; 1us; 1us; 5us; 6us; 3us; 4us; 4us; 5us; 0us; 2us; 6us; 1us; 2us; 4us; 5us; 1us; 3us; 5us; 6us; 6us; 7us; 6us; 7us; 6us; 6us; 7us; 1us; 2us; 4us; 6us; 7us; 1us; 1us; 1us; 1us; 1us; 5us; 5us; 4us; 4us; 1us; 3us; 3us; 3us; 1us; 3us; 1us; 2us; 3us; 4us; 1us; 2us; 1us; 1us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 3us; 4us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 9us; 0us; 2us; 1us; 2us; 3us; 1us; 2us; 3us; 3us; 1us; 1us; 3us; 1us; 1us; 1us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 2us; 3us; 1us; 3us; 2us; 4us; 1us; 1us; 1us; 1us; 2us; 2us; 2us; 0us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 7us; 7us; 8us; 7us; 5us; 4us; 5us; 0us; 2us; 0us; 2us; 3us; 1us; 2us; 4us; 8us; 1us; 2us; 4us; 6us; 4us; 4us; 5us; 4us; 4us; 4us; 6us; 6us; 1us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 4us; 6us; 3us; 5us; 3us; 5us; 1us; 3us; 2us; 3us; 4us; 6us; 3us; 5us; 7us; 5us; 4us; 3us; 3us; 8us; 1us; 2us; 4us; 1us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 1us; 1us; 3us; 1us; 2us; 0us; 2us; 1us; 2us; 2us; 3us; 5us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 3us; 1us; 4us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 4us; 4us; 4us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 5us; 6us; 6us; 7us; 8us; 9us; 10us; 10us; 11us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 14us; 14us; 15us; 15us; 15us; 15us; 16us; 16us; 17us; 17us; 18us; 18us; 19us; 19us; 20us; 20us; 20us; 21us; 21us; 21us; 21us; 21us; 21us; 22us; 22us; 22us; 23us; 23us; 24us; 24us; 25us; 25us; 26us; 26us; 26us; 26us; 27us; 27us; 28us; 29us; 29us; 30us; 30us; 31us; 32us; 33us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 35us; 36us; 37us; 37us; 38us; 38us; 38us; 38us; 39us; 39us; 39us; 39us; 40us; 40us; 41us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 43us; 44us; 45us; 45us; 46us; 46us; 46us; 47us; 47us; 47us; 48us; 49us; 49us; 49us; 49us; 49us; 49us; 49us; 50us; 50us; 51us; 51us; 52us; 52us; 52us; 52us; 52us; 53us; 53us; 54us; 55us; 55us; 56us; 56us; 56us; 57us; 57us; 57us; 57us; 57us; 57us; 58us; 58us; 59us; 59us; 59us; 59us; 59us; 59us; 59us; 59us; 59us; 59us; 59us; 59us; 59us; 59us; 59us; 59us; 59us; 59us; 59us; 59us; 59us; 59us; 59us; 59us; 59us; 59us; 59us; 59us; 60us; 60us; 61us; 61us; 62us; 63us; 63us; 64us; 64us; 65us; 65us; 66us; 67us; 67us; 68us; 68us; 69us; 69us; 70us; 71us; 72us; 73us; 73us; 74us; 75us; 76us; 76us; 76us; 77us; 77us; 78us; 78us; 78us; 79us; 79us; 79us; 80us; 80us; 81us; 81us; 82us; 82us; 83us; 83us; 84us; 84us; 84us; 84us; 85us; 85us; 86us; 86us; 86us; 86us; 87us; 88us; 89us; 89us; 90us; 91us; 91us; 92us; 93us; 94us; 95us; 95us; 95us; 95us; 95us; 96us; 96us; 96us; 96us; 97us; 97us; 98us; 98us; 99us; 99us; 99us; 100us; 100us; 101us; 101us; 101us; 101us; 101us; 101us; 101us; 101us; 101us; 101us; 101us; 101us; 101us; 101us; 101us; 101us; 102us; 103us; 104us; 105us; 106us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 65535us; 65535us; 16385us; 65535us; 16386us; 65535us; 16388us; 65535us; 16390us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 16392us; 65535us; 65535us; 65535us; 16393us; 65535us; 16394us; 16395us; 16396us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16397us; 65535us; 16398us; 65535us; 65535us; 16399us; 65535us; 16401us; 16402us; 16403us; 16404us; 16405us; 65535us; 16406us; 65535us; 65535us; 16407us; 16408us; 65535us; 65535us; 65535us; 65535us; 16409us; 16410us; 16411us; 16412us; 65535us; 16413us; 16414us; 16415us; 16416us; 16417us; 16418us; 16419us; 16420us; 16421us; 65535us; 65535us; 16422us; 65535us; 16424us; 65535us; 65535us; 65535us; 16425us; 65535us; 65535us; 16426us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16427us; 65535us; 65535us; 16428us; 65535us; 16430us; 65535us; 65535us; 65535us; 65535us; 65535us; 16431us; 65535us; 65535us; 65535us; 65535us; 65535us; 16432us; 65535us; 16434us; 65535us; 65535us; 65535us; 16435us; 65535us; 65535us; 65535us; 16436us; 16437us; 16438us; 16439us; 65535us; 65535us; 65535us; 65535us; 16440us; 65535us; 65535us; 65535us; 65535us; 65535us; 16441us; 65535us; 16444us; 65535us; 16445us; 16447us; 65535us; 65535us; 65535us; 65535us; 16448us; 65535us; 16450us; 65535us; 65535us; 65535us; 16451us; 65535us; 65535us; 16452us; 65535us; 65535us; 16454us; 65535us; 65535us; 65535us; 65535us; 16455us; 65535us; 65535us; 16456us; 65535us; 16457us; 65535us; 16458us; 65535us; 65535us; 65535us; 65535us; 65535us; 16459us; 65535us; 65535us; 65535us; 65535us; 65535us; 16460us; 65535us; 65535us; 65535us; 65535us; 65535us; 16461us; 65535us; 65535us; 65535us; 65535us; 65535us; 16462us; 65535us; 65535us; 65535us; 65535us; 65535us; 16463us; 16464us; 16465us; 65535us; 65535us; 65535us; 16466us; 65535us; 65535us; 65535us; 65535us; 65535us; 16467us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16468us; 16469us; 16470us; 16471us; 65535us; 65535us; 65535us; 65535us; 65535us; 16474us; 65535us; 65535us; 65535us; 16475us; 65535us; 65535us; 65535us; 16476us; 65535us; 65535us; 65535us; 16477us; 16478us; 65535us; 65535us; 16479us; 65535us; 65535us; 16480us; 65535us; 65535us; 16481us; 65535us; 65535us; 16483us; 16490us; 16491us; 16492us; 65535us; 16494us; 16495us; 16496us; 16497us; 16498us; 65535us; 65535us; 16499us; 65535us; 65535us; 65535us; 16500us; 65535us; 16501us; 65535us; 16502us; 65535us; 65535us; 16503us; 65535us; 65535us; 16504us; 65535us; 65535us; 16505us; 65535us; 65535us; 16506us; 65535us; 65535us; 16507us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16510us; 16511us; 65535us; 16512us; 65535us; 16513us; 16514us; 65535us; 16515us; 65535us; 16516us; 65535us; 65535us; 16517us; 16519us; 16520us; 65535us; 65535us; 65535us; 65535us; 16524us; 65535us; 16525us; 65535us; 16526us; 65535us; 16527us; 65535us; 16528us; 65535us; 16529us; 65535us; 65535us; 16530us; 16531us; 65535us; 16532us; 16533us; 16534us; 16535us; 65535us; 65535us; 16536us; 16537us; 65535us; 16538us; 65535us; 65535us; 65535us; 65535us; 65535us; 16542us; 16543us; 16544us; 65535us; 65535us; 65535us; 65535us; 65535us; 16545us; 16546us; 16547us; 16550us; 16551us; 16552us; 16553us; 16554us; 16555us; 16556us; 16557us; 16558us; 16559us; 65535us; 16560us; 65535us; 16561us; 65535us; 16562us; 16563us; 16564us; 65535us; 16565us; 16566us; 16567us; 16568us; 16569us; 16570us; 16571us; 16572us; 16573us; 16574us; 16575us; 16576us; 16577us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16578us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16579us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16580us; 16581us; 65535us; 65535us; 65535us; 65535us; 16582us; 65535us; 65535us; 16583us; 65535us; 65535us; 16584us; 16586us; 16588us; 65535us; 65535us; 16589us; 65535us; 16591us; 65535us; 65535us; 65535us; 16592us; 65535us; 65535us; 65535us; 65535us; 16593us; 16594us; 16595us; 65535us; 65535us; 65535us; 16596us; 65535us; 65535us; 65535us; 65535us; 16597us; 65535us; 65535us; 65535us; 16598us; 65535us; 65535us; 65535us; 16599us; 65535us; 65535us; 65535us; 16600us; 65535us; 65535us; 65535us; 16601us; 65535us; 65535us; 65535us; 16602us; 65535us; 65535us; 65535us; 16603us; 65535us; 65535us; 65535us; 16604us; 65535us; 65535us; 65535us; 16605us; 65535us; 65535us; 16607us; 16608us; 16609us; 16610us; 16611us; 16612us; 16613us; 65535us; 65535us; 65535us; 65535us; 65535us; 16615us; 65535us; 65535us; 65535us; 65535us; 16617us; 65535us; 65535us; 16618us; 65535us; 65535us; 65535us; 16619us; 65535us; 65535us; 65535us; 65535us; 16622us; 16623us; 65535us; 16624us; 16625us; 65535us; 65535us; 65535us; 65535us; 16628us; 16629us; 65535us; 16630us; 16631us; 65535us; 65535us; 16632us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16633us; 16634us; 16635us; 65535us; 65535us; 65535us; 16636us; 65535us; 65535us; 16638us; 65535us; 65535us; 16639us; 16640us; 16641us; 65535us; 65535us; 16643us; 16644us; 16645us; 65535us; 16646us; 16647us; 16648us; 16649us; 65535us; 65535us; 65535us; 16650us; 16651us; 16652us; 65535us; 16654us; 65535us; 16656us; 65535us; 65535us; 65535us; 65535us; 65535us; 16657us; 65535us; 65535us; 65535us; 65535us; 16659us; 16660us; 16661us; 16662us; 16663us; 16664us; 16665us; 65535us; 16666us; 65535us; 16668us; 16669us; 65535us; 65535us; 16670us; 16671us; 16672us; 16673us; 16674us; 16675us; 65535us; 16676us; 65535us; 16677us; 65535us; 65535us; 16678us; 65535us; 65535us; 16679us; 65535us; 65535us; 65535us; 16680us; |]
let _fsyacc_reductions ()  =    [| 
# 1211 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  Unit  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startunit));
# 1220 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_main in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 ".\Parser.fsy"
                                                             UMain(_1, _2, _3) 
                   )
# 100 ".\Parser.fsy"
                 :  Unit ));
# 1233 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_export in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 ".\Parser.fsy"
                                                            UExport(_1, _2, _3) 
                   )
# 101 ".\Parser.fsy"
                 :  Unit ));
# 1246 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 ".\Parser.fsy"
                                          [] 
                   )
# 103 ".\Parser.fsy"
                 : 'gentype_import_list));
# 1256 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import in
            let _2 = parseState.GetInput(2) :?> 'gentype_import_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 ".\Parser.fsy"
                                                  _1 :: _2 
                   )
# 104 ".\Parser.fsy"
                 : 'gentype_import_list));
# 1268 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 ".\Parser.fsy"
                                         [] 
                   )
# 106 ".\Parser.fsy"
                 : 'gentype_decl_list));
# 1278 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_declaration in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 ".\Parser.fsy"
                                                   _1 :: _2 
                   )
# 107 ".\Parser.fsy"
                 : 'gentype_decl_list));
# 1290 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 ".\Parser.fsy"
                                                      _3 
                   )
# 109 ".\Parser.fsy"
                 : 'gentype_main));
# 1301 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_import_path in
            let _4 = parseState.GetInput(4) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 ".\Parser.fsy"
                                                                    { Native = false; Explicit = []; Path = _2; Alias = _4 } 
                   )
# 111 ".\Parser.fsy"
                 : 'gentype_import));
# 1313 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_brace_names in
            let _3 = parseState.GetInput(3) :?> 'gentype_import_path in
            let _5 = parseState.GetInput(5) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 ".\Parser.fsy"
                                                                          { Native = false; Explicit = _2; Path = _3; Alias = _5 } 
                   )
# 112 ".\Parser.fsy"
                 : 'gentype_import));
# 1326 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 ".\Parser.fsy"
                                                        { Native = true; Explicit = []; Path = IPLocal (_3); Alias = stringToSmallName "" } 
                   )
# 113 ".\Parser.fsy"
                 : 'gentype_import));
# 1337 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 ".\Parser.fsy"
                                            IPLocal (_1) 
                   )
# 115 ".\Parser.fsy"
                 : 'gentype_import_path));
# 1348 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_remote in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 ".\Parser.fsy"
                                   IPRemote (_1) 
                   )
# 116 ".\Parser.fsy"
                 : 'gentype_import_path));
# 1359 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> Name in
            let _7 = parseState.GetInput(7) :?> IntegerLiteral in
            let _9 = parseState.GetInput(9) :?> IntegerLiteral in
            let _11 = parseState.GetInput(11) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 ".\Parser.fsy"
                          { Org = _1; Project = _3; Unit = _5; Major = _7; Minor = _9; Patch = _11 } 
                   )
# 119 ".\Parser.fsy"
                 : 'gentype_remote));
# 1375 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_brace_names in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 ".\Parser.fsy"
                                                   _2 
                   )
# 121 ".\Parser.fsy"
                 : 'gentype_export));
# 1386 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_name_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 ".\Parser.fsy"
                                                               _2 
                   )
# 123 ".\Parser.fsy"
                 : 'gentype_brace_names));
# 1397 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 ".\Parser.fsy"
                                       [] 
                   )
# 125 ".\Parser.fsy"
                 : 'gentype_name_list));
# 1407 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_name in
            let _2 = parseState.GetInput(2) :?> 'gentype_name_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 ".\Parser.fsy"
                                            _1 :: _2 
                   )
# 126 ".\Parser.fsy"
                 : 'gentype_name_list));
# 1419 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 ".\Parser.fsy"
                                          _1 
                   )
# 128 ".\Parser.fsy"
                 : 'gentype_name));
# 1430 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 ".\Parser.fsy"
                                         _1 
                   )
# 129 ".\Parser.fsy"
                 : 'gentype_name));
# 1441 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 ".\Parser.fsy"
                                          _1 
                   )
# 130 ".\Parser.fsy"
                 : 'gentype_name));
# 1452 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 ".\Parser.fsy"
                                                        DFunc (_1) 
                   )
# 134 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1463 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 ".\Parser.fsy"
                                                      DRecFuncs ([_2]) 
                   )
# 135 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1474 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_function_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 ".\Parser.fsy"
                                                                      DRecFuncs (_3) 
                   )
# 136 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1485 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_native in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 ".\Parser.fsy"
                                             DNative (_1) 
                   )
# 137 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1496 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 ".\Parser.fsy"
                                                                            DPattern (_2, _3, _5) 
                   )
# 138 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1509 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_userkind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 ".\Parser.fsy"
                                               DKind (_1) 
                   )
# 139 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1520 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 ".\Parser.fsy"
                                               DType (_1) 
                   )
# 140 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1531 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 ".\Parser.fsy"
                                                      DRecTypes ([_2]) 
                   )
# 141 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1542 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_datatype_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 ".\Parser.fsy"
                                                                      DRecTypes (_3) 
                   )
# 142 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1553 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_overload in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 ".\Parser.fsy"
                                               _1 
                   )
# 143 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1564 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_instance in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 ".\Parser.fsy"
                                               _1 
                   )
# 144 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1575 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rule in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 ".\Parser.fsy"
                                            _1 
                   )
# 145 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1586 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_effect in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 ".\Parser.fsy"
                                             DEffect (_1) 
                   )
# 146 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1597 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_test in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 ".\Parser.fsy"
                                            DTest (_1) 
                   )
# 147 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1608 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_law in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 ".\Parser.fsy"
                                           DLaw (_1) 
                   )
# 148 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1619 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_check in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 ".\Parser.fsy"
                                             DCheck (_1) 
                   )
# 149 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1630 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tag in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 ".\Parser.fsy"
                                           _1 
                   )
# 150 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1641 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_documentation_lines in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 ".\Parser.fsy"
                                                                        _3 
                   )
# 152 ".\Parser.fsy"
                 : 'gentype_documentation));
# 1652 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 ".\Parser.fsy"
                                                       [] 
                   )
# 154 ".\Parser.fsy"
                 : 'gentype_documentation_lines));
# 1662 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> DocumentationLine in
            let _2 = parseState.GetInput(2) :?> 'gentype_documentation_lines in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 ".\Parser.fsy"
                                                                     _1 :: _2 
                   )
# 155 ".\Parser.fsy"
                 : 'gentype_documentation_lines));
# 1674 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 ".\Parser.fsy"
                          { Name = _2; Docs = []; Body = _4 } 
                   )
# 158 ".\Parser.fsy"
                 : 'gentype_function));
# 1686 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_no_dot_pattern_expr_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 ".\Parser.fsy"
                           { Name = _2; Docs = []; Body = [EStatementBlock([SLet { Matcher = _3; Body = [] }; SExpression(_5)])] } 
                   )
# 160 ".\Parser.fsy"
                 : 'gentype_function));
# 1699 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 ".\Parser.fsy"
                           { Name = _3; Docs = _1; Body = _5 } 
                   )
# 162 ".\Parser.fsy"
                 : 'gentype_function));
# 1712 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_no_dot_pattern_expr_list in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 ".\Parser.fsy"
                           { Name = _3; Docs = _1; Body = [EStatementBlock([SLet { Matcher = _4; Body = [] }; SExpression(_6)])] } 
                   )
# 164 ".\Parser.fsy"
                 : 'gentype_function));
# 1726 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 ".\Parser.fsy"
                                                   [_1] 
                   )
# 166 ".\Parser.fsy"
                 : 'gentype_function_list));
# 1737 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            let _2 = parseState.GetInput(2) :?> 'gentype_function_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 ".\Parser.fsy"
                                                     _1 :: _2 
                   )
# 167 ".\Parser.fsy"
                 : 'gentype_function_list));
# 1749 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_qual_fn_type in
            let _6 = parseState.GetInput(6) :?> 'gentype_native_code_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 ".\Parser.fsy"
                          { Name = _2; Docs = []; Type = _4; Lines = _6 } 
                   )
# 170 ".\Parser.fsy"
                 : 'gentype_native));
# 1762 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_qual_fn_type in
            let _7 = parseState.GetInput(7) :?> 'gentype_native_code_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 ".\Parser.fsy"
                             { Name = _3; Docs = _1; Type = _5; Lines = _7 } 
                   )
# 172 ".\Parser.fsy"
                 : 'gentype_native));
# 1776 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 ".\Parser.fsy"
                                                    [] 
                   )
# 174 ".\Parser.fsy"
                 : 'gentype_native_code_list));
# 1786 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> NativeCodeLine in
            let _2 = parseState.GetInput(2) :?> 'gentype_native_code_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 ".\Parser.fsy"
                                                                _1 :: _2 
                   )
# 175 ".\Parser.fsy"
                 : 'gentype_native_code_list));
# 1798 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_kind_unify in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 ".\Parser.fsy"
                          { Name = _2; Docs = []; Unify = _4 } 
                   )
# 178 ".\Parser.fsy"
                 : 'gentype_userkind));
# 1810 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_kind_unify in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 ".\Parser.fsy"
                           { Name = _3; Docs = _1; Unify = _5 } 
                   )
# 180 ".\Parser.fsy"
                 : 'gentype_userkind));
# 1823 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 ".\Parser.fsy"
                                             KUBoolean 
                   )
# 182 ".\Parser.fsy"
                 : 'gentype_kind_unify));
# 1833 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 ".\Parser.fsy"
                                       KUAbelian 
                   )
# 183 ".\Parser.fsy"
                 : 'gentype_kind_unify));
# 1843 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 ".\Parser.fsy"
                                         KUSyntactic 
                   )
# 184 ".\Parser.fsy"
                 : 'gentype_kind_unify));
# 1853 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_type_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_constructor_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 ".\Parser.fsy"
                          { Name = _2; Docs = []; Params = _3; Constructors = _5; Kind = SKBase (sIdentifier [] (stringToBigName "Data")) } 
                   )
# 187 ".\Parser.fsy"
                 : 'gentype_datatype));
# 1866 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_type_param_list in
            let _6 = parseState.GetInput(6) :?> 'gentype_constructor_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 ".\Parser.fsy"
                          { Name = _3; Docs = _1; Params = _4; Constructors = _6; Kind = SKBase (sIdentifier [] (stringToBigName "Data")) } 
                   )
# 189 ".\Parser.fsy"
                 : 'gentype_datatype));
# 1880 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_type_param_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 ".\Parser.fsy"
                           { Name = _2; Docs = []; Params = _3; Constructors = []; Kind = SKBase (sIdentifier [] (stringToBigName "Data")) } 
                   )
# 191 ".\Parser.fsy"
                 : 'gentype_datatype));
# 1892 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_type_param_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 ".\Parser.fsy"
                           { Name = _3; Docs = _1; Params = _4; Constructors = []; Kind = SKBase (sIdentifier [] (stringToBigName "Data")) } 
                   )
# 193 ".\Parser.fsy"
                 : 'gentype_datatype));
# 1905 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_compound_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 ".\Parser.fsy"
                           { Name = _2; Docs = []; Params = []; Constructors = []; Kind = _4 } 
                   )
# 195 ".\Parser.fsy"
                 : 'gentype_datatype));
# 1917 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_compound_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 ".\Parser.fsy"
                           { Name = _3; Docs = _1; Params = []; Constructors = []; Kind = _5 } 
                   )
# 197 ".\Parser.fsy"
                 : 'gentype_datatype));
# 1930 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 ".\Parser.fsy"
                            [] 
                   )
# 200 ".\Parser.fsy"
                 : 'gentype_type_param_list));
# 1940 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_param_list in
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 ".\Parser.fsy"
                            List.append _1 [(_2, SKBase (sIdentifier [] (stringToBigName "Val")))] 
                   )
# 202 ".\Parser.fsy"
                 : 'gentype_type_param_list));
# 1952 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_param_list in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_compound_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 ".\Parser.fsy"
                            List.append _1 [(_3, _5)] 
                   )
# 204 ".\Parser.fsy"
                 : 'gentype_type_param_list));
# 1965 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 ".\Parser.fsy"
                                                   [_1] 
                   )
# 206 ".\Parser.fsy"
                 : 'gentype_datatype_list));
# 1976 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            let _2 = parseState.GetInput(2) :?> 'gentype_datatype_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 ".\Parser.fsy"
                                                     _1 :: _2 
                   )
# 207 ".\Parser.fsy"
                 : 'gentype_datatype_list));
# 1988 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 ".\Parser.fsy"
                           { Name = _1; Docs = []; Components = []; Result = _4 } 
                   )
# 210 ".\Parser.fsy"
                 : 'gentype_constructor));
# 2000 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_type_arg_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 ".\Parser.fsy"
                           { Name = _1; Docs = []; Components = List.rev _3; Result = _5 } 
                   )
# 212 ".\Parser.fsy"
                 : 'gentype_constructor));
# 2013 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constructor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 ".\Parser.fsy"
                                                           [_1] 
                   )
# 214 ".\Parser.fsy"
                 : 'gentype_constructor_list));
# 2024 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constructor in
            let _3 = parseState.GetInput(3) :?> 'gentype_constructor_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 ".\Parser.fsy"
                                                               _1 :: _3 
                   )
# 215 ".\Parser.fsy"
                 : 'gentype_constructor_list));
# 2036 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 ".\Parser.fsy"
                                                                     DPropagationRule (_2, [], []) 
                   )
# 217 ".\Parser.fsy"
                 : 'gentype_rule));
# 2047 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_type_arg_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 ".\Parser.fsy"
                                                                                DPropagationRule (_2, _4, []) 
                   )
# 218 ".\Parser.fsy"
                 : 'gentype_rule));
# 2059 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_type_arg_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 ".\Parser.fsy"
                                                                                DPropagationRule (_2, [], _5) 
                   )
# 219 ".\Parser.fsy"
                 : 'gentype_rule));
# 2071 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_type_arg_list in
            let _6 = parseState.GetInput(6) :?> 'gentype_type_arg_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 ".\Parser.fsy"
                                                                                              DPropagationRule (_2, _4, _6) 
                   )
# 220 ".\Parser.fsy"
                 : 'gentype_rule));
# 2084 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> Name in
            let _6 = parseState.GetInput(6) :?> 'gentype_qual_fn_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 ".\Parser.fsy"
                          DOverload { Name = _2; Docs = []; Predicate = _4; Template = _6; Bodies = [] } 
                   )
# 223 ".\Parser.fsy"
                 : 'gentype_overload));
# 2097 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> Name in
            let _7 = parseState.GetInput(7) :?> 'gentype_qual_fn_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 225 ".\Parser.fsy"
                           DOverload { Name = _3; Docs = _1; Predicate = _5; Template = _7; Bodies = [] } 
                   )
# 225 ".\Parser.fsy"
                 : 'gentype_overload));
# 2111 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_qual_fn_type in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 ".\Parser.fsy"
                                                                                            DInstance(_2, _4, _6) 
                   )
# 227 ".\Parser.fsy"
                 : 'gentype_instance));
# 2124 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_handler_template_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 ".\Parser.fsy"
                          { Name = _2; Docs = []; Params = _3; Handlers = _5 } 
                   )
# 230 ".\Parser.fsy"
                 : 'gentype_effect));
# 2137 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_param_list in
            let _6 = parseState.GetInput(6) :?> 'gentype_handler_template_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 232 ".\Parser.fsy"
                          { Name = _3; Docs = _1; Params = _4; Handlers = _6 } 
                   )
# 232 ".\Parser.fsy"
                 : 'gentype_effect));
# 2151 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handler_template in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 234 ".\Parser.fsy"
                                                                     [_1] 
                   )
# 234 ".\Parser.fsy"
                 : 'gentype_handler_template_list));
# 2162 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handler_template_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_handler_template in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 235 ".\Parser.fsy"
                                                                       List.append _1 [_2] 
                   )
# 235 ".\Parser.fsy"
                 : 'gentype_handler_template_list));
# 2174 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_qual_fn_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 237 ".\Parser.fsy"
                                                                                { Name = _2; Type = _4 } 
                   )
# 237 ".\Parser.fsy"
                 : 'gentype_handler_template));
# 2186 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_test_all in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 240 ".\Parser.fsy"
                         { Name = _2; Left = _4; Right = _6; Kind = _5 } 
                   )
# 240 ".\Parser.fsy"
                 : 'gentype_test));
# 2200 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_test_all in
            let _7 = parseState.GetInput(7) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 243 ".\Parser.fsy"
                         { Name = _2; Exhaustive = false; Params = _3; Left = _5; Right = _7; Kind = _6 } 
                   )
# 243 ".\Parser.fsy"
                 : 'gentype_law));
# 2215 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 245 ".\Parser.fsy"
                                            TKSatisfies 
                   )
# 245 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2225 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 246 ".\Parser.fsy"
                                      TKViolates 
                   )
# 246 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2235 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 247 ".\Parser.fsy"
                                       TKIsRoughly 
                   )
# 247 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2245 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 248 ".\Parser.fsy"
                                 TKIs [] 
                   )
# 248 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2255 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 249 ".\Parser.fsy"
                                    TKIsNot [] 
                   )
# 249 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2265 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 250 ".\Parser.fsy"
                                                               TKIs _4 
                   )
# 250 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2276 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 251 ".\Parser.fsy"
                                                                  TKIsNot _4 
                   )
# 251 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2287 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_qual_fn_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 253 ".\Parser.fsy"
                                                                    { Name = _2; Matcher = _4 } 
                   )
# 253 ".\Parser.fsy"
                 : 'gentype_check));
# 2299 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 255 ".\Parser.fsy"
                                                            DTag (_2, _4) 
                   )
# 255 ".\Parser.fsy"
                 : 'gentype_tag));
# 2311 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_identifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 259 ".\Parser.fsy"
                                                        SKBase _1 
                   )
# 259 ".\Parser.fsy"
                 : 'gentype_base_kind));
# 2322 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 260 ".\Parser.fsy"
                                                            _2 
                   )
# 260 ".\Parser.fsy"
                 : 'gentype_base_kind));
# 2333 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 262 ".\Parser.fsy"
                                                                         SKSeq _2 
                   )
# 262 ".\Parser.fsy"
                 : 'gentype_compound_kind));
# 2344 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 263 ".\Parser.fsy"
                                                             SKRow _2 
                   )
# 263 ".\Parser.fsy"
                 : 'gentype_compound_kind));
# 2355 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 264 ".\Parser.fsy"
                                               _1 
                   )
# 264 ".\Parser.fsy"
                 : 'gentype_compound_kind));
# 2366 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_kind in
            let _3 = parseState.GetInput(3) :?> 'gentype_compound_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 265 ".\Parser.fsy"
                                                               SKArrow (_1, _3) 
                   )
# 265 ".\Parser.fsy"
                 : 'gentype_compound_kind));
# 2378 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_predicate in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 269 ".\Parser.fsy"
                                                         ind _1 SEnd 
                   )
# 269 ".\Parser.fsy"
                 : 'gentype_predicate_list));
# 2389 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_predicate in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 270 ".\Parser.fsy"
                                                    dot _1 SEnd 
                   )
# 270 ".\Parser.fsy"
                 : 'gentype_predicate_list));
# 2400 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_predicate in
            let _3 = parseState.GetInput(3) :?> 'gentype_predicate_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 271 ".\Parser.fsy"
                                                                ind _1 _3 
                   )
# 271 ".\Parser.fsy"
                 : 'gentype_predicate_list));
# 2412 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_predicate in
            let _4 = parseState.GetInput(4) :?> 'gentype_predicate_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 272 ".\Parser.fsy"
                                                                   dot _1 _4 
                   )
# 272 ".\Parser.fsy"
                 : 'gentype_predicate_list));
# 2424 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_identifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 274 ".\Parser.fsy"
                                                         STCon _1 
                   )
# 274 ".\Parser.fsy"
                 : 'gentype_predicate));
# 2435 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_identifier in
            let _2 = parseState.GetInput(2) :?> 'gentype_type_arg_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 275 ".\Parser.fsy"
                                                             appendTypeArgs (STCon _1) (List.rev _2) 
                   )
# 275 ".\Parser.fsy"
                 : 'gentype_predicate));
# 2447 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fn_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 277 ".\Parser.fsy"
                                                     sQualType SEnd _1 
                   )
# 277 ".\Parser.fsy"
                 : 'gentype_qual_fn_type));
# 2458 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 280 ".\Parser.fsy"
                                                  STTrue 
                   )
# 280 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2468 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 281 ".\Parser.fsy"
                                             STFalse 
                   )
# 281 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2478 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 282 ".\Parser.fsy"
                                                 STVar _1 
                   )
# 282 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2489 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 283 ".\Parser.fsy"
                                                        STDotVar _1 
                   )
# 283 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2500 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_identifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 284 ".\Parser.fsy"
                                                     STCon _1 
                   )
# 284 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2511 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 285 ".\Parser.fsy"
                                               STPrim PrFunction 
                   )
# 285 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2521 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 286 ".\Parser.fsy"
                                            STAbelianOne 
                   )
# 286 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2531 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 287 ".\Parser.fsy"
                                            STRowEmpty 
                   )
# 287 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2541 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_fn_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 288 ".\Parser.fsy"
                                                            _2 
                   )
# 288 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2552 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_type_arg_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 289 ".\Parser.fsy"
                                                                          appendTypeArgs _2 (List.rev _3) 
                   )
# 289 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2564 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_or_sequence in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 290 ".\Parser.fsy"
                                                              _2 
                   )
# 290 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2575 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_and_sequence in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 291 ".\Parser.fsy"
                                                              _2 
                   )
# 291 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2586 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_field_row_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 292 ".\Parser.fsy"
                                                                appendTypeArgs (STPrim PrRecord) [_2] 
                   )
# 292 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2597 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_field_row_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 293 ".\Parser.fsy"
                                                                   appendTypeArgs (STPrim PrVariant) [_2] 
                   )
# 293 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2608 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 294 ".\Parser.fsy"
                                                                  appendTypeArgs (STPrim PrList) [_2] 
                   )
# 294 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2619 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_fn_type_seq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 295 ".\Parser.fsy"
                                                           appendTypeArgs (STPrim PrTuple) [STSeq (dotVarToDotSeq (ofList (List.rev _2)), KValue)] 
                   )
# 295 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2630 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 297 ".\Parser.fsy"
                                                              appendTypeArgs (STPrim PrValue) [_3; _1] 
                   )
# 297 ".\Parser.fsy"
                 : 'gentype_val_type));
# 2642 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fn_type_seq in
            let _3 = parseState.GetInput(3) :?> 'gentype_fn_row_type in
            let _5 = parseState.GetInput(5) :?> 'gentype_fn_row_type in
            let _7 = parseState.GetInput(7) :?> 'gentype_compound_type in
            let _9 = parseState.GetInput(9) :?> 'gentype_fn_type_seq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 300 ".\Parser.fsy"
                          appendTypeArgs (STPrim PrValue)
                                       [STFalse;
                                        appendTypeArgs (STPrim PrFunction)
                                           [STSeq (dotVarToDotSeq (ofList (List.rev _9)), KValue);
                                            STSeq (dotVarToDotSeq (ofList (List.rev _1)), KValue);
                                            _7; _5; _3]] 
                   )
# 300 ".\Parser.fsy"
                 : 'gentype_fn_type));
# 2662 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 307 ".\Parser.fsy"
                                             [] 
                   )
# 307 ".\Parser.fsy"
                 : 'gentype_fn_type_seq));
# 2672 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fn_type_seq in
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 308 ".\Parser.fsy"
                                                       List.append _1 [_2] 
                   )
# 308 ".\Parser.fsy"
                 : 'gentype_fn_type_seq));
# 2684 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 310 ".\Parser.fsy"
                                               STRowEmpty 
                   )
# 310 ".\Parser.fsy"
                 : 'gentype_fn_row_type));
# 2694 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 311 ".\Parser.fsy"
                                                  STVar _1 
                   )
# 311 ".\Parser.fsy"
                 : 'gentype_fn_row_type));
# 2705 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fn_row_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 312 ".\Parser.fsy"
                                                            appendTypeArgs STRowExtend [_1; _3] 
                   )
# 312 ".\Parser.fsy"
                 : 'gentype_fn_row_type));
# 2717 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 314 ".\Parser.fsy"
                                                   STRowEmpty 
                   )
# 314 ".\Parser.fsy"
                 : 'gentype_field_row_type));
# 2727 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 315 ".\Parser.fsy"
                                                      STVar _1 
                   )
# 315 ".\Parser.fsy"
                 : 'gentype_field_row_type));
# 2738 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_field_row_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_field_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 316 ".\Parser.fsy"
                                                               appendTypeArgs STRowExtend [_1; _3] 
                   )
# 316 ".\Parser.fsy"
                 : 'gentype_field_row_type));
# 2750 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 318 ".\Parser.fsy"
                                                                     appendTypeArgs (STCon { Qualifier = []; Name = _1 }) [_3] 
                   )
# 318 ".\Parser.fsy"
                 : 'gentype_field_type));
# 2762 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 320 ".\Parser.fsy"
                                                       _1 
                   )
# 320 ".\Parser.fsy"
                 : 'gentype_compound_type));
# 2773 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_val_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 321 ".\Parser.fsy"
                                             _1 
                   )
# 321 ".\Parser.fsy"
                 : 'gentype_compound_type));
# 2784 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_type in
            let _3 = parseState.GetInput(3) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 322 ".\Parser.fsy"
                                                         STExponent (_1, _3) 
                   )
# 322 ".\Parser.fsy"
                 : 'gentype_compound_type));
# 2796 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_and_sequence in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 323 ".\Parser.fsy"
                                                _1 
                   )
# 323 ".\Parser.fsy"
                 : 'gentype_compound_type));
# 2807 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_or_sequence in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 324 ".\Parser.fsy"
                                                _1 
                   )
# 324 ".\Parser.fsy"
                 : 'gentype_compound_type));
# 2818 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_mul_sequence in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 325 ".\Parser.fsy"
                                                _1 
                   )
# 325 ".\Parser.fsy"
                 : 'gentype_compound_type));
# 2829 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 326 ".\Parser.fsy"
                                                    STNot _2 
                   )
# 326 ".\Parser.fsy"
                 : 'gentype_compound_type));
# 2840 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 328 ".\Parser.fsy"
                                                                 STAnd (_1, _3) 
                   )
# 328 ".\Parser.fsy"
                 : 'gentype_and_sequence));
# 2852 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_and_sequence in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 329 ".\Parser.fsy"
                                                          STAnd (_1, _3) 
                   )
# 329 ".\Parser.fsy"
                 : 'gentype_and_sequence));
# 2864 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 331 ".\Parser.fsy"
                                                            STOr (_1, _3) 
                   )
# 331 ".\Parser.fsy"
                 : 'gentype_or_sequence));
# 2876 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_or_sequence in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 332 ".\Parser.fsy"
                                                     STOr (_1, _3) 
                   )
# 332 ".\Parser.fsy"
                 : 'gentype_or_sequence));
# 2888 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 334 ".\Parser.fsy"
                                                                STMultiply (_1, _3) 
                   )
# 334 ".\Parser.fsy"
                 : 'gentype_mul_sequence));
# 2900 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 335 ".\Parser.fsy"
                                                     STMultiply (STFixedConst _1, _3) 
                   )
# 335 ".\Parser.fsy"
                 : 'gentype_mul_sequence));
# 2912 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_type in
            let _3 = parseState.GetInput(3) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 336 ".\Parser.fsy"
                                                     STMultiply (_1, STFixedConst _3) 
                   )
# 336 ".\Parser.fsy"
                 : 'gentype_mul_sequence));
# 2924 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_mul_sequence in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 337 ".\Parser.fsy"
                                                         STMultiply (_1, _3) 
                   )
# 337 ".\Parser.fsy"
                 : 'gentype_mul_sequence));
# 2936 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_mul_sequence in
            let _3 = parseState.GetInput(3) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 338 ".\Parser.fsy"
                                                       STMultiply (_1, STFixedConst _3) 
                   )
# 338 ".\Parser.fsy"
                 : 'gentype_mul_sequence));
# 2948 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 340 ".\Parser.fsy"
                                                        [_1] 
                   )
# 340 ".\Parser.fsy"
                 : 'gentype_type_arg_list));
# 2959 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_arg_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 341 ".\Parser.fsy"
                                                          List.append _1 [_2] 
                   )
# 341 ".\Parser.fsy"
                 : 'gentype_type_arg_list));
# 2971 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term_statement_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 345 ".\Parser.fsy"
                                                                                  _2 
                   )
# 345 ".\Parser.fsy"
                 : 'gentype_term_statement_block));
# 2982 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_statement in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 347 ".\Parser.fsy"
                                                                   [_1] 
                   )
# 347 ".\Parser.fsy"
                 : 'gentype_term_statement_list));
# 2993 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_statement_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 348 ".\Parser.fsy"
                                                                            List.append _1 [_3] 
                   )
# 348 ".\Parser.fsy"
                 : 'gentype_term_statement_list));
# 3005 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_no_dot_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 350 ".\Parser.fsy"
                                                                            SLet { Matcher = _2; Body = [] } 
                   )
# 350 ".\Parser.fsy"
                 : 'gentype_term_statement));
# 3016 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_no_dot_pattern_expr_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 351 ".\Parser.fsy"
                                                                                         SLet { Matcher = _2; Body = _4 } 
                   )
# 351 ".\Parser.fsy"
                 : 'gentype_term_statement));
# 3028 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 354 ".\Parser.fsy"
                                                              SExpression (_1) 
                   )
# 354 ".\Parser.fsy"
                 : 'gentype_term_statement));
# 3039 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 361 ".\Parser.fsy"
                                                            [_1] 
                   )
# 361 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 3050 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_record_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 362 ".\Parser.fsy"
                                                     _1 
                   )
# 362 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 3061 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tuple_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 363 ".\Parser.fsy"
                                                    _1 
                   )
# 363 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 3072 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 364 ".\Parser.fsy"
                                                              List.append _1 [_2] 
                   )
# 364 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 3084 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_record_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 365 ".\Parser.fsy"
                                                                     List.append _1 _2 
                   )
# 365 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 3096 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_tuple_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 366 ".\Parser.fsy"
                                                                     List.append _1 _2 
                   )
# 366 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 3108 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 368 ".\Parser.fsy"
                                            [] 
                   )
# 368 ".\Parser.fsy"
                 : 'gentype_simple_expr));
# 3118 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 369 ".\Parser.fsy"
                                                    _1 
                   )
# 369 ".\Parser.fsy"
                 : 'gentype_simple_expr));
# 3129 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 373 ".\Parser.fsy"
                                                      EStatementBlock (_1) 
                   )
# 373 ".\Parser.fsy"
                 : 'gentype_word));
# 3140 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handle_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 374 ".\Parser.fsy"
                                            _1 
                   )
# 374 ".\Parser.fsy"
                 : 'gentype_word));
# 3151 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_inject_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 375 ".\Parser.fsy"
                                            _1 
                   )
# 375 ".\Parser.fsy"
                 : 'gentype_word));
# 3162 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 376 ".\Parser.fsy"
                                           _1 
                   )
# 376 ".\Parser.fsy"
                 : 'gentype_word));
# 3173 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_if_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 377 ".\Parser.fsy"
                                         _1 
                   )
# 377 ".\Parser.fsy"
                 : 'gentype_word));
# 3184 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_switch_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 378 ".\Parser.fsy"
                                            _1 
                   )
# 378 ".\Parser.fsy"
                 : 'gentype_word));
# 3195 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_when_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 379 ".\Parser.fsy"
                                          _1 
                   )
# 379 ".\Parser.fsy"
                 : 'gentype_word));
# 3206 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_while_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 380 ".\Parser.fsy"
                                           _1 
                   )
# 380 ".\Parser.fsy"
                 : 'gentype_word));
# 3217 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_for_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 381 ".\Parser.fsy"
                                          _1 
                   )
# 381 ".\Parser.fsy"
                 : 'gentype_word));
# 3228 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 382 ".\Parser.fsy"
                                                EFunctionLiteral (_1) 
                   )
# 382 ".\Parser.fsy"
                 : 'gentype_word));
# 3239 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 388 ".\Parser.fsy"
                                                 EExtension (_2) 
                   )
# 388 ".\Parser.fsy"
                 : 'gentype_word));
# 3250 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 389 ".\Parser.fsy"
                                                 ESelect (false, _2) 
                   )
# 389 ".\Parser.fsy"
                 : 'gentype_word));
# 3261 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 390 ".\Parser.fsy"
                                                ESelect (true, _2) 
                   )
# 390 ".\Parser.fsy"
                 : 'gentype_word));
# 3272 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_variant_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 392 ".\Parser.fsy"
                                               _1 
                   )
# 392 ".\Parser.fsy"
                 : 'gentype_word));
# 3283 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_case_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 393 ".\Parser.fsy"
                                          _1 
                   )
# 393 ".\Parser.fsy"
                 : 'gentype_word));
# 3294 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 394 ".\Parser.fsy"
                                                           EWithState (_2) 
                   )
# 394 ".\Parser.fsy"
                 : 'gentype_word));
# 3305 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_permission in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 395 ".\Parser.fsy"
                                           _1 
                   )
# 395 ".\Parser.fsy"
                 : 'gentype_word));
# 3316 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 396 ".\Parser.fsy"
                                       ETrust 
                   )
# 396 ".\Parser.fsy"
                 : 'gentype_word));
# 3326 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 397 ".\Parser.fsy"
                                          EDistrust 
                   )
# 397 ".\Parser.fsy"
                 : 'gentype_word));
# 3336 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 398 ".\Parser.fsy"
                                       EAudit 
                   )
# 398 ".\Parser.fsy"
                 : 'gentype_word));
# 3346 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 399 ".\Parser.fsy"
                                        EUntag 
                   )
# 399 ".\Parser.fsy"
                 : 'gentype_word));
# 3356 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 402 ".\Parser.fsy"
                                     EDo 
                   )
# 402 ".\Parser.fsy"
                 : 'gentype_word));
# 3366 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 404 ".\Parser.fsy"
                                       ETrue 
                   )
# 404 ".\Parser.fsy"
                 : 'gentype_word));
# 3376 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 405 ".\Parser.fsy"
                                       EFalse 
                   )
# 405 ".\Parser.fsy"
                 : 'gentype_word));
# 3386 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 406 ".\Parser.fsy"
                                         EInteger (_1) 
                   )
# 406 ".\Parser.fsy"
                 : 'gentype_word));
# 3397 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> DecimalLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 407 ".\Parser.fsy"
                                         EDecimal (_1) 
                   )
# 407 ".\Parser.fsy"
                 : 'gentype_word));
# 3408 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 408 ".\Parser.fsy"
                                        EString (_1) 
                   )
# 408 ".\Parser.fsy"
                 : 'gentype_word));
# 3419 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  Identifier  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 409 ".\Parser.fsy"
                                           EIdentifier (_1) 
                   )
# 409 ".\Parser.fsy"
                 : 'gentype_word));
# 3430 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_term_statement_block in
            let _7 = parseState.GetInput(7) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 412 ".\Parser.fsy"
                           EWithPermission (_3, _5, _7) 
                   )
# 412 ".\Parser.fsy"
                 : 'gentype_permission));
# 3443 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_term_statement_block in
            let _7 = parseState.GetInput(7) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 414 ".\Parser.fsy"
                           EIfPermission (_3, _5, _7) 
                   )
# 414 ".\Parser.fsy"
                 : 'gentype_permission));
# 3456 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_handler_list in
            let _7 = parseState.GetInput(7) :?> 'gentype_return in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 417 ".\Parser.fsy"
                           EHandle (_2, _3, _6, _7) 
                   )
# 417 ".\Parser.fsy"
                 : 'gentype_handle_word));
# 3470 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_handler_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 419 ".\Parser.fsy"
                           EHandle (_2, _3, _6, []) 
                   )
# 419 ".\Parser.fsy"
                 : 'gentype_handle_word));
# 3483 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?>  Identifier  in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 421 ".\Parser.fsy"
                                                                              { Name = _2; Params = _3; Body = _5; } 
                   )
# 421 ".\Parser.fsy"
                 : 'gentype_handler));
# 3496 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 424 ".\Parser.fsy"
                          _4 
                   )
# 424 ".\Parser.fsy"
                 : 'gentype_return));
# 3507 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_no_dot_pattern_expr_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 426 ".\Parser.fsy"
                             [EStatementBlock([SLet { Matcher = _3; Body = [] }; SExpression(_5)])] 
                   )
# 426 ".\Parser.fsy"
                 : 'gentype_return));
# 3519 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 428 ".\Parser.fsy"
                                         [] 
                   )
# 428 ".\Parser.fsy"
                 : 'gentype_param_list));
# 3529 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_param_list in
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 429 ".\Parser.fsy"
                                                     List.append _1 [_2] 
                   )
# 429 ".\Parser.fsy"
                 : 'gentype_param_list));
# 3541 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 431 ".\Parser.fsy"
                                           [] 
                   )
# 431 ".\Parser.fsy"
                 : 'gentype_handler_list));
# 3551 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handler_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_handler in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 432 ".\Parser.fsy"
                                                  List.append _1 [_2] 
                   )
# 432 ".\Parser.fsy"
                 : 'gentype_handler_list));
# 3563 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_eff_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 434 ".\Parser.fsy"
                                                                          EInject (_2, _3) 
                   )
# 434 ".\Parser.fsy"
                 : 'gentype_inject_word));
# 3575 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 436 ".\Parser.fsy"
                                                  [_1] 
                   )
# 436 ".\Parser.fsy"
                 : 'gentype_eff_list));
# 3586 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _2 = parseState.GetInput(2) :?> 'gentype_eff_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 437 ".\Parser.fsy"
                                                   _1 :: _2 
                   )
# 437 ".\Parser.fsy"
                 : 'gentype_eff_list));
# 3598 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_match_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 439 ".\Parser.fsy"
                                                                                    EMatch (_3, []) 
                   )
# 439 ".\Parser.fsy"
                 : 'gentype_match_word));
# 3609 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_match_clause_list in
            let _7 = parseState.GetInput(7) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 440 ".\Parser.fsy"
                                                                                                  EMatch (_3, _7) 
                   )
# 440 ".\Parser.fsy"
                 : 'gentype_match_word));
# 3621 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 442 ".\Parser.fsy"
                                                            [_1] 
                   )
# 442 ".\Parser.fsy"
                 : 'gentype_match_clause_list));
# 3632 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_clause_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_match_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 443 ".\Parser.fsy"
                                                              List.append _1 [_2] 
                   )
# 443 ".\Parser.fsy"
                 : 'gentype_match_clause_list));
# 3644 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 445 ".\Parser.fsy"
                                                                               { Matcher = _2; Body = _4 } 
                   )
# 445 ".\Parser.fsy"
                 : 'gentype_match_clause));
# 3656 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 447 ".\Parser.fsy"
                                                                                                    EIf (_2, _4, _6) 
                   )
# 447 ".\Parser.fsy"
                 : 'gentype_if_word));
# 3669 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_switch_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 449 ".\Parser.fsy"
                                                                               switchClausesToIfs _3 
                   )
# 449 ".\Parser.fsy"
                 : 'gentype_switch_word));
# 3680 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 451 ".\Parser.fsy"
                                                                               [_4] 
                   )
# 451 ".\Parser.fsy"
                 : 'gentype_switch_clause_list));
# 3691 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_switch_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 452 ".\Parser.fsy"
                                                                                      _2 :: _4 :: _5 
                   )
# 452 ".\Parser.fsy"
                 : 'gentype_switch_clause_list));
# 3704 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 454 ".\Parser.fsy"
                                                                              EIf (_2, _4, []) 
                   )
# 454 ".\Parser.fsy"
                 : 'gentype_when_word));
# 3716 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 456 ".\Parser.fsy"
                                                                                EWhile (_2, _4) 
                   )
# 456 ".\Parser.fsy"
                 : 'gentype_while_word));
# 3728 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_parallel_sequences in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 459 ".\Parser.fsy"
                          EForEffect (_2, _4) 
                   )
# 459 ".\Parser.fsy"
                 : 'gentype_for_word));
# 3740 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_parallel_sequences in
            let _4 = parseState.GetInput(4) :?> 'gentype_for_results in
            let _6 = parseState.GetInput(6) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 461 ".\Parser.fsy"
                           EForComprehension (_4, _2, _6) 
                   )
# 461 ".\Parser.fsy"
                 : 'gentype_for_word));
# 3753 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_parallel_sequences in
            let _4 = parseState.GetInput(4) :?> 'gentype_fold_inits in
            let _6 = parseState.GetInput(6) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 463 ".\Parser.fsy"
                           EForFold (_4, _2, _6) 
                   )
# 463 ".\Parser.fsy"
                 : 'gentype_for_word));
# 3766 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_for_result in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 465 ".\Parser.fsy"
                                                    [_1] 
                   )
# 465 ".\Parser.fsy"
                 : 'gentype_for_results));
# 3777 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_for_result in
            let _3 = parseState.GetInput(3) :?> 'gentype_for_results in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 466 ".\Parser.fsy"
                                                         _1 :: _3 
                   )
# 466 ".\Parser.fsy"
                 : 'gentype_for_results));
# 3789 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 468 ".\Parser.fsy"
                                           FForTuple 
                   )
# 468 ".\Parser.fsy"
                 : 'gentype_for_result));
# 3799 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 469 ".\Parser.fsy"
                                    FForList 
                   )
# 469 ".\Parser.fsy"
                 : 'gentype_for_result));
# 3809 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 470 ".\Parser.fsy"
                                      FForVector 
                   )
# 470 ".\Parser.fsy"
                 : 'gentype_for_result));
# 3819 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 472 ".\Parser.fsy"
                                            FForTuple 
                   )
# 472 ".\Parser.fsy"
                 : 'gentype_for_sequence));
# 3829 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 473 ".\Parser.fsy"
                                   FForList 
                   )
# 473 ".\Parser.fsy"
                 : 'gentype_for_sequence));
# 3839 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 474 ".\Parser.fsy"
                                    FForVector 
                   )
# 474 ".\Parser.fsy"
                 : 'gentype_for_sequence));
# 3849 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_for_sequence in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 477 ".\Parser.fsy"
                             [{ Name = _1; SeqType = _3; Assigned = _4 }] 
                   )
# 477 ".\Parser.fsy"
                 : 'gentype_parallel_sequences));
# 3862 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_for_sequence in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_parallel_sequences in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 479 ".\Parser.fsy"
                                { Name = _1; SeqType = _3; Assigned = _4 } :: _6 
                   )
# 479 ".\Parser.fsy"
                 : 'gentype_parallel_sequences));
# 3876 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 482 ".\Parser.fsy"
                           [{ Name = _1; Assigned = _3 }] 
                   )
# 482 ".\Parser.fsy"
                 : 'gentype_fold_inits));
# 3888 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_fold_inits in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 484 ".\Parser.fsy"
                              { Name = _1; Assigned = _3; } :: _5 
                   )
# 484 ".\Parser.fsy"
                 : 'gentype_fold_inits));
# 3901 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 487 ".\Parser.fsy"
                            _2 
                   )
# 487 ".\Parser.fsy"
                 : 'gentype_function_literal));
# 3912 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_var_only_pattern_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 489 ".\Parser.fsy"
                             [EStatementBlock([SLet { Matcher = _2; Body = [] }; SExpression(_4)])] 
                   )
# 489 ".\Parser.fsy"
                 : 'gentype_function_literal));
# 3924 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 491 ".\Parser.fsy"
                                                                  [_1] 
                   )
# 491 ".\Parser.fsy"
                 : 'gentype_lit_expr_list));
# 3935 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_lit_expr_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 492 ".\Parser.fsy"
                                                                        List.append _1 [_3] 
                   )
# 492 ".\Parser.fsy"
                 : 'gentype_lit_expr_list));
# 3947 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 494 ".\Parser.fsy"
                                                                [ETupleLiteral []] 
                   )
# 494 ".\Parser.fsy"
                 : 'gentype_tuple_literal));
# 3957 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_lit_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 495 ".\Parser.fsy"
                                                                 ETupleLiteral [] :: expandTupleConsSyntax _2 
                   )
# 495 ".\Parser.fsy"
                 : 'gentype_tuple_literal));
# 3968 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 496 ".\Parser.fsy"
                                                                              [ETupleLiteral _3] 
                   )
# 496 ".\Parser.fsy"
                 : 'gentype_tuple_literal));
# 3979 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_non_empty_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_lit_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 497 ".\Parser.fsy"
                                                                                            ETupleLiteral _3 :: expandTupleConsSyntax _5 
                   )
# 497 ".\Parser.fsy"
                 : 'gentype_tuple_literal));
# 3991 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_lit_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 499 ".\Parser.fsy"
                                                                               EListLiteral ([], _2) 
                   )
# 499 ".\Parser.fsy"
                 : 'gentype_list_literal));
# 4002 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_non_empty_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_lit_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 500 ".\Parser.fsy"
                                                                                           EListLiteral (_2, _4) 
                   )
# 500 ".\Parser.fsy"
                 : 'gentype_list_literal));
# 4014 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_non_empty_simple_expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 508 ".\Parser.fsy"
                                                                                                              ERecordLiteral (_4) :: expandFieldSyntax _6 
                   )
# 508 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 4026 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 509 ".\Parser.fsy"
                                                                                         [ERecordLiteral (_4)] 
                   )
# 509 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 4037 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 510 ".\Parser.fsy"
                                                                          ERecordLiteral ([]) :: expandFieldSyntax _3 
                   )
# 510 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 4048 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 511 ".\Parser.fsy"
                                                                  [ERecordLiteral ([])] 
                   )
# 511 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 4058 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_field in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 513 ".\Parser.fsy"
                                                                   EVariantLiteral (_2) 
                   )
# 513 ".\Parser.fsy"
                 : 'gentype_variant_literal));
# 4069 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?>  List<CaseClause>  in
            let _7 = parseState.GetInput(7) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 515 ".\Parser.fsy"
                                                                                                     ECase (_3, _7) 
                   )
# 515 ".\Parser.fsy"
                 : 'gentype_case_word));
# 4081 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_case_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 517 ".\Parser.fsy"
                                                          [_1] 
                   )
# 517 ".\Parser.fsy"
                 :  List<CaseClause> ));
# 4092 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  List<CaseClause>  in
            let _2 = parseState.GetInput(2) :?> 'gentype_case_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 518 ".\Parser.fsy"
                                                           List.append _1 [_2] 
                   )
# 518 ".\Parser.fsy"
                 :  List<CaseClause> ));
# 4104 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 520 ".\Parser.fsy"
                                                                       { Tag = _2; Body = _4 } 
                   )
# 520 ".\Parser.fsy"
                 : 'gentype_case_clause));
# 4116 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_field in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 522 ".\Parser.fsy"
                                              [_1] 
                   )
# 522 ".\Parser.fsy"
                 : 'gentype_field_list));
# 4127 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_field in
            let _3 = parseState.GetInput(3) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 523 ".\Parser.fsy"
                                                     _1 :: _3 
                   )
# 523 ".\Parser.fsy"
                 : 'gentype_field_list));
# 4139 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 525 ".\Parser.fsy"
                                                             (_1, _3) 
                   )
# 525 ".\Parser.fsy"
                 : 'gentype_field));
# 4151 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 527 ".\Parser.fsy"
                                                   sIdentifier (List.take (List.length _1 - 1) _1) (List.last _1) 
                   )
# 527 ".\Parser.fsy"
                 :  Identifier ));
# 4162 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_qualified_ctor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 529 ".\Parser.fsy"
                                                        sIdentifier (List.take (List.length _1 - 1) _1) (List.last _1) 
                   )
# 529 ".\Parser.fsy"
                 : 'gentype_type_identifier));
# 4173 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 531 ".\Parser.fsy"
                                                          [_1] 
                   )
# 531 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 4184 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 532 ".\Parser.fsy"
                                               [_1] 
                   )
# 532 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 4195 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 533 ".\Parser.fsy"
                                                   [_1] 
                   )
# 533 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 4206 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 534 ".\Parser.fsy"
                                                    [_1] 
                   )
# 534 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 4217 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 535 ".\Parser.fsy"
                                                                      _1 :: _3 
                   )
# 535 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 4229 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 537 ".\Parser.fsy"
                                                        [_1] 
                   )
# 537 ".\Parser.fsy"
                 : 'gentype_qualified_ctor));
# 4240 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 538 ".\Parser.fsy"
                                                   [_1] 
                   )
# 538 ".\Parser.fsy"
                 : 'gentype_qualified_ctor));
# 4251 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 539 ".\Parser.fsy"
                                                    [_1] 
                   )
# 539 ".\Parser.fsy"
                 : 'gentype_qualified_ctor));
# 4262 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_qualified_ctor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 540 ".\Parser.fsy"
                                                                      _1 :: _3 
                   )
# 540 ".\Parser.fsy"
                 : 'gentype_qualified_ctor));
# 4274 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 544 ".\Parser.fsy"
                                                                      ind _1 SEnd 
                   )
# 544 ".\Parser.fsy"
                 : 'gentype_no_dot_pattern_expr_list));
# 4285 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_no_dot_pattern_expr_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 545 ".\Parser.fsy"
                                                                      ind _2 _1 
                   )
# 545 ".\Parser.fsy"
                 : 'gentype_no_dot_pattern_expr_list));
# 4297 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 547 ".\Parser.fsy"
                                                        SEnd 
                   )
# 547 ".\Parser.fsy"
                 : 'gentype_var_only_pattern_list));
# 4307 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _2 = parseState.GetInput(2) :?> 'gentype_var_only_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 548 ".\Parser.fsy"
                                                                 ind (PNamed (_1, PWildcard)) _2 
                   )
# 548 ".\Parser.fsy"
                 : 'gentype_var_only_pattern_list));
# 4319 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 550 ".\Parser.fsy"
                                                            ind _1 SEnd 
                   )
# 550 ".\Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 4330 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 551 ".\Parser.fsy"
                                                       dot _1 SEnd 
                   )
# 551 ".\Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 4341 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 552 ".\Parser.fsy"
                                                               ind _2 _1 
                   )
# 552 ".\Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 4353 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 554 ".\Parser.fsy"
                                                                                  [(_1, _3)] 
                   )
# 554 ".\Parser.fsy"
                 : 'gentype_field_pattern_list));
# 4365 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_field_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 555 ".\Parser.fsy"
                                                                                        (_1, _3) :: _5 
                   )
# 555 ".\Parser.fsy"
                 : 'gentype_field_pattern_list));
# 4378 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 557 ".\Parser.fsy"
                                                      PTrue 
                   )
# 557 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4388 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 558 ".\Parser.fsy"
                                             PFalse 
                   )
# 558 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4398 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 559 ".\Parser.fsy"
                                               PInteger (_1) 
                   )
# 559 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4409 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> DecimalLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 560 ".\Parser.fsy"
                                               PDecimal (_1) 
                   )
# 560 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4420 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 561 ".\Parser.fsy"
                                              PString (_1) 
                   )
# 561 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4431 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 562 ".\Parser.fsy"
                                                 PWildcard 
                   )
# 562 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4441 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 563 ".\Parser.fsy"
                                                      PRef (_2) 
                   )
# 563 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4452 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 564 ".\Parser.fsy"
                                                 PNamed (_1, PWildcard) 
                   )
# 564 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4463 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 565 ".\Parser.fsy"
                                                              PNamed (_1, _3) 
                   )
# 565 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4475 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_identifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 567 ".\Parser.fsy"
                            PConstructor (_1, SEnd) 
                   )
# 567 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4486 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_type_identifier in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 569 ".\Parser.fsy"
                            PConstructor (_2, _3) 
                   )
# 569 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4498 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tuple_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 570 ".\Parser.fsy"
                                                   _1 
                   )
# 570 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4509 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_list_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 571 ".\Parser.fsy"
                                                   _1 
                   )
# 571 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4520 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_vector_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 572 ".\Parser.fsy"
                                                    _1 
                   )
# 572 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4531 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_slice_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 573 ".\Parser.fsy"
                                                   _1 
                   )
# 573 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4542 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_record_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 574 ".\Parser.fsy"
                                                    _1 
                   )
# 574 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4553 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 576 ".\Parser.fsy"
                                                                       PTuple (_2) 
                   )
# 576 ".\Parser.fsy"
                 : 'gentype_tuple_pattern));
# 4564 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 578 ".\Parser.fsy"
                                                                              PList (_2) 
                   )
# 578 ".\Parser.fsy"
                 : 'gentype_list_pattern));
# 4575 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 580 ".\Parser.fsy"
                                                                                  PVector (_3) 
                   )
# 580 ".\Parser.fsy"
                 : 'gentype_vector_pattern));
# 4586 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 582 ".\Parser.fsy"
                                                                                 PSlice (_3) 
                   )
# 582 ".\Parser.fsy"
                 : 'gentype_slice_pattern));
# 4597 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_field_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 584 ".\Parser.fsy"
                                                                                   PRecord (_3) 
                   )
# 584 ".\Parser.fsy"
                 : 'gentype_record_pattern));
|]
# 4609 "Parser.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 127;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let unit lexer lexbuf :  Unit  =
    engine lexer lexbuf 0 :?> _
