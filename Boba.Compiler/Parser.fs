// Implementation file for parser generated by fsyacc
module Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 ".\Parser.fsy"


open Boba.Compiler.Syntax
open Boba.Core.DotSeq
open Boba.Core.Kinds
open Boba.Core.Types
open Boba.Core.TypeBuilder


# 16 "Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | IS
  | ONE
  | TRUE
  | FALSE
  | NOT
  | TUPLE
  | LIST
  | ITERATOR
  | STRING_KEY
  | VECTOR
  | SLICE
  | DICTIONARY
  | CASE
  | FOR
  | IN
  | BREAK
  | FINAL
  | FILL
  | LENGTH
  | RESULT
  | IF
  | WHEN
  | SWITCH
  | WHILE
  | THEN
  | ELSE
  | DO
  | MATCH
  | INJECT
  | WITH
  | AFTER
  | HANDLE
  | UNTAG
  | BY
  | PER
  | TRUST
  | DISTRUST
  | AUDIT
  | WITH_STATE
  | PERMISSION
  | FUNCTION
  | NATIVE
  | LOCAL
  | LET
  | BOOLEAN
  | ABELIAN
  | SYNTACTIC
  | IS_ROUGHLY
  | IS_NOT
  | SATISFIES
  | VIOLATES
  | TEST
  | LAW
  | EXHAUSTIVE
  | SYNONYM
  | TAG
  | EFFECT
  | OVERLOAD
  | INSTANCE
  | RULE
  | CHECK
  | PATTERN
  | RECURSIVE
  | KIND
  | DATA
  | ABOUT
  | MAIN
  | EXPORT
  | FROM
  | AS
  | IMPORT
  | REF
  | UNDERSCORE
  | EQUALS
  | ELLIPSIS
  | DOUBLE_AMP
  | DOUBLE_BAR
  | BAR
  | DOT
  | PLUS
  | MINUS
  | STAR
  | COLON
  | DOUBLE_COLON
  | CARET
  | COMMA
  | SEMICOLON
  | FN_CTOR
  | FN_ARROW_BACK
  | FN_ARROW_FRONT
  | FN_DIVIDE
  | L_CONE
  | R_CONE
  | L_BOX
  | R_BOX
  | L_PUMPKIN
  | R_PUMPKIN
  | L_BANANA
  | R_BANANA
  | L_BIND
  | R_BIND
  | L_STAR
  | R_STAR
  | L_ARROW
  | R_ARROW
  | L_BRACKET
  | R_BRACKET
  | L_BRACE
  | R_BRACE
  | L_PAREN
  | R_PAREN
  | DOCUMENTATION_LINE of (DocumentationLine)
  | NATIVE_CODE_LINE of (NativeCodeLine)
  | CHARACTER of (CharacterLiteral)
  | STRING of (StringLiteral)
  | DECIMAL of (DecimalLiteral)
  | INTEGER of (IntegerLiteral)
  | TEST_NAME of (Name)
  | PREDICATE_NAME of (Name)
  | OPERATOR_NAME of (Name)
  | BIG_NAME of (Name)
  | SMALL_NAME of (Name)
  | EOF
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_IS
    | TOKEN_ONE
    | TOKEN_TRUE
    | TOKEN_FALSE
    | TOKEN_NOT
    | TOKEN_TUPLE
    | TOKEN_LIST
    | TOKEN_ITERATOR
    | TOKEN_STRING_KEY
    | TOKEN_VECTOR
    | TOKEN_SLICE
    | TOKEN_DICTIONARY
    | TOKEN_CASE
    | TOKEN_FOR
    | TOKEN_IN
    | TOKEN_BREAK
    | TOKEN_FINAL
    | TOKEN_FILL
    | TOKEN_LENGTH
    | TOKEN_RESULT
    | TOKEN_IF
    | TOKEN_WHEN
    | TOKEN_SWITCH
    | TOKEN_WHILE
    | TOKEN_THEN
    | TOKEN_ELSE
    | TOKEN_DO
    | TOKEN_MATCH
    | TOKEN_INJECT
    | TOKEN_WITH
    | TOKEN_AFTER
    | TOKEN_HANDLE
    | TOKEN_UNTAG
    | TOKEN_BY
    | TOKEN_PER
    | TOKEN_TRUST
    | TOKEN_DISTRUST
    | TOKEN_AUDIT
    | TOKEN_WITH_STATE
    | TOKEN_PERMISSION
    | TOKEN_FUNCTION
    | TOKEN_NATIVE
    | TOKEN_LOCAL
    | TOKEN_LET
    | TOKEN_BOOLEAN
    | TOKEN_ABELIAN
    | TOKEN_SYNTACTIC
    | TOKEN_IS_ROUGHLY
    | TOKEN_IS_NOT
    | TOKEN_SATISFIES
    | TOKEN_VIOLATES
    | TOKEN_TEST
    | TOKEN_LAW
    | TOKEN_EXHAUSTIVE
    | TOKEN_SYNONYM
    | TOKEN_TAG
    | TOKEN_EFFECT
    | TOKEN_OVERLOAD
    | TOKEN_INSTANCE
    | TOKEN_RULE
    | TOKEN_CHECK
    | TOKEN_PATTERN
    | TOKEN_RECURSIVE
    | TOKEN_KIND
    | TOKEN_DATA
    | TOKEN_ABOUT
    | TOKEN_MAIN
    | TOKEN_EXPORT
    | TOKEN_FROM
    | TOKEN_AS
    | TOKEN_IMPORT
    | TOKEN_REF
    | TOKEN_UNDERSCORE
    | TOKEN_EQUALS
    | TOKEN_ELLIPSIS
    | TOKEN_DOUBLE_AMP
    | TOKEN_DOUBLE_BAR
    | TOKEN_BAR
    | TOKEN_DOT
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_STAR
    | TOKEN_COLON
    | TOKEN_DOUBLE_COLON
    | TOKEN_CARET
    | TOKEN_COMMA
    | TOKEN_SEMICOLON
    | TOKEN_FN_CTOR
    | TOKEN_FN_ARROW_BACK
    | TOKEN_FN_ARROW_FRONT
    | TOKEN_FN_DIVIDE
    | TOKEN_L_CONE
    | TOKEN_R_CONE
    | TOKEN_L_BOX
    | TOKEN_R_BOX
    | TOKEN_L_PUMPKIN
    | TOKEN_R_PUMPKIN
    | TOKEN_L_BANANA
    | TOKEN_R_BANANA
    | TOKEN_L_BIND
    | TOKEN_R_BIND
    | TOKEN_L_STAR
    | TOKEN_R_STAR
    | TOKEN_L_ARROW
    | TOKEN_R_ARROW
    | TOKEN_L_BRACKET
    | TOKEN_R_BRACKET
    | TOKEN_L_BRACE
    | TOKEN_R_BRACE
    | TOKEN_L_PAREN
    | TOKEN_R_PAREN
    | TOKEN_DOCUMENTATION_LINE
    | TOKEN_NATIVE_CODE_LINE
    | TOKEN_CHARACTER
    | TOKEN_STRING
    | TOKEN_DECIMAL
    | TOKEN_INTEGER
    | TOKEN_TEST_NAME
    | TOKEN_PREDICATE_NAME
    | TOKEN_OPERATOR_NAME
    | TOKEN_BIG_NAME
    | TOKEN_SMALL_NAME
    | TOKEN_EOF
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startunit
    | NONTERM_unit
    | NONTERM_import_list
    | NONTERM_decl_list
    | NONTERM_main
    | NONTERM_import
    | NONTERM_import_path
    | NONTERM_remote
    | NONTERM_export
    | NONTERM_brace_names
    | NONTERM_name_list
    | NONTERM_name
    | NONTERM_declaration
    | NONTERM_documentation
    | NONTERM_documentation_lines
    | NONTERM_function
    | NONTERM_function_list
    | NONTERM_native
    | NONTERM_native_code_list
    | NONTERM_userkind
    | NONTERM_kind_unify
    | NONTERM_datatype
    | NONTERM_type_param_list
    | NONTERM_datatype_list
    | NONTERM_constructor
    | NONTERM_constructor_list
    | NONTERM_rule
    | NONTERM_overload
    | NONTERM_opt_type_param_list
    | NONTERM_instance
    | NONTERM_effect
    | NONTERM_handler_template_list
    | NONTERM_handler_template
    | NONTERM_test
    | NONTERM_law
    | NONTERM_test_all
    | NONTERM_check
    | NONTERM_tag
    | NONTERM_base_kind
    | NONTERM_compound_kind
    | NONTERM_constraint_list
    | NONTERM_constraint
    | NONTERM_predicate_list
    | NONTERM_predicate
    | NONTERM_qual_fn_type
    | NONTERM_base_type
    | NONTERM_val_type
    | NONTERM_top_fn_type
    | NONTERM_fn_type
    | NONTERM_fn_type_seq
    | NONTERM_fn_row_type
    | NONTERM_field_row_type
    | NONTERM_field_type
    | NONTERM_compound_type
    | NONTERM_and_sequence
    | NONTERM_or_sequence
    | NONTERM_mul_sequence
    | NONTERM_type_arg_list
    | NONTERM_term_statement_block
    | NONTERM_term_statement_list
    | NONTERM_term_statement
    | NONTERM_non_empty_simple_expr
    | NONTERM_simple_expr
    | NONTERM_word
    | NONTERM_permission
    | NONTERM_handle_word
    | NONTERM_handler
    | NONTERM_return
    | NONTERM_param_list
    | NONTERM_handler_list
    | NONTERM_inject_word
    | NONTERM_eff_list
    | NONTERM_match_word
    | NONTERM_match_clause_list
    | NONTERM_match_clause
    | NONTERM_if_word
    | NONTERM_switch_word
    | NONTERM_switch_clause_list
    | NONTERM_when_word
    | NONTERM_while_word
    | NONTERM_for_word
    | NONTERM_for_results
    | NONTERM_for_result
    | NONTERM_for_sequence
    | NONTERM_parallel_sequences
    | NONTERM_fold_inits
    | NONTERM_function_literal
    | NONTERM_lit_expr_list
    | NONTERM_tuple_literal
    | NONTERM_list_literal
    | NONTERM_record_literal
    | NONTERM_variant_literal
    | NONTERM_case_word
    | NONTERM_case_clause_list
    | NONTERM_case_clause
    | NONTERM_field_list
    | NONTERM_field
    | NONTERM_identifier
    | NONTERM_type_identifier
    | NONTERM_pred_identifier
    | NONTERM_qualified_name
    | NONTERM_qualified_ctor
    | NONTERM_qualified_pred
    | NONTERM_no_dot_pattern_expr_list
    | NONTERM_var_only_pattern_list
    | NONTERM_pattern_expr_list
    | NONTERM_field_pattern_list
    | NONTERM_pattern_expr
    | NONTERM_tuple_pattern
    | NONTERM_list_pattern
    | NONTERM_vector_pattern
    | NONTERM_slice_pattern
    | NONTERM_record_pattern

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | IS  -> 0 
  | ONE  -> 1 
  | TRUE  -> 2 
  | FALSE  -> 3 
  | NOT  -> 4 
  | TUPLE  -> 5 
  | LIST  -> 6 
  | ITERATOR  -> 7 
  | STRING_KEY  -> 8 
  | VECTOR  -> 9 
  | SLICE  -> 10 
  | DICTIONARY  -> 11 
  | CASE  -> 12 
  | FOR  -> 13 
  | IN  -> 14 
  | BREAK  -> 15 
  | FINAL  -> 16 
  | FILL  -> 17 
  | LENGTH  -> 18 
  | RESULT  -> 19 
  | IF  -> 20 
  | WHEN  -> 21 
  | SWITCH  -> 22 
  | WHILE  -> 23 
  | THEN  -> 24 
  | ELSE  -> 25 
  | DO  -> 26 
  | MATCH  -> 27 
  | INJECT  -> 28 
  | WITH  -> 29 
  | AFTER  -> 30 
  | HANDLE  -> 31 
  | UNTAG  -> 32 
  | BY  -> 33 
  | PER  -> 34 
  | TRUST  -> 35 
  | DISTRUST  -> 36 
  | AUDIT  -> 37 
  | WITH_STATE  -> 38 
  | PERMISSION  -> 39 
  | FUNCTION  -> 40 
  | NATIVE  -> 41 
  | LOCAL  -> 42 
  | LET  -> 43 
  | BOOLEAN  -> 44 
  | ABELIAN  -> 45 
  | SYNTACTIC  -> 46 
  | IS_ROUGHLY  -> 47 
  | IS_NOT  -> 48 
  | SATISFIES  -> 49 
  | VIOLATES  -> 50 
  | TEST  -> 51 
  | LAW  -> 52 
  | EXHAUSTIVE  -> 53 
  | SYNONYM  -> 54 
  | TAG  -> 55 
  | EFFECT  -> 56 
  | OVERLOAD  -> 57 
  | INSTANCE  -> 58 
  | RULE  -> 59 
  | CHECK  -> 60 
  | PATTERN  -> 61 
  | RECURSIVE  -> 62 
  | KIND  -> 63 
  | DATA  -> 64 
  | ABOUT  -> 65 
  | MAIN  -> 66 
  | EXPORT  -> 67 
  | FROM  -> 68 
  | AS  -> 69 
  | IMPORT  -> 70 
  | REF  -> 71 
  | UNDERSCORE  -> 72 
  | EQUALS  -> 73 
  | ELLIPSIS  -> 74 
  | DOUBLE_AMP  -> 75 
  | DOUBLE_BAR  -> 76 
  | BAR  -> 77 
  | DOT  -> 78 
  | PLUS  -> 79 
  | MINUS  -> 80 
  | STAR  -> 81 
  | COLON  -> 82 
  | DOUBLE_COLON  -> 83 
  | CARET  -> 84 
  | COMMA  -> 85 
  | SEMICOLON  -> 86 
  | FN_CTOR  -> 87 
  | FN_ARROW_BACK  -> 88 
  | FN_ARROW_FRONT  -> 89 
  | FN_DIVIDE  -> 90 
  | L_CONE  -> 91 
  | R_CONE  -> 92 
  | L_BOX  -> 93 
  | R_BOX  -> 94 
  | L_PUMPKIN  -> 95 
  | R_PUMPKIN  -> 96 
  | L_BANANA  -> 97 
  | R_BANANA  -> 98 
  | L_BIND  -> 99 
  | R_BIND  -> 100 
  | L_STAR  -> 101 
  | R_STAR  -> 102 
  | L_ARROW  -> 103 
  | R_ARROW  -> 104 
  | L_BRACKET  -> 105 
  | R_BRACKET  -> 106 
  | L_BRACE  -> 107 
  | R_BRACE  -> 108 
  | L_PAREN  -> 109 
  | R_PAREN  -> 110 
  | DOCUMENTATION_LINE _ -> 111 
  | NATIVE_CODE_LINE _ -> 112 
  | CHARACTER _ -> 113 
  | STRING _ -> 114 
  | DECIMAL _ -> 115 
  | INTEGER _ -> 116 
  | TEST_NAME _ -> 117 
  | PREDICATE_NAME _ -> 118 
  | OPERATOR_NAME _ -> 119 
  | BIG_NAME _ -> 120 
  | SMALL_NAME _ -> 121 
  | EOF  -> 122 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_IS 
  | 1 -> TOKEN_ONE 
  | 2 -> TOKEN_TRUE 
  | 3 -> TOKEN_FALSE 
  | 4 -> TOKEN_NOT 
  | 5 -> TOKEN_TUPLE 
  | 6 -> TOKEN_LIST 
  | 7 -> TOKEN_ITERATOR 
  | 8 -> TOKEN_STRING_KEY 
  | 9 -> TOKEN_VECTOR 
  | 10 -> TOKEN_SLICE 
  | 11 -> TOKEN_DICTIONARY 
  | 12 -> TOKEN_CASE 
  | 13 -> TOKEN_FOR 
  | 14 -> TOKEN_IN 
  | 15 -> TOKEN_BREAK 
  | 16 -> TOKEN_FINAL 
  | 17 -> TOKEN_FILL 
  | 18 -> TOKEN_LENGTH 
  | 19 -> TOKEN_RESULT 
  | 20 -> TOKEN_IF 
  | 21 -> TOKEN_WHEN 
  | 22 -> TOKEN_SWITCH 
  | 23 -> TOKEN_WHILE 
  | 24 -> TOKEN_THEN 
  | 25 -> TOKEN_ELSE 
  | 26 -> TOKEN_DO 
  | 27 -> TOKEN_MATCH 
  | 28 -> TOKEN_INJECT 
  | 29 -> TOKEN_WITH 
  | 30 -> TOKEN_AFTER 
  | 31 -> TOKEN_HANDLE 
  | 32 -> TOKEN_UNTAG 
  | 33 -> TOKEN_BY 
  | 34 -> TOKEN_PER 
  | 35 -> TOKEN_TRUST 
  | 36 -> TOKEN_DISTRUST 
  | 37 -> TOKEN_AUDIT 
  | 38 -> TOKEN_WITH_STATE 
  | 39 -> TOKEN_PERMISSION 
  | 40 -> TOKEN_FUNCTION 
  | 41 -> TOKEN_NATIVE 
  | 42 -> TOKEN_LOCAL 
  | 43 -> TOKEN_LET 
  | 44 -> TOKEN_BOOLEAN 
  | 45 -> TOKEN_ABELIAN 
  | 46 -> TOKEN_SYNTACTIC 
  | 47 -> TOKEN_IS_ROUGHLY 
  | 48 -> TOKEN_IS_NOT 
  | 49 -> TOKEN_SATISFIES 
  | 50 -> TOKEN_VIOLATES 
  | 51 -> TOKEN_TEST 
  | 52 -> TOKEN_LAW 
  | 53 -> TOKEN_EXHAUSTIVE 
  | 54 -> TOKEN_SYNONYM 
  | 55 -> TOKEN_TAG 
  | 56 -> TOKEN_EFFECT 
  | 57 -> TOKEN_OVERLOAD 
  | 58 -> TOKEN_INSTANCE 
  | 59 -> TOKEN_RULE 
  | 60 -> TOKEN_CHECK 
  | 61 -> TOKEN_PATTERN 
  | 62 -> TOKEN_RECURSIVE 
  | 63 -> TOKEN_KIND 
  | 64 -> TOKEN_DATA 
  | 65 -> TOKEN_ABOUT 
  | 66 -> TOKEN_MAIN 
  | 67 -> TOKEN_EXPORT 
  | 68 -> TOKEN_FROM 
  | 69 -> TOKEN_AS 
  | 70 -> TOKEN_IMPORT 
  | 71 -> TOKEN_REF 
  | 72 -> TOKEN_UNDERSCORE 
  | 73 -> TOKEN_EQUALS 
  | 74 -> TOKEN_ELLIPSIS 
  | 75 -> TOKEN_DOUBLE_AMP 
  | 76 -> TOKEN_DOUBLE_BAR 
  | 77 -> TOKEN_BAR 
  | 78 -> TOKEN_DOT 
  | 79 -> TOKEN_PLUS 
  | 80 -> TOKEN_MINUS 
  | 81 -> TOKEN_STAR 
  | 82 -> TOKEN_COLON 
  | 83 -> TOKEN_DOUBLE_COLON 
  | 84 -> TOKEN_CARET 
  | 85 -> TOKEN_COMMA 
  | 86 -> TOKEN_SEMICOLON 
  | 87 -> TOKEN_FN_CTOR 
  | 88 -> TOKEN_FN_ARROW_BACK 
  | 89 -> TOKEN_FN_ARROW_FRONT 
  | 90 -> TOKEN_FN_DIVIDE 
  | 91 -> TOKEN_L_CONE 
  | 92 -> TOKEN_R_CONE 
  | 93 -> TOKEN_L_BOX 
  | 94 -> TOKEN_R_BOX 
  | 95 -> TOKEN_L_PUMPKIN 
  | 96 -> TOKEN_R_PUMPKIN 
  | 97 -> TOKEN_L_BANANA 
  | 98 -> TOKEN_R_BANANA 
  | 99 -> TOKEN_L_BIND 
  | 100 -> TOKEN_R_BIND 
  | 101 -> TOKEN_L_STAR 
  | 102 -> TOKEN_R_STAR 
  | 103 -> TOKEN_L_ARROW 
  | 104 -> TOKEN_R_ARROW 
  | 105 -> TOKEN_L_BRACKET 
  | 106 -> TOKEN_R_BRACKET 
  | 107 -> TOKEN_L_BRACE 
  | 108 -> TOKEN_R_BRACE 
  | 109 -> TOKEN_L_PAREN 
  | 110 -> TOKEN_R_PAREN 
  | 111 -> TOKEN_DOCUMENTATION_LINE 
  | 112 -> TOKEN_NATIVE_CODE_LINE 
  | 113 -> TOKEN_CHARACTER 
  | 114 -> TOKEN_STRING 
  | 115 -> TOKEN_DECIMAL 
  | 116 -> TOKEN_INTEGER 
  | 117 -> TOKEN_TEST_NAME 
  | 118 -> TOKEN_PREDICATE_NAME 
  | 119 -> TOKEN_OPERATOR_NAME 
  | 120 -> TOKEN_BIG_NAME 
  | 121 -> TOKEN_SMALL_NAME 
  | 122 -> TOKEN_EOF 
  | 125 -> TOKEN_end_of_input
  | 123 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startunit 
    | 1 -> NONTERM_unit 
    | 2 -> NONTERM_unit 
    | 3 -> NONTERM_import_list 
    | 4 -> NONTERM_import_list 
    | 5 -> NONTERM_decl_list 
    | 6 -> NONTERM_decl_list 
    | 7 -> NONTERM_main 
    | 8 -> NONTERM_import 
    | 9 -> NONTERM_import 
    | 10 -> NONTERM_import 
    | 11 -> NONTERM_import_path 
    | 12 -> NONTERM_import_path 
    | 13 -> NONTERM_remote 
    | 14 -> NONTERM_export 
    | 15 -> NONTERM_brace_names 
    | 16 -> NONTERM_name_list 
    | 17 -> NONTERM_name_list 
    | 18 -> NONTERM_name 
    | 19 -> NONTERM_name 
    | 20 -> NONTERM_name 
    | 21 -> NONTERM_declaration 
    | 22 -> NONTERM_declaration 
    | 23 -> NONTERM_declaration 
    | 24 -> NONTERM_declaration 
    | 25 -> NONTERM_declaration 
    | 26 -> NONTERM_declaration 
    | 27 -> NONTERM_declaration 
    | 28 -> NONTERM_declaration 
    | 29 -> NONTERM_declaration 
    | 30 -> NONTERM_declaration 
    | 31 -> NONTERM_declaration 
    | 32 -> NONTERM_declaration 
    | 33 -> NONTERM_declaration 
    | 34 -> NONTERM_declaration 
    | 35 -> NONTERM_declaration 
    | 36 -> NONTERM_declaration 
    | 37 -> NONTERM_declaration 
    | 38 -> NONTERM_documentation 
    | 39 -> NONTERM_documentation_lines 
    | 40 -> NONTERM_documentation_lines 
    | 41 -> NONTERM_function 
    | 42 -> NONTERM_function 
    | 43 -> NONTERM_function 
    | 44 -> NONTERM_function 
    | 45 -> NONTERM_function_list 
    | 46 -> NONTERM_function_list 
    | 47 -> NONTERM_native 
    | 48 -> NONTERM_native 
    | 49 -> NONTERM_native_code_list 
    | 50 -> NONTERM_native_code_list 
    | 51 -> NONTERM_userkind 
    | 52 -> NONTERM_userkind 
    | 53 -> NONTERM_kind_unify 
    | 54 -> NONTERM_kind_unify 
    | 55 -> NONTERM_kind_unify 
    | 56 -> NONTERM_datatype 
    | 57 -> NONTERM_datatype 
    | 58 -> NONTERM_datatype 
    | 59 -> NONTERM_datatype 
    | 60 -> NONTERM_datatype 
    | 61 -> NONTERM_datatype 
    | 62 -> NONTERM_type_param_list 
    | 63 -> NONTERM_type_param_list 
    | 64 -> NONTERM_type_param_list 
    | 65 -> NONTERM_datatype_list 
    | 66 -> NONTERM_datatype_list 
    | 67 -> NONTERM_constructor 
    | 68 -> NONTERM_constructor 
    | 69 -> NONTERM_constructor_list 
    | 70 -> NONTERM_constructor_list 
    | 71 -> NONTERM_rule 
    | 72 -> NONTERM_overload 
    | 73 -> NONTERM_overload 
    | 74 -> NONTERM_opt_type_param_list 
    | 75 -> NONTERM_opt_type_param_list 
    | 76 -> NONTERM_opt_type_param_list 
    | 77 -> NONTERM_instance 
    | 78 -> NONTERM_instance 
    | 79 -> NONTERM_effect 
    | 80 -> NONTERM_effect 
    | 81 -> NONTERM_effect 
    | 82 -> NONTERM_effect 
    | 83 -> NONTERM_handler_template_list 
    | 84 -> NONTERM_handler_template_list 
    | 85 -> NONTERM_handler_template 
    | 86 -> NONTERM_test 
    | 87 -> NONTERM_law 
    | 88 -> NONTERM_test_all 
    | 89 -> NONTERM_test_all 
    | 90 -> NONTERM_test_all 
    | 91 -> NONTERM_test_all 
    | 92 -> NONTERM_test_all 
    | 93 -> NONTERM_test_all 
    | 94 -> NONTERM_test_all 
    | 95 -> NONTERM_check 
    | 96 -> NONTERM_tag 
    | 97 -> NONTERM_base_kind 
    | 98 -> NONTERM_base_kind 
    | 99 -> NONTERM_compound_kind 
    | 100 -> NONTERM_compound_kind 
    | 101 -> NONTERM_compound_kind 
    | 102 -> NONTERM_compound_kind 
    | 103 -> NONTERM_constraint_list 
    | 104 -> NONTERM_constraint_list 
    | 105 -> NONTERM_constraint 
    | 106 -> NONTERM_constraint 
    | 107 -> NONTERM_predicate_list 
    | 108 -> NONTERM_predicate_list 
    | 109 -> NONTERM_predicate_list 
    | 110 -> NONTERM_predicate 
    | 111 -> NONTERM_qual_fn_type 
    | 112 -> NONTERM_qual_fn_type 
    | 113 -> NONTERM_base_type 
    | 114 -> NONTERM_base_type 
    | 115 -> NONTERM_base_type 
    | 116 -> NONTERM_base_type 
    | 117 -> NONTERM_base_type 
    | 118 -> NONTERM_base_type 
    | 119 -> NONTERM_base_type 
    | 120 -> NONTERM_base_type 
    | 121 -> NONTERM_base_type 
    | 122 -> NONTERM_base_type 
    | 123 -> NONTERM_base_type 
    | 124 -> NONTERM_base_type 
    | 125 -> NONTERM_base_type 
    | 126 -> NONTERM_base_type 
    | 127 -> NONTERM_base_type 
    | 128 -> NONTERM_base_type 
    | 129 -> NONTERM_val_type 
    | 130 -> NONTERM_top_fn_type 
    | 131 -> NONTERM_fn_type 
    | 132 -> NONTERM_fn_type_seq 
    | 133 -> NONTERM_fn_type_seq 
    | 134 -> NONTERM_fn_type_seq 
    | 135 -> NONTERM_fn_row_type 
    | 136 -> NONTERM_fn_row_type 
    | 137 -> NONTERM_fn_row_type 
    | 138 -> NONTERM_field_row_type 
    | 139 -> NONTERM_field_row_type 
    | 140 -> NONTERM_field_row_type 
    | 141 -> NONTERM_field_type 
    | 142 -> NONTERM_compound_type 
    | 143 -> NONTERM_compound_type 
    | 144 -> NONTERM_compound_type 
    | 145 -> NONTERM_compound_type 
    | 146 -> NONTERM_compound_type 
    | 147 -> NONTERM_compound_type 
    | 148 -> NONTERM_compound_type 
    | 149 -> NONTERM_and_sequence 
    | 150 -> NONTERM_and_sequence 
    | 151 -> NONTERM_or_sequence 
    | 152 -> NONTERM_or_sequence 
    | 153 -> NONTERM_mul_sequence 
    | 154 -> NONTERM_mul_sequence 
    | 155 -> NONTERM_mul_sequence 
    | 156 -> NONTERM_mul_sequence 
    | 157 -> NONTERM_mul_sequence 
    | 158 -> NONTERM_type_arg_list 
    | 159 -> NONTERM_type_arg_list 
    | 160 -> NONTERM_term_statement_block 
    | 161 -> NONTERM_term_statement_list 
    | 162 -> NONTERM_term_statement_list 
    | 163 -> NONTERM_term_statement 
    | 164 -> NONTERM_term_statement 
    | 165 -> NONTERM_term_statement 
    | 166 -> NONTERM_non_empty_simple_expr 
    | 167 -> NONTERM_non_empty_simple_expr 
    | 168 -> NONTERM_non_empty_simple_expr 
    | 169 -> NONTERM_non_empty_simple_expr 
    | 170 -> NONTERM_non_empty_simple_expr 
    | 171 -> NONTERM_non_empty_simple_expr 
    | 172 -> NONTERM_non_empty_simple_expr 
    | 173 -> NONTERM_non_empty_simple_expr 
    | 174 -> NONTERM_simple_expr 
    | 175 -> NONTERM_simple_expr 
    | 176 -> NONTERM_word 
    | 177 -> NONTERM_word 
    | 178 -> NONTERM_word 
    | 179 -> NONTERM_word 
    | 180 -> NONTERM_word 
    | 181 -> NONTERM_word 
    | 182 -> NONTERM_word 
    | 183 -> NONTERM_word 
    | 184 -> NONTERM_word 
    | 185 -> NONTERM_word 
    | 186 -> NONTERM_word 
    | 187 -> NONTERM_word 
    | 188 -> NONTERM_word 
    | 189 -> NONTERM_word 
    | 190 -> NONTERM_word 
    | 191 -> NONTERM_word 
    | 192 -> NONTERM_word 
    | 193 -> NONTERM_word 
    | 194 -> NONTERM_word 
    | 195 -> NONTERM_word 
    | 196 -> NONTERM_word 
    | 197 -> NONTERM_word 
    | 198 -> NONTERM_word 
    | 199 -> NONTERM_word 
    | 200 -> NONTERM_word 
    | 201 -> NONTERM_word 
    | 202 -> NONTERM_word 
    | 203 -> NONTERM_word 
    | 204 -> NONTERM_word 
    | 205 -> NONTERM_permission 
    | 206 -> NONTERM_permission 
    | 207 -> NONTERM_handle_word 
    | 208 -> NONTERM_handle_word 
    | 209 -> NONTERM_handler 
    | 210 -> NONTERM_return 
    | 211 -> NONTERM_return 
    | 212 -> NONTERM_param_list 
    | 213 -> NONTERM_param_list 
    | 214 -> NONTERM_handler_list 
    | 215 -> NONTERM_handler_list 
    | 216 -> NONTERM_inject_word 
    | 217 -> NONTERM_eff_list 
    | 218 -> NONTERM_eff_list 
    | 219 -> NONTERM_match_word 
    | 220 -> NONTERM_match_word 
    | 221 -> NONTERM_match_clause_list 
    | 222 -> NONTERM_match_clause_list 
    | 223 -> NONTERM_match_clause 
    | 224 -> NONTERM_if_word 
    | 225 -> NONTERM_switch_word 
    | 226 -> NONTERM_switch_clause_list 
    | 227 -> NONTERM_switch_clause_list 
    | 228 -> NONTERM_when_word 
    | 229 -> NONTERM_while_word 
    | 230 -> NONTERM_for_word 
    | 231 -> NONTERM_for_word 
    | 232 -> NONTERM_for_word 
    | 233 -> NONTERM_for_results 
    | 234 -> NONTERM_for_results 
    | 235 -> NONTERM_for_result 
    | 236 -> NONTERM_for_result 
    | 237 -> NONTERM_for_result 
    | 238 -> NONTERM_for_result 
    | 239 -> NONTERM_for_sequence 
    | 240 -> NONTERM_for_sequence 
    | 241 -> NONTERM_for_sequence 
    | 242 -> NONTERM_for_sequence 
    | 243 -> NONTERM_for_sequence 
    | 244 -> NONTERM_parallel_sequences 
    | 245 -> NONTERM_parallel_sequences 
    | 246 -> NONTERM_fold_inits 
    | 247 -> NONTERM_fold_inits 
    | 248 -> NONTERM_function_literal 
    | 249 -> NONTERM_function_literal 
    | 250 -> NONTERM_lit_expr_list 
    | 251 -> NONTERM_lit_expr_list 
    | 252 -> NONTERM_tuple_literal 
    | 253 -> NONTERM_tuple_literal 
    | 254 -> NONTERM_tuple_literal 
    | 255 -> NONTERM_tuple_literal 
    | 256 -> NONTERM_list_literal 
    | 257 -> NONTERM_list_literal 
    | 258 -> NONTERM_list_literal 
    | 259 -> NONTERM_list_literal 
    | 260 -> NONTERM_record_literal 
    | 261 -> NONTERM_record_literal 
    | 262 -> NONTERM_record_literal 
    | 263 -> NONTERM_record_literal 
    | 264 -> NONTERM_variant_literal 
    | 265 -> NONTERM_case_word 
    | 266 -> NONTERM_case_clause_list 
    | 267 -> NONTERM_case_clause_list 
    | 268 -> NONTERM_case_clause 
    | 269 -> NONTERM_field_list 
    | 270 -> NONTERM_field_list 
    | 271 -> NONTERM_field 
    | 272 -> NONTERM_identifier 
    | 273 -> NONTERM_type_identifier 
    | 274 -> NONTERM_pred_identifier 
    | 275 -> NONTERM_qualified_name 
    | 276 -> NONTERM_qualified_name 
    | 277 -> NONTERM_qualified_name 
    | 278 -> NONTERM_qualified_name 
    | 279 -> NONTERM_qualified_name 
    | 280 -> NONTERM_qualified_ctor 
    | 281 -> NONTERM_qualified_ctor 
    | 282 -> NONTERM_qualified_ctor 
    | 283 -> NONTERM_qualified_pred 
    | 284 -> NONTERM_qualified_pred 
    | 285 -> NONTERM_no_dot_pattern_expr_list 
    | 286 -> NONTERM_no_dot_pattern_expr_list 
    | 287 -> NONTERM_var_only_pattern_list 
    | 288 -> NONTERM_var_only_pattern_list 
    | 289 -> NONTERM_pattern_expr_list 
    | 290 -> NONTERM_pattern_expr_list 
    | 291 -> NONTERM_pattern_expr_list 
    | 292 -> NONTERM_field_pattern_list 
    | 293 -> NONTERM_field_pattern_list 
    | 294 -> NONTERM_pattern_expr 
    | 295 -> NONTERM_pattern_expr 
    | 296 -> NONTERM_pattern_expr 
    | 297 -> NONTERM_pattern_expr 
    | 298 -> NONTERM_pattern_expr 
    | 299 -> NONTERM_pattern_expr 
    | 300 -> NONTERM_pattern_expr 
    | 301 -> NONTERM_pattern_expr 
    | 302 -> NONTERM_pattern_expr 
    | 303 -> NONTERM_pattern_expr 
    | 304 -> NONTERM_pattern_expr 
    | 305 -> NONTERM_pattern_expr 
    | 306 -> NONTERM_pattern_expr 
    | 307 -> NONTERM_pattern_expr 
    | 308 -> NONTERM_pattern_expr 
    | 309 -> NONTERM_pattern_expr 
    | 310 -> NONTERM_pattern_expr 
    | 311 -> NONTERM_tuple_pattern 
    | 312 -> NONTERM_list_pattern 
    | 313 -> NONTERM_list_pattern 
    | 314 -> NONTERM_vector_pattern 
    | 315 -> NONTERM_slice_pattern 
    | 316 -> NONTERM_record_pattern 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 125 
let _fsyacc_tagOfErrorTerminal = 123

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | IS  -> "IS" 
  | ONE  -> "ONE" 
  | TRUE  -> "TRUE" 
  | FALSE  -> "FALSE" 
  | NOT  -> "NOT" 
  | TUPLE  -> "TUPLE" 
  | LIST  -> "LIST" 
  | ITERATOR  -> "ITERATOR" 
  | STRING_KEY  -> "STRING_KEY" 
  | VECTOR  -> "VECTOR" 
  | SLICE  -> "SLICE" 
  | DICTIONARY  -> "DICTIONARY" 
  | CASE  -> "CASE" 
  | FOR  -> "FOR" 
  | IN  -> "IN" 
  | BREAK  -> "BREAK" 
  | FINAL  -> "FINAL" 
  | FILL  -> "FILL" 
  | LENGTH  -> "LENGTH" 
  | RESULT  -> "RESULT" 
  | IF  -> "IF" 
  | WHEN  -> "WHEN" 
  | SWITCH  -> "SWITCH" 
  | WHILE  -> "WHILE" 
  | THEN  -> "THEN" 
  | ELSE  -> "ELSE" 
  | DO  -> "DO" 
  | MATCH  -> "MATCH" 
  | INJECT  -> "INJECT" 
  | WITH  -> "WITH" 
  | AFTER  -> "AFTER" 
  | HANDLE  -> "HANDLE" 
  | UNTAG  -> "UNTAG" 
  | BY  -> "BY" 
  | PER  -> "PER" 
  | TRUST  -> "TRUST" 
  | DISTRUST  -> "DISTRUST" 
  | AUDIT  -> "AUDIT" 
  | WITH_STATE  -> "WITH_STATE" 
  | PERMISSION  -> "PERMISSION" 
  | FUNCTION  -> "FUNCTION" 
  | NATIVE  -> "NATIVE" 
  | LOCAL  -> "LOCAL" 
  | LET  -> "LET" 
  | BOOLEAN  -> "BOOLEAN" 
  | ABELIAN  -> "ABELIAN" 
  | SYNTACTIC  -> "SYNTACTIC" 
  | IS_ROUGHLY  -> "IS_ROUGHLY" 
  | IS_NOT  -> "IS_NOT" 
  | SATISFIES  -> "SATISFIES" 
  | VIOLATES  -> "VIOLATES" 
  | TEST  -> "TEST" 
  | LAW  -> "LAW" 
  | EXHAUSTIVE  -> "EXHAUSTIVE" 
  | SYNONYM  -> "SYNONYM" 
  | TAG  -> "TAG" 
  | EFFECT  -> "EFFECT" 
  | OVERLOAD  -> "OVERLOAD" 
  | INSTANCE  -> "INSTANCE" 
  | RULE  -> "RULE" 
  | CHECK  -> "CHECK" 
  | PATTERN  -> "PATTERN" 
  | RECURSIVE  -> "RECURSIVE" 
  | KIND  -> "KIND" 
  | DATA  -> "DATA" 
  | ABOUT  -> "ABOUT" 
  | MAIN  -> "MAIN" 
  | EXPORT  -> "EXPORT" 
  | FROM  -> "FROM" 
  | AS  -> "AS" 
  | IMPORT  -> "IMPORT" 
  | REF  -> "REF" 
  | UNDERSCORE  -> "UNDERSCORE" 
  | EQUALS  -> "EQUALS" 
  | ELLIPSIS  -> "ELLIPSIS" 
  | DOUBLE_AMP  -> "DOUBLE_AMP" 
  | DOUBLE_BAR  -> "DOUBLE_BAR" 
  | BAR  -> "BAR" 
  | DOT  -> "DOT" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | STAR  -> "STAR" 
  | COLON  -> "COLON" 
  | DOUBLE_COLON  -> "DOUBLE_COLON" 
  | CARET  -> "CARET" 
  | COMMA  -> "COMMA" 
  | SEMICOLON  -> "SEMICOLON" 
  | FN_CTOR  -> "FN_CTOR" 
  | FN_ARROW_BACK  -> "FN_ARROW_BACK" 
  | FN_ARROW_FRONT  -> "FN_ARROW_FRONT" 
  | FN_DIVIDE  -> "FN_DIVIDE" 
  | L_CONE  -> "L_CONE" 
  | R_CONE  -> "R_CONE" 
  | L_BOX  -> "L_BOX" 
  | R_BOX  -> "R_BOX" 
  | L_PUMPKIN  -> "L_PUMPKIN" 
  | R_PUMPKIN  -> "R_PUMPKIN" 
  | L_BANANA  -> "L_BANANA" 
  | R_BANANA  -> "R_BANANA" 
  | L_BIND  -> "L_BIND" 
  | R_BIND  -> "R_BIND" 
  | L_STAR  -> "L_STAR" 
  | R_STAR  -> "R_STAR" 
  | L_ARROW  -> "L_ARROW" 
  | R_ARROW  -> "R_ARROW" 
  | L_BRACKET  -> "L_BRACKET" 
  | R_BRACKET  -> "R_BRACKET" 
  | L_BRACE  -> "L_BRACE" 
  | R_BRACE  -> "R_BRACE" 
  | L_PAREN  -> "L_PAREN" 
  | R_PAREN  -> "R_PAREN" 
  | DOCUMENTATION_LINE _ -> "DOCUMENTATION_LINE" 
  | NATIVE_CODE_LINE _ -> "NATIVE_CODE_LINE" 
  | CHARACTER _ -> "CHARACTER" 
  | STRING _ -> "STRING" 
  | DECIMAL _ -> "DECIMAL" 
  | INTEGER _ -> "INTEGER" 
  | TEST_NAME _ -> "TEST_NAME" 
  | PREDICATE_NAME _ -> "PREDICATE_NAME" 
  | OPERATOR_NAME _ -> "OPERATOR_NAME" 
  | BIG_NAME _ -> "BIG_NAME" 
  | SMALL_NAME _ -> "SMALL_NAME" 
  | EOF  -> "EOF" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | IS  -> (null : System.Object) 
  | ONE  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | TUPLE  -> (null : System.Object) 
  | LIST  -> (null : System.Object) 
  | ITERATOR  -> (null : System.Object) 
  | STRING_KEY  -> (null : System.Object) 
  | VECTOR  -> (null : System.Object) 
  | SLICE  -> (null : System.Object) 
  | DICTIONARY  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | BREAK  -> (null : System.Object) 
  | FINAL  -> (null : System.Object) 
  | FILL  -> (null : System.Object) 
  | LENGTH  -> (null : System.Object) 
  | RESULT  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | WHEN  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | INJECT  -> (null : System.Object) 
  | WITH  -> (null : System.Object) 
  | AFTER  -> (null : System.Object) 
  | HANDLE  -> (null : System.Object) 
  | UNTAG  -> (null : System.Object) 
  | BY  -> (null : System.Object) 
  | PER  -> (null : System.Object) 
  | TRUST  -> (null : System.Object) 
  | DISTRUST  -> (null : System.Object) 
  | AUDIT  -> (null : System.Object) 
  | WITH_STATE  -> (null : System.Object) 
  | PERMISSION  -> (null : System.Object) 
  | FUNCTION  -> (null : System.Object) 
  | NATIVE  -> (null : System.Object) 
  | LOCAL  -> (null : System.Object) 
  | LET  -> (null : System.Object) 
  | BOOLEAN  -> (null : System.Object) 
  | ABELIAN  -> (null : System.Object) 
  | SYNTACTIC  -> (null : System.Object) 
  | IS_ROUGHLY  -> (null : System.Object) 
  | IS_NOT  -> (null : System.Object) 
  | SATISFIES  -> (null : System.Object) 
  | VIOLATES  -> (null : System.Object) 
  | TEST  -> (null : System.Object) 
  | LAW  -> (null : System.Object) 
  | EXHAUSTIVE  -> (null : System.Object) 
  | SYNONYM  -> (null : System.Object) 
  | TAG  -> (null : System.Object) 
  | EFFECT  -> (null : System.Object) 
  | OVERLOAD  -> (null : System.Object) 
  | INSTANCE  -> (null : System.Object) 
  | RULE  -> (null : System.Object) 
  | CHECK  -> (null : System.Object) 
  | PATTERN  -> (null : System.Object) 
  | RECURSIVE  -> (null : System.Object) 
  | KIND  -> (null : System.Object) 
  | DATA  -> (null : System.Object) 
  | ABOUT  -> (null : System.Object) 
  | MAIN  -> (null : System.Object) 
  | EXPORT  -> (null : System.Object) 
  | FROM  -> (null : System.Object) 
  | AS  -> (null : System.Object) 
  | IMPORT  -> (null : System.Object) 
  | REF  -> (null : System.Object) 
  | UNDERSCORE  -> (null : System.Object) 
  | EQUALS  -> (null : System.Object) 
  | ELLIPSIS  -> (null : System.Object) 
  | DOUBLE_AMP  -> (null : System.Object) 
  | DOUBLE_BAR  -> (null : System.Object) 
  | BAR  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | DOUBLE_COLON  -> (null : System.Object) 
  | CARET  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | FN_CTOR  -> (null : System.Object) 
  | FN_ARROW_BACK  -> (null : System.Object) 
  | FN_ARROW_FRONT  -> (null : System.Object) 
  | FN_DIVIDE  -> (null : System.Object) 
  | L_CONE  -> (null : System.Object) 
  | R_CONE  -> (null : System.Object) 
  | L_BOX  -> (null : System.Object) 
  | R_BOX  -> (null : System.Object) 
  | L_PUMPKIN  -> (null : System.Object) 
  | R_PUMPKIN  -> (null : System.Object) 
  | L_BANANA  -> (null : System.Object) 
  | R_BANANA  -> (null : System.Object) 
  | L_BIND  -> (null : System.Object) 
  | R_BIND  -> (null : System.Object) 
  | L_STAR  -> (null : System.Object) 
  | R_STAR  -> (null : System.Object) 
  | L_ARROW  -> (null : System.Object) 
  | R_ARROW  -> (null : System.Object) 
  | L_BRACKET  -> (null : System.Object) 
  | R_BRACKET  -> (null : System.Object) 
  | L_BRACE  -> (null : System.Object) 
  | R_BRACE  -> (null : System.Object) 
  | L_PAREN  -> (null : System.Object) 
  | R_PAREN  -> (null : System.Object) 
  | DOCUMENTATION_LINE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NATIVE_CODE_LINE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CHARACTER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DECIMAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INTEGER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | TEST_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PREDICATE_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OPERATOR_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BIG_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | SMALL_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EOF  -> (null : System.Object) 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 8us; 9us; 2us; 65535us; 2us; 3us; 10us; 11us; 1us; 65535us; 3us; 4us; 2us; 65535us; 0us; 8us; 8us; 8us; 2us; 65535us; 15us; 16us; 19us; 20us; 2us; 65535us; 15us; 26us; 19us; 26us; 1us; 65535us; 3us; 6us; 2us; 65535us; 15us; 19us; 38us; 39us; 2us; 65535us; 40us; 41us; 43us; 44us; 2us; 65535us; 40us; 43us; 43us; 43us; 2us; 65535us; 2us; 10us; 10us; 10us; 6us; 65535us; 2us; 86us; 10us; 86us; 49us; 87us; 51us; 87us; 95us; 85us; 143us; 127us; 2us; 65535us; 74us; 75us; 76us; 77us; 5us; 65535us; 2us; 48us; 10us; 48us; 49us; 50us; 51us; 95us; 95us; 95us; 2us; 65535us; 51us; 52us; 95us; 96us; 2us; 65535us; 2us; 54us; 10us; 54us; 3us; 65535us; 101us; 102us; 107us; 108us; 109us; 110us; 2us; 65535us; 2us; 60us; 10us; 60us; 2us; 65535us; 113us; 114us; 117us; 118us; 5us; 65535us; 2us; 61us; 10us; 61us; 49us; 62us; 51us; 143us; 143us; 143us; 2us; 65535us; 123us; 124us; 129us; 130us; 2us; 65535us; 51us; 63us; 143us; 144us; 3us; 65535us; 125us; 152us; 131us; 152us; 153us; 152us; 3us; 65535us; 125us; 126us; 131us; 132us; 153us; 154us; 2us; 65535us; 2us; 67us; 10us; 67us; 2us; 65535us; 2us; 65us; 10us; 65us; 4us; 65535us; 164us; 165us; 171us; 172us; 196us; 175us; 200us; 176us; 2us; 65535us; 2us; 66us; 10us; 66us; 2us; 65535us; 2us; 68us; 10us; 68us; 2us; 65535us; 197us; 198us; 201us; 202us; 3us; 65535us; 197us; 203us; 201us; 203us; 204us; 205us; 2us; 65535us; 2us; 69us; 10us; 69us; 2us; 65535us; 2us; 70us; 10us; 70us; 2us; 65535us; 212us; 213us; 219us; 220us; 2us; 65535us; 2us; 71us; 10us; 71us; 2us; 65535us; 2us; 72us; 10us; 72us; 8us; 65535us; 133us; 253us; 135us; 253us; 140us; 253us; 180us; 253us; 244us; 253us; 247us; 253us; 250us; 253us; 254us; 253us; 8us; 65535us; 133us; 134us; 135us; 136us; 140us; 141us; 180us; 181us; 244us; 245us; 247us; 248us; 250us; 251us; 254us; 255us; 2us; 65535us; 159us; 160us; 257us; 258us; 2us; 65535us; 159us; 256us; 257us; 256us; 3us; 65535us; 157us; 158us; 189us; 190us; 274us; 268us; 7us; 65535us; 157us; 263us; 159us; 259us; 189us; 263us; 257us; 259us; 264us; 265us; 269us; 270us; 274us; 263us; 6us; 65535us; 99us; 100us; 105us; 106us; 166us; 167us; 173us; 174us; 207us; 208us; 237us; 238us; 32us; 65535us; 146us; 309us; 147us; 148us; 149us; 309us; 150us; 151us; 159us; 309us; 185us; 309us; 186us; 309us; 191us; 309us; 192us; 309us; 257us; 309us; 261us; 309us; 271us; 309us; 272us; 309us; 282us; 309us; 293us; 309us; 295us; 309us; 303us; 309us; 307us; 309us; 310us; 311us; 313us; 309us; 318us; 309us; 321us; 309us; 327us; 309us; 335us; 309us; 342us; 309us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 351us; 352us; 353us; 355us; 356us; 358us; 359us; 22us; 65535us; 146us; 337us; 149us; 337us; 159us; 337us; 185us; 337us; 186us; 337us; 191us; 337us; 192us; 337us; 257us; 337us; 261us; 337us; 271us; 337us; 272us; 337us; 282us; 337us; 293us; 337us; 295us; 337us; 303us; 337us; 307us; 337us; 313us; 337us; 318us; 337us; 321us; 337us; 327us; 337us; 335us; 337us; 342us; 337us; 7us; 65535us; 99us; 273us; 105us; 273us; 166us; 273us; 173us; 273us; 207us; 273us; 237us; 273us; 275us; 276us; 8us; 65535us; 99us; 312us; 105us; 312us; 166us; 312us; 173us; 312us; 207us; 312us; 237us; 312us; 275us; 312us; 290us; 291us; 10us; 65535us; 99us; 313us; 105us; 313us; 166us; 313us; 173us; 313us; 207us; 313us; 237us; 313us; 275us; 313us; 290us; 313us; 306us; 307us; 320us; 321us; 2us; 65535us; 314us; 315us; 316us; 317us; 2us; 65535us; 297us; 298us; 300us; 301us; 1us; 65535us; 332us; 333us; 22us; 65535us; 146us; 361us; 149us; 362us; 159us; 260us; 185us; 361us; 186us; 362us; 191us; 361us; 192us; 362us; 257us; 260us; 261us; 262us; 271us; 361us; 272us; 362us; 282us; 293us; 293us; 361us; 295us; 362us; 303us; 304us; 307us; 322us; 313us; 322us; 318us; 319us; 321us; 322us; 327us; 328us; 335us; 336us; 342us; 343us; 22us; 65535us; 146us; 339us; 149us; 339us; 159us; 339us; 185us; 339us; 186us; 339us; 191us; 339us; 192us; 339us; 257us; 339us; 261us; 339us; 271us; 339us; 272us; 339us; 282us; 339us; 293us; 339us; 295us; 339us; 303us; 339us; 307us; 339us; 313us; 339us; 318us; 339us; 321us; 339us; 327us; 339us; 335us; 339us; 342us; 339us; 22us; 65535us; 146us; 340us; 149us; 340us; 159us; 340us; 185us; 340us; 186us; 340us; 191us; 340us; 192us; 340us; 257us; 340us; 261us; 340us; 271us; 340us; 272us; 340us; 282us; 340us; 293us; 340us; 295us; 340us; 303us; 340us; 307us; 340us; 313us; 340us; 318us; 340us; 321us; 340us; 327us; 340us; 335us; 340us; 342us; 340us; 22us; 65535us; 146us; 341us; 149us; 341us; 159us; 341us; 185us; 341us; 186us; 341us; 191us; 341us; 192us; 341us; 257us; 341us; 261us; 341us; 271us; 341us; 272us; 341us; 282us; 341us; 293us; 341us; 295us; 341us; 303us; 341us; 307us; 341us; 313us; 341us; 318us; 341us; 321us; 341us; 327us; 341us; 335us; 341us; 342us; 341us; 5us; 65535us; 146us; 149us; 185us; 186us; 191us; 192us; 271us; 272us; 293us; 295us; 62us; 65535us; 13us; 388us; 80us; 388us; 83us; 388us; 90us; 388us; 93us; 388us; 187us; 388us; 193us; 388us; 211us; 388us; 213us; 388us; 218us; 388us; 220us; 388us; 228us; 388us; 232us; 388us; 363us; 388us; 367us; 388us; 371us; 388us; 372us; 388us; 373us; 388us; 378us; 388us; 379us; 388us; 380us; 388us; 381us; 388us; 382us; 388us; 383us; 388us; 406us; 407us; 424us; 425us; 426us; 427us; 428us; 388us; 431us; 432us; 433us; 434us; 436us; 437us; 447us; 388us; 450us; 388us; 453us; 388us; 458us; 459us; 468us; 388us; 475us; 388us; 478us; 479us; 480us; 481us; 486us; 388us; 488us; 388us; 491us; 388us; 494us; 388us; 496us; 497us; 498us; 388us; 500us; 501us; 504us; 505us; 508us; 509us; 512us; 513us; 527us; 388us; 532us; 388us; 536us; 388us; 540us; 388us; 547us; 388us; 548us; 388us; 553us; 388us; 555us; 388us; 560us; 388us; 562us; 388us; 579us; 388us; 586us; 388us; 593us; 388us; 1us; 65535us; 363us; 364us; 2us; 65535us; 363us; 366us; 367us; 368us; 40us; 65535us; 13us; 378us; 80us; 378us; 83us; 378us; 90us; 378us; 93us; 378us; 187us; 378us; 193us; 378us; 211us; 378us; 213us; 378us; 218us; 378us; 220us; 378us; 228us; 378us; 232us; 378us; 363us; 373us; 367us; 373us; 371us; 372us; 428us; 378us; 447us; 378us; 450us; 378us; 453us; 378us; 468us; 378us; 475us; 378us; 486us; 378us; 488us; 378us; 491us; 378us; 494us; 378us; 498us; 378us; 527us; 378us; 532us; 378us; 536us; 378us; 540us; 378us; 547us; 382us; 548us; 380us; 553us; 379us; 555us; 381us; 560us; 379us; 562us; 383us; 579us; 378us; 586us; 378us; 593us; 378us; 31us; 65535us; 13us; 14us; 80us; 81us; 83us; 84us; 90us; 91us; 93us; 94us; 187us; 188us; 193us; 194us; 211us; 212us; 213us; 214us; 218us; 219us; 220us; 221us; 228us; 229us; 232us; 233us; 428us; 477us; 447us; 448us; 450us; 451us; 453us; 454us; 468us; 469us; 475us; 476us; 486us; 490us; 488us; 489us; 491us; 492us; 494us; 495us; 498us; 499us; 527us; 528us; 532us; 533us; 536us; 537us; 540us; 541us; 579us; 580us; 586us; 587us; 593us; 594us; 48us; 65535us; 13us; 374us; 80us; 374us; 83us; 374us; 90us; 374us; 93us; 374us; 187us; 374us; 193us; 374us; 211us; 374us; 213us; 374us; 218us; 374us; 220us; 374us; 228us; 374us; 232us; 374us; 363us; 374us; 367us; 374us; 371us; 374us; 372us; 384us; 373us; 384us; 378us; 384us; 379us; 384us; 380us; 384us; 381us; 384us; 382us; 384us; 383us; 384us; 428us; 374us; 447us; 374us; 450us; 374us; 453us; 374us; 468us; 374us; 475us; 374us; 486us; 374us; 488us; 374us; 491us; 374us; 494us; 374us; 498us; 374us; 527us; 374us; 532us; 374us; 536us; 374us; 540us; 374us; 547us; 374us; 548us; 374us; 553us; 374us; 555us; 374us; 560us; 374us; 562us; 374us; 579us; 374us; 586us; 374us; 593us; 374us; 48us; 65535us; 13us; 408us; 80us; 408us; 83us; 408us; 90us; 408us; 93us; 408us; 187us; 408us; 193us; 408us; 211us; 408us; 213us; 408us; 218us; 408us; 220us; 408us; 228us; 408us; 232us; 408us; 363us; 408us; 367us; 408us; 371us; 408us; 372us; 408us; 373us; 408us; 378us; 408us; 379us; 408us; 380us; 408us; 381us; 408us; 382us; 408us; 383us; 408us; 428us; 408us; 447us; 408us; 450us; 408us; 453us; 408us; 468us; 408us; 475us; 408us; 486us; 408us; 488us; 408us; 491us; 408us; 494us; 408us; 498us; 408us; 527us; 408us; 532us; 408us; 536us; 408us; 540us; 408us; 547us; 408us; 548us; 408us; 553us; 408us; 555us; 408us; 560us; 408us; 562us; 408us; 579us; 408us; 586us; 408us; 593us; 408us; 48us; 65535us; 13us; 389us; 80us; 389us; 83us; 389us; 90us; 389us; 93us; 389us; 187us; 389us; 193us; 389us; 211us; 389us; 213us; 389us; 218us; 389us; 220us; 389us; 228us; 389us; 232us; 389us; 363us; 389us; 367us; 389us; 371us; 389us; 372us; 389us; 373us; 389us; 378us; 389us; 379us; 389us; 380us; 389us; 381us; 389us; 382us; 389us; 383us; 389us; 428us; 389us; 447us; 389us; 450us; 389us; 453us; 389us; 468us; 389us; 475us; 389us; 486us; 389us; 488us; 389us; 491us; 389us; 494us; 389us; 498us; 389us; 527us; 389us; 532us; 389us; 536us; 389us; 540us; 389us; 547us; 389us; 548us; 389us; 553us; 389us; 555us; 389us; 560us; 389us; 562us; 389us; 579us; 389us; 586us; 389us; 593us; 389us; 1us; 65535us; 440us; 456us; 1us; 65535us; 440us; 441us; 6us; 65535us; 56us; 57us; 216us; 217us; 422us; 423us; 429us; 430us; 435us; 436us; 445us; 446us; 1us; 65535us; 439us; 440us; 48us; 65535us; 13us; 390us; 80us; 390us; 83us; 390us; 90us; 390us; 93us; 390us; 187us; 390us; 193us; 390us; 211us; 390us; 213us; 390us; 218us; 390us; 220us; 390us; 228us; 390us; 232us; 390us; 363us; 390us; 367us; 390us; 371us; 390us; 372us; 390us; 373us; 390us; 378us; 390us; 379us; 390us; 380us; 390us; 381us; 390us; 382us; 390us; 383us; 390us; 428us; 390us; 447us; 390us; 450us; 390us; 453us; 390us; 468us; 390us; 475us; 390us; 486us; 390us; 488us; 390us; 491us; 390us; 494us; 390us; 498us; 390us; 527us; 390us; 532us; 390us; 536us; 390us; 540us; 390us; 547us; 390us; 548us; 390us; 553us; 390us; 555us; 390us; 560us; 390us; 562us; 390us; 579us; 390us; 586us; 390us; 593us; 390us; 2us; 65535us; 457us; 458us; 460us; 461us; 48us; 65535us; 13us; 391us; 80us; 391us; 83us; 391us; 90us; 391us; 93us; 391us; 187us; 391us; 193us; 391us; 211us; 391us; 213us; 391us; 218us; 391us; 220us; 391us; 228us; 391us; 232us; 391us; 363us; 391us; 367us; 391us; 371us; 391us; 372us; 391us; 373us; 391us; 378us; 391us; 379us; 391us; 380us; 391us; 381us; 391us; 382us; 391us; 383us; 391us; 428us; 391us; 447us; 391us; 450us; 391us; 453us; 391us; 468us; 391us; 475us; 391us; 486us; 391us; 488us; 391us; 491us; 391us; 494us; 391us; 498us; 391us; 527us; 391us; 532us; 391us; 536us; 391us; 540us; 391us; 547us; 391us; 548us; 391us; 553us; 391us; 555us; 391us; 560us; 391us; 562us; 391us; 579us; 391us; 586us; 391us; 593us; 391us; 1us; 65535us; 463us; 464us; 2us; 65535us; 463us; 471us; 464us; 472us; 48us; 65535us; 13us; 392us; 80us; 392us; 83us; 392us; 90us; 392us; 93us; 392us; 187us; 392us; 193us; 392us; 211us; 392us; 213us; 392us; 218us; 392us; 220us; 392us; 228us; 392us; 232us; 392us; 363us; 392us; 367us; 392us; 371us; 392us; 372us; 392us; 373us; 392us; 378us; 392us; 379us; 392us; 380us; 392us; 381us; 392us; 382us; 392us; 383us; 392us; 428us; 392us; 447us; 392us; 450us; 392us; 453us; 392us; 468us; 392us; 475us; 392us; 486us; 392us; 488us; 392us; 491us; 392us; 494us; 392us; 498us; 392us; 527us; 392us; 532us; 392us; 536us; 392us; 540us; 392us; 547us; 392us; 548us; 392us; 553us; 392us; 555us; 392us; 560us; 392us; 562us; 392us; 579us; 392us; 586us; 392us; 593us; 392us; 48us; 65535us; 13us; 393us; 80us; 393us; 83us; 393us; 90us; 393us; 93us; 393us; 187us; 393us; 193us; 393us; 211us; 393us; 213us; 393us; 218us; 393us; 220us; 393us; 228us; 393us; 232us; 393us; 363us; 393us; 367us; 393us; 371us; 393us; 372us; 393us; 373us; 393us; 378us; 393us; 379us; 393us; 380us; 393us; 381us; 393us; 382us; 393us; 383us; 393us; 428us; 393us; 447us; 393us; 450us; 393us; 453us; 393us; 468us; 393us; 475us; 393us; 486us; 393us; 488us; 393us; 491us; 393us; 494us; 393us; 498us; 393us; 527us; 393us; 532us; 393us; 536us; 393us; 540us; 393us; 547us; 393us; 548us; 393us; 553us; 393us; 555us; 393us; 560us; 393us; 562us; 393us; 579us; 393us; 586us; 393us; 593us; 393us; 2us; 65535us; 483us; 484us; 492us; 493us; 48us; 65535us; 13us; 394us; 80us; 394us; 83us; 394us; 90us; 394us; 93us; 394us; 187us; 394us; 193us; 394us; 211us; 394us; 213us; 394us; 218us; 394us; 220us; 394us; 228us; 394us; 232us; 394us; 363us; 394us; 367us; 394us; 371us; 394us; 372us; 394us; 373us; 394us; 378us; 394us; 379us; 394us; 380us; 394us; 381us; 394us; 382us; 394us; 383us; 394us; 428us; 394us; 447us; 394us; 450us; 394us; 453us; 394us; 468us; 394us; 475us; 394us; 486us; 394us; 488us; 394us; 491us; 394us; 494us; 394us; 498us; 394us; 527us; 394us; 532us; 394us; 536us; 394us; 540us; 394us; 547us; 394us; 548us; 394us; 553us; 394us; 555us; 394us; 560us; 394us; 562us; 394us; 579us; 394us; 586us; 394us; 593us; 394us; 48us; 65535us; 13us; 395us; 80us; 395us; 83us; 395us; 90us; 395us; 93us; 395us; 187us; 395us; 193us; 395us; 211us; 395us; 213us; 395us; 218us; 395us; 220us; 395us; 228us; 395us; 232us; 395us; 363us; 395us; 367us; 395us; 371us; 395us; 372us; 395us; 373us; 395us; 378us; 395us; 379us; 395us; 380us; 395us; 381us; 395us; 382us; 395us; 383us; 395us; 428us; 395us; 447us; 395us; 450us; 395us; 453us; 395us; 468us; 395us; 475us; 395us; 486us; 395us; 488us; 395us; 491us; 395us; 494us; 395us; 498us; 395us; 527us; 395us; 532us; 395us; 536us; 395us; 540us; 395us; 547us; 395us; 548us; 395us; 553us; 395us; 555us; 395us; 560us; 395us; 562us; 395us; 579us; 395us; 586us; 395us; 593us; 395us; 48us; 65535us; 13us; 396us; 80us; 396us; 83us; 396us; 90us; 396us; 93us; 396us; 187us; 396us; 193us; 396us; 211us; 396us; 213us; 396us; 218us; 396us; 220us; 396us; 228us; 396us; 232us; 396us; 363us; 396us; 367us; 396us; 371us; 396us; 372us; 396us; 373us; 396us; 378us; 396us; 379us; 396us; 380us; 396us; 381us; 396us; 382us; 396us; 383us; 396us; 428us; 396us; 447us; 396us; 450us; 396us; 453us; 396us; 468us; 396us; 475us; 396us; 486us; 396us; 488us; 396us; 491us; 396us; 494us; 396us; 498us; 396us; 527us; 396us; 532us; 396us; 536us; 396us; 540us; 396us; 547us; 396us; 548us; 396us; 553us; 396us; 555us; 396us; 560us; 396us; 562us; 396us; 579us; 396us; 586us; 396us; 593us; 396us; 2us; 65535us; 506us; 507us; 515us; 516us; 2us; 65535us; 506us; 514us; 515us; 514us; 1us; 65535us; 526us; 527us; 2us; 65535us; 502us; 503us; 529us; 530us; 2us; 65535us; 510us; 511us; 534us; 535us; 48us; 65535us; 13us; 397us; 80us; 397us; 83us; 397us; 90us; 397us; 93us; 397us; 187us; 397us; 193us; 397us; 211us; 397us; 213us; 397us; 218us; 397us; 220us; 397us; 228us; 397us; 232us; 397us; 363us; 397us; 367us; 397us; 371us; 397us; 372us; 397us; 373us; 397us; 378us; 397us; 379us; 397us; 380us; 397us; 381us; 397us; 382us; 397us; 383us; 397us; 428us; 397us; 447us; 397us; 450us; 397us; 453us; 397us; 468us; 397us; 475us; 397us; 486us; 397us; 488us; 397us; 491us; 397us; 494us; 397us; 498us; 397us; 527us; 397us; 532us; 397us; 536us; 397us; 540us; 397us; 547us; 397us; 548us; 397us; 553us; 397us; 555us; 397us; 560us; 397us; 562us; 397us; 579us; 397us; 586us; 397us; 593us; 397us; 4us; 65535us; 548us; 543us; 553us; 544us; 555us; 545us; 560us; 546us; 48us; 65535us; 13us; 376us; 80us; 376us; 83us; 376us; 90us; 376us; 93us; 376us; 187us; 376us; 193us; 376us; 211us; 376us; 213us; 376us; 218us; 376us; 220us; 376us; 228us; 376us; 232us; 376us; 363us; 376us; 367us; 376us; 371us; 376us; 372us; 386us; 373us; 386us; 378us; 386us; 379us; 386us; 380us; 386us; 381us; 386us; 382us; 386us; 383us; 386us; 428us; 376us; 447us; 376us; 450us; 376us; 453us; 376us; 468us; 376us; 475us; 376us; 486us; 376us; 488us; 376us; 491us; 376us; 494us; 376us; 498us; 376us; 527us; 376us; 532us; 376us; 536us; 376us; 540us; 376us; 547us; 376us; 548us; 376us; 553us; 376us; 555us; 376us; 560us; 376us; 562us; 376us; 579us; 376us; 586us; 376us; 593us; 376us; 48us; 65535us; 13us; 377us; 80us; 377us; 83us; 377us; 90us; 377us; 93us; 377us; 187us; 377us; 193us; 377us; 211us; 377us; 213us; 377us; 218us; 377us; 220us; 377us; 228us; 377us; 232us; 377us; 363us; 377us; 367us; 377us; 371us; 377us; 372us; 387us; 373us; 387us; 378us; 387us; 379us; 387us; 380us; 387us; 381us; 387us; 382us; 387us; 383us; 387us; 428us; 377us; 447us; 377us; 450us; 377us; 453us; 377us; 468us; 377us; 475us; 377us; 486us; 377us; 488us; 377us; 491us; 377us; 494us; 377us; 498us; 377us; 527us; 377us; 532us; 377us; 536us; 377us; 540us; 377us; 547us; 377us; 548us; 377us; 553us; 377us; 555us; 377us; 560us; 377us; 562us; 377us; 579us; 377us; 586us; 377us; 593us; 377us; 48us; 65535us; 13us; 375us; 80us; 375us; 83us; 375us; 90us; 375us; 93us; 375us; 187us; 375us; 193us; 375us; 211us; 375us; 213us; 375us; 218us; 375us; 220us; 375us; 228us; 375us; 232us; 375us; 363us; 375us; 367us; 375us; 371us; 375us; 372us; 385us; 373us; 385us; 378us; 385us; 379us; 385us; 380us; 385us; 381us; 385us; 382us; 385us; 383us; 385us; 428us; 375us; 447us; 375us; 450us; 375us; 453us; 375us; 468us; 375us; 475us; 375us; 486us; 375us; 488us; 375us; 491us; 375us; 494us; 375us; 498us; 375us; 527us; 375us; 532us; 375us; 536us; 375us; 540us; 375us; 547us; 375us; 548us; 375us; 553us; 375us; 555us; 375us; 560us; 375us; 562us; 375us; 579us; 375us; 586us; 375us; 593us; 375us; 48us; 65535us; 13us; 404us; 80us; 404us; 83us; 404us; 90us; 404us; 93us; 404us; 187us; 404us; 193us; 404us; 211us; 404us; 213us; 404us; 218us; 404us; 220us; 404us; 228us; 404us; 232us; 404us; 363us; 404us; 367us; 404us; 371us; 404us; 372us; 404us; 373us; 404us; 378us; 404us; 379us; 404us; 380us; 404us; 381us; 404us; 382us; 404us; 383us; 404us; 428us; 404us; 447us; 404us; 450us; 404us; 453us; 404us; 468us; 404us; 475us; 404us; 486us; 404us; 488us; 404us; 491us; 404us; 494us; 404us; 498us; 404us; 527us; 404us; 532us; 404us; 536us; 404us; 540us; 404us; 547us; 404us; 548us; 404us; 553us; 404us; 555us; 404us; 560us; 404us; 562us; 404us; 579us; 404us; 586us; 404us; 593us; 404us; 48us; 65535us; 13us; 405us; 80us; 405us; 83us; 405us; 90us; 405us; 93us; 405us; 187us; 405us; 193us; 405us; 211us; 405us; 213us; 405us; 218us; 405us; 220us; 405us; 228us; 405us; 232us; 405us; 363us; 405us; 367us; 405us; 371us; 405us; 372us; 405us; 373us; 405us; 378us; 405us; 379us; 405us; 380us; 405us; 381us; 405us; 382us; 405us; 383us; 405us; 428us; 405us; 447us; 405us; 450us; 405us; 453us; 405us; 468us; 405us; 475us; 405us; 486us; 405us; 488us; 405us; 491us; 405us; 494us; 405us; 498us; 405us; 527us; 405us; 532us; 405us; 536us; 405us; 540us; 405us; 547us; 405us; 548us; 405us; 553us; 405us; 555us; 405us; 560us; 405us; 562us; 405us; 579us; 405us; 586us; 405us; 593us; 405us; 1us; 65535us; 575us; 576us; 2us; 65535us; 575us; 582us; 576us; 583us; 3us; 65535us; 562us; 568us; 564us; 565us; 589us; 590us; 4us; 65535us; 562us; 588us; 564us; 588us; 571us; 572us; 589us; 588us; 49us; 65535us; 13us; 420us; 80us; 420us; 83us; 420us; 90us; 420us; 93us; 420us; 187us; 420us; 193us; 420us; 211us; 420us; 213us; 420us; 218us; 420us; 220us; 420us; 228us; 420us; 232us; 420us; 363us; 420us; 367us; 420us; 371us; 420us; 372us; 420us; 373us; 420us; 378us; 420us; 379us; 420us; 380us; 420us; 381us; 420us; 382us; 420us; 383us; 420us; 428us; 420us; 444us; 445us; 447us; 420us; 450us; 420us; 453us; 420us; 468us; 420us; 475us; 420us; 486us; 420us; 488us; 420us; 491us; 420us; 494us; 420us; 498us; 420us; 527us; 420us; 532us; 420us; 536us; 420us; 540us; 420us; 547us; 420us; 548us; 420us; 553us; 420us; 555us; 420us; 560us; 420us; 562us; 420us; 579us; 420us; 586us; 420us; 593us; 420us; 66us; 65535us; 58us; 645us; 79us; 645us; 82us; 645us; 89us; 645us; 92us; 645us; 133us; 243us; 135us; 243us; 140us; 243us; 146us; 285us; 147us; 285us; 149us; 285us; 150us; 285us; 159us; 285us; 180us; 243us; 185us; 285us; 186us; 285us; 191us; 285us; 192us; 285us; 244us; 243us; 247us; 243us; 250us; 243us; 254us; 243us; 257us; 285us; 261us; 285us; 271us; 285us; 272us; 285us; 282us; 285us; 293us; 285us; 295us; 285us; 303us; 285us; 307us; 285us; 310us; 285us; 313us; 285us; 318us; 285us; 321us; 285us; 327us; 285us; 335us; 285us; 342us; 285us; 344us; 285us; 346us; 285us; 348us; 285us; 350us; 285us; 352us; 285us; 355us; 285us; 358us; 285us; 369us; 645us; 370us; 645us; 449us; 645us; 452us; 645us; 466us; 645us; 473us; 645us; 474us; 645us; 623us; 645us; 624us; 645us; 625us; 645us; 626us; 645us; 627us; 645us; 630us; 645us; 641us; 645us; 643us; 645us; 646us; 647us; 647us; 645us; 654us; 645us; 656us; 645us; 660us; 645us; 663us; 645us; 7us; 65535us; 157us; 271us; 159us; 271us; 189us; 271us; 257us; 271us; 264us; 271us; 269us; 271us; 274us; 271us; 50us; 65535us; 13us; 595us; 80us; 595us; 83us; 595us; 90us; 595us; 93us; 595us; 187us; 595us; 193us; 595us; 211us; 595us; 213us; 595us; 218us; 595us; 220us; 595us; 228us; 595us; 232us; 595us; 363us; 595us; 367us; 595us; 371us; 595us; 372us; 595us; 373us; 595us; 378us; 595us; 379us; 595us; 380us; 595us; 381us; 595us; 382us; 595us; 383us; 595us; 428us; 595us; 444us; 595us; 447us; 595us; 450us; 595us; 453us; 595us; 468us; 595us; 475us; 595us; 486us; 595us; 488us; 595us; 491us; 595us; 494us; 595us; 498us; 595us; 527us; 595us; 532us; 595us; 536us; 595us; 540us; 595us; 547us; 595us; 548us; 595us; 553us; 595us; 555us; 595us; 560us; 595us; 562us; 595us; 579us; 595us; 586us; 595us; 593us; 595us; 603us; 604us; 68us; 65535us; 58us; 596us; 79us; 596us; 82us; 596us; 89us; 596us; 92us; 596us; 133us; 596us; 135us; 596us; 140us; 596us; 146us; 596us; 147us; 596us; 149us; 596us; 150us; 596us; 159us; 596us; 180us; 596us; 185us; 596us; 186us; 596us; 191us; 596us; 192us; 596us; 244us; 596us; 247us; 596us; 250us; 596us; 254us; 596us; 257us; 596us; 261us; 596us; 271us; 596us; 272us; 596us; 282us; 596us; 293us; 596us; 295us; 596us; 303us; 596us; 307us; 596us; 310us; 596us; 313us; 596us; 318us; 596us; 321us; 596us; 327us; 596us; 335us; 596us; 342us; 596us; 344us; 596us; 346us; 596us; 348us; 596us; 350us; 596us; 352us; 596us; 355us; 596us; 358us; 596us; 369us; 596us; 370us; 596us; 449us; 596us; 452us; 596us; 466us; 596us; 473us; 596us; 474us; 596us; 610us; 612us; 611us; 612us; 623us; 596us; 624us; 596us; 625us; 596us; 626us; 596us; 627us; 596us; 630us; 596us; 641us; 596us; 643us; 596us; 646us; 596us; 647us; 596us; 654us; 596us; 656us; 596us; 660us; 596us; 663us; 596us; 9us; 65535us; 157us; 597us; 159us; 597us; 189us; 597us; 257us; 597us; 264us; 597us; 269us; 597us; 274us; 597us; 611us; 616us; 615us; 616us; 4us; 65535us; 79us; 82us; 89us; 92us; 369us; 370us; 449us; 452us; 3us; 65535us; 536us; 539us; 599us; 620us; 619us; 620us; 7us; 65535us; 466us; 474us; 473us; 474us; 647us; 623us; 654us; 624us; 656us; 625us; 660us; 626us; 663us; 627us; 2us; 65535us; 632us; 633us; 665us; 666us; 25us; 65535us; 58us; 59us; 79us; 617us; 82us; 618us; 89us; 617us; 92us; 618us; 369us; 617us; 370us; 618us; 449us; 617us; 452us; 618us; 466us; 621us; 473us; 621us; 474us; 628us; 623us; 628us; 624us; 628us; 625us; 628us; 626us; 628us; 627us; 628us; 630us; 631us; 641us; 642us; 643us; 644us; 647us; 621us; 654us; 621us; 656us; 621us; 660us; 621us; 663us; 621us; 25us; 65535us; 58us; 649us; 79us; 649us; 82us; 649us; 89us; 649us; 92us; 649us; 369us; 649us; 370us; 649us; 449us; 649us; 452us; 649us; 466us; 649us; 473us; 649us; 474us; 649us; 623us; 649us; 624us; 649us; 625us; 649us; 626us; 649us; 627us; 649us; 630us; 649us; 641us; 649us; 643us; 649us; 647us; 649us; 654us; 649us; 656us; 649us; 660us; 649us; 663us; 649us; 25us; 65535us; 58us; 650us; 79us; 650us; 82us; 650us; 89us; 650us; 92us; 650us; 369us; 650us; 370us; 650us; 449us; 650us; 452us; 650us; 466us; 650us; 473us; 650us; 474us; 650us; 623us; 650us; 624us; 650us; 625us; 650us; 626us; 650us; 627us; 650us; 630us; 650us; 641us; 650us; 643us; 650us; 647us; 650us; 654us; 650us; 656us; 650us; 660us; 650us; 663us; 650us; 25us; 65535us; 58us; 651us; 79us; 651us; 82us; 651us; 89us; 651us; 92us; 651us; 369us; 651us; 370us; 651us; 449us; 651us; 452us; 651us; 466us; 651us; 473us; 651us; 474us; 651us; 623us; 651us; 624us; 651us; 625us; 651us; 626us; 651us; 627us; 651us; 630us; 651us; 641us; 651us; 643us; 651us; 647us; 651us; 654us; 651us; 656us; 651us; 660us; 651us; 663us; 651us; 25us; 65535us; 58us; 652us; 79us; 652us; 82us; 652us; 89us; 652us; 92us; 652us; 369us; 652us; 370us; 652us; 449us; 652us; 452us; 652us; 466us; 652us; 473us; 652us; 474us; 652us; 623us; 652us; 624us; 652us; 625us; 652us; 626us; 652us; 627us; 652us; 630us; 652us; 641us; 652us; 643us; 652us; 647us; 652us; 654us; 652us; 656us; 652us; 660us; 652us; 663us; 652us; 25us; 65535us; 58us; 653us; 79us; 653us; 82us; 653us; 89us; 653us; 92us; 653us; 369us; 653us; 370us; 653us; 449us; 653us; 452us; 653us; 466us; 653us; 473us; 653us; 474us; 653us; 623us; 653us; 624us; 653us; 625us; 653us; 626us; 653us; 627us; 653us; 630us; 653us; 641us; 653us; 643us; 653us; 647us; 653us; 654us; 653us; 656us; 653us; 660us; 653us; 663us; 653us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 11us; 14us; 17us; 20us; 22us; 25us; 28us; 31us; 34us; 41us; 44us; 50us; 53us; 56us; 60us; 63us; 66us; 72us; 75us; 78us; 82us; 86us; 89us; 92us; 97us; 100us; 103us; 106us; 110us; 113us; 116us; 119us; 122us; 125us; 134us; 143us; 146us; 149us; 153us; 161us; 168us; 201us; 224us; 232us; 241us; 252us; 255us; 258us; 260us; 283us; 306us; 329us; 352us; 358us; 421us; 423us; 426us; 467us; 499us; 548us; 597us; 646us; 648us; 650us; 657us; 659us; 708us; 711us; 760us; 762us; 765us; 814us; 863us; 866us; 915us; 964us; 1013us; 1016us; 1019us; 1021us; 1024us; 1027us; 1076us; 1081us; 1130us; 1179us; 1228us; 1277us; 1326us; 1328us; 1331us; 1335us; 1340us; 1390us; 1457us; 1465us; 1516us; 1585us; 1595us; 1600us; 1604us; 1612us; 1615us; 1641us; 1667us; 1693us; 1719us; 1745us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 2us; 1us; 2us; 2us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 2us; 1us; 4us; 1us; 4us; 1us; 6us; 1us; 6us; 1us; 7us; 1us; 7us; 1us; 7us; 3us; 8us; 9us; 10us; 1us; 8us; 1us; 8us; 1us; 8us; 1us; 9us; 1us; 9us; 1us; 9us; 1us; 9us; 1us; 10us; 1us; 10us; 1us; 11us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 17us; 1us; 17us; 1us; 18us; 1us; 19us; 1us; 20us; 1us; 21us; 4us; 22us; 23us; 28us; 29us; 1us; 22us; 2us; 23us; 29us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 25us; 1us; 25us; 2us; 25us; 213us; 1us; 25us; 1us; 25us; 1us; 26us; 1us; 27us; 1us; 28us; 1us; 29us; 1us; 29us; 1us; 30us; 1us; 31us; 1us; 32us; 1us; 33us; 1us; 34us; 1us; 35us; 1us; 36us; 1us; 37us; 1us; 38us; 1us; 38us; 1us; 38us; 1us; 40us; 1us; 40us; 2us; 41us; 42us; 2us; 41us; 42us; 1us; 41us; 1us; 41us; 2us; 42us; 286us; 1us; 42us; 1us; 42us; 2us; 43us; 44us; 10us; 43us; 44us; 48us; 52us; 57us; 59us; 61us; 73us; 80us; 82us; 5us; 43us; 44us; 57us; 59us; 61us; 2us; 43us; 44us; 2us; 43us; 44us; 1us; 43us; 1us; 43us; 2us; 44us; 286us; 1us; 44us; 1us; 44us; 2us; 45us; 46us; 1us; 46us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 50us; 1us; 50us; 1us; 51us; 1us; 51us; 1us; 51us; 1us; 51us; 1us; 52us; 1us; 52us; 1us; 52us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 3us; 56us; 58us; 60us; 3us; 56us; 58us; 60us; 4us; 56us; 58us; 63us; 64us; 1us; 56us; 1us; 56us; 3us; 57us; 59us; 61us; 3us; 57us; 59us; 61us; 3us; 57us; 59us; 61us; 4us; 57us; 59us; 63us; 64us; 1us; 57us; 1us; 57us; 1us; 60us; 1us; 60us; 1us; 61us; 1us; 61us; 1us; 63us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 64us; 2us; 65us; 66us; 1us; 66us; 2us; 67us; 68us; 2us; 67us; 68us; 1us; 67us; 1us; 67us; 2us; 68us; 159us; 1us; 68us; 1us; 68us; 2us; 69us; 70us; 1us; 70us; 1us; 70us; 1us; 71us; 1us; 71us; 1us; 71us; 2us; 71us; 109us; 1us; 71us; 1us; 71us; 1us; 72us; 1us; 72us; 1us; 72us; 1us; 72us; 3us; 72us; 75us; 76us; 1us; 72us; 1us; 72us; 1us; 73us; 1us; 73us; 1us; 73us; 1us; 73us; 3us; 73us; 75us; 76us; 1us; 73us; 1us; 73us; 4us; 75us; 76us; 79us; 81us; 4us; 75us; 76us; 80us; 82us; 1us; 75us; 1us; 76us; 1us; 76us; 1us; 76us; 1us; 76us; 1us; 76us; 2us; 77us; 78us; 2us; 77us; 78us; 2us; 77us; 78us; 2us; 77us; 159us; 1us; 77us; 1us; 77us; 1us; 78us; 2us; 78us; 109us; 1us; 78us; 2us; 78us; 159us; 1us; 78us; 1us; 78us; 2us; 79us; 81us; 2us; 79us; 81us; 1us; 79us; 2us; 79us; 84us; 2us; 80us; 82us; 2us; 80us; 82us; 1us; 80us; 2us; 80us; 84us; 1us; 83us; 1us; 84us; 1us; 84us; 1us; 85us; 1us; 85us; 1us; 85us; 1us; 86us; 1us; 86us; 1us; 86us; 1us; 86us; 1us; 86us; 1us; 86us; 1us; 87us; 1us; 87us; 2us; 87us; 213us; 1us; 87us; 1us; 87us; 1us; 87us; 1us; 87us; 1us; 88us; 1us; 89us; 1us; 90us; 2us; 91us; 93us; 2us; 92us; 94us; 1us; 93us; 1us; 93us; 1us; 93us; 1us; 93us; 1us; 94us; 1us; 94us; 1us; 94us; 1us; 94us; 1us; 95us; 1us; 95us; 1us; 95us; 1us; 95us; 1us; 96us; 1us; 96us; 1us; 96us; 1us; 96us; 1us; 97us; 1us; 98us; 1us; 98us; 1us; 98us; 1us; 99us; 1us; 99us; 1us; 99us; 1us; 100us; 1us; 100us; 1us; 100us; 2us; 101us; 102us; 1us; 102us; 1us; 102us; 2us; 103us; 104us; 1us; 104us; 1us; 104us; 1us; 105us; 1us; 106us; 1us; 106us; 1us; 106us; 1us; 107us; 1us; 108us; 1us; 108us; 1us; 108us; 1us; 108us; 2us; 109us; 112us; 1us; 109us; 1us; 109us; 1us; 110us; 2us; 110us; 159us; 1us; 111us; 1us; 112us; 1us; 112us; 1us; 112us; 1us; 113us; 1us; 114us; 3us; 115us; 116us; 282us; 2us; 115us; 282us; 3us; 115us; 282us; 284us; 3us; 116us; 123us; 124us; 1us; 116us; 1us; 116us; 1us; 117us; 1us; 118us; 1us; 119us; 1us; 120us; 1us; 121us; 1us; 122us; 1us; 122us; 1us; 122us; 2us; 123us; 124us; 1us; 123us; 2us; 124us; 159us; 1us; 124us; 1us; 125us; 2us; 125us; 140us; 1us; 125us; 1us; 126us; 2us; 126us; 140us; 1us; 126us; 1us; 127us; 1us; 127us; 1us; 127us; 1us; 128us; 3us; 128us; 133us; 134us; 1us; 128us; 7us; 129us; 142us; 144us; 149us; 151us; 153us; 155us; 2us; 129us; 144us; 1us; 129us; 1us; 130us; 3us; 131us; 133us; 134us; 1us; 131us; 2us; 131us; 137us; 1us; 131us; 2us; 131us; 137us; 1us; 131us; 1us; 131us; 1us; 131us; 3us; 131us; 133us; 134us; 2us; 133us; 134us; 1us; 133us; 1us; 135us; 1us; 136us; 1us; 136us; 1us; 137us; 1us; 137us; 1us; 138us; 1us; 139us; 1us; 139us; 1us; 140us; 1us; 140us; 1us; 141us; 1us; 141us; 1us; 141us; 1us; 143us; 1us; 144us; 2us; 145us; 150us; 2us; 146us; 152us; 3us; 147us; 156us; 157us; 1us; 148us; 1us; 148us; 1us; 149us; 1us; 149us; 1us; 150us; 1us; 150us; 1us; 151us; 1us; 151us; 1us; 152us; 1us; 152us; 2us; 153us; 155us; 1us; 153us; 1us; 154us; 1us; 154us; 1us; 154us; 1us; 155us; 2us; 156us; 157us; 1us; 156us; 1us; 157us; 1us; 158us; 1us; 159us; 1us; 160us; 2us; 160us; 162us; 1us; 160us; 1us; 161us; 1us; 162us; 1us; 162us; 2us; 163us; 164us; 3us; 163us; 164us; 286us; 1us; 164us; 5us; 164us; 170us; 171us; 172us; 173us; 5us; 165us; 170us; 171us; 172us; 173us; 1us; 166us; 1us; 167us; 1us; 168us; 1us; 169us; 5us; 170us; 171us; 172us; 173us; 175us; 5us; 170us; 171us; 172us; 173us; 250us; 7us; 170us; 171us; 172us; 173us; 250us; 254us; 255us; 7us; 170us; 171us; 172us; 173us; 250us; 258us; 259us; 5us; 170us; 171us; 172us; 173us; 251us; 6us; 170us; 171us; 172us; 173us; 260us; 261us; 1us; 170us; 1us; 171us; 1us; 172us; 1us; 173us; 1us; 176us; 1us; 177us; 1us; 178us; 1us; 179us; 1us; 180us; 1us; 181us; 1us; 182us; 1us; 183us; 1us; 184us; 1us; 185us; 1us; 186us; 1us; 186us; 1us; 187us; 1us; 187us; 1us; 188us; 1us; 188us; 1us; 189us; 1us; 190us; 1us; 191us; 1us; 191us; 1us; 192us; 1us; 193us; 1us; 194us; 1us; 195us; 1us; 196us; 1us; 197us; 1us; 198us; 1us; 199us; 1us; 200us; 1us; 201us; 1us; 202us; 1us; 203us; 1us; 204us; 1us; 205us; 1us; 205us; 2us; 205us; 213us; 1us; 205us; 1us; 205us; 1us; 205us; 1us; 205us; 2us; 206us; 224us; 1us; 206us; 2us; 206us; 213us; 1us; 206us; 1us; 206us; 1us; 206us; 1us; 206us; 2us; 207us; 208us; 3us; 207us; 208us; 213us; 2us; 207us; 208us; 2us; 207us; 208us; 2us; 207us; 208us; 3us; 207us; 208us; 215us; 1us; 207us; 1us; 207us; 1us; 208us; 3us; 209us; 210us; 211us; 1us; 209us; 2us; 209us; 213us; 1us; 209us; 1us; 209us; 2us; 210us; 211us; 1us; 210us; 1us; 210us; 2us; 211us; 286us; 1us; 211us; 1us; 211us; 1us; 213us; 1us; 215us; 1us; 216us; 1us; 216us; 1us; 216us; 2us; 217us; 218us; 1us; 218us; 2us; 219us; 220us; 2us; 219us; 220us; 3us; 219us; 220us; 222us; 1us; 219us; 2us; 220us; 223us; 1us; 220us; 1us; 220us; 1us; 220us; 1us; 220us; 1us; 221us; 1us; 222us; 1us; 223us; 2us; 223us; 291us; 1us; 223us; 1us; 223us; 1us; 224us; 1us; 224us; 1us; 224us; 1us; 224us; 1us; 224us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 225us; 2us; 226us; 227us; 1us; 226us; 1us; 226us; 1us; 226us; 1us; 227us; 1us; 227us; 1us; 227us; 1us; 227us; 1us; 228us; 1us; 228us; 1us; 228us; 1us; 228us; 1us; 229us; 1us; 229us; 1us; 229us; 1us; 229us; 3us; 230us; 231us; 232us; 3us; 230us; 231us; 232us; 1us; 230us; 1us; 230us; 1us; 231us; 1us; 231us; 1us; 231us; 1us; 231us; 1us; 232us; 1us; 232us; 1us; 232us; 1us; 232us; 2us; 233us; 234us; 1us; 234us; 1us; 234us; 1us; 235us; 1us; 236us; 1us; 237us; 1us; 238us; 1us; 239us; 1us; 240us; 1us; 241us; 1us; 242us; 2us; 244us; 245us; 2us; 244us; 245us; 2us; 244us; 245us; 2us; 244us; 245us; 1us; 245us; 1us; 245us; 2us; 246us; 247us; 2us; 246us; 247us; 2us; 246us; 247us; 1us; 247us; 1us; 247us; 2us; 248us; 249us; 1us; 248us; 1us; 248us; 1us; 249us; 1us; 249us; 1us; 249us; 1us; 249us; 2us; 251us; 253us; 2us; 251us; 255us; 2us; 251us; 257us; 2us; 251us; 259us; 1us; 251us; 4us; 252us; 253us; 254us; 255us; 1us; 252us; 1us; 253us; 2us; 254us; 255us; 1us; 254us; 1us; 255us; 1us; 255us; 4us; 256us; 257us; 258us; 259us; 1us; 256us; 1us; 257us; 2us; 258us; 259us; 1us; 258us; 1us; 259us; 1us; 259us; 4us; 260us; 261us; 262us; 263us; 2us; 260us; 261us; 1us; 260us; 1us; 260us; 1us; 260us; 1us; 261us; 1us; 262us; 1us; 262us; 1us; 263us; 1us; 264us; 1us; 264us; 1us; 264us; 1us; 265us; 1us; 265us; 2us; 265us; 267us; 2us; 265us; 268us; 1us; 265us; 1us; 265us; 1us; 265us; 1us; 265us; 1us; 266us; 1us; 267us; 1us; 268us; 1us; 268us; 1us; 268us; 1us; 268us; 2us; 269us; 270us; 1us; 270us; 1us; 270us; 1us; 271us; 3us; 271us; 275us; 279us; 1us; 271us; 1us; 271us; 1us; 272us; 1us; 273us; 1us; 274us; 2us; 275us; 279us; 3us; 275us; 279us; 288us; 1us; 276us; 1us; 277us; 1us; 278us; 1us; 279us; 1us; 279us; 1us; 280us; 1us; 281us; 1us; 282us; 2us; 282us; 284us; 3us; 282us; 302us; 303us; 1us; 282us; 2us; 282us; 284us; 1us; 282us; 1us; 283us; 1us; 284us; 1us; 284us; 1us; 284us; 1us; 285us; 1us; 286us; 1us; 288us; 1us; 288us; 2us; 289us; 290us; 1us; 290us; 2us; 291us; 305us; 2us; 291us; 311us; 2us; 291us; 312us; 2us; 291us; 314us; 2us; 291us; 315us; 1us; 291us; 2us; 292us; 293us; 2us; 292us; 293us; 2us; 292us; 293us; 1us; 293us; 1us; 293us; 1us; 294us; 1us; 295us; 1us; 296us; 1us; 297us; 1us; 298us; 1us; 299us; 1us; 300us; 1us; 301us; 1us; 301us; 1us; 303us; 1us; 303us; 1us; 304us; 1us; 305us; 1us; 305us; 1us; 305us; 1us; 306us; 1us; 307us; 1us; 308us; 1us; 309us; 1us; 310us; 1us; 311us; 1us; 311us; 2us; 312us; 313us; 1us; 312us; 1us; 313us; 1us; 314us; 1us; 314us; 1us; 314us; 1us; 315us; 1us; 315us; 1us; 315us; 1us; 316us; 1us; 316us; 1us; 316us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 7us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 26us; 28us; 30us; 32us; 36us; 38us; 40us; 42us; 44us; 46us; 48us; 50us; 52us; 54us; 56us; 58us; 60us; 62us; 64us; 66us; 68us; 70us; 72us; 74us; 76us; 78us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 107us; 109us; 112us; 114us; 116us; 118us; 120us; 122us; 125us; 127us; 129us; 131us; 133us; 135us; 137us; 139us; 141us; 143us; 145us; 147us; 149us; 151us; 153us; 155us; 157us; 159us; 161us; 163us; 165us; 168us; 171us; 173us; 175us; 178us; 180us; 182us; 185us; 196us; 202us; 205us; 208us; 210us; 212us; 215us; 217us; 219us; 222us; 224us; 226us; 228us; 230us; 232us; 234us; 236us; 238us; 240us; 242us; 244us; 246us; 248us; 250us; 252us; 254us; 256us; 258us; 260us; 262us; 264us; 266us; 268us; 270us; 272us; 274us; 278us; 282us; 287us; 289us; 291us; 295us; 299us; 303us; 308us; 310us; 312us; 314us; 316us; 318us; 320us; 322us; 324us; 326us; 328us; 330us; 332us; 335us; 337us; 340us; 343us; 345us; 347us; 350us; 352us; 354us; 357us; 359us; 361us; 363us; 365us; 367us; 370us; 372us; 374us; 376us; 378us; 380us; 382us; 386us; 388us; 390us; 392us; 394us; 396us; 398us; 402us; 404us; 406us; 411us; 416us; 418us; 420us; 422us; 424us; 426us; 428us; 431us; 434us; 437us; 440us; 442us; 444us; 446us; 449us; 451us; 454us; 456us; 458us; 461us; 464us; 466us; 469us; 472us; 475us; 477us; 480us; 482us; 484us; 486us; 488us; 490us; 492us; 494us; 496us; 498us; 500us; 502us; 504us; 506us; 508us; 511us; 513us; 515us; 517us; 519us; 521us; 523us; 525us; 528us; 531us; 533us; 535us; 537us; 539us; 541us; 543us; 545us; 547us; 549us; 551us; 553us; 555us; 557us; 559us; 561us; 563us; 565us; 567us; 569us; 571us; 573us; 575us; 577us; 579us; 581us; 583us; 586us; 588us; 590us; 593us; 595us; 597us; 599us; 601us; 603us; 605us; 607us; 609us; 611us; 613us; 615us; 618us; 620us; 622us; 624us; 627us; 629us; 631us; 633us; 635us; 637us; 639us; 643us; 646us; 650us; 654us; 656us; 658us; 660us; 662us; 664us; 666us; 668us; 670us; 672us; 674us; 677us; 679us; 682us; 684us; 686us; 689us; 691us; 693us; 696us; 698us; 700us; 702us; 704us; 706us; 710us; 712us; 720us; 723us; 725us; 727us; 731us; 733us; 736us; 738us; 741us; 743us; 745us; 747us; 751us; 754us; 756us; 758us; 760us; 762us; 764us; 766us; 768us; 770us; 772us; 774us; 776us; 778us; 780us; 782us; 784us; 786us; 789us; 792us; 796us; 798us; 800us; 802us; 804us; 806us; 808us; 810us; 812us; 814us; 816us; 819us; 821us; 823us; 825us; 827us; 829us; 832us; 834us; 836us; 838us; 840us; 842us; 845us; 847us; 849us; 851us; 853us; 856us; 860us; 862us; 868us; 874us; 876us; 878us; 880us; 882us; 888us; 894us; 902us; 910us; 916us; 923us; 925us; 927us; 929us; 931us; 933us; 935us; 937us; 939us; 941us; 943us; 945us; 947us; 949us; 951us; 953us; 955us; 957us; 959us; 961us; 963us; 965us; 967us; 969us; 971us; 973us; 975us; 977us; 979us; 981us; 983us; 985us; 987us; 989us; 991us; 993us; 995us; 997us; 999us; 1001us; 1004us; 1006us; 1008us; 1010us; 1012us; 1015us; 1017us; 1020us; 1022us; 1024us; 1026us; 1028us; 1031us; 1035us; 1038us; 1041us; 1044us; 1048us; 1050us; 1052us; 1054us; 1058us; 1060us; 1063us; 1065us; 1067us; 1070us; 1072us; 1074us; 1077us; 1079us; 1081us; 1083us; 1085us; 1087us; 1089us; 1091us; 1094us; 1096us; 1099us; 1102us; 1106us; 1108us; 1111us; 1113us; 1115us; 1117us; 1119us; 1121us; 1123us; 1125us; 1128us; 1130us; 1132us; 1134us; 1136us; 1138us; 1140us; 1142us; 1144us; 1146us; 1148us; 1150us; 1153us; 1155us; 1157us; 1159us; 1161us; 1163us; 1165us; 1167us; 1169us; 1171us; 1173us; 1175us; 1177us; 1179us; 1181us; 1183us; 1187us; 1191us; 1193us; 1195us; 1197us; 1199us; 1201us; 1203us; 1205us; 1207us; 1209us; 1211us; 1214us; 1216us; 1218us; 1220us; 1222us; 1224us; 1226us; 1228us; 1230us; 1232us; 1234us; 1237us; 1240us; 1243us; 1246us; 1248us; 1250us; 1253us; 1256us; 1259us; 1261us; 1263us; 1266us; 1268us; 1270us; 1272us; 1274us; 1276us; 1278us; 1281us; 1284us; 1287us; 1290us; 1292us; 1297us; 1299us; 1301us; 1304us; 1306us; 1308us; 1310us; 1315us; 1317us; 1319us; 1322us; 1324us; 1326us; 1328us; 1333us; 1336us; 1338us; 1340us; 1342us; 1344us; 1346us; 1348us; 1350us; 1352us; 1354us; 1356us; 1358us; 1360us; 1363us; 1366us; 1368us; 1370us; 1372us; 1374us; 1376us; 1378us; 1380us; 1382us; 1384us; 1386us; 1389us; 1391us; 1393us; 1395us; 1399us; 1401us; 1403us; 1405us; 1407us; 1409us; 1412us; 1416us; 1418us; 1420us; 1422us; 1424us; 1426us; 1428us; 1430us; 1432us; 1435us; 1439us; 1441us; 1444us; 1446us; 1448us; 1450us; 1452us; 1454us; 1456us; 1458us; 1460us; 1462us; 1465us; 1467us; 1470us; 1473us; 1476us; 1479us; 1482us; 1484us; 1487us; 1490us; 1493us; 1495us; 1497us; 1499us; 1501us; 1503us; 1505us; 1507us; 1509us; 1511us; 1513us; 1515us; 1517us; 1519us; 1521us; 1523us; 1525us; 1527us; 1529us; 1531us; 1533us; 1535us; 1537us; 1539us; 1541us; 1544us; 1546us; 1548us; 1550us; 1552us; 1554us; 1556us; 1558us; 1560us; 1562us; 1564us; |]
let _fsyacc_action_rows = 668
let _fsyacc_actionTableElements = [|1us; 16387us; 70us; 15us; 0us; 49152us; 15us; 16389us; 40us; 78us; 41us; 97us; 51us; 209us; 52us; 215us; 55us; 239us; 56us; 195us; 57us; 161us; 58us; 183us; 59us; 155us; 60us; 235us; 61us; 55us; 62us; 49us; 63us; 111us; 64us; 122us; 65us; 73us; 2us; 32768us; 66us; 12us; 67us; 38us; 1us; 32768us; 122us; 5us; 0us; 16385us; 1us; 32768us; 122us; 7us; 0us; 16386us; 1us; 16387us; 70us; 15us; 0us; 16388us; 15us; 16389us; 40us; 78us; 41us; 97us; 51us; 209us; 52us; 215us; 55us; 239us; 56us; 195us; 57us; 161us; 58us; 183us; 59us; 155us; 60us; 235us; 61us; 55us; 62us; 49us; 63us; 111us; 64us; 122us; 65us; 73us; 0us; 16390us; 1us; 32768us; 73us; 13us; 35us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 0us; 16391us; 4us; 32768us; 41us; 23us; 107us; 40us; 114us; 25us; 121us; 27us; 1us; 32768us; 69us; 17us; 1us; 32768us; 121us; 18us; 0us; 16392us; 2us; 32768us; 114us; 25us; 121us; 27us; 1us; 32768us; 69us; 21us; 1us; 32768us; 121us; 22us; 0us; 16393us; 1us; 32768us; 114us; 24us; 0us; 16394us; 0us; 16395us; 0us; 16396us; 1us; 32768us; 78us; 28us; 1us; 32768us; 121us; 29us; 1us; 32768us; 78us; 30us; 1us; 32768us; 121us; 31us; 1us; 32768us; 82us; 32us; 1us; 32768us; 116us; 33us; 1us; 32768us; 78us; 34us; 1us; 32768us; 116us; 35us; 1us; 32768us; 78us; 36us; 1us; 32768us; 116us; 37us; 0us; 16397us; 1us; 32768us; 107us; 40us; 0us; 16398us; 3us; 16400us; 118us; 47us; 120us; 46us; 121us; 45us; 1us; 32768us; 108us; 42us; 0us; 16399us; 3us; 16400us; 118us; 47us; 120us; 46us; 121us; 45us; 0us; 16401us; 0us; 16402us; 0us; 16403us; 0us; 16404us; 0us; 16405us; 4us; 32768us; 40us; 78us; 64us; 122us; 65us; 73us; 107us; 51us; 0us; 16406us; 3us; 32768us; 40us; 78us; 64us; 122us; 65us; 73us; 1us; 32768us; 108us; 53us; 0us; 16407us; 0us; 16408us; 1us; 32768us; 120us; 56us; 0us; 16596us; 2us; 32768us; 73us; 58us; 121us; 455us; 17us; 32768us; 2us; 634us; 3us; 635us; 9us; 659us; 10us; 662us; 71us; 641us; 72us; 640us; 93us; 654us; 95us; 665us; 105us; 656us; 109us; 646us; 113us; 639us; 114us; 638us; 115us; 637us; 116us; 636us; 119us; 606us; 120us; 605us; 121us; 609us; 0us; 16409us; 0us; 16410us; 0us; 16411us; 0us; 16412us; 1us; 32768us; 108us; 64us; 0us; 16413us; 0us; 16414us; 0us; 16415us; 0us; 16416us; 0us; 16417us; 0us; 16418us; 0us; 16419us; 0us; 16420us; 0us; 16421us; 1us; 32768us; 82us; 74us; 1us; 16423us; 111us; 76us; 0us; 16422us; 1us; 16423us; 111us; 76us; 0us; 16424us; 1us; 32768us; 121us; 79us; 18us; 32768us; 2us; 634us; 3us; 635us; 9us; 659us; 10us; 662us; 71us; 641us; 72us; 640us; 73us; 80us; 93us; 654us; 95us; 665us; 105us; 656us; 109us; 646us; 113us; 639us; 114us; 638us; 115us; 637us; 116us; 636us; 119us; 606us; 120us; 605us; 121us; 609us; 35us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 0us; 16425us; 18us; 32768us; 2us; 634us; 3us; 635us; 9us; 659us; 10us; 662us; 71us; 641us; 72us; 640us; 73us; 83us; 93us; 654us; 95us; 665us; 105us; 656us; 109us; 646us; 113us; 639us; 114us; 638us; 115us; 637us; 116us; 636us; 119us; 606us; 120us; 605us; 121us; 609us; 35us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 0us; 16426us; 1us; 32768us; 40us; 88us; 6us; 32768us; 40us; 88us; 41us; 103us; 56us; 199us; 57us; 168us; 63us; 115us; 64us; 128us; 2us; 32768us; 40us; 88us; 64us; 128us; 1us; 32768us; 121us; 89us; 18us; 32768us; 2us; 634us; 3us; 635us; 9us; 659us; 10us; 662us; 71us; 641us; 72us; 640us; 73us; 90us; 93us; 654us; 95us; 665us; 105us; 656us; 109us; 646us; 113us; 639us; 114us; 638us; 115us; 637us; 116us; 636us; 119us; 606us; 120us; 605us; 121us; 609us; 35us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 0us; 16427us; 18us; 32768us; 2us; 634us; 3us; 635us; 9us; 659us; 10us; 662us; 71us; 641us; 72us; 640us; 73us; 93us; 93us; 654us; 95us; 665us; 105us; 656us; 109us; 646us; 113us; 639us; 114us; 638us; 115us; 637us; 116us; 636us; 119us; 606us; 120us; 605us; 121us; 609us; 35us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 0us; 16428us; 2us; 16429us; 40us; 78us; 65us; 73us; 0us; 16430us; 1us; 32768us; 121us; 98us; 1us; 32768us; 82us; 99us; 1us; 16516us; 99us; 274us; 1us; 32768us; 73us; 101us; 1us; 16433us; 112us; 109us; 0us; 16431us; 1us; 32768us; 121us; 104us; 1us; 32768us; 82us; 105us; 1us; 16516us; 99us; 274us; 1us; 32768us; 73us; 107us; 1us; 16433us; 112us; 109us; 0us; 16432us; 1us; 16433us; 112us; 109us; 0us; 16434us; 1us; 32768us; 120us; 112us; 1us; 32768us; 82us; 113us; 3us; 32768us; 44us; 119us; 45us; 120us; 46us; 121us; 0us; 16435us; 1us; 32768us; 120us; 116us; 1us; 32768us; 82us; 117us; 3us; 32768us; 44us; 119us; 45us; 120us; 46us; 121us; 0us; 16436us; 0us; 16437us; 0us; 16438us; 0us; 16439us; 1us; 32768us; 120us; 123us; 1us; 16446us; 82us; 133us; 3us; 16442us; 73us; 125us; 109us; 138us; 121us; 137us; 1us; 32768us; 120us; 145us; 0us; 16440us; 1us; 32768us; 64us; 128us; 1us; 32768us; 120us; 129us; 1us; 16446us; 82us; 135us; 3us; 16443us; 73us; 131us; 109us; 138us; 121us; 137us; 1us; 32768us; 120us; 145us; 0us; 16441us; 6us; 32768us; 105us; 247us; 107us; 250us; 109us; 244us; 119us; 606us; 120us; 605us; 121us; 607us; 0us; 16444us; 6us; 32768us; 105us; 247us; 107us; 250us; 109us; 244us; 119us; 606us; 120us; 605us; 121us; 607us; 0us; 16445us; 0us; 16447us; 1us; 32768us; 121us; 139us; 1us; 32768us; 82us; 140us; 6us; 32768us; 105us; 247us; 107us; 250us; 109us; 244us; 119us; 606us; 120us; 605us; 121us; 607us; 1us; 32768us; 110us; 142us; 0us; 16448us; 2us; 16449us; 64us; 122us; 65us; 73us; 0us; 16450us; 1us; 32768us; 82us; 146us; 18us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 4us; 342us; 72us; 289us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 100us; 147us; 105us; 303us; 109us; 282us; 116us; 354us; 119us; 606us; 120us; 605us; 121us; 280us; 15us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 72us; 289us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 105us; 303us; 109us; 282us; 119us; 606us; 120us; 605us; 121us; 280us; 0us; 16451us; 18us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 4us; 342us; 72us; 289us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 100us; 150us; 105us; 303us; 109us; 282us; 116us; 354us; 119us; 606us; 120us; 605us; 121us; 280us; 15us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 72us; 289us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 105us; 303us; 109us; 282us; 119us; 606us; 120us; 605us; 121us; 280us; 0us; 16452us; 1us; 16453us; 77us; 153us; 1us; 32768us; 120us; 145us; 0us; 16454us; 1us; 32768us; 117us; 156us; 1us; 32768us; 73us; 157us; 3us; 32768us; 109us; 264us; 118us; 613us; 121us; 614us; 2us; 32768us; 85us; 269us; 100us; 159us; 18us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 4us; 342us; 72us; 289us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 105us; 303us; 109us; 282us; 116us; 354us; 118us; 613us; 119us; 606us; 120us; 605us; 121us; 281us; 0us; 16455us; 1us; 32768us; 121us; 162us; 1us; 32768us; 69us; 163us; 1us; 32768us; 118us; 164us; 0us; 16458us; 3us; 32768us; 82us; 166us; 109us; 178us; 121us; 177us; 1us; 16516us; 99us; 274us; 0us; 16456us; 1us; 32768us; 121us; 169us; 1us; 32768us; 69us; 170us; 1us; 32768us; 118us; 171us; 0us; 16458us; 3us; 32768us; 82us; 173us; 109us; 178us; 121us; 177us; 1us; 16516us; 99us; 274us; 0us; 16457us; 3us; 16465us; 73us; 197us; 109us; 178us; 121us; 177us; 3us; 16466us; 73us; 201us; 109us; 178us; 121us; 177us; 0us; 16459us; 1us; 32768us; 121us; 179us; 1us; 32768us; 82us; 180us; 6us; 32768us; 105us; 247us; 107us; 250us; 109us; 244us; 119us; 606us; 120us; 605us; 121us; 607us; 1us; 32768us; 110us; 182us; 0us; 16460us; 1us; 32768us; 121us; 184us; 1us; 32768us; 82us; 185us; 18us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 4us; 342us; 72us; 289us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 99us; 189us; 105us; 303us; 109us; 282us; 116us; 354us; 119us; 606us; 120us; 605us; 121us; 280us; 18us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 4us; 342us; 72us; 289us; 73us; 187us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 105us; 303us; 109us; 282us; 116us; 354us; 119us; 606us; 120us; 605us; 121us; 280us; 35us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 0us; 16461us; 3us; 32768us; 109us; 264us; 118us; 613us; 121us; 614us; 2us; 32768us; 85us; 269us; 100us; 191us; 17us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 4us; 342us; 72us; 289us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 105us; 303us; 109us; 282us; 116us; 354us; 119us; 606us; 120us; 605us; 121us; 280us; 18us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 4us; 342us; 72us; 289us; 73us; 193us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 105us; 303us; 109us; 282us; 116us; 354us; 119us; 606us; 120us; 605us; 121us; 280us; 35us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 0us; 16462us; 1us; 32768us; 119us; 196us; 0us; 16458us; 1us; 32768us; 119us; 206us; 1us; 16463us; 77us; 204us; 1us; 32768us; 119us; 200us; 0us; 16458us; 1us; 32768us; 119us; 206us; 1us; 16464us; 77us; 204us; 0us; 16467us; 1us; 32768us; 119us; 206us; 0us; 16468us; 1us; 32768us; 82us; 207us; 1us; 16516us; 99us; 274us; 0us; 16469us; 1us; 32768us; 117us; 210us; 1us; 32768us; 73us; 211us; 35us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 5us; 32768us; 0us; 225us; 47us; 224us; 48us; 226us; 49us; 222us; 50us; 223us; 35us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 0us; 16470us; 1us; 32768us; 117us; 216us; 0us; 16596us; 2us; 32768us; 73us; 218us; 121us; 455us; 35us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 5us; 32768us; 0us; 225us; 47us; 224us; 48us; 226us; 49us; 222us; 50us; 223us; 35us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 0us; 16471us; 0us; 16472us; 0us; 16473us; 0us; 16474us; 1us; 16475us; 33us; 227us; 1us; 16476us; 33us; 231us; 1us; 32768us; 107us; 228us; 35us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 1us; 32768us; 108us; 230us; 0us; 16477us; 1us; 32768us; 107us; 232us; 35us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 1us; 32768us; 108us; 234us; 0us; 16478us; 1us; 32768us; 121us; 236us; 1us; 32768us; 82us; 237us; 1us; 16516us; 99us; 274us; 0us; 16479us; 1us; 32768us; 120us; 240us; 1us; 32768us; 73us; 241us; 1us; 32768us; 121us; 242us; 0us; 16480us; 0us; 16481us; 6us; 32768us; 105us; 247us; 107us; 250us; 109us; 244us; 119us; 606us; 120us; 605us; 121us; 607us; 1us; 32768us; 110us; 246us; 0us; 16482us; 6us; 32768us; 105us; 247us; 107us; 250us; 109us; 244us; 119us; 606us; 120us; 605us; 121us; 607us; 1us; 32768us; 106us; 249us; 0us; 16483us; 6us; 32768us; 105us; 247us; 107us; 250us; 109us; 244us; 119us; 606us; 120us; 605us; 121us; 607us; 1us; 32768us; 108us; 252us; 0us; 16484us; 1us; 16485us; 87us; 254us; 6us; 32768us; 105us; 247us; 107us; 250us; 109us; 244us; 119us; 606us; 120us; 605us; 121us; 607us; 0us; 16486us; 1us; 16487us; 85us; 257us; 18us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 4us; 342us; 72us; 289us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 105us; 303us; 109us; 282us; 116us; 354us; 118us; 613us; 119us; 606us; 120us; 605us; 121us; 281us; 0us; 16488us; 0us; 16489us; 1us; 32768us; 73us; 261us; 17us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 4us; 342us; 72us; 289us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 105us; 303us; 109us; 282us; 116us; 354us; 119us; 606us; 120us; 605us; 121us; 280us; 0us; 16490us; 0us; 16491us; 2us; 32768us; 118us; 613us; 121us; 614us; 1us; 32768us; 110us; 266us; 1us; 32768us; 74us; 267us; 0us; 16492us; 2us; 32768us; 85us; 269us; 100us; 275us; 2us; 32768us; 118us; 613us; 121us; 614us; 0us; 16493us; 17us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 4us; 342us; 72us; 289us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 105us; 303us; 109us; 282us; 116us; 354us; 119us; 606us; 120us; 605us; 121us; 280us; 17us; 16494us; 1us; 287us; 2us; 277us; 3us; 278us; 4us; 342us; 72us; 289us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 105us; 303us; 109us; 282us; 116us; 354us; 119us; 606us; 120us; 605us; 121us; 280us; 0us; 16495us; 3us; 32768us; 109us; 264us; 118us; 613us; 121us; 614us; 0us; 16516us; 0us; 16496us; 0us; 16497us; 0us; 16498us; 2us; 16499us; 74us; 283us; 83us; 610us; 1us; 16499us; 83us; 610us; 1us; 16499us; 83us; 611us; 17us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 4us; 342us; 72us; 289us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 105us; 303us; 109us; 282us; 116us; 354us; 119us; 606us; 120us; 605us; 121us; 279us; 1us; 32768us; 110us; 284us; 0us; 16500us; 0us; 16501us; 0us; 16502us; 0us; 16503us; 0us; 16504us; 0us; 16505us; 0us; 16516us; 1us; 32768us; 98us; 292us; 0us; 16506us; 18us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 4us; 342us; 72us; 289us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 105us; 303us; 109us; 282us; 110us; 294us; 116us; 354us; 119us; 606us; 120us; 605us; 121us; 280us; 0us; 16507us; 18us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 4us; 342us; 72us; 289us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 105us; 303us; 109us; 282us; 110us; 296us; 116us; 354us; 119us; 606us; 120us; 605us; 121us; 280us; 0us; 16508us; 2us; 32768us; 78us; 329us; 121us; 330us; 2us; 32768us; 85us; 332us; 96us; 299us; 0us; 16509us; 2us; 32768us; 78us; 329us; 121us; 330us; 2us; 32768us; 85us; 332us; 92us; 302us; 0us; 16510us; 17us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 4us; 342us; 72us; 289us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 105us; 303us; 109us; 282us; 116us; 354us; 119us; 606us; 120us; 605us; 121us; 280us; 1us; 32768us; 106us; 305us; 0us; 16511us; 0us; 16516us; 18us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 4us; 342us; 72us; 289us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 94us; 308us; 95us; 297us; 97us; 290us; 105us; 303us; 109us; 282us; 116us; 354us; 119us; 606us; 120us; 605us; 121us; 280us; 0us; 16512us; 4us; 16526us; 75us; 344us; 76us; 348us; 81us; 352us; 84us; 310us; 16us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 72us; 289us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 105us; 303us; 109us; 282us; 116us; 338us; 119us; 606us; 120us; 605us; 121us; 280us; 0us; 16513us; 0us; 16514us; 18us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 4us; 342us; 72us; 289us; 78us; 288us; 87us; 286us; 88us; 314us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 105us; 303us; 109us; 282us; 116us; 354us; 119us; 606us; 120us; 605us; 121us; 280us; 2us; 32768us; 78us; 324us; 121us; 325us; 2us; 32768us; 85us; 327us; 90us; 316us; 2us; 32768us; 78us; 324us; 121us; 325us; 2us; 32768us; 85us; 327us; 90us; 318us; 17us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 4us; 342us; 72us; 289us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 105us; 303us; 109us; 282us; 116us; 354us; 119us; 606us; 120us; 605us; 121us; 280us; 1us; 32768us; 89us; 320us; 0us; 16516us; 17us; 16515us; 1us; 287us; 2us; 277us; 3us; 278us; 4us; 342us; 72us; 289us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 105us; 303us; 109us; 282us; 116us; 354us; 119us; 606us; 120us; 605us; 121us; 280us; 1us; 16518us; 74us; 323us; 0us; 16517us; 0us; 16519us; 1us; 32768us; 74us; 326us; 0us; 16520us; 17us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 4us; 342us; 72us; 289us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 105us; 303us; 109us; 282us; 116us; 354us; 119us; 606us; 120us; 605us; 121us; 280us; 0us; 16521us; 0us; 16522us; 1us; 32768us; 74us; 331us; 0us; 16523us; 1us; 32768us; 121us; 334us; 0us; 16524us; 1us; 32768us; 73us; 335us; 17us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 4us; 342us; 72us; 289us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 105us; 303us; 109us; 282us; 116us; 354us; 119us; 606us; 120us; 605us; 121us; 280us; 0us; 16525us; 0us; 16527us; 0us; 16528us; 1us; 16529us; 75us; 346us; 1us; 16530us; 76us; 350us; 1us; 16531us; 81us; 358us; 17us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 4us; 342us; 72us; 289us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 105us; 303us; 109us; 282us; 116us; 354us; 119us; 606us; 120us; 605us; 121us; 280us; 0us; 16532us; 15us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 72us; 289us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 105us; 303us; 109us; 282us; 119us; 606us; 120us; 605us; 121us; 280us; 0us; 16533us; 15us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 72us; 289us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 105us; 303us; 109us; 282us; 119us; 606us; 120us; 605us; 121us; 280us; 0us; 16534us; 15us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 72us; 289us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 105us; 303us; 109us; 282us; 119us; 606us; 120us; 605us; 121us; 280us; 0us; 16535us; 15us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 72us; 289us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 105us; 303us; 109us; 282us; 119us; 606us; 120us; 605us; 121us; 280us; 0us; 16536us; 16us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 72us; 289us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 105us; 303us; 109us; 282us; 116us; 357us; 119us; 606us; 120us; 605us; 121us; 280us; 0us; 16537us; 1us; 32768us; 81us; 355us; 15us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 72us; 289us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 105us; 303us; 109us; 282us; 119us; 606us; 120us; 605us; 121us; 280us; 0us; 16538us; 0us; 16539us; 16us; 32768us; 1us; 287us; 2us; 277us; 3us; 278us; 72us; 289us; 78us; 288us; 87us; 286us; 91us; 300us; 93us; 306us; 95us; 297us; 97us; 290us; 105us; 303us; 109us; 282us; 116us; 360us; 119us; 606us; 120us; 605us; 121us; 280us; 0us; 16540us; 0us; 16541us; 0us; 16542us; 0us; 16543us; 36us; 32768us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 43us; 369us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 2us; 32768us; 86us; 367us; 108us; 365us; 0us; 16544us; 0us; 16545us; 36us; 32768us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 43us; 369us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 0us; 16546us; 17us; 32768us; 2us; 634us; 3us; 635us; 9us; 659us; 10us; 662us; 71us; 641us; 72us; 640us; 93us; 654us; 95us; 665us; 105us; 656us; 109us; 646us; 113us; 639us; 114us; 638us; 115us; 637us; 116us; 636us; 119us; 606us; 120us; 605us; 121us; 609us; 18us; 16547us; 2us; 634us; 3us; 635us; 9us; 659us; 10us; 662us; 71us; 641us; 72us; 640us; 73us; 371us; 93us; 654us; 95us; 665us; 105us; 656us; 109us; 646us; 113us; 639us; 114us; 638us; 115us; 637us; 116us; 636us; 119us; 606us; 120us; 605us; 121us; 609us; 35us; 32768us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 35us; 16548us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 35us; 16549us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 0us; 16550us; 0us; 16551us; 0us; 16552us; 0us; 16553us; 35us; 16559us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 35us; 16634us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 36us; 16634us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 74us; 551us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 36us; 16634us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 74us; 558us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 35us; 16635us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 36us; 32768us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 74us; 563us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 0us; 16554us; 0us; 16555us; 0us; 16556us; 0us; 16557us; 0us; 16560us; 0us; 16561us; 0us; 16562us; 0us; 16563us; 0us; 16564us; 0us; 16565us; 0us; 16566us; 0us; 16567us; 0us; 16568us; 0us; 16569us; 1us; 32768us; 121us; 399us; 0us; 16570us; 1us; 32768us; 121us; 401us; 0us; 16571us; 1us; 32768us; 121us; 403us; 0us; 16572us; 0us; 16573us; 0us; 16574us; 1us; 32768us; 107us; 363us; 0us; 16575us; 0us; 16576us; 0us; 16577us; 0us; 16578us; 0us; 16579us; 0us; 16580us; 0us; 16581us; 0us; 16582us; 0us; 16583us; 0us; 16584us; 0us; 16585us; 0us; 16586us; 0us; 16587us; 0us; 16588us; 1us; 32768us; 39us; 422us; 0us; 16596us; 2us; 32768us; 24us; 424us; 121us; 455us; 1us; 32768us; 107us; 363us; 1us; 32768us; 25us; 426us; 1us; 32768us; 107us; 363us; 0us; 16589us; 36us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 39us; 429us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 0us; 16596us; 2us; 32768us; 24us; 431us; 121us; 455us; 1us; 32768us; 107us; 363us; 1us; 32768us; 25us; 433us; 1us; 32768us; 107us; 363us; 0us; 16590us; 0us; 16596us; 2us; 32768us; 107us; 363us; 121us; 455us; 1us; 32768us; 29us; 438us; 1us; 32768us; 107us; 439us; 0us; 16598us; 2us; 32768us; 77us; 444us; 108us; 443us; 1us; 32768us; 108us; 442us; 0us; 16591us; 0us; 16592us; 5us; 32768us; 30us; 449us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 0us; 16596us; 2us; 32768us; 100us; 447us; 121us; 455us; 35us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 0us; 16593us; 18us; 32768us; 2us; 634us; 3us; 635us; 9us; 659us; 10us; 662us; 71us; 641us; 72us; 640us; 93us; 654us; 95us; 665us; 100us; 450us; 105us; 656us; 109us; 646us; 113us; 639us; 114us; 638us; 115us; 637us; 116us; 636us; 119us; 606us; 120us; 605us; 121us; 609us; 35us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 0us; 16594us; 18us; 32768us; 2us; 634us; 3us; 635us; 9us; 659us; 10us; 662us; 71us; 641us; 72us; 640us; 93us; 654us; 95us; 665us; 100us; 453us; 105us; 656us; 109us; 646us; 113us; 639us; 114us; 638us; 115us; 637us; 116us; 636us; 119us; 606us; 120us; 605us; 121us; 609us; 35us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 0us; 16595us; 0us; 16597us; 0us; 16599us; 1us; 32768us; 119us; 460us; 1us; 32768us; 107us; 363us; 0us; 16600us; 1us; 16601us; 119us; 460us; 0us; 16602us; 1us; 32768us; 107us; 463us; 1us; 32768us; 77us; 473us; 2us; 32768us; 77us; 466us; 108us; 465us; 0us; 16603us; 18us; 32768us; 2us; 634us; 3us; 635us; 9us; 659us; 10us; 662us; 25us; 467us; 71us; 641us; 72us; 640us; 93us; 654us; 95us; 665us; 105us; 656us; 109us; 646us; 113us; 639us; 114us; 638us; 115us; 637us; 116us; 636us; 119us; 606us; 120us; 605us; 121us; 609us; 1us; 32768us; 100us; 468us; 35us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 1us; 32768us; 108us; 470us; 0us; 16604us; 0us; 16605us; 0us; 16606us; 17us; 32768us; 2us; 634us; 3us; 635us; 9us; 659us; 10us; 662us; 71us; 641us; 72us; 640us; 93us; 654us; 95us; 665us; 105us; 656us; 109us; 646us; 113us; 639us; 114us; 638us; 115us; 637us; 116us; 636us; 119us; 606us; 120us; 605us; 121us; 609us; 18us; 32768us; 2us; 634us; 3us; 635us; 9us; 659us; 10us; 662us; 71us; 641us; 72us; 640us; 93us; 654us; 95us; 665us; 100us; 475us; 105us; 656us; 109us; 646us; 113us; 639us; 114us; 638us; 115us; 637us; 116us; 636us; 119us; 606us; 120us; 605us; 121us; 609us; 35us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 0us; 16607us; 1us; 32768us; 24us; 478us; 1us; 32768us; 107us; 363us; 1us; 32768us; 25us; 480us; 1us; 32768us; 107us; 363us; 0us; 16608us; 1us; 32768us; 107us; 483us; 1us; 32768us; 77us; 486us; 1us; 32768us; 108us; 485us; 0us; 16609us; 36us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 25us; 487us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 1us; 32768us; 100us; 488us; 35us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 0us; 16610us; 1us; 32768us; 100us; 491us; 35us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 1us; 32768us; 77us; 486us; 0us; 16611us; 35us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 1us; 32768us; 24us; 496us; 1us; 32768us; 107us; 363us; 0us; 16612us; 35us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 1us; 32768us; 24us; 500us; 1us; 32768us; 107us; 363us; 0us; 16613us; 1us; 32768us; 121us; 525us; 3us; 32768us; 19us; 510us; 24us; 504us; 69us; 506us; 1us; 32768us; 107us; 363us; 0us; 16614us; 4us; 32768us; 5us; 517us; 6us; 518us; 8us; 520us; 9us; 519us; 1us; 32768us; 24us; 508us; 1us; 32768us; 107us; 363us; 0us; 16615us; 1us; 32768us; 121us; 531us; 1us; 32768us; 24us; 512us; 1us; 32768us; 107us; 363us; 0us; 16616us; 1us; 16617us; 85us; 515us; 4us; 32768us; 5us; 517us; 6us; 518us; 8us; 520us; 9us; 519us; 0us; 16618us; 0us; 16619us; 0us; 16620us; 0us; 16621us; 0us; 16622us; 0us; 16623us; 0us; 16624us; 0us; 16625us; 0us; 16626us; 1us; 32768us; 14us; 526us; 4us; 16627us; 5us; 521us; 6us; 522us; 8us; 524us; 9us; 523us; 35us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 1us; 16628us; 85us; 529us; 1us; 32768us; 121us; 525us; 0us; 16629us; 1us; 32768us; 73us; 532us; 35us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 1us; 16630us; 85us; 534us; 1us; 32768us; 121us; 531us; 0us; 16631us; 36us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 100us; 16671us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 599us; 1us; 32768us; 98us; 538us; 0us; 16632us; 1us; 32768us; 100us; 540us; 35us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 1us; 32768us; 98us; 542us; 0us; 16633us; 2us; 32768us; 85us; 547us; 94us; 550us; 2us; 32768us; 85us; 547us; 94us; 554us; 2us; 32768us; 85us; 547us; 106us; 557us; 2us; 32768us; 85us; 547us; 106us; 561us; 35us; 32768us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 36us; 32768us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 94us; 549us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 0us; 16636us; 0us; 16637us; 2us; 32768us; 29us; 553us; 94us; 552us; 0us; 16638us; 35us; 32768us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 0us; 16639us; 36us; 32768us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 106us; 556us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 0us; 16640us; 0us; 16641us; 2us; 32768us; 29us; 560us; 106us; 559us; 0us; 16642us; 35us; 32768us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 0us; 16643us; 36us; 32768us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 96us; 570us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 592us; 2us; 32768us; 29us; 564us; 96us; 567us; 1us; 32768us; 121us; 591us; 1us; 32768us; 96us; 566us; 0us; 16644us; 0us; 16645us; 1us; 32768us; 96us; 569us; 0us; 16646us; 0us; 16647us; 1us; 32768us; 121us; 591us; 1us; 32768us; 92us; 573us; 0us; 16648us; 1us; 32768us; 107us; 575us; 1us; 32768us; 77us; 584us; 1us; 32768us; 77us; 577us; 2us; 32768us; 25us; 578us; 121us; 585us; 1us; 32768us; 100us; 579us; 35us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 1us; 32768us; 108us; 581us; 0us; 16649us; 0us; 16650us; 0us; 16651us; 1us; 32768us; 121us; 585us; 1us; 32768us; 100us; 586us; 35us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 0us; 16652us; 1us; 16653us; 85us; 589us; 1us; 32768us; 121us; 591us; 0us; 16654us; 1us; 32768us; 73us; 593us; 2us; 16659us; 73us; 593us; 83us; 603us; 35us; 16558us; 2us; 414us; 3us; 415us; 12us; 574us; 13us; 502us; 20us; 428us; 21us; 494us; 22us; 482us; 23us; 498us; 26us; 413us; 27us; 462us; 28us; 457us; 29us; 421us; 31us; 435us; 32us; 412us; 35us; 409us; 36us; 410us; 37us; 411us; 38us; 406us; 91us; 571us; 93us; 548us; 95us; 562us; 97us; 536us; 101us; 402us; 103us; 400us; 104us; 398us; 105us; 555us; 107us; 363us; 113us; 419us; 114us; 418us; 115us; 417us; 116us; 416us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 0us; 16655us; 0us; 16656us; 0us; 16657us; 0us; 16658us; 1us; 16659us; 83us; 603us; 3us; 16659us; 83us; 603us; 100us; 16671us; 121us; 619us; 0us; 16660us; 0us; 16661us; 0us; 16662us; 4us; 32768us; 118us; 602us; 119us; 601us; 120us; 600us; 121us; 598us; 0us; 16663us; 0us; 16664us; 0us; 16665us; 1us; 32768us; 83us; 610us; 1us; 32768us; 83us; 611us; 2us; 16686us; 0us; 643us; 83us; 610us; 3us; 32768us; 119us; 606us; 120us; 605us; 121us; 607us; 4us; 32768us; 118us; 613us; 119us; 606us; 120us; 605us; 121us; 608us; 0us; 16666us; 0us; 16667us; 1us; 32768us; 83us; 615us; 2us; 32768us; 118us; 613us; 121us; 614us; 0us; 16668us; 0us; 16669us; 0us; 16670us; 1us; 16671us; 121us; 619us; 0us; 16672us; 1us; 16673us; 74us; 622us; 0us; 16674us; 18us; 32768us; 2us; 634us; 3us; 635us; 9us; 659us; 10us; 662us; 71us; 641us; 72us; 640us; 93us; 654us; 95us; 665us; 105us; 656us; 109us; 646us; 110us; 648us; 113us; 639us; 114us; 638us; 115us; 637us; 116us; 636us; 119us; 606us; 120us; 605us; 121us; 609us; 18us; 32768us; 2us; 634us; 3us; 635us; 9us; 659us; 10us; 662us; 71us; 641us; 72us; 640us; 93us; 654us; 94us; 655us; 95us; 665us; 105us; 656us; 109us; 646us; 113us; 639us; 114us; 638us; 115us; 637us; 116us; 636us; 119us; 606us; 120us; 605us; 121us; 609us; 18us; 32768us; 2us; 634us; 3us; 635us; 9us; 659us; 10us; 662us; 71us; 641us; 72us; 640us; 93us; 654us; 95us; 665us; 105us; 656us; 106us; 657us; 109us; 646us; 113us; 639us; 114us; 638us; 115us; 637us; 116us; 636us; 119us; 606us; 120us; 605us; 121us; 609us; 18us; 32768us; 2us; 634us; 3us; 635us; 9us; 659us; 10us; 662us; 71us; 641us; 72us; 640us; 93us; 654us; 95us; 665us; 105us; 656us; 108us; 661us; 109us; 646us; 113us; 639us; 114us; 638us; 115us; 637us; 116us; 636us; 119us; 606us; 120us; 605us; 121us; 609us; 18us; 32768us; 2us; 634us; 3us; 635us; 9us; 659us; 10us; 662us; 71us; 641us; 72us; 640us; 93us; 654us; 95us; 665us; 105us; 656us; 108us; 664us; 109us; 646us; 113us; 639us; 114us; 638us; 115us; 637us; 116us; 636us; 119us; 606us; 120us; 605us; 121us; 609us; 0us; 16675us; 1us; 32768us; 73us; 630us; 17us; 32768us; 2us; 634us; 3us; 635us; 9us; 659us; 10us; 662us; 71us; 641us; 72us; 640us; 93us; 654us; 95us; 665us; 105us; 656us; 109us; 646us; 113us; 639us; 114us; 638us; 115us; 637us; 116us; 636us; 119us; 606us; 120us; 605us; 121us; 609us; 1us; 16676us; 85us; 632us; 1us; 32768us; 121us; 629us; 0us; 16677us; 0us; 16678us; 0us; 16679us; 0us; 16680us; 0us; 16681us; 0us; 16682us; 0us; 16683us; 0us; 16684us; 17us; 32768us; 2us; 634us; 3us; 635us; 9us; 659us; 10us; 662us; 71us; 641us; 72us; 640us; 93us; 654us; 95us; 665us; 105us; 656us; 109us; 646us; 113us; 639us; 114us; 638us; 115us; 637us; 116us; 636us; 119us; 606us; 120us; 605us; 121us; 609us; 0us; 16685us; 17us; 32768us; 2us; 634us; 3us; 635us; 9us; 659us; 10us; 662us; 71us; 641us; 72us; 640us; 93us; 654us; 95us; 665us; 105us; 656us; 109us; 646us; 113us; 639us; 114us; 638us; 115us; 637us; 116us; 636us; 119us; 606us; 120us; 605us; 121us; 609us; 0us; 16687us; 0us; 16688us; 3us; 32768us; 119us; 606us; 120us; 605us; 121us; 607us; 17us; 32768us; 2us; 634us; 3us; 635us; 9us; 659us; 10us; 662us; 71us; 641us; 72us; 640us; 93us; 654us; 95us; 665us; 105us; 656us; 109us; 646us; 113us; 639us; 114us; 638us; 115us; 637us; 116us; 636us; 119us; 606us; 120us; 605us; 121us; 609us; 0us; 16689us; 0us; 16690us; 0us; 16691us; 0us; 16692us; 0us; 16693us; 0us; 16694us; 17us; 32768us; 2us; 634us; 3us; 635us; 9us; 659us; 10us; 662us; 71us; 641us; 72us; 640us; 93us; 654us; 95us; 665us; 105us; 656us; 109us; 646us; 113us; 639us; 114us; 638us; 115us; 637us; 116us; 636us; 119us; 606us; 120us; 605us; 121us; 609us; 0us; 16695us; 18us; 32768us; 2us; 634us; 3us; 635us; 9us; 659us; 10us; 662us; 71us; 641us; 72us; 640us; 93us; 654us; 95us; 665us; 105us; 656us; 106us; 658us; 109us; 646us; 113us; 639us; 114us; 638us; 115us; 637us; 116us; 636us; 119us; 606us; 120us; 605us; 121us; 609us; 0us; 16696us; 0us; 16697us; 1us; 32768us; 107us; 660us; 17us; 32768us; 2us; 634us; 3us; 635us; 9us; 659us; 10us; 662us; 71us; 641us; 72us; 640us; 93us; 654us; 95us; 665us; 105us; 656us; 109us; 646us; 113us; 639us; 114us; 638us; 115us; 637us; 116us; 636us; 119us; 606us; 120us; 605us; 121us; 609us; 0us; 16698us; 1us; 32768us; 107us; 663us; 17us; 32768us; 2us; 634us; 3us; 635us; 9us; 659us; 10us; 662us; 71us; 641us; 72us; 640us; 93us; 654us; 95us; 665us; 105us; 656us; 109us; 646us; 113us; 639us; 114us; 638us; 115us; 637us; 116us; 636us; 119us; 606us; 120us; 605us; 121us; 609us; 0us; 16699us; 1us; 32768us; 121us; 629us; 1us; 32768us; 96us; 667us; 0us; 16700us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 2us; 3us; 19us; 22us; 24us; 25us; 27us; 28us; 30us; 31us; 47us; 48us; 50us; 86us; 87us; 92us; 94us; 96us; 97us; 100us; 102us; 104us; 105us; 107us; 108us; 109us; 110us; 112us; 114us; 116us; 118us; 120us; 122us; 124us; 126us; 128us; 130us; 131us; 133us; 134us; 138us; 140us; 141us; 145us; 146us; 147us; 148us; 149us; 150us; 155us; 156us; 160us; 162us; 163us; 164us; 166us; 167us; 170us; 188us; 189us; 190us; 191us; 192us; 194us; 195us; 196us; 197us; 198us; 199us; 200us; 201us; 202us; 203us; 205us; 207us; 208us; 210us; 211us; 213us; 232us; 268us; 269us; 288us; 324us; 325us; 327us; 334us; 337us; 339us; 358us; 394us; 395us; 414us; 450us; 451us; 454us; 455us; 457us; 459us; 461us; 463us; 465us; 466us; 468us; 470us; 472us; 474us; 476us; 477us; 479us; 480us; 482us; 484us; 488us; 489us; 491us; 493us; 497us; 498us; 499us; 500us; 501us; 503us; 505us; 509us; 511us; 512us; 514us; 516us; 518us; 522us; 524us; 525us; 532us; 533us; 540us; 541us; 542us; 544us; 546us; 553us; 555us; 556us; 559us; 560us; 562us; 581us; 597us; 598us; 617us; 633us; 634us; 636us; 638us; 639us; 641us; 643us; 647us; 650us; 669us; 670us; 672us; 674us; 676us; 677us; 681us; 683us; 684us; 686us; 688us; 690us; 691us; 695us; 697us; 698us; 702us; 706us; 707us; 709us; 711us; 718us; 720us; 721us; 723us; 725us; 744us; 763us; 799us; 800us; 804us; 807us; 825us; 844us; 880us; 881us; 883us; 884us; 886us; 888us; 890us; 891us; 893us; 895us; 896us; 898us; 899us; 901us; 903us; 904us; 906us; 908us; 944us; 950us; 986us; 987us; 989us; 990us; 993us; 1029us; 1035us; 1071us; 1072us; 1073us; 1074us; 1075us; 1077us; 1079us; 1081us; 1117us; 1119us; 1120us; 1122us; 1158us; 1160us; 1161us; 1163us; 1165us; 1167us; 1168us; 1170us; 1172us; 1174us; 1175us; 1176us; 1183us; 1185us; 1186us; 1193us; 1195us; 1196us; 1203us; 1205us; 1206us; 1208us; 1215us; 1216us; 1218us; 1237us; 1238us; 1239us; 1241us; 1259us; 1260us; 1261us; 1264us; 1266us; 1268us; 1269us; 1272us; 1275us; 1276us; 1294us; 1312us; 1313us; 1317us; 1318us; 1319us; 1320us; 1321us; 1324us; 1326us; 1328us; 1346us; 1348us; 1349us; 1350us; 1351us; 1352us; 1353us; 1354us; 1355us; 1357us; 1358us; 1377us; 1378us; 1397us; 1398us; 1401us; 1404us; 1405us; 1408us; 1411us; 1412us; 1430us; 1432us; 1433us; 1434us; 1453us; 1454us; 1459us; 1476us; 1477us; 1478us; 1497us; 1500us; 1503us; 1506us; 1509us; 1527us; 1529us; 1530us; 1548us; 1550us; 1551us; 1552us; 1554us; 1555us; 1573us; 1574us; 1575us; 1577us; 1578us; 1580us; 1581us; 1583us; 1601us; 1602us; 1603us; 1604us; 1606us; 1608us; 1610us; 1628us; 1629us; 1645us; 1646us; 1662us; 1663us; 1679us; 1680us; 1696us; 1697us; 1714us; 1715us; 1717us; 1733us; 1734us; 1735us; 1752us; 1753us; 1754us; 1755us; 1756us; 1793us; 1796us; 1797us; 1798us; 1835us; 1836us; 1854us; 1873us; 1909us; 1945us; 1981us; 1982us; 1983us; 1984us; 1985us; 2021us; 2057us; 2094us; 2131us; 2167us; 2204us; 2205us; 2206us; 2207us; 2208us; 2209us; 2210us; 2211us; 2212us; 2213us; 2214us; 2215us; 2216us; 2217us; 2218us; 2220us; 2221us; 2223us; 2224us; 2226us; 2227us; 2228us; 2229us; 2231us; 2232us; 2233us; 2234us; 2235us; 2236us; 2237us; 2238us; 2239us; 2240us; 2241us; 2242us; 2243us; 2244us; 2245us; 2247us; 2248us; 2251us; 2253us; 2255us; 2257us; 2258us; 2295us; 2296us; 2299us; 2301us; 2303us; 2305us; 2306us; 2307us; 2310us; 2312us; 2314us; 2315us; 2318us; 2320us; 2321us; 2322us; 2328us; 2329us; 2332us; 2368us; 2369us; 2388us; 2424us; 2425us; 2444us; 2480us; 2481us; 2482us; 2483us; 2485us; 2487us; 2488us; 2490us; 2491us; 2493us; 2495us; 2498us; 2499us; 2518us; 2520us; 2556us; 2558us; 2559us; 2560us; 2561us; 2579us; 2598us; 2634us; 2635us; 2637us; 2639us; 2641us; 2643us; 2644us; 2646us; 2648us; 2650us; 2651us; 2688us; 2690us; 2726us; 2727us; 2729us; 2765us; 2767us; 2768us; 2804us; 2806us; 2808us; 2809us; 2845us; 2847us; 2849us; 2850us; 2852us; 2856us; 2858us; 2859us; 2864us; 2866us; 2868us; 2869us; 2871us; 2873us; 2875us; 2876us; 2878us; 2883us; 2884us; 2885us; 2886us; 2887us; 2888us; 2889us; 2890us; 2891us; 2892us; 2894us; 2899us; 2935us; 2937us; 2939us; 2940us; 2942us; 2978us; 2980us; 2982us; 2983us; 3020us; 3022us; 3023us; 3025us; 3061us; 3063us; 3064us; 3067us; 3070us; 3073us; 3076us; 3112us; 3149us; 3150us; 3151us; 3154us; 3155us; 3191us; 3192us; 3229us; 3230us; 3231us; 3234us; 3235us; 3271us; 3272us; 3309us; 3312us; 3314us; 3316us; 3317us; 3318us; 3320us; 3321us; 3322us; 3324us; 3326us; 3327us; 3329us; 3331us; 3333us; 3336us; 3338us; 3374us; 3376us; 3377us; 3378us; 3379us; 3381us; 3383us; 3419us; 3420us; 3422us; 3424us; 3425us; 3427us; 3430us; 3466us; 3467us; 3468us; 3469us; 3470us; 3472us; 3476us; 3477us; 3478us; 3479us; 3484us; 3485us; 3486us; 3487us; 3489us; 3491us; 3494us; 3498us; 3503us; 3504us; 3505us; 3507us; 3510us; 3511us; 3512us; 3513us; 3515us; 3516us; 3518us; 3519us; 3538us; 3557us; 3576us; 3595us; 3614us; 3615us; 3617us; 3635us; 3637us; 3639us; 3640us; 3641us; 3642us; 3643us; 3644us; 3645us; 3646us; 3647us; 3665us; 3666us; 3684us; 3685us; 3686us; 3690us; 3708us; 3709us; 3710us; 3711us; 3712us; 3713us; 3714us; 3732us; 3733us; 3752us; 3753us; 3754us; 3756us; 3774us; 3775us; 3777us; 3795us; 3796us; 3798us; 3800us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 4us; 4us; 0us; 2us; 0us; 2us; 3us; 4us; 5us; 3us; 1us; 1us; 11us; 2us; 3us; 0us; 2us; 1us; 1us; 1us; 1us; 2us; 4us; 1us; 5us; 1us; 1us; 2us; 4us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 0us; 2us; 4us; 5us; 5us; 6us; 1us; 2us; 6us; 7us; 0us; 2us; 4us; 5us; 1us; 1us; 1us; 5us; 6us; 3us; 4us; 4us; 5us; 0us; 2us; 6us; 1us; 2us; 4us; 5us; 1us; 3us; 6us; 7us; 8us; 0us; 2us; 6us; 6us; 9us; 5us; 6us; 3us; 4us; 1us; 3us; 3us; 6us; 7us; 1us; 1us; 1us; 1us; 1us; 5us; 5us; 4us; 4us; 1us; 3us; 3us; 3us; 1us; 3us; 1us; 3us; 1us; 3us; 1us; 4us; 3us; 2us; 1us; 4us; 1us; 1us; 1us; 4us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 4us; 3us; 3us; 3us; 3us; 3us; 1us; 9us; 0us; 3us; 2us; 1us; 2us; 3us; 1us; 2us; 3us; 3us; 1us; 1us; 3us; 1us; 1us; 1us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 2us; 3us; 1us; 3us; 2us; 4us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 2us; 2us; 0us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 7us; 7us; 8us; 7us; 5us; 4us; 5us; 0us; 2us; 0us; 2us; 3us; 1us; 2us; 4us; 8us; 1us; 2us; 4us; 6us; 4us; 4us; 5us; 4us; 4us; 4us; 6us; 6us; 1us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 0us; 4us; 6us; 3us; 5us; 3us; 5us; 1us; 3us; 2us; 3us; 4us; 6us; 2us; 3us; 4us; 6us; 6us; 4us; 3us; 2us; 3us; 8us; 1us; 2us; 4us; 1us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 1us; 3us; 1us; 3us; 1us; 2us; 0us; 2us; 1us; 2us; 2us; 3us; 5us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 3us; 1us; 4us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 2us; 4us; 4us; 3us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 5us; 6us; 6us; 7us; 8us; 9us; 10us; 10us; 11us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 14us; 14us; 15us; 15us; 15us; 15us; 16us; 16us; 17us; 17us; 18us; 18us; 19us; 19us; 20us; 20us; 20us; 21us; 21us; 21us; 21us; 21us; 21us; 22us; 22us; 22us; 23us; 23us; 24us; 24us; 25us; 25us; 26us; 27us; 27us; 28us; 28us; 28us; 29us; 29us; 30us; 30us; 30us; 30us; 31us; 31us; 32us; 33us; 34us; 35us; 35us; 35us; 35us; 35us; 35us; 35us; 36us; 37us; 38us; 38us; 39us; 39us; 39us; 39us; 40us; 40us; 41us; 41us; 42us; 42us; 42us; 43us; 44us; 44us; 45us; 45us; 45us; 45us; 45us; 45us; 45us; 45us; 45us; 45us; 45us; 45us; 45us; 45us; 45us; 45us; 46us; 47us; 48us; 49us; 49us; 49us; 50us; 50us; 50us; 51us; 51us; 51us; 52us; 53us; 53us; 53us; 53us; 53us; 53us; 53us; 54us; 54us; 55us; 55us; 56us; 56us; 56us; 56us; 56us; 57us; 57us; 58us; 59us; 59us; 60us; 60us; 60us; 61us; 61us; 61us; 61us; 61us; 61us; 61us; 61us; 62us; 62us; 63us; 63us; 63us; 63us; 63us; 63us; 63us; 63us; 63us; 63us; 63us; 63us; 63us; 63us; 63us; 63us; 63us; 63us; 63us; 63us; 63us; 63us; 63us; 63us; 63us; 63us; 63us; 63us; 63us; 64us; 64us; 65us; 65us; 66us; 67us; 67us; 68us; 68us; 69us; 69us; 70us; 71us; 71us; 72us; 72us; 73us; 73us; 74us; 75us; 76us; 77us; 77us; 78us; 79us; 80us; 80us; 80us; 81us; 81us; 82us; 82us; 82us; 82us; 83us; 83us; 83us; 83us; 83us; 84us; 84us; 85us; 85us; 86us; 86us; 87us; 87us; 88us; 88us; 88us; 88us; 89us; 89us; 89us; 89us; 90us; 90us; 90us; 90us; 91us; 92us; 93us; 93us; 94us; 95us; 95us; 96us; 97us; 98us; 99us; 100us; 100us; 100us; 100us; 100us; 101us; 101us; 101us; 102us; 102us; 103us; 103us; 104us; 104us; 105us; 105us; 105us; 106us; 106us; 107us; 107us; 107us; 107us; 107us; 107us; 107us; 107us; 107us; 107us; 107us; 107us; 107us; 107us; 107us; 107us; 107us; 108us; 109us; 109us; 110us; 111us; 112us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 65535us; 65535us; 16385us; 65535us; 16386us; 65535us; 16388us; 65535us; 16390us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 16392us; 65535us; 65535us; 65535us; 16393us; 65535us; 16394us; 16395us; 16396us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16397us; 65535us; 16398us; 65535us; 65535us; 16399us; 65535us; 16401us; 16402us; 16403us; 16404us; 16405us; 65535us; 16406us; 65535us; 65535us; 16407us; 16408us; 65535us; 65535us; 65535us; 65535us; 16409us; 16410us; 16411us; 16412us; 65535us; 16413us; 16414us; 16415us; 16416us; 16417us; 16418us; 16419us; 16420us; 16421us; 65535us; 65535us; 16422us; 65535us; 16424us; 65535us; 65535us; 65535us; 16425us; 65535us; 65535us; 16426us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16427us; 65535us; 65535us; 16428us; 65535us; 16430us; 65535us; 65535us; 65535us; 65535us; 65535us; 16431us; 65535us; 65535us; 65535us; 65535us; 65535us; 16432us; 65535us; 16434us; 65535us; 65535us; 65535us; 16435us; 65535us; 65535us; 65535us; 16436us; 16437us; 16438us; 16439us; 65535us; 65535us; 65535us; 65535us; 16440us; 65535us; 65535us; 65535us; 65535us; 65535us; 16441us; 65535us; 16444us; 65535us; 16445us; 16447us; 65535us; 65535us; 65535us; 65535us; 16448us; 65535us; 16450us; 65535us; 65535us; 65535us; 16451us; 65535us; 65535us; 16452us; 65535us; 65535us; 16454us; 65535us; 65535us; 65535us; 65535us; 65535us; 16455us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16456us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16457us; 65535us; 65535us; 16459us; 65535us; 65535us; 65535us; 65535us; 16460us; 65535us; 65535us; 65535us; 65535us; 65535us; 16461us; 65535us; 65535us; 65535us; 65535us; 65535us; 16462us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16467us; 65535us; 16468us; 65535us; 65535us; 16469us; 65535us; 65535us; 65535us; 65535us; 65535us; 16470us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16471us; 16472us; 16473us; 16474us; 65535us; 65535us; 65535us; 65535us; 65535us; 16477us; 65535us; 65535us; 65535us; 16478us; 65535us; 65535us; 65535us; 16479us; 65535us; 65535us; 65535us; 16480us; 16481us; 65535us; 65535us; 16482us; 65535us; 65535us; 16483us; 65535us; 65535us; 16484us; 65535us; 65535us; 16486us; 65535us; 65535us; 16488us; 16489us; 65535us; 65535us; 16490us; 16491us; 65535us; 65535us; 65535us; 16492us; 65535us; 65535us; 16493us; 65535us; 65535us; 16495us; 65535us; 65535us; 16496us; 16497us; 16498us; 65535us; 65535us; 65535us; 65535us; 65535us; 16500us; 16501us; 16502us; 16503us; 16504us; 16505us; 65535us; 65535us; 16506us; 65535us; 16507us; 65535us; 16508us; 65535us; 65535us; 16509us; 65535us; 65535us; 16510us; 65535us; 65535us; 16511us; 65535us; 65535us; 16512us; 65535us; 65535us; 16513us; 16514us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16517us; 16519us; 65535us; 16520us; 65535us; 16521us; 16522us; 65535us; 16523us; 65535us; 16524us; 65535us; 65535us; 16525us; 16527us; 16528us; 65535us; 65535us; 65535us; 65535us; 16532us; 65535us; 16533us; 65535us; 16534us; 65535us; 16535us; 65535us; 16536us; 65535us; 16537us; 65535us; 65535us; 16538us; 16539us; 65535us; 16540us; 16541us; 16542us; 16543us; 65535us; 65535us; 16544us; 16545us; 65535us; 16546us; 65535us; 65535us; 65535us; 65535us; 65535us; 16550us; 16551us; 16552us; 16553us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16554us; 16555us; 16556us; 16557us; 16560us; 16561us; 16562us; 16563us; 16564us; 16565us; 16566us; 16567us; 16568us; 16569us; 65535us; 16570us; 65535us; 16571us; 65535us; 16572us; 16573us; 16574us; 65535us; 16575us; 16576us; 16577us; 16578us; 16579us; 16580us; 16581us; 16582us; 16583us; 16584us; 16585us; 16586us; 16587us; 16588us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16589us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16590us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16591us; 16592us; 65535us; 65535us; 65535us; 65535us; 16593us; 65535us; 65535us; 16594us; 65535us; 65535us; 16595us; 16597us; 16599us; 65535us; 65535us; 16600us; 65535us; 16602us; 65535us; 65535us; 65535us; 16603us; 65535us; 65535us; 65535us; 65535us; 16604us; 16605us; 16606us; 65535us; 65535us; 65535us; 16607us; 65535us; 65535us; 65535us; 65535us; 16608us; 65535us; 65535us; 65535us; 16609us; 65535us; 65535us; 65535us; 16610us; 65535us; 65535us; 65535us; 16611us; 65535us; 65535us; 65535us; 16612us; 65535us; 65535us; 65535us; 16613us; 65535us; 65535us; 65535us; 16614us; 65535us; 65535us; 65535us; 16615us; 65535us; 65535us; 65535us; 16616us; 65535us; 65535us; 16618us; 16619us; 16620us; 16621us; 16622us; 16623us; 16624us; 16625us; 16626us; 65535us; 65535us; 65535us; 65535us; 65535us; 16629us; 65535us; 65535us; 65535us; 65535us; 16631us; 65535us; 65535us; 16632us; 65535us; 65535us; 65535us; 16633us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16636us; 16637us; 65535us; 16638us; 65535us; 16639us; 65535us; 16640us; 16641us; 65535us; 16642us; 65535us; 16643us; 65535us; 65535us; 65535us; 65535us; 16644us; 16645us; 65535us; 16646us; 16647us; 65535us; 65535us; 16648us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16649us; 16650us; 16651us; 65535us; 65535us; 65535us; 16652us; 65535us; 65535us; 16654us; 65535us; 65535us; 65535us; 16655us; 16656us; 16657us; 16658us; 65535us; 65535us; 16660us; 16661us; 16662us; 65535us; 16663us; 16664us; 16665us; 65535us; 65535us; 65535us; 65535us; 65535us; 16666us; 16667us; 65535us; 65535us; 16668us; 16669us; 16670us; 65535us; 16672us; 65535us; 16674us; 65535us; 65535us; 65535us; 65535us; 65535us; 16675us; 65535us; 65535us; 65535us; 65535us; 16677us; 16678us; 16679us; 16680us; 16681us; 16682us; 16683us; 16684us; 65535us; 16685us; 65535us; 16687us; 16688us; 65535us; 65535us; 16689us; 16690us; 16691us; 16692us; 16693us; 16694us; 65535us; 16695us; 65535us; 16696us; 16697us; 65535us; 65535us; 16698us; 65535us; 65535us; 16699us; 65535us; 65535us; 16700us; |]
let _fsyacc_reductions ()  =    [| 
# 1231 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  Unit  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startunit));
# 1240 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_main in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 ".\Parser.fsy"
                                                             UMain(_1, _2, _3) 
                   )
# 101 ".\Parser.fsy"
                 :  Unit ));
# 1253 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_export in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 ".\Parser.fsy"
                                                            UExport(_1, _2, _3) 
                   )
# 102 ".\Parser.fsy"
                 :  Unit ));
# 1266 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 ".\Parser.fsy"
                                          [] 
                   )
# 104 ".\Parser.fsy"
                 : 'gentype_import_list));
# 1276 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import in
            let _2 = parseState.GetInput(2) :?> 'gentype_import_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 ".\Parser.fsy"
                                                  _1 :: _2 
                   )
# 105 ".\Parser.fsy"
                 : 'gentype_import_list));
# 1288 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 ".\Parser.fsy"
                                         [] 
                   )
# 107 ".\Parser.fsy"
                 : 'gentype_decl_list));
# 1298 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_declaration in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 ".\Parser.fsy"
                                                   _1 :: _2 
                   )
# 108 ".\Parser.fsy"
                 : 'gentype_decl_list));
# 1310 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 ".\Parser.fsy"
                                                      _3 
                   )
# 110 ".\Parser.fsy"
                 : 'gentype_main));
# 1321 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_import_path in
            let _4 = parseState.GetInput(4) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 ".\Parser.fsy"
                                                                    { Native = false; Explicit = []; Path = _2; Alias = _4 } 
                   )
# 112 ".\Parser.fsy"
                 : 'gentype_import));
# 1333 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_brace_names in
            let _3 = parseState.GetInput(3) :?> 'gentype_import_path in
            let _5 = parseState.GetInput(5) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 ".\Parser.fsy"
                                                                          { Native = false; Explicit = _2; Path = _3; Alias = _5 } 
                   )
# 113 ".\Parser.fsy"
                 : 'gentype_import));
# 1346 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 ".\Parser.fsy"
                                                        { Native = true; Explicit = []; Path = IPLocal (_3); Alias = stringToSmallName "" } 
                   )
# 114 ".\Parser.fsy"
                 : 'gentype_import));
# 1357 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 ".\Parser.fsy"
                                            IPLocal (_1) 
                   )
# 116 ".\Parser.fsy"
                 : 'gentype_import_path));
# 1368 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_remote in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 ".\Parser.fsy"
                                   IPRemote (_1) 
                   )
# 117 ".\Parser.fsy"
                 : 'gentype_import_path));
# 1379 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> Name in
            let _7 = parseState.GetInput(7) :?> IntegerLiteral in
            let _9 = parseState.GetInput(9) :?> IntegerLiteral in
            let _11 = parseState.GetInput(11) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 ".\Parser.fsy"
                          { Org = _1; Project = _3; Unit = _5; Major = _7; Minor = _9; Patch = _11 } 
                   )
# 120 ".\Parser.fsy"
                 : 'gentype_remote));
# 1395 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_brace_names in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 ".\Parser.fsy"
                                                   _2 
                   )
# 122 ".\Parser.fsy"
                 : 'gentype_export));
# 1406 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_name_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 ".\Parser.fsy"
                                                               _2 
                   )
# 124 ".\Parser.fsy"
                 : 'gentype_brace_names));
# 1417 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 ".\Parser.fsy"
                                       [] 
                   )
# 126 ".\Parser.fsy"
                 : 'gentype_name_list));
# 1427 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_name in
            let _2 = parseState.GetInput(2) :?> 'gentype_name_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 ".\Parser.fsy"
                                            _1 :: _2 
                   )
# 127 ".\Parser.fsy"
                 : 'gentype_name_list));
# 1439 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 ".\Parser.fsy"
                                          _1 
                   )
# 129 ".\Parser.fsy"
                 : 'gentype_name));
# 1450 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 ".\Parser.fsy"
                                         _1 
                   )
# 130 ".\Parser.fsy"
                 : 'gentype_name));
# 1461 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 ".\Parser.fsy"
                                          _1 
                   )
# 131 ".\Parser.fsy"
                 : 'gentype_name));
# 1472 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 ".\Parser.fsy"
                                                        DFunc (_1) 
                   )
# 135 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1483 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 ".\Parser.fsy"
                                                      DRecFuncs ([_2]) 
                   )
# 136 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1494 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_function_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 ".\Parser.fsy"
                                                                      DRecFuncs (_3) 
                   )
# 137 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1505 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_native in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 ".\Parser.fsy"
                                             DNative (_1) 
                   )
# 138 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1516 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 ".\Parser.fsy"
                                                                            DPattern (_2, _3, _5) 
                   )
# 139 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1529 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_userkind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 ".\Parser.fsy"
                                               DKind (_1) 
                   )
# 140 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1540 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 ".\Parser.fsy"
                                               DType (_1) 
                   )
# 141 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1551 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 ".\Parser.fsy"
                                                      DRecTypes ([_2]) 
                   )
# 142 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1562 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_datatype_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 ".\Parser.fsy"
                                                                      DRecTypes (_3) 
                   )
# 143 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1573 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_overload in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 ".\Parser.fsy"
                                               _1 
                   )
# 144 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1584 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_instance in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 ".\Parser.fsy"
                                               _1 
                   )
# 145 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1595 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rule in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 ".\Parser.fsy"
                                            _1 
                   )
# 146 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1606 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_effect in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 ".\Parser.fsy"
                                             DEffect (_1) 
                   )
# 147 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1617 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_test in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 ".\Parser.fsy"
                                            DTest (_1) 
                   )
# 148 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1628 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_law in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 ".\Parser.fsy"
                                           DLaw (_1) 
                   )
# 149 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1639 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_check in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 ".\Parser.fsy"
                                             DCheck (_1) 
                   )
# 150 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1650 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tag in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 ".\Parser.fsy"
                                           _1 
                   )
# 151 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1661 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_documentation_lines in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 ".\Parser.fsy"
                                                                        _3 
                   )
# 153 ".\Parser.fsy"
                 : 'gentype_documentation));
# 1672 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 ".\Parser.fsy"
                                                       [] 
                   )
# 155 ".\Parser.fsy"
                 : 'gentype_documentation_lines));
# 1682 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> DocumentationLine in
            let _2 = parseState.GetInput(2) :?> 'gentype_documentation_lines in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 ".\Parser.fsy"
                                                                     _1 :: _2 
                   )
# 156 ".\Parser.fsy"
                 : 'gentype_documentation_lines));
# 1694 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 ".\Parser.fsy"
                          { Name = _2; Docs = []; Body = _4 } 
                   )
# 159 ".\Parser.fsy"
                 : 'gentype_function));
# 1706 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_no_dot_pattern_expr_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 ".\Parser.fsy"
                           { Name = _2; Docs = []; Body = [EStatementBlock([SLet { Matcher = _3; Body = [] }; SExpression(_5)])] } 
                   )
# 161 ".\Parser.fsy"
                 : 'gentype_function));
# 1719 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 ".\Parser.fsy"
                           { Name = _3; Docs = _1; Body = _5 } 
                   )
# 163 ".\Parser.fsy"
                 : 'gentype_function));
# 1732 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_no_dot_pattern_expr_list in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 ".\Parser.fsy"
                           { Name = _3; Docs = _1; Body = [EStatementBlock([SLet { Matcher = _4; Body = [] }; SExpression(_6)])] } 
                   )
# 165 ".\Parser.fsy"
                 : 'gentype_function));
# 1746 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 ".\Parser.fsy"
                                                   [_1] 
                   )
# 167 ".\Parser.fsy"
                 : 'gentype_function_list));
# 1757 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            let _2 = parseState.GetInput(2) :?> 'gentype_function_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 ".\Parser.fsy"
                                                     _1 :: _2 
                   )
# 168 ".\Parser.fsy"
                 : 'gentype_function_list));
# 1769 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_qual_fn_type in
            let _6 = parseState.GetInput(6) :?> 'gentype_native_code_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 ".\Parser.fsy"
                          { Name = _2; Docs = []; Type = _4; Lines = _6 } 
                   )
# 171 ".\Parser.fsy"
                 : 'gentype_native));
# 1782 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_qual_fn_type in
            let _7 = parseState.GetInput(7) :?> 'gentype_native_code_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 ".\Parser.fsy"
                             { Name = _3; Docs = _1; Type = _5; Lines = _7 } 
                   )
# 173 ".\Parser.fsy"
                 : 'gentype_native));
# 1796 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 ".\Parser.fsy"
                                                    [] 
                   )
# 175 ".\Parser.fsy"
                 : 'gentype_native_code_list));
# 1806 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> NativeCodeLine in
            let _2 = parseState.GetInput(2) :?> 'gentype_native_code_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 ".\Parser.fsy"
                                                                _1 :: _2 
                   )
# 176 ".\Parser.fsy"
                 : 'gentype_native_code_list));
# 1818 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_kind_unify in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 ".\Parser.fsy"
                          { Name = _2; Docs = []; Unify = _4 } 
                   )
# 179 ".\Parser.fsy"
                 : 'gentype_userkind));
# 1830 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_kind_unify in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 ".\Parser.fsy"
                           { Name = _3; Docs = _1; Unify = _5 } 
                   )
# 181 ".\Parser.fsy"
                 : 'gentype_userkind));
# 1843 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 ".\Parser.fsy"
                                             KUBoolean 
                   )
# 183 ".\Parser.fsy"
                 : 'gentype_kind_unify));
# 1853 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 ".\Parser.fsy"
                                       KUAbelian 
                   )
# 184 ".\Parser.fsy"
                 : 'gentype_kind_unify));
# 1863 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 ".\Parser.fsy"
                                         KUSyntactic 
                   )
# 185 ".\Parser.fsy"
                 : 'gentype_kind_unify));
# 1873 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_type_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_constructor_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 ".\Parser.fsy"
                          { Name = _2; Docs = []; Params = _3; Constructors = _5; Kind = SKBase (sIdentifier [] (stringToBigName "Data")) } 
                   )
# 188 ".\Parser.fsy"
                 : 'gentype_datatype));
# 1886 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_type_param_list in
            let _6 = parseState.GetInput(6) :?> 'gentype_constructor_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 ".\Parser.fsy"
                          { Name = _3; Docs = _1; Params = _4; Constructors = _6; Kind = SKBase (sIdentifier [] (stringToBigName "Data")) } 
                   )
# 190 ".\Parser.fsy"
                 : 'gentype_datatype));
# 1900 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_type_param_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 ".\Parser.fsy"
                           { Name = _2; Docs = []; Params = _3; Constructors = []; Kind = SKBase (sIdentifier [] (stringToBigName "Data")) } 
                   )
# 192 ".\Parser.fsy"
                 : 'gentype_datatype));
# 1912 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_type_param_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 ".\Parser.fsy"
                           { Name = _3; Docs = _1; Params = _4; Constructors = []; Kind = SKBase (sIdentifier [] (stringToBigName "Data")) } 
                   )
# 194 ".\Parser.fsy"
                 : 'gentype_datatype));
# 1925 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_compound_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 ".\Parser.fsy"
                           { Name = _2; Docs = []; Params = []; Constructors = []; Kind = _4 } 
                   )
# 196 ".\Parser.fsy"
                 : 'gentype_datatype));
# 1937 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_compound_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 ".\Parser.fsy"
                           { Name = _3; Docs = _1; Params = []; Constructors = []; Kind = _5 } 
                   )
# 198 ".\Parser.fsy"
                 : 'gentype_datatype));
# 1950 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 ".\Parser.fsy"
                            [] 
                   )
# 201 ".\Parser.fsy"
                 : 'gentype_type_param_list));
# 1960 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_param_list in
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 ".\Parser.fsy"
                            List.append _1 [(_2, SKBase (sIdentifier [] (stringToBigName "Value")))] 
                   )
# 203 ".\Parser.fsy"
                 : 'gentype_type_param_list));
# 1972 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_param_list in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_compound_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 ".\Parser.fsy"
                            List.append _1 [(_3, _5)] 
                   )
# 205 ".\Parser.fsy"
                 : 'gentype_type_param_list));
# 1985 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 ".\Parser.fsy"
                                                   [_1] 
                   )
# 207 ".\Parser.fsy"
                 : 'gentype_datatype_list));
# 1996 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            let _2 = parseState.GetInput(2) :?> 'gentype_datatype_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 ".\Parser.fsy"
                                                     _1 :: _2 
                   )
# 208 ".\Parser.fsy"
                 : 'gentype_datatype_list));
# 2008 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 ".\Parser.fsy"
                           { Name = _1; Docs = []; Components = []; Result = _4 } 
                   )
# 211 ".\Parser.fsy"
                 : 'gentype_constructor));
# 2020 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_type_arg_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 ".\Parser.fsy"
                           { Name = _1; Docs = []; Components = List.rev _3; Result = _5 } 
                   )
# 213 ".\Parser.fsy"
                 : 'gentype_constructor));
# 2033 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constructor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 ".\Parser.fsy"
                                                           [_1] 
                   )
# 215 ".\Parser.fsy"
                 : 'gentype_constructor_list));
# 2044 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constructor in
            let _3 = parseState.GetInput(3) :?> 'gentype_constructor_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 ".\Parser.fsy"
                                                               _1 :: _3 
                   )
# 216 ".\Parser.fsy"
                 : 'gentype_constructor_list));
# 2056 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_predicate_list in
            let _6 = parseState.GetInput(6) :?> 'gentype_constraint_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 ".\Parser.fsy"
                          DPropagationRule (_2, toList _4, _6) 
                   )
# 219 ".\Parser.fsy"
                 : 'gentype_rule));
# 2069 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_opt_type_param_list in
            let _7 = parseState.GetInput(7) :?> 'gentype_qual_fn_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 222 ".\Parser.fsy"
                          DOverload { Name = _2; Docs = []; Predicate = _4; Template = _7; Bodies = []; Params = _5 } 
                   )
# 222 ".\Parser.fsy"
                 : 'gentype_overload));
# 2083 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> Name in
            let _6 = parseState.GetInput(6) :?> 'gentype_opt_type_param_list in
            let _8 = parseState.GetInput(8) :?> 'gentype_qual_fn_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 ".\Parser.fsy"
                           DOverload { Name = _3; Docs = _1; Predicate = _5; Template = _8; Bodies = []; Params = _6 } 
                   )
# 224 ".\Parser.fsy"
                 : 'gentype_overload));
# 2098 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 ".\Parser.fsy"
                             [] 
                   )
# 227 ".\Parser.fsy"
                 : 'gentype_opt_type_param_list));
# 2108 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_opt_type_param_list in
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 ".\Parser.fsy"
                             List.append _1 [(_2, SKWildcard)] 
                   )
# 229 ".\Parser.fsy"
                 : 'gentype_opt_type_param_list));
# 2120 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_opt_type_param_list in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_compound_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 ".\Parser.fsy"
                             List.append _1 [(_3, _5)] 
                   )
# 231 ".\Parser.fsy"
                 : 'gentype_opt_type_param_list));
# 2133 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_type_arg_list in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 234 ".\Parser.fsy"
                          DInstance { Name = _2; Context = SEnd; Heads = List.rev _4; Body = _6 } 
                   )
# 234 ".\Parser.fsy"
                 : 'gentype_instance));
# 2146 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_predicate_list in
            let _7 = parseState.GetInput(7) :?> 'gentype_type_arg_list in
            let _9 = parseState.GetInput(9) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 ".\Parser.fsy"
                           DInstance { Name = _2; Context = _5; Heads = List.rev _7; Body = _9 } 
                   )
# 236 ".\Parser.fsy"
                 : 'gentype_instance));
# 2160 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_opt_type_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_handler_template_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 239 ".\Parser.fsy"
                          { Name = _2; Docs = []; Params = _3; Handlers = _5 } 
                   )
# 239 ".\Parser.fsy"
                 : 'gentype_effect));
# 2173 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_opt_type_param_list in
            let _6 = parseState.GetInput(6) :?> 'gentype_handler_template_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 241 ".\Parser.fsy"
                          { Name = _3; Docs = _1; Params = _4; Handlers = _6 } 
                   )
# 241 ".\Parser.fsy"
                 : 'gentype_effect));
# 2187 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_opt_type_param_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 243 ".\Parser.fsy"
                             { Name = _2; Docs = []; Params = _3; Handlers = [] } 
                   )
# 243 ".\Parser.fsy"
                 : 'gentype_effect));
# 2199 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_opt_type_param_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 245 ".\Parser.fsy"
                             { Name = _3; Docs = []; Params = _4; Handlers = [] } 
                   )
# 245 ".\Parser.fsy"
                 : 'gentype_effect));
# 2212 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handler_template in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 247 ".\Parser.fsy"
                                                                      [_1] 
                   )
# 247 ".\Parser.fsy"
                 : 'gentype_handler_template_list));
# 2223 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handler_template_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_handler_template in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 248 ".\Parser.fsy"
                                                                           List.append _1 [_3] 
                   )
# 248 ".\Parser.fsy"
                 : 'gentype_handler_template_list));
# 2235 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_qual_fn_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 250 ".\Parser.fsy"
                                                                           { Name = _1; Type = _3 } 
                   )
# 250 ".\Parser.fsy"
                 : 'gentype_handler_template));
# 2247 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_test_all in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 253 ".\Parser.fsy"
                         { Name = _2; Left = _4; Right = _6; Kind = _5 } 
                   )
# 253 ".\Parser.fsy"
                 : 'gentype_test));
# 2261 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_test_all in
            let _7 = parseState.GetInput(7) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 256 ".\Parser.fsy"
                         { Name = _2; Exhaustive = false; Params = _3; Left = _5; Right = _7; Kind = _6 } 
                   )
# 256 ".\Parser.fsy"
                 : 'gentype_law));
# 2276 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 258 ".\Parser.fsy"
                                            TKSatisfies 
                   )
# 258 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2286 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 259 ".\Parser.fsy"
                                      TKViolates 
                   )
# 259 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2296 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 260 ".\Parser.fsy"
                                       TKIsRoughly 
                   )
# 260 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2306 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 261 ".\Parser.fsy"
                                 TKIs [] 
                   )
# 261 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2316 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 262 ".\Parser.fsy"
                                    TKIsNot [] 
                   )
# 262 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2326 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 263 ".\Parser.fsy"
                                                               TKIs _4 
                   )
# 263 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2337 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 264 ".\Parser.fsy"
                                                                  TKIsNot _4 
                   )
# 264 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2348 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_qual_fn_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 266 ".\Parser.fsy"
                                                                    { Name = _2; Matcher = _4 } 
                   )
# 266 ".\Parser.fsy"
                 : 'gentype_check));
# 2360 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 268 ".\Parser.fsy"
                                                            DTag (_2, _4) 
                   )
# 268 ".\Parser.fsy"
                 : 'gentype_tag));
# 2372 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_identifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 272 ".\Parser.fsy"
                                                        SKBase _1 
                   )
# 272 ".\Parser.fsy"
                 : 'gentype_base_kind));
# 2383 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 273 ".\Parser.fsy"
                                                            _2 
                   )
# 273 ".\Parser.fsy"
                 : 'gentype_base_kind));
# 2394 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 275 ".\Parser.fsy"
                                                                         SKSeq _2 
                   )
# 275 ".\Parser.fsy"
                 : 'gentype_compound_kind));
# 2405 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 276 ".\Parser.fsy"
                                                             SKRow _2 
                   )
# 276 ".\Parser.fsy"
                 : 'gentype_compound_kind));
# 2416 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 277 ".\Parser.fsy"
                                               _1 
                   )
# 277 ".\Parser.fsy"
                 : 'gentype_compound_kind));
# 2427 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_kind in
            let _3 = parseState.GetInput(3) :?> 'gentype_compound_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 278 ".\Parser.fsy"
                                                               SKArrow (_1, _3) 
                   )
# 278 ".\Parser.fsy"
                 : 'gentype_compound_kind));
# 2439 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constraint in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 282 ".\Parser.fsy"
                                                         [_1] 
                   )
# 282 ".\Parser.fsy"
                 : 'gentype_constraint_list));
# 2450 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constraint in
            let _3 = parseState.GetInput(3) :?> 'gentype_constraint_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 283 ".\Parser.fsy"
                                                              _1 :: _3 
                   )
# 283 ".\Parser.fsy"
                 : 'gentype_constraint_list));
# 2462 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_predicate in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 285 ".\Parser.fsy"
                                                     SCPredicate _1 
                   )
# 285 ".\Parser.fsy"
                 : 'gentype_constraint));
# 2473 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_compound_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 286 ".\Parser.fsy"
                                                                 SCEquality (_1, _3) 
                   )
# 286 ".\Parser.fsy"
                 : 'gentype_constraint));
# 2485 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_predicate in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 288 ".\Parser.fsy"
                                                         ind _1 SEnd 
                   )
# 288 ".\Parser.fsy"
                 : 'gentype_predicate_list));
# 2496 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_predicate in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 289 ".\Parser.fsy"
                                                                   dot _2 SEnd 
                   )
# 289 ".\Parser.fsy"
                 : 'gentype_predicate_list));
# 2507 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_predicate_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_predicate in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 290 ".\Parser.fsy"
                                                                ind _3 _1 
                   )
# 290 ".\Parser.fsy"
                 : 'gentype_predicate_list));
# 2519 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pred_identifier in
            let _2 = parseState.GetInput(2) :?> 'gentype_type_arg_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 292 ".\Parser.fsy"
                                                                   appendTypeArgs (STCon _1) (List.rev _2) 
                   )
# 292 ".\Parser.fsy"
                 : 'gentype_predicate));
# 2531 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_top_fn_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 294 ".\Parser.fsy"
                                                          sQualType SEnd _1 
                   )
# 294 ".\Parser.fsy"
                 : 'gentype_qual_fn_type));
# 2542 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_predicate_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_top_fn_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 295 ".\Parser.fsy"
                                                                       sQualType _2 _4 
                   )
# 295 ".\Parser.fsy"
                 : 'gentype_qual_fn_type));
# 2554 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 297 ".\Parser.fsy"
                                                  STTrue 
                   )
# 297 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2564 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 298 ".\Parser.fsy"
                                             STFalse 
                   )
# 298 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2574 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 299 ".\Parser.fsy"
                                                 STVar _1 
                   )
# 299 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2585 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 300 ".\Parser.fsy"
                                                                    STDotVar _2 
                   )
# 300 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2596 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_identifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 301 ".\Parser.fsy"
                                                     STCon _1 
                   )
# 301 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2607 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 302 ".\Parser.fsy"
                                               STPrim PrFunction 
                   )
# 302 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2617 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 303 ".\Parser.fsy"
                                            STAbelianOne 
                   )
# 303 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2627 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 304 ".\Parser.fsy"
                                            STRowEmpty 
                   )
# 304 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2637 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 305 ".\Parser.fsy"
                                                 STWildcard 
                   )
# 305 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2647 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_fn_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 306 ".\Parser.fsy"
                                                            _2 
                   )
# 306 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2658 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 307 ".\Parser.fsy"
                                                               _2 
                   )
# 307 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2669 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_type_arg_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 308 ".\Parser.fsy"
                                                                          appendTypeArgs _2 (List.rev _3) 
                   )
# 308 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2681 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_field_row_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 309 ".\Parser.fsy"
                                                                   appendTypeArgs (STPrim PrRecord) [_2] 
                   )
# 309 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2692 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_field_row_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 310 ".\Parser.fsy"
                                                              appendTypeArgs (STPrim PrVariant) [_2] 
                   )
# 310 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2703 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 311 ".\Parser.fsy"
                                                                  appendTypeArgs (STPrim PrList) [_2] 
                   )
# 311 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2714 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_fn_type_seq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 312 ".\Parser.fsy"
                                                           appendTypeArgs (STPrim PrTuple) [STSeq (_2, primValueKind)] 
                   )
# 312 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2725 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 314 ".\Parser.fsy"
                                                              appendTypeArgs (STPrim PrValue) [_3; _1] 
                   )
# 314 ".\Parser.fsy"
                 : 'gentype_val_type));
# 2737 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fn_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 316 ".\Parser.fsy"
                                             appendTypeArgs (STPrim PrValue) [STFalse; _1] 
                   )
# 316 ".\Parser.fsy"
                 : 'gentype_top_fn_type));
# 2748 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fn_type_seq in
            let _3 = parseState.GetInput(3) :?> 'gentype_fn_row_type in
            let _5 = parseState.GetInput(5) :?> 'gentype_fn_row_type in
            let _7 = parseState.GetInput(7) :?> 'gentype_compound_type in
            let _9 = parseState.GetInput(9) :?> 'gentype_fn_type_seq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 319 ".\Parser.fsy"
                          appendTypeArgs (STPrim PrFunction)
                                     [STSeq (_9, primValueKind);
                                         STSeq (_1, primValueKind);
                                         _7; _5; _3] 
                   )
# 319 ".\Parser.fsy"
                 : 'gentype_fn_type));
# 2766 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 324 ".\Parser.fsy"
                                               SEnd 
                   )
# 324 ".\Parser.fsy"
                 : 'gentype_fn_type_seq));
# 2776 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fn_type_seq in
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 325 ".\Parser.fsy"
                                                               dot _2 _1 
                   )
# 325 ".\Parser.fsy"
                 : 'gentype_fn_type_seq));
# 2788 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fn_type_seq in
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 326 ".\Parser.fsy"
                                                         ind _2 _1 
                   )
# 326 ".\Parser.fsy"
                 : 'gentype_fn_type_seq));
# 2800 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 328 ".\Parser.fsy"
                                               STRowEmpty 
                   )
# 328 ".\Parser.fsy"
                 : 'gentype_fn_row_type));
# 2810 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 329 ".\Parser.fsy"
                                                  STVar _1 
                   )
# 329 ".\Parser.fsy"
                 : 'gentype_fn_row_type));
# 2821 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fn_row_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 330 ".\Parser.fsy"
                                                            appendTypeArgs STRowExtend [_1; _3] 
                   )
# 330 ".\Parser.fsy"
                 : 'gentype_fn_row_type));
# 2833 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 332 ".\Parser.fsy"
                                                   STRowEmpty 
                   )
# 332 ".\Parser.fsy"
                 : 'gentype_field_row_type));
# 2843 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 333 ".\Parser.fsy"
                                                      STVar _1 
                   )
# 333 ".\Parser.fsy"
                 : 'gentype_field_row_type));
# 2854 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_field_row_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_field_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 334 ".\Parser.fsy"
                                                               appendTypeArgs STRowExtend [_1; _3] 
                   )
# 334 ".\Parser.fsy"
                 : 'gentype_field_row_type));
# 2866 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 336 ".\Parser.fsy"
                                                                     appendTypeArgs (STCon { Qualifier = []; Name = _1 }) [_3] 
                   )
# 336 ".\Parser.fsy"
                 : 'gentype_field_type));
# 2878 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 338 ".\Parser.fsy"
                                                       _1 
                   )
# 338 ".\Parser.fsy"
                 : 'gentype_compound_type));
# 2889 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_val_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 339 ".\Parser.fsy"
                                             _1 
                   )
# 339 ".\Parser.fsy"
                 : 'gentype_compound_type));
# 2900 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_type in
            let _3 = parseState.GetInput(3) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 340 ".\Parser.fsy"
                                                         STExponent (_1, _3) 
                   )
# 340 ".\Parser.fsy"
                 : 'gentype_compound_type));
# 2912 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_and_sequence in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 341 ".\Parser.fsy"
                                                _1 
                   )
# 341 ".\Parser.fsy"
                 : 'gentype_compound_type));
# 2923 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_or_sequence in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 342 ".\Parser.fsy"
                                                _1 
                   )
# 342 ".\Parser.fsy"
                 : 'gentype_compound_type));
# 2934 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_mul_sequence in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 343 ".\Parser.fsy"
                                                _1 
                   )
# 343 ".\Parser.fsy"
                 : 'gentype_compound_type));
# 2945 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 344 ".\Parser.fsy"
                                                    STNot _2 
                   )
# 344 ".\Parser.fsy"
                 : 'gentype_compound_type));
# 2956 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 346 ".\Parser.fsy"
                                                                        STAnd (_1, _3) 
                   )
# 346 ".\Parser.fsy"
                 : 'gentype_and_sequence));
# 2968 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_and_sequence in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 347 ".\Parser.fsy"
                                                                 STAnd (_1, _3) 
                   )
# 347 ".\Parser.fsy"
                 : 'gentype_and_sequence));
# 2980 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 349 ".\Parser.fsy"
                                                                    STOr (_1, _3) 
                   )
# 349 ".\Parser.fsy"
                 : 'gentype_or_sequence));
# 2992 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_or_sequence in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 350 ".\Parser.fsy"
                                                             STOr (_1, _3) 
                   )
# 350 ".\Parser.fsy"
                 : 'gentype_or_sequence));
# 3004 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 352 ".\Parser.fsy"
                                                                STMultiply (_1, _3) 
                   )
# 352 ".\Parser.fsy"
                 : 'gentype_mul_sequence));
# 3016 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 353 ".\Parser.fsy"
                                                     STMultiply (STFixedConst _1, _3) 
                   )
# 353 ".\Parser.fsy"
                 : 'gentype_mul_sequence));
# 3028 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_type in
            let _3 = parseState.GetInput(3) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 354 ".\Parser.fsy"
                                                     STMultiply (_1, STFixedConst _3) 
                   )
# 354 ".\Parser.fsy"
                 : 'gentype_mul_sequence));
# 3040 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_mul_sequence in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 355 ".\Parser.fsy"
                                                         STMultiply (_1, _3) 
                   )
# 355 ".\Parser.fsy"
                 : 'gentype_mul_sequence));
# 3052 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_mul_sequence in
            let _3 = parseState.GetInput(3) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 356 ".\Parser.fsy"
                                                       STMultiply (_1, STFixedConst _3) 
                   )
# 356 ".\Parser.fsy"
                 : 'gentype_mul_sequence));
# 3064 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 358 ".\Parser.fsy"
                                                        [_1] 
                   )
# 358 ".\Parser.fsy"
                 : 'gentype_type_arg_list));
# 3075 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_arg_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 359 ".\Parser.fsy"
                                                          List.append _1 [_2] 
                   )
# 359 ".\Parser.fsy"
                 : 'gentype_type_arg_list));
# 3087 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term_statement_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 363 ".\Parser.fsy"
                                                                                  _2 
                   )
# 363 ".\Parser.fsy"
                 : 'gentype_term_statement_block));
# 3098 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_statement in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 365 ".\Parser.fsy"
                                                                   [_1] 
                   )
# 365 ".\Parser.fsy"
                 : 'gentype_term_statement_list));
# 3109 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_statement_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 366 ".\Parser.fsy"
                                                                            List.append _1 [_3] 
                   )
# 366 ".\Parser.fsy"
                 : 'gentype_term_statement_list));
# 3121 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_no_dot_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 368 ".\Parser.fsy"
                                                                            SLet { Matcher = _2; Body = [] } 
                   )
# 368 ".\Parser.fsy"
                 : 'gentype_term_statement));
# 3132 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_no_dot_pattern_expr_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 369 ".\Parser.fsy"
                                                                                         SLet { Matcher = _2; Body = _4 } 
                   )
# 369 ".\Parser.fsy"
                 : 'gentype_term_statement));
# 3144 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 372 ".\Parser.fsy"
                                                              SExpression (_1) 
                   )
# 372 ".\Parser.fsy"
                 : 'gentype_term_statement));
# 3155 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 379 ".\Parser.fsy"
                                                            [_1] 
                   )
# 379 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 3166 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_record_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 380 ".\Parser.fsy"
                                                     _1 
                   )
# 380 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 3177 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tuple_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 381 ".\Parser.fsy"
                                                    _1 
                   )
# 381 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 3188 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_list_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 382 ".\Parser.fsy"
                                                   _1 
                   )
# 382 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 3199 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 383 ".\Parser.fsy"
                                                              List.append _1 [_2] 
                   )
# 383 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 3211 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_record_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 384 ".\Parser.fsy"
                                                                     List.append _1 _2 
                   )
# 384 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 3223 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_tuple_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 385 ".\Parser.fsy"
                                                                     List.append _1 _2 
                   )
# 385 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 3235 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_list_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 386 ".\Parser.fsy"
                                                                    List.append _1 _2 
                   )
# 386 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 3247 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 388 ".\Parser.fsy"
                                            [] 
                   )
# 388 ".\Parser.fsy"
                 : 'gentype_simple_expr));
# 3257 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 389 ".\Parser.fsy"
                                                    _1 
                   )
# 389 ".\Parser.fsy"
                 : 'gentype_simple_expr));
# 3268 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 393 ".\Parser.fsy"
                                                      EStatementBlock (_1) 
                   )
# 393 ".\Parser.fsy"
                 : 'gentype_word));
# 3279 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handle_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 394 ".\Parser.fsy"
                                            _1 
                   )
# 394 ".\Parser.fsy"
                 : 'gentype_word));
# 3290 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_inject_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 395 ".\Parser.fsy"
                                            _1 
                   )
# 395 ".\Parser.fsy"
                 : 'gentype_word));
# 3301 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 396 ".\Parser.fsy"
                                           _1 
                   )
# 396 ".\Parser.fsy"
                 : 'gentype_word));
# 3312 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_if_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 397 ".\Parser.fsy"
                                         _1 
                   )
# 397 ".\Parser.fsy"
                 : 'gentype_word));
# 3323 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_switch_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 398 ".\Parser.fsy"
                                            _1 
                   )
# 398 ".\Parser.fsy"
                 : 'gentype_word));
# 3334 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_when_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 399 ".\Parser.fsy"
                                          _1 
                   )
# 399 ".\Parser.fsy"
                 : 'gentype_word));
# 3345 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_while_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 400 ".\Parser.fsy"
                                           _1 
                   )
# 400 ".\Parser.fsy"
                 : 'gentype_word));
# 3356 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_for_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 401 ".\Parser.fsy"
                                          _1 
                   )
# 401 ".\Parser.fsy"
                 : 'gentype_word));
# 3367 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 402 ".\Parser.fsy"
                                                EFunctionLiteral (_1) 
                   )
# 402 ".\Parser.fsy"
                 : 'gentype_word));
# 3378 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 408 ".\Parser.fsy"
                                                 EExtension (_2) 
                   )
# 408 ".\Parser.fsy"
                 : 'gentype_word));
# 3389 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 409 ".\Parser.fsy"
                                                 ESelect (false, _2) 
                   )
# 409 ".\Parser.fsy"
                 : 'gentype_word));
# 3400 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 410 ".\Parser.fsy"
                                                ESelect (true, _2) 
                   )
# 410 ".\Parser.fsy"
                 : 'gentype_word));
# 3411 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_variant_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 412 ".\Parser.fsy"
                                               _1 
                   )
# 412 ".\Parser.fsy"
                 : 'gentype_word));
# 3422 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_case_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 413 ".\Parser.fsy"
                                          _1 
                   )
# 413 ".\Parser.fsy"
                 : 'gentype_word));
# 3433 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 414 ".\Parser.fsy"
                                                           EWithState (_2) 
                   )
# 414 ".\Parser.fsy"
                 : 'gentype_word));
# 3444 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_permission in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 415 ".\Parser.fsy"
                                           _1 
                   )
# 415 ".\Parser.fsy"
                 : 'gentype_word));
# 3455 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 416 ".\Parser.fsy"
                                       ETrust 
                   )
# 416 ".\Parser.fsy"
                 : 'gentype_word));
# 3465 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 417 ".\Parser.fsy"
                                          EDistrust 
                   )
# 417 ".\Parser.fsy"
                 : 'gentype_word));
# 3475 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 418 ".\Parser.fsy"
                                       EAudit 
                   )
# 418 ".\Parser.fsy"
                 : 'gentype_word));
# 3485 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 419 ".\Parser.fsy"
                                        EUntag 
                   )
# 419 ".\Parser.fsy"
                 : 'gentype_word));
# 3495 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 422 ".\Parser.fsy"
                                     EDo 
                   )
# 422 ".\Parser.fsy"
                 : 'gentype_word));
# 3505 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 424 ".\Parser.fsy"
                                       ETrue 
                   )
# 424 ".\Parser.fsy"
                 : 'gentype_word));
# 3515 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 425 ".\Parser.fsy"
                                       EFalse 
                   )
# 425 ".\Parser.fsy"
                 : 'gentype_word));
# 3525 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 426 ".\Parser.fsy"
                                         EInteger (_1) 
                   )
# 426 ".\Parser.fsy"
                 : 'gentype_word));
# 3536 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> DecimalLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 427 ".\Parser.fsy"
                                         EDecimal (_1) 
                   )
# 427 ".\Parser.fsy"
                 : 'gentype_word));
# 3547 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 428 ".\Parser.fsy"
                                        EString (_1) 
                   )
# 428 ".\Parser.fsy"
                 : 'gentype_word));
# 3558 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> CharacterLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 429 ".\Parser.fsy"
                                          ECharacter (_1) 
                   )
# 429 ".\Parser.fsy"
                 : 'gentype_word));
# 3569 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  Identifier  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 430 ".\Parser.fsy"
                                           EIdentifier (_1) 
                   )
# 430 ".\Parser.fsy"
                 : 'gentype_word));
# 3580 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_term_statement_block in
            let _7 = parseState.GetInput(7) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 433 ".\Parser.fsy"
                           EWithPermission (_3, _5, _7) 
                   )
# 433 ".\Parser.fsy"
                 : 'gentype_permission));
# 3593 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_term_statement_block in
            let _7 = parseState.GetInput(7) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 435 ".\Parser.fsy"
                           EIfPermission (_3, _5, _7) 
                   )
# 435 ".\Parser.fsy"
                 : 'gentype_permission));
# 3606 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_handler_list in
            let _7 = parseState.GetInput(7) :?> 'gentype_return in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 438 ".\Parser.fsy"
                           EHandle (_2, _3, _6, _7) 
                   )
# 438 ".\Parser.fsy"
                 : 'gentype_handle_word));
# 3620 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_handler_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 440 ".\Parser.fsy"
                           EHandle (_2, _3, _6, []) 
                   )
# 440 ".\Parser.fsy"
                 : 'gentype_handle_word));
# 3633 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?>  Identifier  in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 442 ".\Parser.fsy"
                                                                              { Name = _2; Params = _3; Body = _5; } 
                   )
# 442 ".\Parser.fsy"
                 : 'gentype_handler));
# 3646 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 445 ".\Parser.fsy"
                          _4 
                   )
# 445 ".\Parser.fsy"
                 : 'gentype_return));
# 3657 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_no_dot_pattern_expr_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 447 ".\Parser.fsy"
                             [EStatementBlock([SLet { Matcher = _3; Body = [] }; SExpression(_5)])] 
                   )
# 447 ".\Parser.fsy"
                 : 'gentype_return));
# 3669 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 449 ".\Parser.fsy"
                                         [] 
                   )
# 449 ".\Parser.fsy"
                 : 'gentype_param_list));
# 3679 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_param_list in
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 450 ".\Parser.fsy"
                                                     List.append _1 [_2] 
                   )
# 450 ".\Parser.fsy"
                 : 'gentype_param_list));
# 3691 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 452 ".\Parser.fsy"
                                           [] 
                   )
# 452 ".\Parser.fsy"
                 : 'gentype_handler_list));
# 3701 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handler_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_handler in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 453 ".\Parser.fsy"
                                                  List.append _1 [_2] 
                   )
# 453 ".\Parser.fsy"
                 : 'gentype_handler_list));
# 3713 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_eff_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 455 ".\Parser.fsy"
                                                                          EInject (_2, _3) 
                   )
# 455 ".\Parser.fsy"
                 : 'gentype_inject_word));
# 3725 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 457 ".\Parser.fsy"
                                                  [_1] 
                   )
# 457 ".\Parser.fsy"
                 : 'gentype_eff_list));
# 3736 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _2 = parseState.GetInput(2) :?> 'gentype_eff_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 458 ".\Parser.fsy"
                                                   _1 :: _2 
                   )
# 458 ".\Parser.fsy"
                 : 'gentype_eff_list));
# 3748 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_match_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 460 ".\Parser.fsy"
                                                                                   EMatch (_3, []) 
                   )
# 460 ".\Parser.fsy"
                 : 'gentype_match_word));
# 3759 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_match_clause_list in
            let _7 = parseState.GetInput(7) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 461 ".\Parser.fsy"
                                                                                                  EMatch (_3, _7) 
                   )
# 461 ".\Parser.fsy"
                 : 'gentype_match_word));
# 3771 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 463 ".\Parser.fsy"
                                                            [_1] 
                   )
# 463 ".\Parser.fsy"
                 : 'gentype_match_clause_list));
# 3782 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_clause_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_match_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 464 ".\Parser.fsy"
                                                              List.append _1 [_2] 
                   )
# 464 ".\Parser.fsy"
                 : 'gentype_match_clause_list));
# 3794 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 466 ".\Parser.fsy"
                                                                               { Matcher = _2; Body = _4 } 
                   )
# 466 ".\Parser.fsy"
                 : 'gentype_match_clause));
# 3806 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 468 ".\Parser.fsy"
                                                                                                    EIf (_2, _4, _6) 
                   )
# 468 ".\Parser.fsy"
                 : 'gentype_if_word));
# 3819 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_switch_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 470 ".\Parser.fsy"
                                                                               switchClausesToIfs _3 
                   )
# 470 ".\Parser.fsy"
                 : 'gentype_switch_word));
# 3830 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 472 ".\Parser.fsy"
                                                                               [_4] 
                   )
# 472 ".\Parser.fsy"
                 : 'gentype_switch_clause_list));
# 3841 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_switch_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 473 ".\Parser.fsy"
                                                                                      _2 :: _4 :: _5 
                   )
# 473 ".\Parser.fsy"
                 : 'gentype_switch_clause_list));
# 3854 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 475 ".\Parser.fsy"
                                                                              EIf (_2, _4, []) 
                   )
# 475 ".\Parser.fsy"
                 : 'gentype_when_word));
# 3866 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 477 ".\Parser.fsy"
                                                                                EWhile (_2, _4) 
                   )
# 477 ".\Parser.fsy"
                 : 'gentype_while_word));
# 3878 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_parallel_sequences in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 480 ".\Parser.fsy"
                          EForEffect (_2, _4) 
                   )
# 480 ".\Parser.fsy"
                 : 'gentype_for_word));
# 3890 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_parallel_sequences in
            let _4 = parseState.GetInput(4) :?> 'gentype_for_results in
            let _6 = parseState.GetInput(6) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 482 ".\Parser.fsy"
                           EForComprehension (_4, _2, _6) 
                   )
# 482 ".\Parser.fsy"
                 : 'gentype_for_word));
# 3903 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_parallel_sequences in
            let _4 = parseState.GetInput(4) :?> 'gentype_fold_inits in
            let _6 = parseState.GetInput(6) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 484 ".\Parser.fsy"
                           EForFold (_4, _2, _6) 
                   )
# 484 ".\Parser.fsy"
                 : 'gentype_for_word));
# 3916 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_for_result in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 486 ".\Parser.fsy"
                                                    [_1] 
                   )
# 486 ".\Parser.fsy"
                 : 'gentype_for_results));
# 3927 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_for_result in
            let _3 = parseState.GetInput(3) :?> 'gentype_for_results in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 487 ".\Parser.fsy"
                                                         _1 :: _3 
                   )
# 487 ".\Parser.fsy"
                 : 'gentype_for_results));
# 3939 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 489 ".\Parser.fsy"
                                           FForTuple 
                   )
# 489 ".\Parser.fsy"
                 : 'gentype_for_result));
# 3949 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 490 ".\Parser.fsy"
                                    FForList 
                   )
# 490 ".\Parser.fsy"
                 : 'gentype_for_result));
# 3959 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 491 ".\Parser.fsy"
                                      FForVector 
                   )
# 491 ".\Parser.fsy"
                 : 'gentype_for_result));
# 3969 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 492 ".\Parser.fsy"
                                         FForString 
                   )
# 492 ".\Parser.fsy"
                 : 'gentype_for_result));
# 3979 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 494 ".\Parser.fsy"
                                             FForTuple 
                   )
# 494 ".\Parser.fsy"
                 : 'gentype_for_sequence));
# 3989 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 495 ".\Parser.fsy"
                                    FForList 
                   )
# 495 ".\Parser.fsy"
                 : 'gentype_for_sequence));
# 3999 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 496 ".\Parser.fsy"
                                     FForVector 
                   )
# 496 ".\Parser.fsy"
                 : 'gentype_for_sequence));
# 4009 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 497 ".\Parser.fsy"
                                        FForString 
                   )
# 497 ".\Parser.fsy"
                 : 'gentype_for_sequence));
# 4019 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 498 ".\Parser.fsy"
                                 FForIterator 
                   )
# 498 ".\Parser.fsy"
                 : 'gentype_for_sequence));
# 4029 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_for_sequence in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 501 ".\Parser.fsy"
                             [{ Name = _1; SeqType = _3; Assigned = _4 }] 
                   )
# 501 ".\Parser.fsy"
                 : 'gentype_parallel_sequences));
# 4042 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_for_sequence in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_parallel_sequences in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 503 ".\Parser.fsy"
                                { Name = _1; SeqType = _3; Assigned = _4 } :: _6 
                   )
# 503 ".\Parser.fsy"
                 : 'gentype_parallel_sequences));
# 4056 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 506 ".\Parser.fsy"
                           [{ Name = _1; Assigned = _3 }] 
                   )
# 506 ".\Parser.fsy"
                 : 'gentype_fold_inits));
# 4068 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_fold_inits in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 508 ".\Parser.fsy"
                              { Name = _1; Assigned = _3; } :: _5 
                   )
# 508 ".\Parser.fsy"
                 : 'gentype_fold_inits));
# 4081 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 511 ".\Parser.fsy"
                            _2 
                   )
# 511 ".\Parser.fsy"
                 : 'gentype_function_literal));
# 4092 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_var_only_pattern_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 513 ".\Parser.fsy"
                             [EStatementBlock([SLet { Matcher = _2; Body = [] }; SExpression(_4)])] 
                   )
# 513 ".\Parser.fsy"
                 : 'gentype_function_literal));
# 4104 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 515 ".\Parser.fsy"
                                                                  [_1] 
                   )
# 515 ".\Parser.fsy"
                 : 'gentype_lit_expr_list));
# 4115 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_lit_expr_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 516 ".\Parser.fsy"
                                                                        List.append _1 [_3] 
                   )
# 516 ".\Parser.fsy"
                 : 'gentype_lit_expr_list));
# 4127 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 518 ".\Parser.fsy"
                                                                [ETupleLiteral []] 
                   )
# 518 ".\Parser.fsy"
                 : 'gentype_tuple_literal));
# 4137 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_lit_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 519 ".\Parser.fsy"
                                                                 ETupleLiteral [] :: expandTupleConsSyntax _2 
                   )
# 519 ".\Parser.fsy"
                 : 'gentype_tuple_literal));
# 4148 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 520 ".\Parser.fsy"
                                                                              [ETupleLiteral _2] 
                   )
# 520 ".\Parser.fsy"
                 : 'gentype_tuple_literal));
# 4159 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_non_empty_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_lit_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 521 ".\Parser.fsy"
                                                                                            ETupleLiteral _2 :: expandTupleConsSyntax _5 
                   )
# 521 ".\Parser.fsy"
                 : 'gentype_tuple_literal));
# 4171 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 523 ".\Parser.fsy"
                                                                       [EListLiteral []] 
                   )
# 523 ".\Parser.fsy"
                 : 'gentype_list_literal));
# 4181 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_lit_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 524 ".\Parser.fsy"
                                                                        EListLiteral [] :: expandListConsSyntax _2 
                   )
# 524 ".\Parser.fsy"
                 : 'gentype_list_literal));
# 4192 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 525 ".\Parser.fsy"
                                                                                     [EListLiteral _2] 
                   )
# 525 ".\Parser.fsy"
                 : 'gentype_list_literal));
# 4203 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_non_empty_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_lit_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 526 ".\Parser.fsy"
                                                                                                   EListLiteral _2 :: expandListConsSyntax _5 
                   )
# 526 ".\Parser.fsy"
                 : 'gentype_list_literal));
# 4215 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_non_empty_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 534 ".\Parser.fsy"
                                                                                                           ERecordLiteral (_2) :: expandFieldSyntax _5 
                   )
# 534 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 4227 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 535 ".\Parser.fsy"
                                                                                      [ERecordLiteral (_2)] 
                   )
# 535 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 4238 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 536 ".\Parser.fsy"
                                                                       ERecordLiteral ([]) :: expandFieldSyntax _2 
                   )
# 536 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 4249 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 537 ".\Parser.fsy"
                                                              [ERecordLiteral ([])] 
                   )
# 537 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 4259 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_field in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 539 ".\Parser.fsy"
                                                             EVariantLiteral (_2) 
                   )
# 539 ".\Parser.fsy"
                 : 'gentype_variant_literal));
# 4270 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?>  List<CaseClause>  in
            let _7 = parseState.GetInput(7) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 541 ".\Parser.fsy"
                                                                                                     ECase (_3, _7) 
                   )
# 541 ".\Parser.fsy"
                 : 'gentype_case_word));
# 4282 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_case_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 543 ".\Parser.fsy"
                                                          [_1] 
                   )
# 543 ".\Parser.fsy"
                 :  List<CaseClause> ));
# 4293 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  List<CaseClause>  in
            let _2 = parseState.GetInput(2) :?> 'gentype_case_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 544 ".\Parser.fsy"
                                                           List.append _1 [_2] 
                   )
# 544 ".\Parser.fsy"
                 :  List<CaseClause> ));
# 4305 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 546 ".\Parser.fsy"
                                                                       { Tag = _2; Body = _4 } 
                   )
# 546 ".\Parser.fsy"
                 : 'gentype_case_clause));
# 4317 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_field in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 548 ".\Parser.fsy"
                                              [_1] 
                   )
# 548 ".\Parser.fsy"
                 : 'gentype_field_list));
# 4328 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_field in
            let _3 = parseState.GetInput(3) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 549 ".\Parser.fsy"
                                                     _1 :: _3 
                   )
# 549 ".\Parser.fsy"
                 : 'gentype_field_list));
# 4340 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 551 ".\Parser.fsy"
                                                             (_1, _3) 
                   )
# 551 ".\Parser.fsy"
                 : 'gentype_field));
# 4352 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 553 ".\Parser.fsy"
                                                   sIdentifier (List.take (List.length _1 - 1) _1) (List.last _1) 
                   )
# 553 ".\Parser.fsy"
                 :  Identifier ));
# 4363 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_qualified_ctor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 555 ".\Parser.fsy"
                                                        sIdentifier (List.take (List.length _1 - 1) _1) (List.last _1) 
                   )
# 555 ".\Parser.fsy"
                 : 'gentype_type_identifier));
# 4374 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_qualified_pred in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 557 ".\Parser.fsy"
                                                        sIdentifier (List.take (List.length _1 - 1) _1) (List.last _1) 
                   )
# 557 ".\Parser.fsy"
                 : 'gentype_pred_identifier));
# 4385 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 559 ".\Parser.fsy"
                                                          [_1] 
                   )
# 559 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 4396 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 560 ".\Parser.fsy"
                                               [_1] 
                   )
# 560 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 4407 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 561 ".\Parser.fsy"
                                                   [_1] 
                   )
# 561 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 4418 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 562 ".\Parser.fsy"
                                                    [_1] 
                   )
# 562 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 4429 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 563 ".\Parser.fsy"
                                                                      _1 :: _3 
                   )
# 563 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 4441 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 565 ".\Parser.fsy"
                                                        [_1] 
                   )
# 565 ".\Parser.fsy"
                 : 'gentype_qualified_ctor));
# 4452 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 566 ".\Parser.fsy"
                                                   [_1] 
                   )
# 566 ".\Parser.fsy"
                 : 'gentype_qualified_ctor));
# 4463 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_qualified_ctor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 567 ".\Parser.fsy"
                                                                      _1 :: _3 
                   )
# 567 ".\Parser.fsy"
                 : 'gentype_qualified_ctor));
# 4475 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 569 ".\Parser.fsy"
                                                             [_1] 
                   )
# 569 ".\Parser.fsy"
                 : 'gentype_qualified_pred));
# 4486 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_qualified_pred in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 570 ".\Parser.fsy"
                                                                      _1 :: _3 
                   )
# 570 ".\Parser.fsy"
                 : 'gentype_qualified_pred));
# 4498 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 574 ".\Parser.fsy"
                                                                      ind _1 SEnd 
                   )
# 574 ".\Parser.fsy"
                 : 'gentype_no_dot_pattern_expr_list));
# 4509 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_no_dot_pattern_expr_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 575 ".\Parser.fsy"
                                                                      ind _2 _1 
                   )
# 575 ".\Parser.fsy"
                 : 'gentype_no_dot_pattern_expr_list));
# 4521 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 577 ".\Parser.fsy"
                                                        SEnd 
                   )
# 577 ".\Parser.fsy"
                 : 'gentype_var_only_pattern_list));
# 4531 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _2 = parseState.GetInput(2) :?> 'gentype_var_only_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 578 ".\Parser.fsy"
                                                                 ind (PNamed (_1, PWildcard)) _2 
                   )
# 578 ".\Parser.fsy"
                 : 'gentype_var_only_pattern_list));
# 4543 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 580 ".\Parser.fsy"
                                                            ind _1 SEnd 
                   )
# 580 ".\Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 4554 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 581 ".\Parser.fsy"
                                                       dot _1 SEnd 
                   )
# 581 ".\Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 4565 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 582 ".\Parser.fsy"
                                                               ind _2 _1 
                   )
# 582 ".\Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 4577 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 584 ".\Parser.fsy"
                                                                                  [(_1, _3)] 
                   )
# 584 ".\Parser.fsy"
                 : 'gentype_field_pattern_list));
# 4589 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_field_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 585 ".\Parser.fsy"
                                                                                        (_1, _3) :: _5 
                   )
# 585 ".\Parser.fsy"
                 : 'gentype_field_pattern_list));
# 4602 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 587 ".\Parser.fsy"
                                                      PTrue 
                   )
# 587 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4612 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 588 ".\Parser.fsy"
                                             PFalse 
                   )
# 588 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4622 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 589 ".\Parser.fsy"
                                               PInteger (_1) 
                   )
# 589 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4633 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> DecimalLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 590 ".\Parser.fsy"
                                               PDecimal (_1) 
                   )
# 590 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4644 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 591 ".\Parser.fsy"
                                              PString (_1) 
                   )
# 591 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4655 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> CharacterLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 592 ".\Parser.fsy"
                                                PRune (_1) 
                   )
# 592 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4666 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 593 ".\Parser.fsy"
                                                 PWildcard 
                   )
# 593 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4676 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 594 ".\Parser.fsy"
                                                      PRef (_2) 
                   )
# 594 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4687 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 595 ".\Parser.fsy"
                                                 PNamed (_1, PWildcard) 
                   )
# 595 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4698 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 596 ".\Parser.fsy"
                                                              PNamed (_1, _3) 
                   )
# 596 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4710 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_identifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 598 ".\Parser.fsy"
                            PConstructor (_1, SEnd) 
                   )
# 598 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4721 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_type_identifier in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 600 ".\Parser.fsy"
                            PConstructor (_2, _3) 
                   )
# 600 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4733 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tuple_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 601 ".\Parser.fsy"
                                                   _1 
                   )
# 601 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4744 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_list_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 602 ".\Parser.fsy"
                                                   _1 
                   )
# 602 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4755 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_vector_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 603 ".\Parser.fsy"
                                                    _1 
                   )
# 603 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4766 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_slice_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 604 ".\Parser.fsy"
                                                   _1 
                   )
# 604 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4777 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_record_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 605 ".\Parser.fsy"
                                                    _1 
                   )
# 605 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4788 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 607 ".\Parser.fsy"
                                                                       PTuple (_2) 
                   )
# 607 ".\Parser.fsy"
                 : 'gentype_tuple_pattern));
# 4799 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 609 ".\Parser.fsy"
                                                                              PList (_2) 
                   )
# 609 ".\Parser.fsy"
                 : 'gentype_list_pattern));
# 4810 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 610 ".\Parser.fsy"
                                                        PList (SEnd) 
                   )
# 610 ".\Parser.fsy"
                 : 'gentype_list_pattern));
# 4820 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 612 ".\Parser.fsy"
                                                                                  PVector (_3) 
                   )
# 612 ".\Parser.fsy"
                 : 'gentype_vector_pattern));
# 4831 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 614 ".\Parser.fsy"
                                                                                 PSlice (_3) 
                   )
# 614 ".\Parser.fsy"
                 : 'gentype_slice_pattern));
# 4842 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_field_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 616 ".\Parser.fsy"
                                                                                 PRecord (_2) 
                   )
# 616 ".\Parser.fsy"
                 : 'gentype_record_pattern));
|]
# 4854 "Parser.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 126;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let unit lexer lexbuf :  Unit  =
    engine lexer lexbuf 0 :?> _
