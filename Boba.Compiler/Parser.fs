// Implementation file for parser generated by fsyacc
module Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 ".\Parser.fsy"


open Boba.Compiler.Syntax
open Boba.Core.DotSeq
open Boba.Core.Kinds
open Boba.Core.Types
open Boba.Core.TypeBuilder


# 16 "Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | IS
  | ONE
  | TRUE
  | FALSE
  | AND
  | OR
  | NOT
  | TUPLE
  | LIST
  | VECTOR
  | SLICE
  | DICTIONARY
  | CASE
  | RECORD
  | VARIANT
  | FOR
  | BREAK
  | FINAL
  | FILL
  | LENGTH
  | RESULT
  | IF
  | WHEN
  | SWITCH
  | WHILE
  | THEN
  | ELSE
  | DO
  | MATCH
  | INJECT
  | WITH
  | AFTER
  | HANDLE
  | UNTAG
  | BY
  | PER
  | TRUST
  | DISTRUST
  | AUDIT
  | NEW_REF
  | GET_REF
  | PUT_REF
  | WITH_STATE
  | WITH_PERMISSION
  | FUNCTION
  | LOCAL
  | LET
  | IS_ROUGHLY
  | IS_NOT
  | SATISFIES
  | VIOLATES
  | TEST
  | LAW
  | EXHAUSTIVE
  | SYNONYM
  | TAG
  | EFFECT
  | OVERLOAD
  | INSTANCE
  | RULE
  | CHECK
  | PATTERN
  | RECURSIVE
  | DATA
  | MAIN
  | EXPORT
  | FROM
  | AS
  | IMPORT
  | REF
  | UNDERSCORE
  | EQUALS
  | ELLIPSIS
  | BAR
  | DOT
  | PLUS
  | MINUS
  | STAR
  | COLON
  | DOUBLE_COLON
  | COMMA
  | SEMICOLON
  | FN_CTOR
  | L_BIND
  | R_BIND
  | L_STAR
  | R_STAR
  | L_ARROW
  | R_ARROW
  | L_BRACKET
  | R_BRACKET
  | L_BRACE
  | R_BRACE
  | L_PAREN
  | R_PAREN
  | L_ANGLE
  | R_ANGLE
  | STRING of (StringLiteral)
  | DECIMAL of (DecimalLiteral)
  | INTEGER of (IntegerLiteral)
  | TEST_NAME of (Name)
  | PREDICATE_NAME of (Name)
  | OPERATOR_NAME of (Name)
  | BIG_NAME of (Name)
  | SMALL_NAME of (Name)
  | EOF
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_IS
    | TOKEN_ONE
    | TOKEN_TRUE
    | TOKEN_FALSE
    | TOKEN_AND
    | TOKEN_OR
    | TOKEN_NOT
    | TOKEN_TUPLE
    | TOKEN_LIST
    | TOKEN_VECTOR
    | TOKEN_SLICE
    | TOKEN_DICTIONARY
    | TOKEN_CASE
    | TOKEN_RECORD
    | TOKEN_VARIANT
    | TOKEN_FOR
    | TOKEN_BREAK
    | TOKEN_FINAL
    | TOKEN_FILL
    | TOKEN_LENGTH
    | TOKEN_RESULT
    | TOKEN_IF
    | TOKEN_WHEN
    | TOKEN_SWITCH
    | TOKEN_WHILE
    | TOKEN_THEN
    | TOKEN_ELSE
    | TOKEN_DO
    | TOKEN_MATCH
    | TOKEN_INJECT
    | TOKEN_WITH
    | TOKEN_AFTER
    | TOKEN_HANDLE
    | TOKEN_UNTAG
    | TOKEN_BY
    | TOKEN_PER
    | TOKEN_TRUST
    | TOKEN_DISTRUST
    | TOKEN_AUDIT
    | TOKEN_NEW_REF
    | TOKEN_GET_REF
    | TOKEN_PUT_REF
    | TOKEN_WITH_STATE
    | TOKEN_WITH_PERMISSION
    | TOKEN_FUNCTION
    | TOKEN_LOCAL
    | TOKEN_LET
    | TOKEN_IS_ROUGHLY
    | TOKEN_IS_NOT
    | TOKEN_SATISFIES
    | TOKEN_VIOLATES
    | TOKEN_TEST
    | TOKEN_LAW
    | TOKEN_EXHAUSTIVE
    | TOKEN_SYNONYM
    | TOKEN_TAG
    | TOKEN_EFFECT
    | TOKEN_OVERLOAD
    | TOKEN_INSTANCE
    | TOKEN_RULE
    | TOKEN_CHECK
    | TOKEN_PATTERN
    | TOKEN_RECURSIVE
    | TOKEN_DATA
    | TOKEN_MAIN
    | TOKEN_EXPORT
    | TOKEN_FROM
    | TOKEN_AS
    | TOKEN_IMPORT
    | TOKEN_REF
    | TOKEN_UNDERSCORE
    | TOKEN_EQUALS
    | TOKEN_ELLIPSIS
    | TOKEN_BAR
    | TOKEN_DOT
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_STAR
    | TOKEN_COLON
    | TOKEN_DOUBLE_COLON
    | TOKEN_COMMA
    | TOKEN_SEMICOLON
    | TOKEN_FN_CTOR
    | TOKEN_L_BIND
    | TOKEN_R_BIND
    | TOKEN_L_STAR
    | TOKEN_R_STAR
    | TOKEN_L_ARROW
    | TOKEN_R_ARROW
    | TOKEN_L_BRACKET
    | TOKEN_R_BRACKET
    | TOKEN_L_BRACE
    | TOKEN_R_BRACE
    | TOKEN_L_PAREN
    | TOKEN_R_PAREN
    | TOKEN_L_ANGLE
    | TOKEN_R_ANGLE
    | TOKEN_STRING
    | TOKEN_DECIMAL
    | TOKEN_INTEGER
    | TOKEN_TEST_NAME
    | TOKEN_PREDICATE_NAME
    | TOKEN_OPERATOR_NAME
    | TOKEN_BIG_NAME
    | TOKEN_SMALL_NAME
    | TOKEN_EOF
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startunit
    | NONTERM_unit
    | NONTERM_import_list
    | NONTERM_decl_list
    | NONTERM_main
    | NONTERM_import
    | NONTERM_import_path
    | NONTERM_remote
    | NONTERM_export
    | NONTERM_brace_names
    | NONTERM_name_list
    | NONTERM_name
    | NONTERM_declaration
    | NONTERM_function
    | NONTERM_function_list
    | NONTERM_datatype
    | NONTERM_datatype_list
    | NONTERM_constructor
    | NONTERM_constructor_list
    | NONTERM_rule
    | NONTERM_overload
    | NONTERM_instance
    | NONTERM_effect
    | NONTERM_handler_template_list
    | NONTERM_handler_template
    | NONTERM_test
    | NONTERM_law
    | NONTERM_test_all
    | NONTERM_test_is
    | NONTERM_check
    | NONTERM_tag
    | NONTERM_qual_type
    | NONTERM_predicate_list
    | NONTERM_predicate
    | NONTERM_any_type
    | NONTERM_any_type_list
    | NONTERM_term_statement_block
    | NONTERM_term_statement_list
    | NONTERM_term_statement
    | NONTERM_local_function_list
    | NONTERM_local_function
    | NONTERM_simple_expr
    | NONTERM_simple_expr_list
    | NONTERM_word
    | NONTERM_with_permission
    | NONTERM_handle_word
    | NONTERM_handler
    | NONTERM_return
    | NONTERM_param_list
    | NONTERM_handler_list
    | NONTERM_inject_word
    | NONTERM_eff_list
    | NONTERM_match_word
    | NONTERM_match_clause_list
    | NONTERM_match_clause
    | NONTERM_if_word
    | NONTERM_switch_word
    | NONTERM_switch_clause_list
    | NONTERM_when_word
    | NONTERM_while_word
    | NONTERM_function_literal
    | NONTERM_tuple_literal
    | NONTERM_list_literal
    | NONTERM_vector_literal
    | NONTERM_record_literal
    | NONTERM_variant_literal
    | NONTERM_case_word
    | NONTERM_case_clause_list
    | NONTERM_case_clause
    | NONTERM_field_list
    | NONTERM_field
    | NONTERM_identifier
    | NONTERM_type_identifier
    | NONTERM_qualified_name
    | NONTERM_qualified_ctor
    | NONTERM_no_dot_pattern_expr_list
    | NONTERM_var_only_pattern_list
    | NONTERM_pattern_expr_list
    | NONTERM_field_pattern_list
    | NONTERM_pattern_expr
    | NONTERM_tuple_pattern
    | NONTERM_list_pattern
    | NONTERM_vector_pattern
    | NONTERM_slice_pattern
    | NONTERM_record_pattern

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | IS  -> 0 
  | ONE  -> 1 
  | TRUE  -> 2 
  | FALSE  -> 3 
  | AND  -> 4 
  | OR  -> 5 
  | NOT  -> 6 
  | TUPLE  -> 7 
  | LIST  -> 8 
  | VECTOR  -> 9 
  | SLICE  -> 10 
  | DICTIONARY  -> 11 
  | CASE  -> 12 
  | RECORD  -> 13 
  | VARIANT  -> 14 
  | FOR  -> 15 
  | BREAK  -> 16 
  | FINAL  -> 17 
  | FILL  -> 18 
  | LENGTH  -> 19 
  | RESULT  -> 20 
  | IF  -> 21 
  | WHEN  -> 22 
  | SWITCH  -> 23 
  | WHILE  -> 24 
  | THEN  -> 25 
  | ELSE  -> 26 
  | DO  -> 27 
  | MATCH  -> 28 
  | INJECT  -> 29 
  | WITH  -> 30 
  | AFTER  -> 31 
  | HANDLE  -> 32 
  | UNTAG  -> 33 
  | BY  -> 34 
  | PER  -> 35 
  | TRUST  -> 36 
  | DISTRUST  -> 37 
  | AUDIT  -> 38 
  | NEW_REF  -> 39 
  | GET_REF  -> 40 
  | PUT_REF  -> 41 
  | WITH_STATE  -> 42 
  | WITH_PERMISSION  -> 43 
  | FUNCTION  -> 44 
  | LOCAL  -> 45 
  | LET  -> 46 
  | IS_ROUGHLY  -> 47 
  | IS_NOT  -> 48 
  | SATISFIES  -> 49 
  | VIOLATES  -> 50 
  | TEST  -> 51 
  | LAW  -> 52 
  | EXHAUSTIVE  -> 53 
  | SYNONYM  -> 54 
  | TAG  -> 55 
  | EFFECT  -> 56 
  | OVERLOAD  -> 57 
  | INSTANCE  -> 58 
  | RULE  -> 59 
  | CHECK  -> 60 
  | PATTERN  -> 61 
  | RECURSIVE  -> 62 
  | DATA  -> 63 
  | MAIN  -> 64 
  | EXPORT  -> 65 
  | FROM  -> 66 
  | AS  -> 67 
  | IMPORT  -> 68 
  | REF  -> 69 
  | UNDERSCORE  -> 70 
  | EQUALS  -> 71 
  | ELLIPSIS  -> 72 
  | BAR  -> 73 
  | DOT  -> 74 
  | PLUS  -> 75 
  | MINUS  -> 76 
  | STAR  -> 77 
  | COLON  -> 78 
  | DOUBLE_COLON  -> 79 
  | COMMA  -> 80 
  | SEMICOLON  -> 81 
  | FN_CTOR  -> 82 
  | L_BIND  -> 83 
  | R_BIND  -> 84 
  | L_STAR  -> 85 
  | R_STAR  -> 86 
  | L_ARROW  -> 87 
  | R_ARROW  -> 88 
  | L_BRACKET  -> 89 
  | R_BRACKET  -> 90 
  | L_BRACE  -> 91 
  | R_BRACE  -> 92 
  | L_PAREN  -> 93 
  | R_PAREN  -> 94 
  | L_ANGLE  -> 95 
  | R_ANGLE  -> 96 
  | STRING _ -> 97 
  | DECIMAL _ -> 98 
  | INTEGER _ -> 99 
  | TEST_NAME _ -> 100 
  | PREDICATE_NAME _ -> 101 
  | OPERATOR_NAME _ -> 102 
  | BIG_NAME _ -> 103 
  | SMALL_NAME _ -> 104 
  | EOF  -> 105 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_IS 
  | 1 -> TOKEN_ONE 
  | 2 -> TOKEN_TRUE 
  | 3 -> TOKEN_FALSE 
  | 4 -> TOKEN_AND 
  | 5 -> TOKEN_OR 
  | 6 -> TOKEN_NOT 
  | 7 -> TOKEN_TUPLE 
  | 8 -> TOKEN_LIST 
  | 9 -> TOKEN_VECTOR 
  | 10 -> TOKEN_SLICE 
  | 11 -> TOKEN_DICTIONARY 
  | 12 -> TOKEN_CASE 
  | 13 -> TOKEN_RECORD 
  | 14 -> TOKEN_VARIANT 
  | 15 -> TOKEN_FOR 
  | 16 -> TOKEN_BREAK 
  | 17 -> TOKEN_FINAL 
  | 18 -> TOKEN_FILL 
  | 19 -> TOKEN_LENGTH 
  | 20 -> TOKEN_RESULT 
  | 21 -> TOKEN_IF 
  | 22 -> TOKEN_WHEN 
  | 23 -> TOKEN_SWITCH 
  | 24 -> TOKEN_WHILE 
  | 25 -> TOKEN_THEN 
  | 26 -> TOKEN_ELSE 
  | 27 -> TOKEN_DO 
  | 28 -> TOKEN_MATCH 
  | 29 -> TOKEN_INJECT 
  | 30 -> TOKEN_WITH 
  | 31 -> TOKEN_AFTER 
  | 32 -> TOKEN_HANDLE 
  | 33 -> TOKEN_UNTAG 
  | 34 -> TOKEN_BY 
  | 35 -> TOKEN_PER 
  | 36 -> TOKEN_TRUST 
  | 37 -> TOKEN_DISTRUST 
  | 38 -> TOKEN_AUDIT 
  | 39 -> TOKEN_NEW_REF 
  | 40 -> TOKEN_GET_REF 
  | 41 -> TOKEN_PUT_REF 
  | 42 -> TOKEN_WITH_STATE 
  | 43 -> TOKEN_WITH_PERMISSION 
  | 44 -> TOKEN_FUNCTION 
  | 45 -> TOKEN_LOCAL 
  | 46 -> TOKEN_LET 
  | 47 -> TOKEN_IS_ROUGHLY 
  | 48 -> TOKEN_IS_NOT 
  | 49 -> TOKEN_SATISFIES 
  | 50 -> TOKEN_VIOLATES 
  | 51 -> TOKEN_TEST 
  | 52 -> TOKEN_LAW 
  | 53 -> TOKEN_EXHAUSTIVE 
  | 54 -> TOKEN_SYNONYM 
  | 55 -> TOKEN_TAG 
  | 56 -> TOKEN_EFFECT 
  | 57 -> TOKEN_OVERLOAD 
  | 58 -> TOKEN_INSTANCE 
  | 59 -> TOKEN_RULE 
  | 60 -> TOKEN_CHECK 
  | 61 -> TOKEN_PATTERN 
  | 62 -> TOKEN_RECURSIVE 
  | 63 -> TOKEN_DATA 
  | 64 -> TOKEN_MAIN 
  | 65 -> TOKEN_EXPORT 
  | 66 -> TOKEN_FROM 
  | 67 -> TOKEN_AS 
  | 68 -> TOKEN_IMPORT 
  | 69 -> TOKEN_REF 
  | 70 -> TOKEN_UNDERSCORE 
  | 71 -> TOKEN_EQUALS 
  | 72 -> TOKEN_ELLIPSIS 
  | 73 -> TOKEN_BAR 
  | 74 -> TOKEN_DOT 
  | 75 -> TOKEN_PLUS 
  | 76 -> TOKEN_MINUS 
  | 77 -> TOKEN_STAR 
  | 78 -> TOKEN_COLON 
  | 79 -> TOKEN_DOUBLE_COLON 
  | 80 -> TOKEN_COMMA 
  | 81 -> TOKEN_SEMICOLON 
  | 82 -> TOKEN_FN_CTOR 
  | 83 -> TOKEN_L_BIND 
  | 84 -> TOKEN_R_BIND 
  | 85 -> TOKEN_L_STAR 
  | 86 -> TOKEN_R_STAR 
  | 87 -> TOKEN_L_ARROW 
  | 88 -> TOKEN_R_ARROW 
  | 89 -> TOKEN_L_BRACKET 
  | 90 -> TOKEN_R_BRACKET 
  | 91 -> TOKEN_L_BRACE 
  | 92 -> TOKEN_R_BRACE 
  | 93 -> TOKEN_L_PAREN 
  | 94 -> TOKEN_R_PAREN 
  | 95 -> TOKEN_L_ANGLE 
  | 96 -> TOKEN_R_ANGLE 
  | 97 -> TOKEN_STRING 
  | 98 -> TOKEN_DECIMAL 
  | 99 -> TOKEN_INTEGER 
  | 100 -> TOKEN_TEST_NAME 
  | 101 -> TOKEN_PREDICATE_NAME 
  | 102 -> TOKEN_OPERATOR_NAME 
  | 103 -> TOKEN_BIG_NAME 
  | 104 -> TOKEN_SMALL_NAME 
  | 105 -> TOKEN_EOF 
  | 108 -> TOKEN_end_of_input
  | 106 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startunit 
    | 1 -> NONTERM_unit 
    | 2 -> NONTERM_unit 
    | 3 -> NONTERM_import_list 
    | 4 -> NONTERM_import_list 
    | 5 -> NONTERM_decl_list 
    | 6 -> NONTERM_decl_list 
    | 7 -> NONTERM_main 
    | 8 -> NONTERM_import 
    | 9 -> NONTERM_import 
    | 10 -> NONTERM_import_path 
    | 11 -> NONTERM_import_path 
    | 12 -> NONTERM_remote 
    | 13 -> NONTERM_export 
    | 14 -> NONTERM_brace_names 
    | 15 -> NONTERM_name_list 
    | 16 -> NONTERM_name_list 
    | 17 -> NONTERM_name 
    | 18 -> NONTERM_name 
    | 19 -> NONTERM_name 
    | 20 -> NONTERM_declaration 
    | 21 -> NONTERM_declaration 
    | 22 -> NONTERM_declaration 
    | 23 -> NONTERM_declaration 
    | 24 -> NONTERM_declaration 
    | 25 -> NONTERM_declaration 
    | 26 -> NONTERM_declaration 
    | 27 -> NONTERM_declaration 
    | 28 -> NONTERM_declaration 
    | 29 -> NONTERM_declaration 
    | 30 -> NONTERM_declaration 
    | 31 -> NONTERM_declaration 
    | 32 -> NONTERM_declaration 
    | 33 -> NONTERM_declaration 
    | 34 -> NONTERM_declaration 
    | 35 -> NONTERM_function 
    | 36 -> NONTERM_function 
    | 37 -> NONTERM_function_list 
    | 38 -> NONTERM_function_list 
    | 39 -> NONTERM_datatype 
    | 40 -> NONTERM_datatype_list 
    | 41 -> NONTERM_datatype_list 
    | 42 -> NONTERM_constructor 
    | 43 -> NONTERM_constructor_list 
    | 44 -> NONTERM_constructor_list 
    | 45 -> NONTERM_rule 
    | 46 -> NONTERM_overload 
    | 47 -> NONTERM_instance 
    | 48 -> NONTERM_effect 
    | 49 -> NONTERM_handler_template_list 
    | 50 -> NONTERM_handler_template_list 
    | 51 -> NONTERM_handler_template 
    | 52 -> NONTERM_test 
    | 53 -> NONTERM_test 
    | 54 -> NONTERM_law 
    | 55 -> NONTERM_law 
    | 56 -> NONTERM_test_all 
    | 57 -> NONTERM_test_all 
    | 58 -> NONTERM_test_all 
    | 59 -> NONTERM_test_all 
    | 60 -> NONTERM_test_is 
    | 61 -> NONTERM_test_is 
    | 62 -> NONTERM_check 
    | 63 -> NONTERM_tag 
    | 64 -> NONTERM_qual_type 
    | 65 -> NONTERM_qual_type 
    | 66 -> NONTERM_predicate_list 
    | 67 -> NONTERM_predicate_list 
    | 68 -> NONTERM_predicate_list 
    | 69 -> NONTERM_predicate_list 
    | 70 -> NONTERM_predicate 
    | 71 -> NONTERM_any_type 
    | 72 -> NONTERM_any_type 
    | 73 -> NONTERM_any_type 
    | 74 -> NONTERM_any_type 
    | 75 -> NONTERM_any_type 
    | 76 -> NONTERM_any_type 
    | 77 -> NONTERM_any_type 
    | 78 -> NONTERM_any_type 
    | 79 -> NONTERM_any_type 
    | 80 -> NONTERM_any_type 
    | 81 -> NONTERM_any_type 
    | 82 -> NONTERM_any_type 
    | 83 -> NONTERM_any_type 
    | 84 -> NONTERM_any_type 
    | 85 -> NONTERM_any_type 
    | 86 -> NONTERM_any_type 
    | 87 -> NONTERM_any_type 
    | 88 -> NONTERM_any_type 
    | 89 -> NONTERM_any_type_list 
    | 90 -> NONTERM_any_type_list 
    | 91 -> NONTERM_term_statement_block 
    | 92 -> NONTERM_term_statement_list 
    | 93 -> NONTERM_term_statement_list 
    | 94 -> NONTERM_term_statement 
    | 95 -> NONTERM_term_statement 
    | 96 -> NONTERM_term_statement 
    | 97 -> NONTERM_term_statement 
    | 98 -> NONTERM_term_statement 
    | 99 -> NONTERM_local_function_list 
    | 100 -> NONTERM_local_function_list 
    | 101 -> NONTERM_local_function 
    | 102 -> NONTERM_simple_expr 
    | 103 -> NONTERM_simple_expr 
    | 104 -> NONTERM_simple_expr 
    | 105 -> NONTERM_simple_expr_list 
    | 106 -> NONTERM_simple_expr_list 
    | 107 -> NONTERM_word 
    | 108 -> NONTERM_word 
    | 109 -> NONTERM_word 
    | 110 -> NONTERM_word 
    | 111 -> NONTERM_word 
    | 112 -> NONTERM_word 
    | 113 -> NONTERM_word 
    | 114 -> NONTERM_word 
    | 115 -> NONTERM_word 
    | 116 -> NONTERM_word 
    | 117 -> NONTERM_word 
    | 118 -> NONTERM_word 
    | 119 -> NONTERM_word 
    | 120 -> NONTERM_word 
    | 121 -> NONTERM_word 
    | 122 -> NONTERM_word 
    | 123 -> NONTERM_word 
    | 124 -> NONTERM_word 
    | 125 -> NONTERM_word 
    | 126 -> NONTERM_word 
    | 127 -> NONTERM_word 
    | 128 -> NONTERM_word 
    | 129 -> NONTERM_word 
    | 130 -> NONTERM_word 
    | 131 -> NONTERM_word 
    | 132 -> NONTERM_word 
    | 133 -> NONTERM_word 
    | 134 -> NONTERM_word 
    | 135 -> NONTERM_word 
    | 136 -> NONTERM_word 
    | 137 -> NONTERM_word 
    | 138 -> NONTERM_word 
    | 139 -> NONTERM_word 
    | 140 -> NONTERM_word 
    | 141 -> NONTERM_word 
    | 142 -> NONTERM_with_permission 
    | 143 -> NONTERM_handle_word 
    | 144 -> NONTERM_handle_word 
    | 145 -> NONTERM_handler 
    | 146 -> NONTERM_return 
    | 147 -> NONTERM_return 
    | 148 -> NONTERM_param_list 
    | 149 -> NONTERM_param_list 
    | 150 -> NONTERM_handler_list 
    | 151 -> NONTERM_handler_list 
    | 152 -> NONTERM_inject_word 
    | 153 -> NONTERM_eff_list 
    | 154 -> NONTERM_eff_list 
    | 155 -> NONTERM_match_word 
    | 156 -> NONTERM_match_word 
    | 157 -> NONTERM_match_clause_list 
    | 158 -> NONTERM_match_clause_list 
    | 159 -> NONTERM_match_clause 
    | 160 -> NONTERM_if_word 
    | 161 -> NONTERM_switch_word 
    | 162 -> NONTERM_switch_clause_list 
    | 163 -> NONTERM_switch_clause_list 
    | 164 -> NONTERM_switch_clause_list 
    | 165 -> NONTERM_when_word 
    | 166 -> NONTERM_while_word 
    | 167 -> NONTERM_function_literal 
    | 168 -> NONTERM_function_literal 
    | 169 -> NONTERM_tuple_literal 
    | 170 -> NONTERM_tuple_literal 
    | 171 -> NONTERM_list_literal 
    | 172 -> NONTERM_list_literal 
    | 173 -> NONTERM_vector_literal 
    | 174 -> NONTERM_vector_literal 
    | 175 -> NONTERM_record_literal 
    | 176 -> NONTERM_record_literal 
    | 177 -> NONTERM_record_literal 
    | 178 -> NONTERM_record_literal 
    | 179 -> NONTERM_variant_literal 
    | 180 -> NONTERM_case_word 
    | 181 -> NONTERM_case_clause_list 
    | 182 -> NONTERM_case_clause_list 
    | 183 -> NONTERM_case_clause 
    | 184 -> NONTERM_field_list 
    | 185 -> NONTERM_field_list 
    | 186 -> NONTERM_field 
    | 187 -> NONTERM_identifier 
    | 188 -> NONTERM_type_identifier 
    | 189 -> NONTERM_qualified_name 
    | 190 -> NONTERM_qualified_name 
    | 191 -> NONTERM_qualified_name 
    | 192 -> NONTERM_qualified_name 
    | 193 -> NONTERM_qualified_name 
    | 194 -> NONTERM_qualified_ctor 
    | 195 -> NONTERM_qualified_ctor 
    | 196 -> NONTERM_qualified_ctor 
    | 197 -> NONTERM_qualified_ctor 
    | 198 -> NONTERM_no_dot_pattern_expr_list 
    | 199 -> NONTERM_no_dot_pattern_expr_list 
    | 200 -> NONTERM_var_only_pattern_list 
    | 201 -> NONTERM_var_only_pattern_list 
    | 202 -> NONTERM_pattern_expr_list 
    | 203 -> NONTERM_pattern_expr_list 
    | 204 -> NONTERM_pattern_expr_list 
    | 205 -> NONTERM_field_pattern_list 
    | 206 -> NONTERM_field_pattern_list 
    | 207 -> NONTERM_field_pattern_list 
    | 208 -> NONTERM_pattern_expr 
    | 209 -> NONTERM_pattern_expr 
    | 210 -> NONTERM_pattern_expr 
    | 211 -> NONTERM_pattern_expr 
    | 212 -> NONTERM_pattern_expr 
    | 213 -> NONTERM_pattern_expr 
    | 214 -> NONTERM_pattern_expr 
    | 215 -> NONTERM_pattern_expr 
    | 216 -> NONTERM_pattern_expr 
    | 217 -> NONTERM_pattern_expr 
    | 218 -> NONTERM_pattern_expr 
    | 219 -> NONTERM_pattern_expr 
    | 220 -> NONTERM_pattern_expr 
    | 221 -> NONTERM_pattern_expr 
    | 222 -> NONTERM_pattern_expr 
    | 223 -> NONTERM_pattern_expr 
    | 224 -> NONTERM_tuple_pattern 
    | 225 -> NONTERM_list_pattern 
    | 226 -> NONTERM_vector_pattern 
    | 227 -> NONTERM_slice_pattern 
    | 228 -> NONTERM_record_pattern 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 108 
let _fsyacc_tagOfErrorTerminal = 106

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | IS  -> "IS" 
  | ONE  -> "ONE" 
  | TRUE  -> "TRUE" 
  | FALSE  -> "FALSE" 
  | AND  -> "AND" 
  | OR  -> "OR" 
  | NOT  -> "NOT" 
  | TUPLE  -> "TUPLE" 
  | LIST  -> "LIST" 
  | VECTOR  -> "VECTOR" 
  | SLICE  -> "SLICE" 
  | DICTIONARY  -> "DICTIONARY" 
  | CASE  -> "CASE" 
  | RECORD  -> "RECORD" 
  | VARIANT  -> "VARIANT" 
  | FOR  -> "FOR" 
  | BREAK  -> "BREAK" 
  | FINAL  -> "FINAL" 
  | FILL  -> "FILL" 
  | LENGTH  -> "LENGTH" 
  | RESULT  -> "RESULT" 
  | IF  -> "IF" 
  | WHEN  -> "WHEN" 
  | SWITCH  -> "SWITCH" 
  | WHILE  -> "WHILE" 
  | THEN  -> "THEN" 
  | ELSE  -> "ELSE" 
  | DO  -> "DO" 
  | MATCH  -> "MATCH" 
  | INJECT  -> "INJECT" 
  | WITH  -> "WITH" 
  | AFTER  -> "AFTER" 
  | HANDLE  -> "HANDLE" 
  | UNTAG  -> "UNTAG" 
  | BY  -> "BY" 
  | PER  -> "PER" 
  | TRUST  -> "TRUST" 
  | DISTRUST  -> "DISTRUST" 
  | AUDIT  -> "AUDIT" 
  | NEW_REF  -> "NEW_REF" 
  | GET_REF  -> "GET_REF" 
  | PUT_REF  -> "PUT_REF" 
  | WITH_STATE  -> "WITH_STATE" 
  | WITH_PERMISSION  -> "WITH_PERMISSION" 
  | FUNCTION  -> "FUNCTION" 
  | LOCAL  -> "LOCAL" 
  | LET  -> "LET" 
  | IS_ROUGHLY  -> "IS_ROUGHLY" 
  | IS_NOT  -> "IS_NOT" 
  | SATISFIES  -> "SATISFIES" 
  | VIOLATES  -> "VIOLATES" 
  | TEST  -> "TEST" 
  | LAW  -> "LAW" 
  | EXHAUSTIVE  -> "EXHAUSTIVE" 
  | SYNONYM  -> "SYNONYM" 
  | TAG  -> "TAG" 
  | EFFECT  -> "EFFECT" 
  | OVERLOAD  -> "OVERLOAD" 
  | INSTANCE  -> "INSTANCE" 
  | RULE  -> "RULE" 
  | CHECK  -> "CHECK" 
  | PATTERN  -> "PATTERN" 
  | RECURSIVE  -> "RECURSIVE" 
  | DATA  -> "DATA" 
  | MAIN  -> "MAIN" 
  | EXPORT  -> "EXPORT" 
  | FROM  -> "FROM" 
  | AS  -> "AS" 
  | IMPORT  -> "IMPORT" 
  | REF  -> "REF" 
  | UNDERSCORE  -> "UNDERSCORE" 
  | EQUALS  -> "EQUALS" 
  | ELLIPSIS  -> "ELLIPSIS" 
  | BAR  -> "BAR" 
  | DOT  -> "DOT" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | STAR  -> "STAR" 
  | COLON  -> "COLON" 
  | DOUBLE_COLON  -> "DOUBLE_COLON" 
  | COMMA  -> "COMMA" 
  | SEMICOLON  -> "SEMICOLON" 
  | FN_CTOR  -> "FN_CTOR" 
  | L_BIND  -> "L_BIND" 
  | R_BIND  -> "R_BIND" 
  | L_STAR  -> "L_STAR" 
  | R_STAR  -> "R_STAR" 
  | L_ARROW  -> "L_ARROW" 
  | R_ARROW  -> "R_ARROW" 
  | L_BRACKET  -> "L_BRACKET" 
  | R_BRACKET  -> "R_BRACKET" 
  | L_BRACE  -> "L_BRACE" 
  | R_BRACE  -> "R_BRACE" 
  | L_PAREN  -> "L_PAREN" 
  | R_PAREN  -> "R_PAREN" 
  | L_ANGLE  -> "L_ANGLE" 
  | R_ANGLE  -> "R_ANGLE" 
  | STRING _ -> "STRING" 
  | DECIMAL _ -> "DECIMAL" 
  | INTEGER _ -> "INTEGER" 
  | TEST_NAME _ -> "TEST_NAME" 
  | PREDICATE_NAME _ -> "PREDICATE_NAME" 
  | OPERATOR_NAME _ -> "OPERATOR_NAME" 
  | BIG_NAME _ -> "BIG_NAME" 
  | SMALL_NAME _ -> "SMALL_NAME" 
  | EOF  -> "EOF" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | IS  -> (null : System.Object) 
  | ONE  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | TUPLE  -> (null : System.Object) 
  | LIST  -> (null : System.Object) 
  | VECTOR  -> (null : System.Object) 
  | SLICE  -> (null : System.Object) 
  | DICTIONARY  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | RECORD  -> (null : System.Object) 
  | VARIANT  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | BREAK  -> (null : System.Object) 
  | FINAL  -> (null : System.Object) 
  | FILL  -> (null : System.Object) 
  | LENGTH  -> (null : System.Object) 
  | RESULT  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | WHEN  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | INJECT  -> (null : System.Object) 
  | WITH  -> (null : System.Object) 
  | AFTER  -> (null : System.Object) 
  | HANDLE  -> (null : System.Object) 
  | UNTAG  -> (null : System.Object) 
  | BY  -> (null : System.Object) 
  | PER  -> (null : System.Object) 
  | TRUST  -> (null : System.Object) 
  | DISTRUST  -> (null : System.Object) 
  | AUDIT  -> (null : System.Object) 
  | NEW_REF  -> (null : System.Object) 
  | GET_REF  -> (null : System.Object) 
  | PUT_REF  -> (null : System.Object) 
  | WITH_STATE  -> (null : System.Object) 
  | WITH_PERMISSION  -> (null : System.Object) 
  | FUNCTION  -> (null : System.Object) 
  | LOCAL  -> (null : System.Object) 
  | LET  -> (null : System.Object) 
  | IS_ROUGHLY  -> (null : System.Object) 
  | IS_NOT  -> (null : System.Object) 
  | SATISFIES  -> (null : System.Object) 
  | VIOLATES  -> (null : System.Object) 
  | TEST  -> (null : System.Object) 
  | LAW  -> (null : System.Object) 
  | EXHAUSTIVE  -> (null : System.Object) 
  | SYNONYM  -> (null : System.Object) 
  | TAG  -> (null : System.Object) 
  | EFFECT  -> (null : System.Object) 
  | OVERLOAD  -> (null : System.Object) 
  | INSTANCE  -> (null : System.Object) 
  | RULE  -> (null : System.Object) 
  | CHECK  -> (null : System.Object) 
  | PATTERN  -> (null : System.Object) 
  | RECURSIVE  -> (null : System.Object) 
  | DATA  -> (null : System.Object) 
  | MAIN  -> (null : System.Object) 
  | EXPORT  -> (null : System.Object) 
  | FROM  -> (null : System.Object) 
  | AS  -> (null : System.Object) 
  | IMPORT  -> (null : System.Object) 
  | REF  -> (null : System.Object) 
  | UNDERSCORE  -> (null : System.Object) 
  | EQUALS  -> (null : System.Object) 
  | ELLIPSIS  -> (null : System.Object) 
  | BAR  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | DOUBLE_COLON  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | FN_CTOR  -> (null : System.Object) 
  | L_BIND  -> (null : System.Object) 
  | R_BIND  -> (null : System.Object) 
  | L_STAR  -> (null : System.Object) 
  | R_STAR  -> (null : System.Object) 
  | L_ARROW  -> (null : System.Object) 
  | R_ARROW  -> (null : System.Object) 
  | L_BRACKET  -> (null : System.Object) 
  | R_BRACKET  -> (null : System.Object) 
  | L_BRACE  -> (null : System.Object) 
  | R_BRACE  -> (null : System.Object) 
  | L_PAREN  -> (null : System.Object) 
  | R_PAREN  -> (null : System.Object) 
  | L_ANGLE  -> (null : System.Object) 
  | R_ANGLE  -> (null : System.Object) 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DECIMAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INTEGER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | TEST_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PREDICATE_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OPERATOR_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BIG_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | SMALL_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EOF  -> (null : System.Object) 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 8us; 9us; 2us; 65535us; 2us; 3us; 10us; 11us; 1us; 65535us; 3us; 4us; 2us; 65535us; 0us; 8us; 8us; 8us; 2us; 65535us; 15us; 16us; 19us; 20us; 2us; 65535us; 15us; 24us; 19us; 24us; 1us; 65535us; 3us; 6us; 2us; 65535us; 15us; 19us; 36us; 37us; 2us; 65535us; 38us; 39us; 41us; 42us; 2us; 65535us; 38us; 41us; 41us; 41us; 2us; 65535us; 2us; 10us; 10us; 10us; 5us; 65535us; 2us; 46us; 10us; 46us; 47us; 48us; 49us; 76us; 76us; 76us; 2us; 65535us; 49us; 50us; 76us; 77us; 5us; 65535us; 2us; 57us; 10us; 57us; 47us; 58us; 49us; 83us; 83us; 83us; 2us; 65535us; 49us; 59us; 83us; 84us; 2us; 65535us; 81us; 90us; 91us; 90us; 2us; 65535us; 81us; 82us; 91us; 92us; 2us; 65535us; 2us; 63us; 10us; 63us; 2us; 65535us; 2us; 61us; 10us; 61us; 2us; 65535us; 2us; 62us; 10us; 62us; 2us; 65535us; 2us; 64us; 10us; 64us; 2us; 65535us; 115us; 116us; 118us; 119us; 2us; 65535us; 115us; 118us; 118us; 118us; 2us; 65535us; 2us; 65us; 10us; 65us; 2us; 65535us; 2us; 66us; 10us; 66us; 2us; 65535us; 126us; 127us; 139us; 140us; 2us; 65535us; 126us; 129us; 139us; 142us; 2us; 65535us; 2us; 67us; 10us; 67us; 2us; 65535us; 2us; 68us; 10us; 68us; 3us; 65535us; 108us; 109us; 121us; 122us; 155us; 156us; 5us; 65535us; 108us; 161us; 121us; 161us; 155us; 161us; 167us; 168us; 169us; 170us; 5us; 65535us; 108us; 165us; 121us; 165us; 155us; 165us; 167us; 165us; 169us; 165us; 22us; 65535us; 86us; 212us; 88us; 89us; 95us; 212us; 97us; 212us; 104us; 105us; 108us; 164us; 121us; 164us; 155us; 164us; 162us; 163us; 171us; 212us; 172us; 212us; 180us; 181us; 181us; 212us; 182us; 183us; 185us; 186us; 188us; 189us; 191us; 192us; 198us; 199us; 203us; 212us; 208us; 209us; 209us; 210us; 212us; 212us; 8us; 65535us; 86us; 87us; 95us; 96us; 97us; 98us; 171us; 173us; 172us; 173us; 181us; 206us; 203us; 204us; 212us; 213us; 52us; 65535us; 13us; 247us; 71us; 247us; 74us; 247us; 110us; 247us; 125us; 247us; 127us; 247us; 131us; 247us; 133us; 247us; 138us; 247us; 140us; 247us; 144us; 247us; 146us; 247us; 214us; 247us; 218us; 247us; 222us; 247us; 235us; 247us; 237us; 247us; 239us; 247us; 245us; 247us; 248us; 247us; 268us; 269us; 290us; 291us; 293us; 294us; 304us; 247us; 308us; 247us; 311us; 247us; 318us; 319us; 327us; 247us; 334us; 247us; 337us; 247us; 339us; 340us; 341us; 342us; 344us; 247us; 348us; 247us; 352us; 248us; 354us; 247us; 357us; 247us; 359us; 360us; 361us; 247us; 363us; 364us; 365us; 247us; 369us; 247us; 373us; 247us; 376us; 247us; 380us; 247us; 383us; 247us; 387us; 247us; 390us; 247us; 395us; 247us; 412us; 247us; 419us; 247us; 426us; 247us; 2us; 65535us; 214us; 215us; 218us; 219us; 2us; 65535us; 214us; 217us; 218us; 217us; 2us; 65535us; 226us; 227us; 230us; 231us; 4us; 65535us; 214us; 224us; 218us; 224us; 226us; 230us; 230us; 230us; 44us; 65535us; 13us; 14us; 71us; 72us; 74us; 75us; 110us; 111us; 125us; 126us; 127us; 128us; 131us; 132us; 133us; 134us; 138us; 139us; 140us; 141us; 144us; 145us; 146us; 147us; 214us; 229us; 218us; 229us; 222us; 223us; 235us; 236us; 237us; 238us; 239us; 240us; 245us; 241us; 248us; 351us; 304us; 305us; 308us; 309us; 311us; 312us; 327us; 328us; 334us; 335us; 337us; 338us; 344us; 351us; 348us; 349us; 352us; 353us; 354us; 351us; 357us; 358us; 361us; 362us; 365us; 366us; 369us; 370us; 373us; 242us; 376us; 241us; 380us; 243us; 383us; 241us; 387us; 244us; 390us; 241us; 395us; 396us; 412us; 413us; 419us; 420us; 426us; 427us; 7us; 65535us; 245us; 246us; 373us; 374us; 376us; 377us; 380us; 381us; 383us; 384us; 387us; 388us; 390us; 391us; 44us; 65535us; 13us; 237us; 71us; 237us; 74us; 237us; 110us; 237us; 125us; 237us; 127us; 237us; 131us; 237us; 133us; 237us; 138us; 237us; 140us; 237us; 144us; 237us; 146us; 237us; 214us; 237us; 218us; 237us; 222us; 237us; 235us; 237us; 237us; 237us; 239us; 237us; 245us; 237us; 248us; 237us; 304us; 237us; 308us; 237us; 311us; 237us; 327us; 237us; 334us; 237us; 337us; 237us; 344us; 237us; 348us; 237us; 352us; 237us; 354us; 237us; 357us; 237us; 361us; 237us; 365us; 237us; 369us; 237us; 373us; 237us; 376us; 237us; 380us; 237us; 383us; 237us; 387us; 237us; 390us; 237us; 395us; 237us; 412us; 237us; 419us; 237us; 426us; 237us; 44us; 65535us; 13us; 270us; 71us; 270us; 74us; 270us; 110us; 270us; 125us; 270us; 127us; 270us; 131us; 270us; 133us; 270us; 138us; 270us; 140us; 270us; 144us; 270us; 146us; 270us; 214us; 270us; 218us; 270us; 222us; 270us; 235us; 270us; 237us; 270us; 239us; 270us; 245us; 270us; 248us; 270us; 304us; 270us; 308us; 270us; 311us; 270us; 327us; 270us; 334us; 270us; 337us; 270us; 344us; 270us; 348us; 270us; 352us; 270us; 354us; 270us; 357us; 270us; 361us; 270us; 365us; 270us; 369us; 270us; 373us; 270us; 376us; 270us; 380us; 270us; 383us; 270us; 387us; 270us; 390us; 270us; 395us; 270us; 412us; 270us; 419us; 270us; 426us; 270us; 44us; 65535us; 13us; 249us; 71us; 249us; 74us; 249us; 110us; 249us; 125us; 249us; 127us; 249us; 131us; 249us; 133us; 249us; 138us; 249us; 140us; 249us; 144us; 249us; 146us; 249us; 214us; 249us; 218us; 249us; 222us; 249us; 235us; 249us; 237us; 249us; 239us; 249us; 245us; 249us; 248us; 249us; 304us; 249us; 308us; 249us; 311us; 249us; 327us; 249us; 334us; 249us; 337us; 249us; 344us; 249us; 348us; 249us; 352us; 249us; 354us; 249us; 357us; 249us; 361us; 249us; 365us; 249us; 369us; 249us; 373us; 249us; 376us; 249us; 380us; 249us; 383us; 249us; 387us; 249us; 390us; 249us; 395us; 249us; 412us; 249us; 419us; 249us; 426us; 249us; 2us; 65535us; 296us; 315us; 315us; 315us; 1us; 65535us; 297us; 298us; 8us; 65535us; 53us; 54us; 79us; 80us; 113us; 114us; 136us; 137us; 289us; 290us; 292us; 293us; 302us; 303us; 313us; 314us; 2us; 65535us; 296us; 297us; 315us; 316us; 44us; 65535us; 13us; 250us; 71us; 250us; 74us; 250us; 110us; 250us; 125us; 250us; 127us; 250us; 131us; 250us; 133us; 250us; 138us; 250us; 140us; 250us; 144us; 250us; 146us; 250us; 214us; 250us; 218us; 250us; 222us; 250us; 235us; 250us; 237us; 250us; 239us; 250us; 245us; 250us; 248us; 250us; 304us; 250us; 308us; 250us; 311us; 250us; 327us; 250us; 334us; 250us; 337us; 250us; 344us; 250us; 348us; 250us; 352us; 250us; 354us; 250us; 357us; 250us; 361us; 250us; 365us; 250us; 369us; 250us; 373us; 250us; 376us; 250us; 380us; 250us; 383us; 250us; 387us; 250us; 390us; 250us; 395us; 250us; 412us; 250us; 419us; 250us; 426us; 250us; 2us; 65535us; 317us; 318us; 320us; 321us; 44us; 65535us; 13us; 251us; 71us; 251us; 74us; 251us; 110us; 251us; 125us; 251us; 127us; 251us; 131us; 251us; 133us; 251us; 138us; 251us; 140us; 251us; 144us; 251us; 146us; 251us; 214us; 251us; 218us; 251us; 222us; 251us; 235us; 251us; 237us; 251us; 239us; 251us; 245us; 251us; 248us; 251us; 304us; 251us; 308us; 251us; 311us; 251us; 327us; 251us; 334us; 251us; 337us; 251us; 344us; 251us; 348us; 251us; 352us; 251us; 354us; 251us; 357us; 251us; 361us; 251us; 365us; 251us; 369us; 251us; 373us; 251us; 376us; 251us; 380us; 251us; 383us; 251us; 387us; 251us; 390us; 251us; 395us; 251us; 412us; 251us; 419us; 251us; 426us; 251us; 2us; 65535us; 323us; 324us; 331us; 332us; 2us; 65535us; 323us; 331us; 331us; 331us; 44us; 65535us; 13us; 252us; 71us; 252us; 74us; 252us; 110us; 252us; 125us; 252us; 127us; 252us; 131us; 252us; 133us; 252us; 138us; 252us; 140us; 252us; 144us; 252us; 146us; 252us; 214us; 252us; 218us; 252us; 222us; 252us; 235us; 252us; 237us; 252us; 239us; 252us; 245us; 252us; 248us; 252us; 304us; 252us; 308us; 252us; 311us; 252us; 327us; 252us; 334us; 252us; 337us; 252us; 344us; 252us; 348us; 252us; 352us; 252us; 354us; 252us; 357us; 252us; 361us; 252us; 365us; 252us; 369us; 252us; 373us; 252us; 376us; 252us; 380us; 252us; 383us; 252us; 387us; 252us; 390us; 252us; 395us; 252us; 412us; 252us; 419us; 252us; 426us; 252us; 44us; 65535us; 13us; 253us; 71us; 253us; 74us; 253us; 110us; 253us; 125us; 253us; 127us; 253us; 131us; 253us; 133us; 253us; 138us; 253us; 140us; 253us; 144us; 253us; 146us; 253us; 214us; 253us; 218us; 253us; 222us; 253us; 235us; 253us; 237us; 253us; 239us; 253us; 245us; 253us; 248us; 253us; 304us; 253us; 308us; 253us; 311us; 253us; 327us; 253us; 334us; 253us; 337us; 253us; 344us; 253us; 348us; 253us; 352us; 253us; 354us; 253us; 357us; 253us; 361us; 253us; 365us; 253us; 369us; 253us; 373us; 253us; 376us; 253us; 380us; 253us; 383us; 253us; 387us; 253us; 390us; 253us; 395us; 253us; 412us; 253us; 419us; 253us; 426us; 253us; 3us; 65535us; 248us; 356us; 344us; 345us; 354us; 355us; 44us; 65535us; 13us; 254us; 71us; 254us; 74us; 254us; 110us; 254us; 125us; 254us; 127us; 254us; 131us; 254us; 133us; 254us; 138us; 254us; 140us; 254us; 144us; 254us; 146us; 254us; 214us; 254us; 218us; 254us; 222us; 254us; 235us; 254us; 237us; 254us; 239us; 254us; 245us; 254us; 248us; 254us; 304us; 254us; 308us; 254us; 311us; 254us; 327us; 254us; 334us; 254us; 337us; 254us; 344us; 254us; 348us; 254us; 352us; 254us; 354us; 254us; 357us; 254us; 361us; 254us; 365us; 254us; 369us; 254us; 373us; 254us; 376us; 254us; 380us; 254us; 383us; 254us; 387us; 254us; 390us; 254us; 395us; 254us; 412us; 254us; 419us; 254us; 426us; 254us; 44us; 65535us; 13us; 255us; 71us; 255us; 74us; 255us; 110us; 255us; 125us; 255us; 127us; 255us; 131us; 255us; 133us; 255us; 138us; 255us; 140us; 255us; 144us; 255us; 146us; 255us; 214us; 255us; 218us; 255us; 222us; 255us; 235us; 255us; 237us; 255us; 239us; 255us; 245us; 255us; 248us; 255us; 304us; 255us; 308us; 255us; 311us; 255us; 327us; 255us; 334us; 255us; 337us; 255us; 344us; 255us; 348us; 255us; 352us; 255us; 354us; 255us; 357us; 255us; 361us; 255us; 365us; 255us; 369us; 255us; 373us; 255us; 376us; 255us; 380us; 255us; 383us; 255us; 387us; 255us; 390us; 255us; 395us; 255us; 412us; 255us; 419us; 255us; 426us; 255us; 44us; 65535us; 13us; 256us; 71us; 256us; 74us; 256us; 110us; 256us; 125us; 256us; 127us; 256us; 131us; 256us; 133us; 256us; 138us; 256us; 140us; 256us; 144us; 256us; 146us; 256us; 214us; 256us; 218us; 256us; 222us; 256us; 235us; 256us; 237us; 256us; 239us; 256us; 245us; 256us; 248us; 256us; 304us; 256us; 308us; 256us; 311us; 256us; 327us; 256us; 334us; 256us; 337us; 256us; 344us; 256us; 348us; 256us; 352us; 256us; 354us; 256us; 357us; 256us; 361us; 256us; 365us; 256us; 369us; 256us; 373us; 256us; 376us; 256us; 380us; 256us; 383us; 256us; 387us; 256us; 390us; 256us; 395us; 256us; 412us; 256us; 419us; 256us; 426us; 256us; 44us; 65535us; 13us; 257us; 71us; 257us; 74us; 257us; 110us; 257us; 125us; 257us; 127us; 257us; 131us; 257us; 133us; 257us; 138us; 257us; 140us; 257us; 144us; 257us; 146us; 257us; 214us; 257us; 218us; 257us; 222us; 257us; 235us; 257us; 237us; 257us; 239us; 257us; 245us; 257us; 248us; 257us; 304us; 257us; 308us; 257us; 311us; 257us; 327us; 257us; 334us; 257us; 337us; 257us; 344us; 257us; 348us; 257us; 352us; 257us; 354us; 257us; 357us; 257us; 361us; 257us; 365us; 257us; 369us; 257us; 373us; 257us; 376us; 257us; 380us; 257us; 383us; 257us; 387us; 257us; 390us; 257us; 395us; 257us; 412us; 257us; 419us; 257us; 426us; 257us; 44us; 65535us; 13us; 258us; 71us; 258us; 74us; 258us; 110us; 258us; 125us; 258us; 127us; 258us; 131us; 258us; 133us; 258us; 138us; 258us; 140us; 258us; 144us; 258us; 146us; 258us; 214us; 258us; 218us; 258us; 222us; 258us; 235us; 258us; 237us; 258us; 239us; 258us; 245us; 258us; 248us; 258us; 304us; 258us; 308us; 258us; 311us; 258us; 327us; 258us; 334us; 258us; 337us; 258us; 344us; 258us; 348us; 258us; 352us; 258us; 354us; 258us; 357us; 258us; 361us; 258us; 365us; 258us; 369us; 258us; 373us; 258us; 376us; 258us; 380us; 258us; 383us; 258us; 387us; 258us; 390us; 258us; 395us; 258us; 412us; 258us; 419us; 258us; 426us; 258us; 44us; 65535us; 13us; 259us; 71us; 259us; 74us; 259us; 110us; 259us; 125us; 259us; 127us; 259us; 131us; 259us; 133us; 259us; 138us; 259us; 140us; 259us; 144us; 259us; 146us; 259us; 214us; 259us; 218us; 259us; 222us; 259us; 235us; 259us; 237us; 259us; 239us; 259us; 245us; 259us; 248us; 259us; 304us; 259us; 308us; 259us; 311us; 259us; 327us; 259us; 334us; 259us; 337us; 259us; 344us; 259us; 348us; 259us; 352us; 259us; 354us; 259us; 357us; 259us; 361us; 259us; 365us; 259us; 369us; 259us; 373us; 259us; 376us; 259us; 380us; 259us; 383us; 259us; 387us; 259us; 390us; 259us; 395us; 259us; 412us; 259us; 419us; 259us; 426us; 259us; 44us; 65535us; 13us; 239us; 71us; 239us; 74us; 239us; 110us; 239us; 125us; 239us; 127us; 239us; 131us; 239us; 133us; 239us; 138us; 239us; 140us; 239us; 144us; 239us; 146us; 239us; 214us; 239us; 218us; 239us; 222us; 239us; 235us; 239us; 237us; 239us; 239us; 239us; 245us; 239us; 248us; 239us; 304us; 239us; 308us; 239us; 311us; 239us; 327us; 239us; 334us; 239us; 337us; 239us; 344us; 239us; 348us; 239us; 352us; 239us; 354us; 239us; 357us; 239us; 361us; 239us; 365us; 239us; 369us; 239us; 373us; 239us; 376us; 239us; 380us; 239us; 383us; 239us; 387us; 239us; 390us; 239us; 395us; 239us; 412us; 239us; 419us; 239us; 426us; 239us; 44us; 65535us; 13us; 266us; 71us; 266us; 74us; 266us; 110us; 266us; 125us; 266us; 127us; 266us; 131us; 266us; 133us; 266us; 138us; 266us; 140us; 266us; 144us; 266us; 146us; 266us; 214us; 266us; 218us; 266us; 222us; 266us; 235us; 266us; 237us; 266us; 239us; 266us; 245us; 266us; 248us; 266us; 304us; 266us; 308us; 266us; 311us; 266us; 327us; 266us; 334us; 266us; 337us; 266us; 344us; 266us; 348us; 266us; 352us; 266us; 354us; 266us; 357us; 266us; 361us; 266us; 365us; 266us; 369us; 266us; 373us; 266us; 376us; 266us; 380us; 266us; 383us; 266us; 387us; 266us; 390us; 266us; 395us; 266us; 412us; 266us; 419us; 266us; 426us; 266us; 44us; 65535us; 13us; 267us; 71us; 267us; 74us; 267us; 110us; 267us; 125us; 267us; 127us; 267us; 131us; 267us; 133us; 267us; 138us; 267us; 140us; 267us; 144us; 267us; 146us; 267us; 214us; 267us; 218us; 267us; 222us; 267us; 235us; 267us; 237us; 267us; 239us; 267us; 245us; 267us; 248us; 267us; 304us; 267us; 308us; 267us; 311us; 267us; 327us; 267us; 334us; 267us; 337us; 267us; 344us; 267us; 348us; 267us; 352us; 267us; 354us; 267us; 357us; 267us; 361us; 267us; 365us; 267us; 369us; 267us; 373us; 267us; 376us; 267us; 380us; 267us; 383us; 267us; 387us; 267us; 390us; 267us; 395us; 267us; 412us; 267us; 419us; 267us; 426us; 267us; 2us; 65535us; 409us; 410us; 416us; 417us; 2us; 65535us; 409us; 416us; 416us; 416us; 3us; 65535us; 394us; 401us; 397us; 398us; 423us; 424us; 4us; 65535us; 394us; 422us; 397us; 422us; 405us; 406us; 423us; 422us; 46us; 65535us; 13us; 288us; 71us; 288us; 74us; 288us; 110us; 288us; 125us; 288us; 127us; 288us; 131us; 288us; 133us; 288us; 138us; 288us; 140us; 288us; 144us; 288us; 146us; 288us; 214us; 288us; 218us; 288us; 222us; 288us; 235us; 288us; 237us; 288us; 239us; 288us; 245us; 288us; 248us; 288us; 296us; 302us; 304us; 288us; 308us; 288us; 311us; 288us; 315us; 302us; 327us; 288us; 334us; 288us; 337us; 288us; 344us; 288us; 348us; 288us; 352us; 288us; 354us; 288us; 357us; 288us; 361us; 288us; 365us; 288us; 369us; 288us; 373us; 288us; 376us; 288us; 380us; 288us; 383us; 288us; 387us; 288us; 390us; 288us; 395us; 288us; 412us; 288us; 419us; 288us; 426us; 288us; 48us; 65535us; 55us; 471us; 70us; 471us; 73us; 471us; 86us; 175us; 88us; 175us; 95us; 175us; 97us; 175us; 104us; 175us; 108us; 172us; 121us; 172us; 155us; 172us; 162us; 175us; 167us; 171us; 169us; 171us; 171us; 175us; 172us; 175us; 180us; 175us; 181us; 175us; 182us; 175us; 185us; 175us; 188us; 175us; 191us; 175us; 198us; 175us; 203us; 175us; 208us; 175us; 209us; 175us; 212us; 175us; 220us; 471us; 221us; 471us; 307us; 471us; 310us; 471us; 323us; 471us; 331us; 471us; 333us; 471us; 450us; 471us; 451us; 471us; 452us; 471us; 453us; 471us; 454us; 471us; 457us; 471us; 467us; 471us; 469us; 471us; 472us; 473us; 473us; 471us; 481us; 471us; 484us; 471us; 487us; 471us; 490us; 471us; 49us; 65535us; 13us; 428us; 71us; 428us; 74us; 428us; 110us; 428us; 125us; 428us; 127us; 428us; 131us; 428us; 133us; 428us; 138us; 428us; 140us; 428us; 144us; 428us; 146us; 428us; 214us; 428us; 218us; 428us; 222us; 428us; 235us; 428us; 237us; 428us; 239us; 428us; 245us; 428us; 248us; 428us; 278us; 279us; 280us; 281us; 296us; 428us; 304us; 428us; 308us; 428us; 311us; 428us; 315us; 428us; 327us; 428us; 334us; 428us; 337us; 428us; 344us; 428us; 348us; 428us; 352us; 428us; 354us; 428us; 357us; 428us; 361us; 428us; 365us; 428us; 369us; 428us; 373us; 428us; 376us; 428us; 380us; 428us; 383us; 428us; 387us; 428us; 390us; 428us; 395us; 428us; 412us; 428us; 419us; 428us; 426us; 428us; 435us; 436us; 49us; 65535us; 55us; 429us; 70us; 429us; 73us; 429us; 86us; 429us; 88us; 429us; 95us; 429us; 97us; 429us; 104us; 429us; 108us; 429us; 121us; 429us; 155us; 429us; 162us; 429us; 167us; 429us; 169us; 429us; 171us; 429us; 172us; 429us; 180us; 429us; 181us; 429us; 182us; 429us; 185us; 429us; 188us; 429us; 191us; 429us; 198us; 429us; 203us; 429us; 208us; 429us; 209us; 429us; 212us; 429us; 220us; 429us; 221us; 429us; 307us; 429us; 310us; 429us; 323us; 429us; 331us; 429us; 333us; 429us; 442us; 443us; 450us; 429us; 451us; 429us; 452us; 429us; 453us; 429us; 454us; 429us; 457us; 429us; 467us; 429us; 469us; 429us; 472us; 429us; 473us; 429us; 481us; 429us; 484us; 429us; 487us; 429us; 490us; 429us; 3us; 65535us; 70us; 73us; 220us; 221us; 307us; 310us; 3us; 65535us; 365us; 368us; 431us; 447us; 446us; 447us; 7us; 65535us; 323us; 333us; 331us; 333us; 473us; 450us; 481us; 451us; 484us; 452us; 487us; 453us; 490us; 454us; 2us; 65535us; 458us; 460us; 493us; 494us; 23us; 65535us; 55us; 56us; 70us; 444us; 73us; 445us; 220us; 444us; 221us; 445us; 307us; 444us; 310us; 445us; 323us; 448us; 331us; 448us; 333us; 455us; 450us; 455us; 451us; 455us; 452us; 455us; 453us; 455us; 454us; 455us; 457us; 458us; 467us; 468us; 469us; 470us; 473us; 448us; 481us; 448us; 484us; 448us; 487us; 448us; 490us; 448us; 23us; 65535us; 55us; 475us; 70us; 475us; 73us; 475us; 220us; 475us; 221us; 475us; 307us; 475us; 310us; 475us; 323us; 475us; 331us; 475us; 333us; 475us; 450us; 475us; 451us; 475us; 452us; 475us; 453us; 475us; 454us; 475us; 457us; 475us; 467us; 475us; 469us; 475us; 473us; 475us; 481us; 475us; 484us; 475us; 487us; 475us; 490us; 475us; 23us; 65535us; 55us; 476us; 70us; 476us; 73us; 476us; 220us; 476us; 221us; 476us; 307us; 476us; 310us; 476us; 323us; 476us; 331us; 476us; 333us; 476us; 450us; 476us; 451us; 476us; 452us; 476us; 453us; 476us; 454us; 476us; 457us; 476us; 467us; 476us; 469us; 476us; 473us; 476us; 481us; 476us; 484us; 476us; 487us; 476us; 490us; 476us; 23us; 65535us; 55us; 477us; 70us; 477us; 73us; 477us; 220us; 477us; 221us; 477us; 307us; 477us; 310us; 477us; 323us; 477us; 331us; 477us; 333us; 477us; 450us; 477us; 451us; 477us; 452us; 477us; 453us; 477us; 454us; 477us; 457us; 477us; 467us; 477us; 469us; 477us; 473us; 477us; 481us; 477us; 484us; 477us; 487us; 477us; 490us; 477us; 23us; 65535us; 55us; 478us; 70us; 478us; 73us; 478us; 220us; 478us; 221us; 478us; 307us; 478us; 310us; 478us; 323us; 478us; 331us; 478us; 333us; 478us; 450us; 478us; 451us; 478us; 452us; 478us; 453us; 478us; 454us; 478us; 457us; 478us; 467us; 478us; 469us; 478us; 473us; 478us; 481us; 478us; 484us; 478us; 487us; 478us; 490us; 478us; 23us; 65535us; 55us; 479us; 70us; 479us; 73us; 479us; 220us; 479us; 221us; 479us; 307us; 479us; 310us; 479us; 323us; 479us; 331us; 479us; 333us; 479us; 450us; 479us; 451us; 479us; 452us; 479us; 453us; 479us; 454us; 479us; 457us; 479us; 467us; 479us; 469us; 479us; 473us; 479us; 481us; 479us; 484us; 479us; 487us; 479us; 490us; 479us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 11us; 14us; 17us; 20us; 22us; 25us; 28us; 31us; 34us; 40us; 43us; 49us; 52us; 55us; 58us; 61us; 64us; 67us; 70us; 73us; 76us; 79us; 82us; 85us; 88us; 91us; 94us; 98us; 104us; 110us; 133us; 142us; 195us; 198us; 201us; 204us; 209us; 254us; 262us; 307us; 352us; 397us; 400us; 402us; 411us; 414us; 459us; 462us; 507us; 510us; 513us; 558us; 603us; 607us; 652us; 697us; 742us; 787us; 832us; 877us; 922us; 967us; 1012us; 1015us; 1018us; 1022us; 1027us; 1074us; 1123us; 1173us; 1223us; 1227us; 1231us; 1239us; 1242us; 1266us; 1290us; 1314us; 1338us; 1362us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 2us; 1us; 2us; 2us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 2us; 1us; 4us; 1us; 4us; 1us; 6us; 1us; 6us; 1us; 7us; 1us; 7us; 1us; 7us; 2us; 8us; 9us; 1us; 8us; 1us; 8us; 1us; 8us; 1us; 9us; 1us; 9us; 1us; 9us; 1us; 9us; 1us; 10us; 1us; 11us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 16us; 1us; 16us; 1us; 17us; 1us; 18us; 1us; 19us; 1us; 20us; 4us; 21us; 22us; 25us; 26us; 1us; 21us; 2us; 22us; 26us; 1us; 22us; 1us; 22us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 25us; 1us; 26us; 1us; 26us; 1us; 27us; 1us; 28us; 1us; 29us; 1us; 30us; 1us; 31us; 1us; 32us; 1us; 33us; 1us; 34us; 2us; 35us; 36us; 2us; 35us; 36us; 1us; 35us; 1us; 35us; 2us; 36us; 199us; 1us; 36us; 1us; 36us; 2us; 37us; 38us; 1us; 38us; 1us; 39us; 1us; 39us; 1us; 39us; 1us; 39us; 1us; 39us; 2us; 40us; 41us; 1us; 41us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 42us; 2us; 43us; 44us; 1us; 44us; 1us; 44us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 46us; 1us; 46us; 1us; 46us; 1us; 46us; 1us; 46us; 1us; 46us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 48us; 2us; 49us; 50us; 1us; 50us; 1us; 51us; 1us; 51us; 1us; 51us; 2us; 52us; 53us; 2us; 52us; 53us; 2us; 52us; 53us; 2us; 52us; 53us; 1us; 52us; 1us; 52us; 2us; 53us; 59us; 1us; 53us; 1us; 53us; 1us; 53us; 1us; 53us; 1us; 53us; 2us; 54us; 55us; 2us; 54us; 55us; 2us; 54us; 55us; 2us; 54us; 55us; 2us; 54us; 55us; 1us; 54us; 1us; 54us; 2us; 55us; 59us; 1us; 55us; 1us; 55us; 1us; 55us; 1us; 55us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 62us; 1us; 62us; 1us; 62us; 1us; 63us; 1us; 63us; 1us; 63us; 1us; 63us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 65us; 4us; 66us; 67us; 68us; 69us; 2us; 67us; 69us; 1us; 68us; 1us; 68us; 1us; 69us; 1us; 69us; 1us; 70us; 2us; 70us; 72us; 1us; 70us; 3us; 71us; 73us; 197us; 1us; 72us; 1us; 73us; 1us; 74us; 1us; 75us; 1us; 76us; 7us; 77us; 78us; 79us; 80us; 82us; 83us; 87us; 6us; 77us; 78us; 80us; 82us; 83us; 87us; 1us; 77us; 1us; 77us; 1us; 77us; 1us; 78us; 1us; 78us; 1us; 78us; 1us; 79us; 1us; 79us; 1us; 79us; 1us; 80us; 1us; 80us; 1us; 80us; 1us; 81us; 1us; 82us; 1us; 82us; 1us; 82us; 1us; 83us; 1us; 83us; 1us; 83us; 1us; 84us; 1us; 85us; 1us; 86us; 1us; 86us; 1us; 86us; 1us; 87us; 1us; 87us; 1us; 88us; 1us; 88us; 1us; 88us; 1us; 88us; 1us; 90us; 1us; 90us; 1us; 91us; 1us; 91us; 1us; 91us; 2us; 92us; 93us; 1us; 93us; 1us; 93us; 2us; 94us; 95us; 3us; 94us; 95us; 199us; 1us; 95us; 1us; 95us; 1us; 96us; 1us; 97us; 1us; 97us; 1us; 97us; 1us; 97us; 1us; 98us; 2us; 99us; 100us; 1us; 100us; 1us; 101us; 1us; 101us; 1us; 101us; 1us; 101us; 1us; 101us; 1us; 103us; 1us; 103us; 1us; 104us; 1us; 104us; 1us; 106us; 2us; 106us; 170us; 2us; 106us; 172us; 2us; 106us; 174us; 1us; 106us; 1us; 106us; 1us; 107us; 2us; 107us; 164us; 1us; 108us; 1us; 109us; 1us; 110us; 1us; 111us; 1us; 112us; 1us; 113us; 1us; 114us; 1us; 115us; 1us; 116us; 1us; 117us; 1us; 118us; 1us; 119us; 1us; 119us; 1us; 120us; 1us; 120us; 1us; 121us; 1us; 121us; 1us; 122us; 1us; 123us; 1us; 124us; 1us; 124us; 1us; 125us; 1us; 126us; 1us; 127us; 1us; 128us; 1us; 129us; 1us; 130us; 1us; 131us; 1us; 132us; 1us; 133us; 1us; 133us; 1us; 134us; 1us; 134us; 1us; 135us; 1us; 136us; 1us; 137us; 1us; 138us; 1us; 139us; 1us; 140us; 1us; 141us; 1us; 142us; 1us; 142us; 1us; 142us; 2us; 143us; 144us; 2us; 143us; 144us; 2us; 143us; 144us; 2us; 143us; 144us; 2us; 143us; 144us; 2us; 143us; 144us; 1us; 143us; 1us; 143us; 1us; 143us; 1us; 144us; 1us; 145us; 1us; 145us; 1us; 145us; 1us; 145us; 1us; 145us; 2us; 146us; 147us; 1us; 146us; 1us; 146us; 2us; 147us; 199us; 1us; 147us; 1us; 147us; 1us; 149us; 1us; 149us; 1us; 151us; 1us; 151us; 1us; 152us; 1us; 152us; 1us; 152us; 2us; 153us; 154us; 1us; 154us; 2us; 155us; 156us; 2us; 155us; 156us; 2us; 155us; 156us; 1us; 155us; 1us; 156us; 1us; 156us; 1us; 156us; 1us; 156us; 1us; 156us; 2us; 157us; 158us; 1us; 158us; 2us; 159us; 204us; 1us; 159us; 1us; 159us; 1us; 159us; 1us; 160us; 1us; 160us; 1us; 160us; 1us; 160us; 1us; 160us; 1us; 160us; 1us; 161us; 1us; 161us; 1us; 161us; 1us; 161us; 1us; 162us; 1us; 162us; 1us; 162us; 1us; 162us; 2us; 163us; 164us; 2us; 163us; 164us; 1us; 163us; 1us; 163us; 1us; 163us; 1us; 164us; 1us; 165us; 1us; 165us; 1us; 165us; 1us; 165us; 1us; 166us; 1us; 166us; 1us; 166us; 1us; 166us; 2us; 167us; 168us; 1us; 167us; 1us; 167us; 1us; 168us; 1us; 168us; 1us; 168us; 1us; 168us; 2us; 169us; 170us; 2us; 169us; 170us; 1us; 169us; 1us; 169us; 1us; 170us; 1us; 170us; 1us; 170us; 2us; 171us; 172us; 2us; 171us; 172us; 1us; 171us; 1us; 171us; 1us; 172us; 1us; 172us; 1us; 172us; 2us; 173us; 174us; 2us; 173us; 174us; 1us; 173us; 1us; 173us; 1us; 174us; 1us; 174us; 1us; 174us; 4us; 175us; 176us; 177us; 178us; 4us; 175us; 176us; 177us; 178us; 2us; 175us; 176us; 2us; 175us; 176us; 1us; 175us; 1us; 175us; 1us; 175us; 1us; 176us; 1us; 177us; 1us; 177us; 1us; 178us; 1us; 179us; 1us; 179us; 1us; 179us; 1us; 179us; 1us; 180us; 1us; 180us; 1us; 180us; 1us; 180us; 1us; 180us; 1us; 180us; 1us; 180us; 1us; 180us; 2us; 181us; 182us; 1us; 182us; 1us; 183us; 1us; 183us; 1us; 183us; 1us; 183us; 2us; 184us; 185us; 1us; 185us; 1us; 185us; 1us; 186us; 1us; 186us; 1us; 186us; 1us; 187us; 1us; 188us; 2us; 189us; 193us; 3us; 189us; 193us; 201us; 1us; 190us; 1us; 191us; 1us; 192us; 1us; 193us; 1us; 193us; 1us; 194us; 1us; 195us; 1us; 196us; 1us; 197us; 3us; 197us; 215us; 216us; 1us; 197us; 1us; 197us; 1us; 198us; 1us; 199us; 1us; 201us; 1us; 201us; 2us; 202us; 203us; 1us; 203us; 2us; 204us; 218us; 2us; 204us; 224us; 2us; 204us; 225us; 2us; 204us; 226us; 2us; 204us; 227us; 1us; 204us; 3us; 205us; 206us; 207us; 2us; 205us; 207us; 2us; 205us; 207us; 1us; 206us; 1us; 207us; 1us; 208us; 1us; 209us; 1us; 210us; 1us; 211us; 1us; 212us; 1us; 213us; 1us; 214us; 1us; 214us; 1us; 216us; 1us; 216us; 1us; 217us; 1us; 218us; 1us; 218us; 1us; 218us; 1us; 219us; 1us; 220us; 1us; 221us; 1us; 222us; 1us; 223us; 1us; 224us; 1us; 224us; 1us; 224us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 226us; 1us; 226us; 1us; 226us; 1us; 227us; 1us; 227us; 1us; 227us; 1us; 228us; 1us; 228us; 1us; 228us; 1us; 228us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 7us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 26us; 28us; 30us; 32us; 35us; 37us; 39us; 41us; 43us; 45us; 47us; 49us; 51us; 53us; 55us; 57us; 59us; 61us; 63us; 65us; 67us; 69us; 71us; 73us; 75us; 77us; 79us; 81us; 83us; 85us; 87us; 89us; 91us; 93us; 95us; 97us; 102us; 104us; 107us; 109us; 111us; 113us; 115us; 117us; 119us; 121us; 123us; 125us; 127us; 129us; 131us; 133us; 135us; 137us; 139us; 141us; 143us; 145us; 148us; 151us; 153us; 155us; 158us; 160us; 162us; 165us; 167us; 169us; 171us; 173us; 175us; 177us; 180us; 182us; 184us; 186us; 188us; 190us; 192us; 195us; 197us; 199us; 201us; 203us; 205us; 207us; 209us; 211us; 213us; 215us; 217us; 219us; 221us; 223us; 225us; 227us; 229us; 231us; 233us; 235us; 237us; 239us; 241us; 243us; 245us; 247us; 249us; 252us; 254us; 256us; 258us; 260us; 263us; 266us; 269us; 272us; 274us; 276us; 279us; 281us; 283us; 285us; 287us; 289us; 292us; 295us; 298us; 301us; 304us; 306us; 308us; 311us; 313us; 315us; 317us; 319us; 321us; 323us; 325us; 327us; 329us; 331us; 333us; 335us; 337us; 339us; 341us; 343us; 345us; 347us; 349us; 351us; 353us; 355us; 360us; 363us; 365us; 367us; 369us; 371us; 373us; 376us; 378us; 382us; 384us; 386us; 388us; 390us; 392us; 400us; 407us; 409us; 411us; 413us; 415us; 417us; 419us; 421us; 423us; 425us; 427us; 429us; 431us; 433us; 435us; 437us; 439us; 441us; 443us; 445us; 447us; 449us; 451us; 453us; 455us; 457us; 459us; 461us; 463us; 465us; 467us; 469us; 471us; 473us; 475us; 477us; 480us; 482us; 484us; 487us; 491us; 493us; 495us; 497us; 499us; 501us; 503us; 505us; 507us; 510us; 512us; 514us; 516us; 518us; 520us; 522us; 524us; 526us; 528us; 530us; 532us; 535us; 538us; 541us; 543us; 545us; 547us; 550us; 552us; 554us; 556us; 558us; 560us; 562us; 564us; 566us; 568us; 570us; 572us; 574us; 576us; 578us; 580us; 582us; 584us; 586us; 588us; 590us; 592us; 594us; 596us; 598us; 600us; 602us; 604us; 606us; 608us; 610us; 612us; 614us; 616us; 618us; 620us; 622us; 624us; 626us; 628us; 630us; 632us; 634us; 636us; 639us; 642us; 645us; 648us; 651us; 654us; 656us; 658us; 660us; 662us; 664us; 666us; 668us; 670us; 672us; 675us; 677us; 679us; 682us; 684us; 686us; 688us; 690us; 692us; 694us; 696us; 698us; 700us; 703us; 705us; 708us; 711us; 714us; 716us; 718us; 720us; 722us; 724us; 726us; 729us; 731us; 734us; 736us; 738us; 740us; 742us; 744us; 746us; 748us; 750us; 752us; 754us; 756us; 758us; 760us; 762us; 764us; 766us; 768us; 771us; 774us; 776us; 778us; 780us; 782us; 784us; 786us; 788us; 790us; 792us; 794us; 796us; 798us; 801us; 803us; 805us; 807us; 809us; 811us; 813us; 816us; 819us; 821us; 823us; 825us; 827us; 829us; 832us; 835us; 837us; 839us; 841us; 843us; 845us; 848us; 851us; 853us; 855us; 857us; 859us; 861us; 866us; 871us; 874us; 877us; 879us; 881us; 883us; 885us; 887us; 889us; 891us; 893us; 895us; 897us; 899us; 901us; 903us; 905us; 907us; 909us; 911us; 913us; 915us; 918us; 920us; 922us; 924us; 926us; 928us; 931us; 933us; 935us; 937us; 939us; 941us; 943us; 945us; 948us; 952us; 954us; 956us; 958us; 960us; 962us; 964us; 966us; 968us; 970us; 974us; 976us; 978us; 980us; 982us; 984us; 986us; 989us; 991us; 994us; 997us; 1000us; 1003us; 1006us; 1008us; 1012us; 1015us; 1018us; 1020us; 1022us; 1024us; 1026us; 1028us; 1030us; 1032us; 1034us; 1036us; 1038us; 1040us; 1042us; 1044us; 1046us; 1048us; 1050us; 1052us; 1054us; 1056us; 1058us; 1060us; 1062us; 1064us; 1066us; 1068us; 1070us; 1072us; 1074us; 1076us; 1078us; 1080us; 1082us; 1084us; 1086us; 1088us; 1090us; |]
let _fsyacc_action_rows = 496
let _fsyacc_actionTableElements = [|1us; 16387us; 68us; 15us; 0us; 49152us; 12us; 16389us; 44us; 69us; 51us; 123us; 52us; 135us; 55us; 157us; 56us; 112us; 57us; 100us; 58us; 106us; 59us; 93us; 60us; 153us; 61us; 52us; 62us; 47us; 63us; 78us; 2us; 32768us; 64us; 12us; 65us; 36us; 1us; 32768us; 105us; 5us; 0us; 16385us; 1us; 32768us; 105us; 7us; 0us; 16386us; 1us; 16387us; 68us; 15us; 0us; 16388us; 12us; 16389us; 44us; 69us; 51us; 123us; 52us; 135us; 55us; 157us; 56us; 112us; 57us; 100us; 58us; 106us; 59us; 93us; 60us; 153us; 61us; 52us; 62us; 47us; 63us; 78us; 0us; 16390us; 1us; 32768us; 71us; 13us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 0us; 16391us; 3us; 32768us; 91us; 38us; 97us; 23us; 104us; 25us; 1us; 32768us; 67us; 17us; 1us; 32768us; 104us; 18us; 0us; 16392us; 2us; 32768us; 97us; 23us; 104us; 25us; 1us; 32768us; 67us; 21us; 1us; 32768us; 104us; 22us; 0us; 16393us; 0us; 16394us; 0us; 16395us; 1us; 32768us; 74us; 26us; 1us; 32768us; 104us; 27us; 1us; 32768us; 74us; 28us; 1us; 32768us; 104us; 29us; 1us; 32768us; 78us; 30us; 1us; 32768us; 99us; 31us; 1us; 32768us; 74us; 32us; 1us; 32768us; 99us; 33us; 1us; 32768us; 74us; 34us; 1us; 32768us; 99us; 35us; 0us; 16396us; 1us; 32768us; 91us; 38us; 0us; 16397us; 3us; 16399us; 101us; 45us; 103us; 44us; 104us; 43us; 1us; 32768us; 92us; 40us; 0us; 16398us; 3us; 16399us; 101us; 45us; 103us; 44us; 104us; 43us; 0us; 16400us; 0us; 16401us; 0us; 16402us; 0us; 16403us; 0us; 16404us; 3us; 32768us; 44us; 69us; 63us; 78us; 91us; 49us; 0us; 16405us; 2us; 32768us; 44us; 69us; 63us; 78us; 1us; 32768us; 92us; 51us; 0us; 16406us; 1us; 32768us; 103us; 53us; 1us; 16532us; 104us; 313us; 1us; 32768us; 71us; 55us; 17us; 32768us; 2us; 461us; 3us; 462us; 7us; 480us; 8us; 483us; 9us; 486us; 10us; 489us; 13us; 492us; 69us; 467us; 70us; 466us; 93us; 472us; 97us; 465us; 98us; 464us; 99us; 463us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 441us; 0us; 16407us; 0us; 16408us; 0us; 16409us; 1us; 32768us; 92us; 60us; 0us; 16410us; 0us; 16411us; 0us; 16412us; 0us; 16413us; 0us; 16414us; 0us; 16415us; 0us; 16416us; 0us; 16417us; 0us; 16418us; 1us; 32768us; 104us; 70us; 18us; 32768us; 2us; 461us; 3us; 462us; 7us; 480us; 8us; 483us; 9us; 486us; 10us; 489us; 13us; 492us; 69us; 467us; 70us; 466us; 71us; 71us; 93us; 472us; 97us; 465us; 98us; 464us; 99us; 463us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 441us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 0us; 16419us; 18us; 32768us; 2us; 461us; 3us; 462us; 7us; 480us; 8us; 483us; 9us; 486us; 10us; 489us; 13us; 492us; 69us; 467us; 70us; 466us; 71us; 74us; 93us; 472us; 97us; 465us; 98us; 464us; 99us; 463us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 441us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 0us; 16420us; 1us; 16421us; 44us; 69us; 0us; 16422us; 1us; 32768us; 103us; 79us; 1us; 16532us; 104us; 313us; 1us; 32768us; 71us; 81us; 1us; 32768us; 103us; 85us; 0us; 16423us; 1us; 16424us; 63us; 78us; 0us; 16425us; 1us; 32768us; 78us; 86us; 13us; 16473us; 1us; 194us; 2us; 178us; 3us; 179us; 74us; 202us; 82us; 177us; 89us; 203us; 91us; 208us; 93us; 180us; 99us; 201us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 174us; 1us; 32768us; 81us; 88us; 13us; 32768us; 1us; 194us; 2us; 178us; 3us; 179us; 74us; 202us; 82us; 177us; 89us; 203us; 91us; 208us; 93us; 180us; 99us; 201us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 174us; 0us; 16426us; 1us; 16427us; 73us; 91us; 1us; 32768us; 103us; 85us; 0us; 16428us; 1us; 32768us; 100us; 94us; 1us; 32768us; 71us; 95us; 13us; 16473us; 1us; 194us; 2us; 178us; 3us; 179us; 74us; 202us; 82us; 177us; 89us; 203us; 91us; 208us; 93us; 180us; 99us; 201us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 174us; 1us; 32768us; 84us; 97us; 13us; 16473us; 1us; 194us; 2us; 178us; 3us; 179us; 74us; 202us; 82us; 177us; 89us; 203us; 91us; 208us; 93us; 180us; 99us; 201us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 174us; 1us; 32768us; 81us; 99us; 0us; 16429us; 1us; 32768us; 104us; 101us; 1us; 32768us; 67us; 102us; 1us; 32768us; 101us; 103us; 1us; 32768us; 78us; 104us; 13us; 32768us; 1us; 194us; 2us; 178us; 3us; 179us; 74us; 202us; 82us; 177us; 89us; 203us; 91us; 208us; 93us; 180us; 99us; 201us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 174us; 0us; 16430us; 1us; 32768us; 104us; 107us; 1us; 32768us; 78us; 108us; 13us; 32768us; 1us; 194us; 2us; 178us; 3us; 179us; 74us; 202us; 82us; 177us; 89us; 203us; 91us; 208us; 93us; 180us; 99us; 201us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 174us; 1us; 32768us; 71us; 110us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 0us; 16431us; 1us; 32768us; 102us; 113us; 1us; 16532us; 104us; 313us; 1us; 32768us; 91us; 115us; 1us; 32768us; 102us; 120us; 1us; 32768us; 92us; 117us; 0us; 16432us; 1us; 16433us; 102us; 120us; 0us; 16434us; 1us; 32768us; 78us; 121us; 13us; 32768us; 1us; 194us; 2us; 178us; 3us; 179us; 74us; 202us; 82us; 177us; 89us; 203us; 91us; 208us; 93us; 180us; 99us; 201us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 174us; 0us; 16435us; 1us; 32768us; 100us; 124us; 1us; 32768us; 71us; 125us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 5us; 32768us; 0us; 151us; 47us; 150us; 48us; 152us; 49us; 148us; 50us; 149us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 0us; 16436us; 1us; 16443us; 30us; 130us; 1us; 32768us; 91us; 131us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 1us; 32768us; 92us; 133us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 0us; 16437us; 1us; 32768us; 100us; 136us; 1us; 16532us; 104us; 313us; 1us; 32768us; 71us; 138us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 5us; 32768us; 0us; 151us; 47us; 150us; 48us; 152us; 49us; 148us; 50us; 149us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 0us; 16438us; 1us; 16443us; 30us; 143us; 1us; 32768us; 91us; 144us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 1us; 32768us; 92us; 146us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 0us; 16439us; 0us; 16440us; 0us; 16441us; 0us; 16442us; 0us; 16444us; 0us; 16445us; 1us; 32768us; 104us; 154us; 1us; 32768us; 78us; 155us; 13us; 32768us; 1us; 194us; 2us; 178us; 3us; 179us; 74us; 202us; 82us; 177us; 89us; 203us; 91us; 208us; 93us; 180us; 99us; 201us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 174us; 0us; 16446us; 1us; 32768us; 103us; 158us; 1us; 32768us; 71us; 159us; 1us; 32768us; 104us; 160us; 0us; 16447us; 1us; 32768us; 84us; 162us; 13us; 32768us; 1us; 194us; 2us; 178us; 3us; 179us; 74us; 202us; 82us; 177us; 89us; 203us; 91us; 208us; 93us; 180us; 99us; 201us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 174us; 0us; 16448us; 0us; 16449us; 2us; 16450us; 77us; 166us; 80us; 167us; 1us; 16451us; 80us; 169us; 4us; 32768us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 440us; 0us; 16452us; 4us; 32768us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 440us; 0us; 16453us; 13us; 16473us; 1us; 194us; 2us; 178us; 3us; 179us; 74us; 202us; 82us; 177us; 89us; 203us; 91us; 208us; 93us; 180us; 99us; 201us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 174us; 16us; 16456us; 1us; 194us; 2us; 178us; 3us; 179us; 74us; 202us; 77us; 16473us; 80us; 16473us; 82us; 177us; 84us; 16473us; 89us; 203us; 91us; 208us; 93us; 180us; 99us; 201us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 174us; 0us; 16454us; 2us; 16455us; 72us; 176us; 79us; 442us; 0us; 16456us; 0us; 16457us; 0us; 16458us; 0us; 16459us; 0us; 16460us; 14us; 32768us; 1us; 194us; 2us; 178us; 3us; 179us; 6us; 188us; 74us; 202us; 82us; 177us; 89us; 203us; 91us; 208us; 93us; 180us; 99us; 201us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 174us; 18us; 16473us; 1us; 194us; 2us; 178us; 3us; 179us; 4us; 182us; 5us; 185us; 73us; 191us; 74us; 202us; 75us; 198us; 77us; 195us; 82us; 177us; 89us; 203us; 91us; 208us; 93us; 180us; 99us; 201us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 174us; 13us; 32768us; 1us; 194us; 2us; 178us; 3us; 179us; 74us; 202us; 82us; 177us; 89us; 203us; 91us; 208us; 93us; 180us; 99us; 201us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 174us; 1us; 32768us; 94us; 184us; 0us; 16461us; 13us; 32768us; 1us; 194us; 2us; 178us; 3us; 179us; 74us; 202us; 82us; 177us; 89us; 203us; 91us; 208us; 93us; 180us; 99us; 201us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 174us; 1us; 32768us; 94us; 187us; 0us; 16462us; 13us; 32768us; 1us; 194us; 2us; 178us; 3us; 179us; 74us; 202us; 82us; 177us; 89us; 203us; 91us; 208us; 93us; 180us; 99us; 201us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 174us; 1us; 32768us; 94us; 190us; 0us; 16463us; 13us; 32768us; 1us; 194us; 2us; 178us; 3us; 179us; 74us; 202us; 82us; 177us; 89us; 203us; 91us; 208us; 93us; 180us; 99us; 201us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 174us; 1us; 32768us; 94us; 193us; 0us; 16464us; 0us; 16465us; 1us; 32768us; 99us; 196us; 1us; 32768us; 94us; 197us; 0us; 16466us; 13us; 32768us; 1us; 194us; 2us; 178us; 3us; 179us; 74us; 202us; 82us; 177us; 89us; 203us; 91us; 208us; 93us; 180us; 99us; 201us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 174us; 1us; 32768us; 94us; 200us; 0us; 16467us; 0us; 16468us; 0us; 16469us; 13us; 16473us; 1us; 194us; 2us; 178us; 3us; 179us; 74us; 202us; 82us; 177us; 89us; 203us; 91us; 208us; 93us; 180us; 99us; 201us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 174us; 1us; 32768us; 90us; 205us; 0us; 16470us; 1us; 32768us; 94us; 207us; 0us; 16471us; 13us; 32768us; 1us; 194us; 2us; 178us; 3us; 179us; 74us; 202us; 82us; 177us; 89us; 203us; 91us; 208us; 93us; 180us; 99us; 201us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 174us; 13us; 32768us; 1us; 194us; 2us; 178us; 3us; 179us; 74us; 202us; 82us; 177us; 89us; 203us; 91us; 208us; 93us; 180us; 99us; 201us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 174us; 1us; 32768us; 92us; 211us; 0us; 16472us; 13us; 16473us; 1us; 194us; 2us; 178us; 3us; 179us; 74us; 202us; 82us; 177us; 89us; 203us; 91us; 208us; 93us; 180us; 99us; 201us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 174us; 0us; 16474us; 42us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 45us; 232us; 46us; 220us; 62us; 225us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 1us; 32768us; 92us; 216us; 0us; 16475us; 1us; 16476us; 81us; 218us; 42us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 45us; 232us; 46us; 220us; 62us; 225us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 0us; 16477us; 17us; 32768us; 2us; 461us; 3us; 462us; 7us; 480us; 8us; 483us; 9us; 486us; 10us; 489us; 13us; 492us; 69us; 467us; 70us; 466us; 93us; 472us; 97us; 465us; 98us; 464us; 99us; 463us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 441us; 18us; 16478us; 2us; 461us; 3us; 462us; 7us; 480us; 8us; 483us; 9us; 486us; 10us; 489us; 13us; 492us; 69us; 467us; 70us; 466us; 71us; 222us; 93us; 472us; 97us; 465us; 98us; 464us; 99us; 463us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 441us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 0us; 16479us; 0us; 16480us; 1us; 32768us; 91us; 226us; 1us; 32768us; 45us; 232us; 1us; 32768us; 92us; 228us; 0us; 16481us; 0us; 16482us; 1us; 16483us; 45us; 232us; 0us; 16484us; 1us; 32768us; 44us; 233us; 1us; 32768us; 104us; 234us; 1us; 32768us; 71us; 235us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 0us; 16485us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 0us; 16487us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 0us; 16488us; 1us; 32768us; 80us; 245us; 2us; 32768us; 30us; 376us; 80us; 245us; 2us; 32768us; 30us; 383us; 80us; 245us; 2us; 32768us; 30us; 390us; 80us; 245us; 40us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 90us; 16489us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 0us; 16490us; 0us; 16491us; 41us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 26us; 347us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 81us; 16491us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 0us; 16492us; 0us; 16493us; 0us; 16494us; 0us; 16495us; 0us; 16496us; 0us; 16497us; 0us; 16498us; 0us; 16499us; 0us; 16500us; 0us; 16501us; 0us; 16502us; 1us; 32768us; 104us; 261us; 0us; 16503us; 1us; 32768us; 104us; 263us; 0us; 16504us; 1us; 32768us; 104us; 265us; 0us; 16505us; 0us; 16506us; 0us; 16507us; 1us; 32768us; 91us; 214us; 0us; 16508us; 0us; 16509us; 0us; 16510us; 0us; 16511us; 0us; 16512us; 0us; 16513us; 0us; 16514us; 0us; 16515us; 0us; 16516us; 4us; 32768us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 0us; 16517us; 4us; 32768us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 0us; 16518us; 0us; 16519us; 0us; 16520us; 0us; 16521us; 0us; 16522us; 0us; 16523us; 0us; 16524us; 0us; 16525us; 1us; 16532us; 104us; 313us; 1us; 32768us; 91us; 214us; 0us; 16526us; 1us; 16532us; 104us; 313us; 1us; 32768us; 91us; 214us; 1us; 32768us; 30us; 295us; 1us; 32768us; 91us; 296us; 4us; 16534us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 2us; 32768us; 31us; 307us; 92us; 301us; 1us; 32768us; 81us; 299us; 1us; 32768us; 92us; 300us; 0us; 16527us; 0us; 16528us; 1us; 16532us; 104us; 313us; 1us; 32768us; 84us; 304us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 1us; 32768us; 81us; 306us; 0us; 16529us; 18us; 32768us; 2us; 461us; 3us; 462us; 7us; 480us; 8us; 483us; 9us; 486us; 10us; 489us; 13us; 492us; 69us; 467us; 70us; 466us; 84us; 308us; 93us; 472us; 97us; 465us; 98us; 464us; 99us; 463us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 441us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 0us; 16530us; 18us; 32768us; 2us; 461us; 3us; 462us; 7us; 480us; 8us; 483us; 9us; 486us; 10us; 489us; 13us; 492us; 69us; 467us; 70us; 466us; 84us; 311us; 93us; 472us; 97us; 465us; 98us; 464us; 99us; 463us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 441us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 0us; 16531us; 1us; 16532us; 104us; 313us; 0us; 16533us; 4us; 16534us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 0us; 16535us; 1us; 32768us; 102us; 320us; 1us; 32768us; 91us; 214us; 0us; 16536us; 1us; 16537us; 102us; 320us; 0us; 16538us; 1us; 32768us; 91us; 323us; 17us; 32768us; 2us; 461us; 3us; 462us; 7us; 480us; 8us; 483us; 9us; 486us; 10us; 489us; 13us; 492us; 69us; 467us; 70us; 466us; 93us; 472us; 97us; 465us; 98us; 464us; 99us; 463us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 441us; 2us; 32768us; 26us; 326us; 92us; 325us; 0us; 16539us; 1us; 32768us; 84us; 327us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 1us; 32768us; 81us; 329us; 1us; 32768us; 92us; 330us; 0us; 16540us; 17us; 16541us; 2us; 461us; 3us; 462us; 7us; 480us; 8us; 483us; 9us; 486us; 10us; 489us; 13us; 492us; 69us; 467us; 70us; 466us; 93us; 472us; 97us; 465us; 98us; 464us; 99us; 463us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 441us; 0us; 16542us; 18us; 32768us; 2us; 461us; 3us; 462us; 7us; 480us; 8us; 483us; 9us; 486us; 10us; 489us; 13us; 492us; 69us; 467us; 70us; 466us; 84us; 334us; 93us; 472us; 97us; 465us; 98us; 464us; 99us; 463us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 441us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 1us; 32768us; 81us; 336us; 0us; 16543us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 1us; 32768us; 25us; 339us; 1us; 32768us; 91us; 214us; 1us; 32768us; 26us; 341us; 1us; 32768us; 91us; 214us; 0us; 16544us; 1us; 32768us; 91us; 344us; 40us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 26us; 347us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 1us; 32768us; 92us; 346us; 0us; 16545us; 1us; 32768us; 84us; 348us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 1us; 32768us; 81us; 350us; 0us; 16546us; 1us; 32768us; 84us; 352us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 1us; 32768us; 81us; 354us; 40us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 26us; 347us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 0us; 16547us; 0us; 16548us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 1us; 32768us; 25us; 359us; 1us; 32768us; 91us; 214us; 0us; 16549us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 1us; 32768us; 25us; 363us; 1us; 32768us; 91us; 214us; 0us; 16550us; 40us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 84us; 16584us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 431us; 1us; 32768us; 94us; 367us; 0us; 16551us; 1us; 32768us; 84us; 369us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 1us; 32768us; 94us; 371us; 0us; 16552us; 1us; 32768us; 89us; 373us; 40us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 90us; 16489us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 1us; 32768us; 90us; 375us; 0us; 16553us; 40us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 90us; 16489us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 1us; 32768us; 90us; 378us; 0us; 16554us; 1us; 32768us; 89us; 380us; 40us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 90us; 16489us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 1us; 32768us; 90us; 382us; 0us; 16555us; 40us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 90us; 16489us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 1us; 32768us; 90us; 385us; 0us; 16556us; 1us; 32768us; 89us; 387us; 40us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 90us; 16489us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 1us; 32768us; 90us; 389us; 0us; 16557us; 40us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 90us; 16489us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 1us; 32768us; 90us; 392us; 0us; 16558us; 1us; 32768us; 91us; 394us; 3us; 32768us; 72us; 395us; 92us; 403us; 104us; 425us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 2us; 32768us; 30us; 397us; 92us; 400us; 1us; 32768us; 104us; 425us; 1us; 32768us; 92us; 399us; 0us; 16559us; 0us; 16560us; 1us; 32768us; 92us; 402us; 0us; 16561us; 0us; 16562us; 1us; 32768us; 91us; 405us; 1us; 32768us; 104us; 425us; 1us; 32768us; 92us; 407us; 0us; 16563us; 1us; 32768us; 91us; 409us; 1us; 32768us; 104us; 418us; 1us; 32768us; 26us; 411us; 1us; 32768us; 84us; 412us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 1us; 32768us; 81us; 414us; 1us; 32768us; 92us; 415us; 0us; 16564us; 1us; 16565us; 104us; 418us; 0us; 16566us; 1us; 32768us; 84us; 419us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 1us; 32768us; 81us; 421us; 0us; 16567us; 1us; 16568us; 80us; 423us; 1us; 32768us; 104us; 425us; 0us; 16569us; 1us; 32768us; 71us; 426us; 39us; 16486us; 2us; 283us; 3us; 284us; 7us; 372us; 8us; 379us; 9us; 386us; 12us; 408us; 13us; 393us; 14us; 404us; 21us; 337us; 22us; 357us; 23us; 343us; 24us; 361us; 27us; 282us; 28us; 322us; 29us; 317us; 32us; 292us; 33us; 277us; 34us; 278us; 35us; 280us; 36us; 271us; 37us; 272us; 38us; 273us; 39us; 274us; 40us; 275us; 41us; 276us; 42us; 268us; 43us; 289us; 85us; 264us; 87us; 262us; 88us; 260us; 91us; 214us; 93us; 365us; 97us; 287us; 98us; 286us; 99us; 285us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 0us; 16570us; 0us; 16571us; 0us; 16572us; 1us; 16573us; 79us; 435us; 3us; 16573us; 79us; 435us; 84us; 16584us; 104us; 446us; 0us; 16574us; 0us; 16575us; 0us; 16576us; 4us; 32768us; 101us; 434us; 102us; 433us; 103us; 432us; 104us; 430us; 0us; 16577us; 0us; 16578us; 0us; 16579us; 0us; 16580us; 1us; 32768us; 79us; 442us; 2us; 16599us; 0us; 469us; 79us; 442us; 4us; 32768us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 440us; 0us; 16581us; 0us; 16582us; 0us; 16583us; 1us; 16584us; 104us; 446us; 0us; 16585us; 1us; 16586us; 72us; 449us; 0us; 16587us; 18us; 32768us; 2us; 461us; 3us; 462us; 7us; 480us; 8us; 483us; 9us; 486us; 10us; 489us; 13us; 492us; 69us; 467us; 70us; 466us; 93us; 472us; 94us; 474us; 97us; 465us; 98us; 464us; 99us; 463us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 441us; 18us; 32768us; 2us; 461us; 3us; 462us; 7us; 480us; 8us; 483us; 9us; 486us; 10us; 489us; 13us; 492us; 69us; 467us; 70us; 466us; 92us; 482us; 93us; 472us; 97us; 465us; 98us; 464us; 99us; 463us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 441us; 18us; 32768us; 2us; 461us; 3us; 462us; 7us; 480us; 8us; 483us; 9us; 486us; 10us; 489us; 13us; 492us; 69us; 467us; 70us; 466us; 92us; 485us; 93us; 472us; 97us; 465us; 98us; 464us; 99us; 463us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 441us; 18us; 32768us; 2us; 461us; 3us; 462us; 7us; 480us; 8us; 483us; 9us; 486us; 10us; 489us; 13us; 492us; 69us; 467us; 70us; 466us; 92us; 488us; 93us; 472us; 97us; 465us; 98us; 464us; 99us; 463us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 441us; 18us; 32768us; 2us; 461us; 3us; 462us; 7us; 480us; 8us; 483us; 9us; 486us; 10us; 489us; 13us; 492us; 69us; 467us; 70us; 466us; 92us; 491us; 93us; 472us; 97us; 465us; 98us; 464us; 99us; 463us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 441us; 0us; 16588us; 2us; 32768us; 71us; 457us; 72us; 459us; 17us; 32768us; 2us; 461us; 3us; 462us; 7us; 480us; 8us; 483us; 9us; 486us; 10us; 489us; 13us; 492us; 69us; 467us; 70us; 466us; 93us; 472us; 97us; 465us; 98us; 464us; 99us; 463us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 441us; 1us; 16589us; 104us; 456us; 0us; 16590us; 0us; 16591us; 0us; 16592us; 0us; 16593us; 0us; 16594us; 0us; 16595us; 0us; 16596us; 0us; 16597us; 17us; 32768us; 2us; 461us; 3us; 462us; 7us; 480us; 8us; 483us; 9us; 486us; 10us; 489us; 13us; 492us; 69us; 467us; 70us; 466us; 93us; 472us; 97us; 465us; 98us; 464us; 99us; 463us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 441us; 0us; 16598us; 17us; 32768us; 2us; 461us; 3us; 462us; 7us; 480us; 8us; 483us; 9us; 486us; 10us; 489us; 13us; 492us; 69us; 467us; 70us; 466us; 93us; 472us; 97us; 465us; 98us; 464us; 99us; 463us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 441us; 0us; 16600us; 0us; 16601us; 4us; 32768us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 440us; 17us; 32768us; 2us; 461us; 3us; 462us; 7us; 480us; 8us; 483us; 9us; 486us; 10us; 489us; 13us; 492us; 69us; 467us; 70us; 466us; 93us; 472us; 97us; 465us; 98us; 464us; 99us; 463us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 441us; 0us; 16602us; 0us; 16603us; 0us; 16604us; 0us; 16605us; 0us; 16606us; 0us; 16607us; 1us; 32768us; 91us; 481us; 17us; 32768us; 2us; 461us; 3us; 462us; 7us; 480us; 8us; 483us; 9us; 486us; 10us; 489us; 13us; 492us; 69us; 467us; 70us; 466us; 93us; 472us; 97us; 465us; 98us; 464us; 99us; 463us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 441us; 0us; 16608us; 1us; 32768us; 91us; 484us; 17us; 32768us; 2us; 461us; 3us; 462us; 7us; 480us; 8us; 483us; 9us; 486us; 10us; 489us; 13us; 492us; 69us; 467us; 70us; 466us; 93us; 472us; 97us; 465us; 98us; 464us; 99us; 463us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 441us; 0us; 16609us; 1us; 32768us; 91us; 487us; 17us; 32768us; 2us; 461us; 3us; 462us; 7us; 480us; 8us; 483us; 9us; 486us; 10us; 489us; 13us; 492us; 69us; 467us; 70us; 466us; 93us; 472us; 97us; 465us; 98us; 464us; 99us; 463us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 441us; 0us; 16610us; 1us; 32768us; 91us; 490us; 17us; 32768us; 2us; 461us; 3us; 462us; 7us; 480us; 8us; 483us; 9us; 486us; 10us; 489us; 13us; 492us; 69us; 467us; 70us; 466us; 93us; 472us; 97us; 465us; 98us; 464us; 99us; 463us; 101us; 439us; 102us; 438us; 103us; 437us; 104us; 441us; 0us; 16611us; 1us; 32768us; 91us; 493us; 1us; 32768us; 104us; 456us; 1us; 32768us; 92us; 495us; 0us; 16612us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 2us; 3us; 16us; 19us; 21us; 22us; 24us; 25us; 27us; 28us; 41us; 42us; 44us; 84us; 85us; 89us; 91us; 93us; 94us; 97us; 99us; 101us; 102us; 103us; 104us; 106us; 108us; 110us; 112us; 114us; 116us; 118us; 120us; 122us; 124us; 125us; 127us; 128us; 132us; 134us; 135us; 139us; 140us; 141us; 142us; 143us; 144us; 148us; 149us; 152us; 154us; 155us; 157us; 159us; 161us; 179us; 180us; 181us; 182us; 184us; 185us; 186us; 187us; 188us; 189us; 190us; 191us; 192us; 193us; 195us; 214us; 254us; 255us; 274us; 314us; 315us; 317us; 318us; 320us; 322us; 324us; 326us; 327us; 329us; 330us; 332us; 346us; 348us; 362us; 363us; 365us; 367us; 368us; 370us; 372us; 386us; 388us; 402us; 404us; 405us; 407us; 409us; 411us; 413us; 427us; 428us; 430us; 432us; 446us; 448us; 488us; 489us; 491us; 493us; 495us; 497us; 499us; 500us; 502us; 503us; 505us; 519us; 520us; 522us; 524us; 564us; 570us; 610us; 611us; 613us; 615us; 655us; 657us; 697us; 698us; 700us; 702us; 704us; 744us; 750us; 790us; 791us; 793us; 795us; 835us; 837us; 877us; 878us; 879us; 880us; 881us; 882us; 883us; 885us; 887us; 901us; 902us; 904us; 906us; 908us; 909us; 911us; 925us; 926us; 927us; 930us; 932us; 937us; 938us; 943us; 944us; 958us; 975us; 976us; 979us; 980us; 981us; 982us; 983us; 984us; 999us; 1018us; 1032us; 1034us; 1035us; 1049us; 1051us; 1052us; 1066us; 1068us; 1069us; 1083us; 1085us; 1086us; 1087us; 1089us; 1091us; 1092us; 1106us; 1108us; 1109us; 1110us; 1111us; 1125us; 1127us; 1128us; 1130us; 1131us; 1145us; 1159us; 1161us; 1162us; 1176us; 1177us; 1220us; 1222us; 1223us; 1225us; 1268us; 1269us; 1287us; 1306us; 1346us; 1347us; 1348us; 1350us; 1352us; 1354us; 1355us; 1356us; 1358us; 1359us; 1361us; 1363us; 1365us; 1405us; 1406us; 1446us; 1447us; 1487us; 1488us; 1490us; 1493us; 1496us; 1499us; 1540us; 1541us; 1542us; 1584us; 1585us; 1586us; 1587us; 1588us; 1589us; 1590us; 1591us; 1592us; 1593us; 1594us; 1595us; 1597us; 1598us; 1600us; 1601us; 1603us; 1604us; 1605us; 1606us; 1608us; 1609us; 1610us; 1611us; 1612us; 1613us; 1614us; 1615us; 1616us; 1617us; 1622us; 1623us; 1628us; 1629us; 1630us; 1631us; 1632us; 1633us; 1634us; 1635us; 1636us; 1638us; 1640us; 1641us; 1643us; 1645us; 1647us; 1649us; 1654us; 1657us; 1659us; 1661us; 1662us; 1663us; 1665us; 1667us; 1707us; 1709us; 1710us; 1729us; 1769us; 1770us; 1789us; 1829us; 1830us; 1832us; 1833us; 1838us; 1839us; 1841us; 1843us; 1844us; 1846us; 1847us; 1849us; 1867us; 1870us; 1871us; 1873us; 1913us; 1915us; 1917us; 1918us; 1936us; 1937us; 1956us; 1996us; 1998us; 1999us; 2039us; 2041us; 2043us; 2045us; 2047us; 2048us; 2050us; 2091us; 2093us; 2094us; 2096us; 2136us; 2138us; 2139us; 2141us; 2181us; 2183us; 2224us; 2225us; 2226us; 2266us; 2268us; 2270us; 2271us; 2311us; 2313us; 2315us; 2316us; 2357us; 2359us; 2360us; 2362us; 2402us; 2404us; 2405us; 2407us; 2448us; 2450us; 2451us; 2492us; 2494us; 2495us; 2497us; 2538us; 2540us; 2541us; 2582us; 2584us; 2585us; 2587us; 2628us; 2630us; 2631us; 2672us; 2674us; 2675us; 2677us; 2681us; 2721us; 2724us; 2726us; 2728us; 2729us; 2730us; 2732us; 2733us; 2734us; 2736us; 2738us; 2740us; 2741us; 2743us; 2745us; 2747us; 2749us; 2789us; 2791us; 2793us; 2794us; 2796us; 2797us; 2799us; 2839us; 2841us; 2842us; 2844us; 2846us; 2847us; 2849us; 2889us; 2890us; 2891us; 2892us; 2894us; 2898us; 2899us; 2900us; 2901us; 2906us; 2907us; 2908us; 2909us; 2910us; 2912us; 2915us; 2920us; 2921us; 2922us; 2923us; 2925us; 2926us; 2928us; 2929us; 2948us; 2967us; 2986us; 3005us; 3024us; 3025us; 3028us; 3046us; 3048us; 3049us; 3050us; 3051us; 3052us; 3053us; 3054us; 3055us; 3056us; 3074us; 3075us; 3093us; 3094us; 3095us; 3100us; 3118us; 3119us; 3120us; 3121us; 3122us; 3123us; 3124us; 3126us; 3144us; 3145us; 3147us; 3165us; 3166us; 3168us; 3186us; 3187us; 3189us; 3207us; 3208us; 3210us; 3212us; 3214us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 4us; 4us; 0us; 2us; 0us; 2us; 3us; 4us; 5us; 1us; 1us; 11us; 2us; 3us; 0us; 2us; 1us; 1us; 1us; 1us; 2us; 4us; 5us; 1us; 2us; 4us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 4us; 5us; 1us; 2us; 5us; 1us; 2us; 5us; 1us; 3us; 7us; 6us; 6us; 6us; 1us; 2us; 3us; 6us; 10us; 7us; 11us; 1us; 1us; 1us; 1us; 1us; 1us; 4us; 4us; 3us; 1us; 1us; 2us; 3us; 4us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 5us; 5us; 4us; 5us; 1us; 5us; 5us; 1us; 1us; 3us; 4us; 4us; 0us; 2us; 3us; 1us; 3us; 2us; 4us; 1us; 4us; 1us; 1us; 2us; 5us; 0us; 2us; 2us; 0us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 9us; 7us; 5us; 3us; 4us; 0us; 2us; 0us; 2us; 3us; 1us; 2us; 4us; 8us; 1us; 2us; 4us; 6us; 4us; 4us; 5us; 4us; 4us; 4us; 3us; 5us; 4us; 6us; 4us; 6us; 4us; 6us; 7us; 5us; 4us; 3us; 4us; 8us; 1us; 2us; 4us; 1us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 1us; 1us; 3us; 1us; 2us; 0us; 2us; 1us; 2us; 2us; 3us; 2us; 4us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 3us; 1us; 4us; 1us; 1us; 1us; 1us; 1us; 4us; 4us; 4us; 4us; 4us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 6us; 6us; 7us; 8us; 9us; 10us; 10us; 11us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 13us; 14us; 14us; 15us; 16us; 16us; 17us; 18us; 18us; 19us; 20us; 21us; 22us; 23us; 23us; 24us; 25us; 25us; 26us; 26us; 27us; 27us; 27us; 27us; 28us; 28us; 29us; 30us; 31us; 31us; 32us; 32us; 32us; 32us; 33us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 34us; 35us; 35us; 36us; 37us; 37us; 38us; 38us; 38us; 38us; 38us; 39us; 39us; 40us; 41us; 41us; 41us; 42us; 42us; 43us; 43us; 43us; 43us; 43us; 43us; 43us; 43us; 43us; 43us; 43us; 43us; 43us; 43us; 43us; 43us; 43us; 43us; 43us; 43us; 43us; 43us; 43us; 43us; 43us; 43us; 43us; 43us; 43us; 43us; 43us; 43us; 43us; 43us; 43us; 44us; 45us; 45us; 46us; 47us; 47us; 48us; 48us; 49us; 49us; 50us; 51us; 51us; 52us; 52us; 53us; 53us; 54us; 55us; 56us; 57us; 57us; 57us; 58us; 59us; 60us; 60us; 61us; 61us; 62us; 62us; 63us; 63us; 64us; 64us; 64us; 64us; 65us; 66us; 67us; 67us; 68us; 69us; 69us; 70us; 71us; 72us; 73us; 73us; 73us; 73us; 73us; 74us; 74us; 74us; 74us; 75us; 75us; 76us; 76us; 77us; 77us; 77us; 78us; 78us; 78us; 79us; 79us; 79us; 79us; 79us; 79us; 79us; 79us; 79us; 79us; 79us; 79us; 79us; 79us; 79us; 79us; 80us; 81us; 82us; 83us; 84us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 65535us; 65535us; 16385us; 65535us; 16386us; 65535us; 16388us; 65535us; 16390us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 16392us; 65535us; 65535us; 65535us; 16393us; 16394us; 16395us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16396us; 65535us; 16397us; 65535us; 65535us; 16398us; 65535us; 16400us; 16401us; 16402us; 16403us; 16404us; 65535us; 16405us; 65535us; 65535us; 16406us; 65535us; 65535us; 65535us; 65535us; 16407us; 16408us; 16409us; 65535us; 16410us; 16411us; 16412us; 16413us; 16414us; 16415us; 16416us; 16417us; 16418us; 65535us; 65535us; 65535us; 16419us; 65535us; 65535us; 16420us; 65535us; 16422us; 65535us; 65535us; 65535us; 65535us; 16423us; 65535us; 16425us; 65535us; 65535us; 65535us; 65535us; 16426us; 65535us; 65535us; 16428us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16429us; 65535us; 65535us; 65535us; 65535us; 65535us; 16430us; 65535us; 65535us; 65535us; 65535us; 65535us; 16431us; 65535us; 65535us; 65535us; 65535us; 65535us; 16432us; 65535us; 16434us; 65535us; 65535us; 16435us; 65535us; 65535us; 65535us; 65535us; 65535us; 16436us; 65535us; 65535us; 65535us; 65535us; 65535us; 16437us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16438us; 65535us; 65535us; 65535us; 65535us; 65535us; 16439us; 16440us; 16441us; 16442us; 16444us; 16445us; 65535us; 65535us; 65535us; 16446us; 65535us; 65535us; 65535us; 16447us; 65535us; 65535us; 16448us; 16449us; 65535us; 65535us; 65535us; 16452us; 65535us; 16453us; 65535us; 65535us; 16454us; 65535us; 16456us; 16457us; 16458us; 16459us; 16460us; 65535us; 65535us; 65535us; 65535us; 16461us; 65535us; 65535us; 16462us; 65535us; 65535us; 16463us; 65535us; 65535us; 16464us; 16465us; 65535us; 65535us; 16466us; 65535us; 65535us; 16467us; 16468us; 16469us; 65535us; 65535us; 16470us; 65535us; 16471us; 65535us; 65535us; 65535us; 16472us; 65535us; 16474us; 65535us; 65535us; 16475us; 65535us; 65535us; 16477us; 65535us; 65535us; 65535us; 16479us; 16480us; 65535us; 65535us; 65535us; 16481us; 16482us; 65535us; 16484us; 65535us; 65535us; 65535us; 65535us; 16485us; 65535us; 16487us; 65535us; 16488us; 65535us; 65535us; 65535us; 65535us; 65535us; 16490us; 16491us; 65535us; 16492us; 16493us; 16494us; 16495us; 16496us; 16497us; 16498us; 16499us; 16500us; 16501us; 16502us; 65535us; 16503us; 65535us; 16504us; 65535us; 16505us; 16506us; 16507us; 65535us; 16508us; 16509us; 16510us; 16511us; 16512us; 16513us; 16514us; 16515us; 16516us; 65535us; 16517us; 65535us; 16518us; 16519us; 16520us; 16521us; 16522us; 16523us; 16524us; 16525us; 65535us; 65535us; 16526us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16527us; 16528us; 65535us; 65535us; 65535us; 65535us; 16529us; 65535us; 65535us; 16530us; 65535us; 65535us; 16531us; 65535us; 16533us; 65535us; 16535us; 65535us; 65535us; 16536us; 65535us; 16538us; 65535us; 65535us; 65535us; 16539us; 65535us; 65535us; 65535us; 65535us; 16540us; 65535us; 16542us; 65535us; 65535us; 65535us; 16543us; 65535us; 65535us; 65535us; 65535us; 65535us; 16544us; 65535us; 65535us; 65535us; 16545us; 65535us; 65535us; 65535us; 16546us; 65535us; 65535us; 65535us; 65535us; 16547us; 16548us; 65535us; 65535us; 65535us; 16549us; 65535us; 65535us; 65535us; 16550us; 65535us; 65535us; 16551us; 65535us; 65535us; 65535us; 16552us; 65535us; 65535us; 65535us; 16553us; 65535us; 65535us; 16554us; 65535us; 65535us; 65535us; 16555us; 65535us; 65535us; 16556us; 65535us; 65535us; 65535us; 16557us; 65535us; 65535us; 16558us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16559us; 16560us; 65535us; 16561us; 16562us; 65535us; 65535us; 65535us; 16563us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16564us; 65535us; 16566us; 65535us; 65535us; 65535us; 16567us; 65535us; 65535us; 16569us; 65535us; 65535us; 16570us; 16571us; 16572us; 65535us; 65535us; 16574us; 16575us; 16576us; 65535us; 16577us; 16578us; 16579us; 16580us; 65535us; 65535us; 65535us; 16581us; 16582us; 16583us; 65535us; 16585us; 65535us; 16587us; 65535us; 65535us; 65535us; 65535us; 65535us; 16588us; 65535us; 65535us; 65535us; 16590us; 16591us; 16592us; 16593us; 16594us; 16595us; 16596us; 16597us; 65535us; 16598us; 65535us; 16600us; 16601us; 65535us; 65535us; 16602us; 16603us; 16604us; 16605us; 16606us; 16607us; 65535us; 65535us; 16608us; 65535us; 65535us; 16609us; 65535us; 65535us; 16610us; 65535us; 65535us; 16611us; 65535us; 65535us; 65535us; 16612us; |]
let _fsyacc_reductions ()  =    [| 
# 1013 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  Unit  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startunit));
# 1022 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_main in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 90 ".\Parser.fsy"
                                                             UMain(_1, _2, _3) 
                   )
# 90 ".\Parser.fsy"
                 :  Unit ));
# 1035 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_export in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 ".\Parser.fsy"
                                                            UExport(_1, _2, _3) 
                   )
# 91 ".\Parser.fsy"
                 :  Unit ));
# 1048 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 ".\Parser.fsy"
                                          [] 
                   )
# 93 ".\Parser.fsy"
                 : 'gentype_import_list));
# 1058 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import in
            let _2 = parseState.GetInput(2) :?> 'gentype_import_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 94 ".\Parser.fsy"
                                                  _1 :: _2 
                   )
# 94 ".\Parser.fsy"
                 : 'gentype_import_list));
# 1070 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 ".\Parser.fsy"
                                         [] 
                   )
# 96 ".\Parser.fsy"
                 : 'gentype_decl_list));
# 1080 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_declaration in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 ".\Parser.fsy"
                                                   _1 :: _2 
                   )
# 97 ".\Parser.fsy"
                 : 'gentype_decl_list));
# 1092 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 ".\Parser.fsy"
                                                      _3 
                   )
# 99 ".\Parser.fsy"
                 : 'gentype_main));
# 1103 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_import_path in
            let _4 = parseState.GetInput(4) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 ".\Parser.fsy"
                                                                    { Explicit = []; Path = _2; Alias = _4 } 
                   )
# 101 ".\Parser.fsy"
                 : 'gentype_import));
# 1115 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_brace_names in
            let _3 = parseState.GetInput(3) :?> 'gentype_import_path in
            let _5 = parseState.GetInput(5) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 ".\Parser.fsy"
                                                                          { Explicit = _2; Path = _3; Alias = _5 } 
                   )
# 102 ".\Parser.fsy"
                 : 'gentype_import));
# 1128 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 ".\Parser.fsy"
                                            IPLocal (_1) 
                   )
# 104 ".\Parser.fsy"
                 : 'gentype_import_path));
# 1139 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_remote in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 ".\Parser.fsy"
                                   IPRemote (_1) 
                   )
# 105 ".\Parser.fsy"
                 : 'gentype_import_path));
# 1150 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> Name in
            let _7 = parseState.GetInput(7) :?> IntegerLiteral in
            let _9 = parseState.GetInput(9) :?> IntegerLiteral in
            let _11 = parseState.GetInput(11) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 ".\Parser.fsy"
                          { Org = _1; Project = _3; Unit = _5; Major = _7; Minor = _9; Patch = _11 } 
                   )
# 108 ".\Parser.fsy"
                 : 'gentype_remote));
# 1166 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_brace_names in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 ".\Parser.fsy"
                                                   _2 
                   )
# 110 ".\Parser.fsy"
                 : 'gentype_export));
# 1177 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_name_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 ".\Parser.fsy"
                                                               _2 
                   )
# 112 ".\Parser.fsy"
                 : 'gentype_brace_names));
# 1188 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 ".\Parser.fsy"
                                       [] 
                   )
# 114 ".\Parser.fsy"
                 : 'gentype_name_list));
# 1198 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_name in
            let _2 = parseState.GetInput(2) :?> 'gentype_name_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 ".\Parser.fsy"
                                            _1 :: _2 
                   )
# 115 ".\Parser.fsy"
                 : 'gentype_name_list));
# 1210 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 ".\Parser.fsy"
                                          _1 
                   )
# 117 ".\Parser.fsy"
                 : 'gentype_name));
# 1221 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 ".\Parser.fsy"
                                         _1 
                   )
# 118 ".\Parser.fsy"
                 : 'gentype_name));
# 1232 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 ".\Parser.fsy"
                                          _1 
                   )
# 119 ".\Parser.fsy"
                 : 'gentype_name));
# 1243 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 ".\Parser.fsy"
                                                        DFunc (_1) 
                   )
# 123 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1254 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 ".\Parser.fsy"
                                                      DRecFuncs ([_2]) 
                   )
# 124 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1265 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_function_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 ".\Parser.fsy"
                                                                      DRecFuncs (_3) 
                   )
# 125 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1276 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 ".\Parser.fsy"
                                                                            DPattern (_2, _3, _5) 
                   )
# 126 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1289 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 ".\Parser.fsy"
                                               DType (_1) 
                   )
# 127 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1300 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 ".\Parser.fsy"
                                                      DRecTypes ([_2]) 
                   )
# 128 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1311 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_datatype_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 ".\Parser.fsy"
                                                                      DRecTypes (_3) 
                   )
# 129 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1322 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_overload in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 ".\Parser.fsy"
                                               _1 
                   )
# 130 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1333 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_instance in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 ".\Parser.fsy"
                                               _1 
                   )
# 131 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1344 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rule in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 ".\Parser.fsy"
                                            _1 
                   )
# 132 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1355 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_effect in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 ".\Parser.fsy"
                                             DEffect (_1) 
                   )
# 133 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1366 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_test in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 ".\Parser.fsy"
                                            DTest (_1) 
                   )
# 134 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1377 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_law in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 ".\Parser.fsy"
                                           DLaw (_1) 
                   )
# 135 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1388 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_check in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 ".\Parser.fsy"
                                             DCheck (_1) 
                   )
# 136 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1399 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tag in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 ".\Parser.fsy"
                                           _1 
                   )
# 137 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1410 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 ".\Parser.fsy"
                          { Name = _2; Body = _4 } 
                   )
# 140 ".\Parser.fsy"
                 : 'gentype_function));
# 1422 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_no_dot_pattern_expr_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 ".\Parser.fsy"
                           { Name = _2; Body = [EStatementBlock([SLet { Matcher = _3; Body = [] }; SExpression(_5)])] } 
                   )
# 142 ".\Parser.fsy"
                 : 'gentype_function));
# 1435 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 ".\Parser.fsy"
                                                   [_1] 
                   )
# 144 ".\Parser.fsy"
                 : 'gentype_function_list));
# 1446 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            let _2 = parseState.GetInput(2) :?> 'gentype_function_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 ".\Parser.fsy"
                                                     _1 :: _2 
                   )
# 145 ".\Parser.fsy"
                 : 'gentype_function_list));
# 1458 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_constructor_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 ".\Parser.fsy"
                                                                                   { Name = _2; Params = _3; Constructors = _5 } 
                   )
# 147 ".\Parser.fsy"
                 : 'gentype_datatype));
# 1471 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 ".\Parser.fsy"
                                                   [_1] 
                   )
# 149 ".\Parser.fsy"
                 : 'gentype_datatype_list));
# 1482 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            let _2 = parseState.GetInput(2) :?> 'gentype_datatype_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 ".\Parser.fsy"
                                                     _1 :: _2 
                   )
# 150 ".\Parser.fsy"
                 : 'gentype_datatype_list));
# 1494 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_any_type_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 ".\Parser.fsy"
                                                                                     { Name = _1; Components = _3; Result = _5 } 
                   )
# 152 ".\Parser.fsy"
                 : 'gentype_constructor));
# 1507 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constructor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 ".\Parser.fsy"
                                                           [_1] 
                   )
# 154 ".\Parser.fsy"
                 : 'gentype_constructor_list));
# 1518 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constructor in
            let _3 = parseState.GetInput(3) :?> 'gentype_constructor_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 ".\Parser.fsy"
                                                               _1 :: _3 
                   )
# 155 ".\Parser.fsy"
                 : 'gentype_constructor_list));
# 1530 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_any_type_list in
            let _6 = parseState.GetInput(6) :?> 'gentype_any_type_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 ".\Parser.fsy"
                                                                                                 DPropagationRule (_2, _4, _6) 
                   )
# 157 ".\Parser.fsy"
                 : 'gentype_rule));
# 1543 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> Name in
            let _6 = parseState.GetInput(6) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 ".\Parser.fsy"
                                                                                       DOverload (_2, _4, _6, []) 
                   )
# 159 ".\Parser.fsy"
                 : 'gentype_overload));
# 1556 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_qual_type in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 ".\Parser.fsy"
                                                                                         DInstance(_2, _4, _6) 
                   )
# 161 ".\Parser.fsy"
                 : 'gentype_instance));
# 1569 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_handler_template_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 ".\Parser.fsy"
                          { Name = _2; Params = _3; Handlers = _5 } 
                   )
# 164 ".\Parser.fsy"
                 : 'gentype_effect));
# 1582 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handler_template in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 ".\Parser.fsy"
                                                                     [_1] 
                   )
# 166 ".\Parser.fsy"
                 : 'gentype_handler_template_list));
# 1593 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handler_template in
            let _2 = parseState.GetInput(2) :?> 'gentype_handler_template_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 ".\Parser.fsy"
                                                                       _1 :: _2 
                   )
# 167 ".\Parser.fsy"
                 : 'gentype_handler_template_list));
# 1605 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_qual_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 ".\Parser.fsy"
                                                                        { Name = _1; Type = _3 } 
                   )
# 169 ".\Parser.fsy"
                 : 'gentype_handler_template));
# 1617 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_test_all in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 ".\Parser.fsy"
                         { Name = _2; Left = _4; Right = _6; Kind = _5 } 
                   )
# 172 ".\Parser.fsy"
                 : 'gentype_test));
# 1631 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_test_is in
            let _8 = parseState.GetInput(8) :?> 'gentype_simple_expr in
            let _10 = parseState.GetInput(10) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 ".\Parser.fsy"
                          { Name = _2; Left = _4; Right = _10; Kind = _5 _8 } 
                   )
# 174 ".\Parser.fsy"
                 : 'gentype_test));
# 1646 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_test_all in
            let _7 = parseState.GetInput(7) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 ".\Parser.fsy"
                         { Name = _2; Exhaustive = false; Params = _3; Left = _5; Right = _7; Kind = _6 } 
                   )
# 177 ".\Parser.fsy"
                 : 'gentype_law));
# 1661 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_test_is in
            let _9 = parseState.GetInput(9) :?> 'gentype_simple_expr in
            let _11 = parseState.GetInput(11) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 ".\Parser.fsy"
                         { Name = _2; Exhaustive = false; Params = _3; Left = _5; Right = _11; Kind = _6 _9 } 
                   )
# 179 ".\Parser.fsy"
                 : 'gentype_law));
# 1677 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 ".\Parser.fsy"
                                            TKSatisfies 
                   )
# 181 ".\Parser.fsy"
                 : 'gentype_test_all));
# 1687 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 ".\Parser.fsy"
                                      TKViolates 
                   )
# 182 ".\Parser.fsy"
                 : 'gentype_test_all));
# 1697 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 ".\Parser.fsy"
                                       TKIsRoughly 
                   )
# 183 ".\Parser.fsy"
                 : 'gentype_test_all));
# 1707 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_test_is in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 ".\Parser.fsy"
                                     _1 [] 
                   )
# 184 ".\Parser.fsy"
                 : 'gentype_test_all));
# 1718 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 ".\Parser.fsy"
                                     TKIs 
                   )
# 186 ".\Parser.fsy"
                 : 'gentype_test_is));
# 1728 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 ".\Parser.fsy"
                                  TKIsNot 
                   )
# 187 ".\Parser.fsy"
                 : 'gentype_test_is));
# 1738 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_qual_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 ".\Parser.fsy"
                                                                { Name = _2; Matcher = _4 } 
                   )
# 189 ".\Parser.fsy"
                 : 'gentype_check));
# 1750 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 ".\Parser.fsy"
                                                            DTag (_2, _4) 
                   )
# 191 ".\Parser.fsy"
                 : 'gentype_tag));
# 1762 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_predicate_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 ".\Parser.fsy"
                                                                    sQualType _1 _3 
                   )
# 195 ".\Parser.fsy"
                 : 'gentype_qual_type));
# 1774 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 ".\Parser.fsy"
                                             sQualType SEnd _1 
                   )
# 196 ".\Parser.fsy"
                 : 'gentype_qual_type));
# 1785 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_predicate in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 ".\Parser.fsy"
                                                         ind _1 SEnd 
                   )
# 198 ".\Parser.fsy"
                 : 'gentype_predicate_list));
# 1796 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_predicate in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 ".\Parser.fsy"
                                                    dot _1 SEnd 
                   )
# 199 ".\Parser.fsy"
                 : 'gentype_predicate_list));
# 1807 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_predicate in
            let _3 = parseState.GetInput(3) :?> 'gentype_predicate_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 ".\Parser.fsy"
                                                                ind _1 _3 
                   )
# 200 ".\Parser.fsy"
                 : 'gentype_predicate_list));
# 1819 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_predicate in
            let _4 = parseState.GetInput(4) :?> 'gentype_predicate_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 ".\Parser.fsy"
                                                                   dot _1 _4 
                   )
# 201 ".\Parser.fsy"
                 : 'gentype_predicate_list));
# 1831 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_identifier in
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 ".\Parser.fsy"
                                                                   appendTypeArgs (STCon _1) (List.rev _2) 
                   )
# 203 ".\Parser.fsy"
                 : 'gentype_predicate));
# 1843 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 ".\Parser.fsy"
                                                    STVar _1 
                   )
# 205 ".\Parser.fsy"
                 : 'gentype_any_type));
# 1854 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_identifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 ".\Parser.fsy"
                                                  STCon _1 
                   )
# 206 ".\Parser.fsy"
                 : 'gentype_any_type));
# 1865 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 ".\Parser.fsy"
                                                     STDotVar _1 
                   )
# 207 ".\Parser.fsy"
                 : 'gentype_any_type));
# 1876 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 ".\Parser.fsy"
                                            STPrim PrFunction 
                   )
# 208 ".\Parser.fsy"
                 : 'gentype_any_type));
# 1886 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 ".\Parser.fsy"
                                          STTrue 
                   )
# 209 ".\Parser.fsy"
                 : 'gentype_any_type));
# 1896 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 ".\Parser.fsy"
                                          STFalse 
                   )
# 210 ".\Parser.fsy"
                 : 'gentype_any_type));
# 1906 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type in
            let _4 = parseState.GetInput(4) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 ".\Parser.fsy"
                                                                  STAnd (_2, _4) 
                   )
# 211 ".\Parser.fsy"
                 : 'gentype_any_type));
# 1918 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type in
            let _4 = parseState.GetInput(4) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 ".\Parser.fsy"
                                                                  STOr (_2, _4) 
                   )
# 212 ".\Parser.fsy"
                 : 'gentype_any_type));
# 1930 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 ".\Parser.fsy"
                                                            STNot (_3) 
                   )
# 213 ".\Parser.fsy"
                 : 'gentype_any_type));
# 1941 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type in
            let _4 = parseState.GetInput(4) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 ".\Parser.fsy"
                                                                  appendTypeArgs STRowExtend [_4; _2] 
                   )
# 214 ".\Parser.fsy"
                 : 'gentype_any_type));
# 1953 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 ".\Parser.fsy"
                                         STAbelianOne 
                   )
# 215 ".\Parser.fsy"
                 : 'gentype_any_type));
# 1963 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type in
            let _4 = parseState.GetInput(4) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 ".\Parser.fsy"
                                                                  STExponent (_2, _4) 
                   )
# 216 ".\Parser.fsy"
                 : 'gentype_any_type));
# 1975 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type in
            let _4 = parseState.GetInput(4) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 ".\Parser.fsy"
                                                                   STMultiply (_2, _4) 
                   )
# 217 ".\Parser.fsy"
                 : 'gentype_any_type));
# 1987 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 ".\Parser.fsy"
                                            STFixedConst _1 
                   )
# 218 ".\Parser.fsy"
                 : 'gentype_any_type));
# 1998 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 ".\Parser.fsy"
                                         STRowEmpty 
                   )
# 219 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2008 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 ".\Parser.fsy"
                                                               STSeq (dotVarToDotSeq (ofList (List.rev _2)), KValue) 
                   )
# 220 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2019 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_any_type_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 221 ".\Parser.fsy"
                                                                   appendTypeArgs _2 (List.rev _3) 
                   )
# 221 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2031 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 ".\Parser.fsy"
                           appendTypeArgs (STPrim PrValue) [_3; _2] 
                   )
# 223 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2043 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 225 ".\Parser.fsy"
                                             [] 
                   )
# 225 ".\Parser.fsy"
                 : 'gentype_any_type_list));
# 2053 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_any_type in
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 ".\Parser.fsy"
                                                     _1 :: _2 
                   )
# 226 ".\Parser.fsy"
                 : 'gentype_any_type_list));
# 2065 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term_statement_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 ".\Parser.fsy"
                                                                                  _2 
                   )
# 230 ".\Parser.fsy"
                 : 'gentype_term_statement_block));
# 2076 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_statement in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 232 ".\Parser.fsy"
                                                                   [_1] 
                   )
# 232 ".\Parser.fsy"
                 : 'gentype_term_statement_list));
# 2087 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_statement in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 233 ".\Parser.fsy"
                                                                            _1 :: _3 
                   )
# 233 ".\Parser.fsy"
                 : 'gentype_term_statement_list));
# 2099 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_no_dot_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 235 ".\Parser.fsy"
                                                                          SLet { Matcher = _2; Body = [] } 
                   )
# 235 ".\Parser.fsy"
                 : 'gentype_term_statement));
# 2110 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_no_dot_pattern_expr_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 ".\Parser.fsy"
                                                                               SLet { Matcher = _2; Body = _4 } 
                   )
# 236 ".\Parser.fsy"
                 : 'gentype_term_statement));
# 2122 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_local_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 237 ".\Parser.fsy"
                                                       SLocals ([_1]) 
                   )
# 237 ".\Parser.fsy"
                 : 'gentype_term_statement));
# 2133 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_local_function_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 ".\Parser.fsy"
                                                                              SLocals (_3) 
                   )
# 238 ".\Parser.fsy"
                 : 'gentype_term_statement));
# 2144 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 239 ".\Parser.fsy"
                                                    SExpression (_1) 
                   )
# 239 ".\Parser.fsy"
                 : 'gentype_term_statement));
# 2155 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_local_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 241 ".\Parser.fsy"
                                                                 [_1] 
                   )
# 241 ".\Parser.fsy"
                 : 'gentype_local_function_list));
# 2166 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_local_function in
            let _2 = parseState.GetInput(2) :?> 'gentype_local_function_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 242 ".\Parser.fsy"
                                                                 _1 :: _2 
                   )
# 242 ".\Parser.fsy"
                 : 'gentype_local_function_list));
# 2178 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 244 ".\Parser.fsy"
                                                                                     { Name = _3; Body = _5 } 
                   )
# 244 ".\Parser.fsy"
                 : 'gentype_local_function));
# 2190 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 246 ".\Parser.fsy"
                                         [] 
                   )
# 246 ".\Parser.fsy"
                 : 'gentype_simple_expr));
# 2200 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_word in
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 247 ".\Parser.fsy"
                                             _1 :: _2 
                   )
# 247 ".\Parser.fsy"
                 : 'gentype_simple_expr));
# 2212 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_record_literal in
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 248 ".\Parser.fsy"
                                                       List.append _1 _2 
                   )
# 248 ".\Parser.fsy"
                 : 'gentype_simple_expr));
# 2224 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 251 ".\Parser.fsy"
                                                   [] 
                   )
# 251 ".\Parser.fsy"
                 : 'gentype_simple_expr_list));
# 2234 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_simple_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 252 ".\Parser.fsy"
                                                                 _1 :: _3 
                   )
# 252 ".\Parser.fsy"
                 : 'gentype_simple_expr_list));
# 2246 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 256 ".\Parser.fsy"
                                                      EStatementBlock (_1) 
                   )
# 256 ".\Parser.fsy"
                 : 'gentype_word));
# 2257 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handle_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 257 ".\Parser.fsy"
                                            _1 
                   )
# 257 ".\Parser.fsy"
                 : 'gentype_word));
# 2268 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_inject_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 258 ".\Parser.fsy"
                                            _1 
                   )
# 258 ".\Parser.fsy"
                 : 'gentype_word));
# 2279 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 259 ".\Parser.fsy"
                                           _1 
                   )
# 259 ".\Parser.fsy"
                 : 'gentype_word));
# 2290 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_if_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 260 ".\Parser.fsy"
                                         _1 
                   )
# 260 ".\Parser.fsy"
                 : 'gentype_word));
# 2301 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_switch_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 261 ".\Parser.fsy"
                                            _1 
                   )
# 261 ".\Parser.fsy"
                 : 'gentype_word));
# 2312 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_when_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 262 ".\Parser.fsy"
                                          _1 
                   )
# 262 ".\Parser.fsy"
                 : 'gentype_word));
# 2323 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_while_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 263 ".\Parser.fsy"
                                           _1 
                   )
# 263 ".\Parser.fsy"
                 : 'gentype_word));
# 2334 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 264 ".\Parser.fsy"
                                                EFunctionLiteral (_1) 
                   )
# 264 ".\Parser.fsy"
                 : 'gentype_word));
# 2345 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tuple_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 265 ".\Parser.fsy"
                                             _1 
                   )
# 265 ".\Parser.fsy"
                 : 'gentype_word));
# 2356 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_list_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 266 ".\Parser.fsy"
                                             _1 
                   )
# 266 ".\Parser.fsy"
                 : 'gentype_word));
# 2367 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_vector_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 267 ".\Parser.fsy"
                                              _1 
                   )
# 267 ".\Parser.fsy"
                 : 'gentype_word));
# 2378 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 270 ".\Parser.fsy"
                                                 EExtension (_2) 
                   )
# 270 ".\Parser.fsy"
                 : 'gentype_word));
# 2389 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 271 ".\Parser.fsy"
                                                 ESelect (false, _2) 
                   )
# 271 ".\Parser.fsy"
                 : 'gentype_word));
# 2400 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 272 ".\Parser.fsy"
                                                ESelect (true, _2) 
                   )
# 272 ".\Parser.fsy"
                 : 'gentype_word));
# 2411 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_variant_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 274 ".\Parser.fsy"
                                               _1 
                   )
# 274 ".\Parser.fsy"
                 : 'gentype_word));
# 2422 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_case_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 275 ".\Parser.fsy"
                                          _1 
                   )
# 275 ".\Parser.fsy"
                 : 'gentype_word));
# 2433 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 276 ".\Parser.fsy"
                                                           EWithState (_2) 
                   )
# 276 ".\Parser.fsy"
                 : 'gentype_word));
# 2444 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_with_permission in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 277 ".\Parser.fsy"
                                               _1 
                   )
# 277 ".\Parser.fsy"
                 : 'gentype_word));
# 2455 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 278 ".\Parser.fsy"
                                       ETrust 
                   )
# 278 ".\Parser.fsy"
                 : 'gentype_word));
# 2465 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 279 ".\Parser.fsy"
                                          EDistrust 
                   )
# 279 ".\Parser.fsy"
                 : 'gentype_word));
# 2475 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 280 ".\Parser.fsy"
                                       EAudit 
                   )
# 280 ".\Parser.fsy"
                 : 'gentype_word));
# 2485 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 281 ".\Parser.fsy"
                                         ENewRef 
                   )
# 281 ".\Parser.fsy"
                 : 'gentype_word));
# 2495 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 282 ".\Parser.fsy"
                                         EGetRef 
                   )
# 282 ".\Parser.fsy"
                 : 'gentype_word));
# 2505 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 283 ".\Parser.fsy"
                                         EPutRef 
                   )
# 283 ".\Parser.fsy"
                 : 'gentype_word));
# 2515 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 284 ".\Parser.fsy"
                                        EUntag 
                   )
# 284 ".\Parser.fsy"
                 : 'gentype_word));
# 2525 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 285 ".\Parser.fsy"
                                                EBy { Qualifier = List.take (List.length _2 - 1) _2; Name = List.last _2 } 
                   )
# 285 ".\Parser.fsy"
                 : 'gentype_word));
# 2536 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 286 ".\Parser.fsy"
                                                 EPer { Qualifier = List.take (List.length _2 - 1) _2; Name = List.last _2 } 
                   )
# 286 ".\Parser.fsy"
                 : 'gentype_word));
# 2547 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 287 ".\Parser.fsy"
                                     EDo 
                   )
# 287 ".\Parser.fsy"
                 : 'gentype_word));
# 2557 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 289 ".\Parser.fsy"
                                       ETrue 
                   )
# 289 ".\Parser.fsy"
                 : 'gentype_word));
# 2567 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 290 ".\Parser.fsy"
                                       EFalse 
                   )
# 290 ".\Parser.fsy"
                 : 'gentype_word));
# 2577 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 291 ".\Parser.fsy"
                                         EInteger (_1) 
                   )
# 291 ".\Parser.fsy"
                 : 'gentype_word));
# 2588 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> DecimalLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 292 ".\Parser.fsy"
                                         EDecimal (_1) 
                   )
# 292 ".\Parser.fsy"
                 : 'gentype_word));
# 2599 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 293 ".\Parser.fsy"
                                        EString (_1) 
                   )
# 293 ".\Parser.fsy"
                 : 'gentype_word));
# 2610 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  Identifier  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 294 ".\Parser.fsy"
                                           EIdentifier (_1) 
                   )
# 294 ".\Parser.fsy"
                 : 'gentype_word));
# 2621 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 296 ".\Parser.fsy"
                                                                                         EWithPermission (_2, _3) 
                   )
# 296 ".\Parser.fsy"
                 : 'gentype_with_permission));
# 2633 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_handler_list in
            let _7 = parseState.GetInput(7) :?> 'gentype_return in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 298 ".\Parser.fsy"
                                                                                                                               EHandle (_2, _3, _6, _7) 
                   )
# 298 ".\Parser.fsy"
                 : 'gentype_handle_word));
# 2647 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_handler_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 299 ".\Parser.fsy"
                                                                                                         EHandle (_2, _3, _6, []) 
                   )
# 299 ".\Parser.fsy"
                 : 'gentype_handle_word));
# 2660 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  Identifier  in
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 301 ".\Parser.fsy"
                                                                                    { Name = _1; Params = _2; Body = _4; } 
                   )
# 301 ".\Parser.fsy"
                 : 'gentype_handler));
# 2673 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 304 ".\Parser.fsy"
                          _3 
                   )
# 304 ".\Parser.fsy"
                 : 'gentype_return));
# 2684 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_no_dot_pattern_expr_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 306 ".\Parser.fsy"
                             [EStatementBlock([SLet { Matcher = _2; Body = [] }; SExpression(_4)])] 
                   )
# 306 ".\Parser.fsy"
                 : 'gentype_return));
# 2696 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 308 ".\Parser.fsy"
                                         [] 
                   )
# 308 ".\Parser.fsy"
                 : 'gentype_param_list));
# 2706 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 309 ".\Parser.fsy"
                                                     _1 :: _2 
                   )
# 309 ".\Parser.fsy"
                 : 'gentype_param_list));
# 2718 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 311 ".\Parser.fsy"
                                           [] 
                   )
# 311 ".\Parser.fsy"
                 : 'gentype_handler_list));
# 2728 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handler in
            let _2 = parseState.GetInput(2) :?> 'gentype_handler_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 312 ".\Parser.fsy"
                                                  _1 :: _2 
                   )
# 312 ".\Parser.fsy"
                 : 'gentype_handler_list));
# 2740 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_eff_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 314 ".\Parser.fsy"
                                                                          EInject (_2, _3) 
                   )
# 314 ".\Parser.fsy"
                 : 'gentype_inject_word));
# 2752 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 316 ".\Parser.fsy"
                                                  [_1] 
                   )
# 316 ".\Parser.fsy"
                 : 'gentype_eff_list));
# 2763 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _2 = parseState.GetInput(2) :?> 'gentype_eff_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 317 ".\Parser.fsy"
                                                   _1 :: _2 
                   )
# 317 ".\Parser.fsy"
                 : 'gentype_eff_list));
# 2775 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_match_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 319 ".\Parser.fsy"
                                                                                    EMatch (_3, []) 
                   )
# 319 ".\Parser.fsy"
                 : 'gentype_match_word));
# 2786 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_match_clause_list in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 320 ".\Parser.fsy"
                                                                                                        EMatch (_3, _6) 
                   )
# 320 ".\Parser.fsy"
                 : 'gentype_match_word));
# 2798 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 322 ".\Parser.fsy"
                                                            [_1] 
                   )
# 322 ".\Parser.fsy"
                 : 'gentype_match_clause_list));
# 2809 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_clause in
            let _2 = parseState.GetInput(2) :?> 'gentype_match_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 323 ".\Parser.fsy"
                                                              _1 :: _2 
                   )
# 323 ".\Parser.fsy"
                 : 'gentype_match_clause_list));
# 2821 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 325 ".\Parser.fsy"
                                                                                     { Matcher = _1; Body = _3 } 
                   )
# 325 ".\Parser.fsy"
                 : 'gentype_match_clause));
# 2833 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 327 ".\Parser.fsy"
                                                                                                    EIf (_2, _4, _6) 
                   )
# 327 ".\Parser.fsy"
                 : 'gentype_if_word));
# 2846 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_switch_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 329 ".\Parser.fsy"
                                                                               switchClausesToIfs _3 
                   )
# 329 ".\Parser.fsy"
                 : 'gentype_switch_word));
# 2857 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 331 ".\Parser.fsy"
                                                                                     [_3] 
                   )
# 331 ".\Parser.fsy"
                 : 'gentype_switch_clause_list));
# 2868 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_simple_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_switch_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 332 ".\Parser.fsy"
                                                                                            _1 :: _3 :: _5 
                   )
# 332 ".\Parser.fsy"
                 : 'gentype_switch_clause_list));
# 2881 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_simple_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            let _4 = parseState.GetInput(4) :?> 'gentype_switch_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 333 ".\Parser.fsy"
                                                                                            _1 :: [EStatementBlock _3] :: _4 
                   )
# 333 ".\Parser.fsy"
                 : 'gentype_switch_clause_list));
# 2894 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 335 ".\Parser.fsy"
                                                                              EIf (_2, _4, []) 
                   )
# 335 ".\Parser.fsy"
                 : 'gentype_when_word));
# 2906 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 337 ".\Parser.fsy"
                                                                                EWhile (_2, _4) 
                   )
# 337 ".\Parser.fsy"
                 : 'gentype_while_word));
# 2918 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 339 ".\Parser.fsy"
                                                                      _2 
                   )
# 339 ".\Parser.fsy"
                 : 'gentype_function_literal));
# 2929 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_var_only_pattern_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 341 ".\Parser.fsy"
                             [EStatementBlock([SLet { Matcher = _2; Body = [] }; SExpression(_4)])] 
                   )
# 341 ".\Parser.fsy"
                 : 'gentype_function_literal));
# 2941 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 343 ".\Parser.fsy"
                                                                                      ETupleLiteral ([], _3) 
                   )
# 343 ".\Parser.fsy"
                 : 'gentype_tuple_literal));
# 2952 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 344 ".\Parser.fsy"
                                                                                          ETupleLiteral (_3, _5) 
                   )
# 344 ".\Parser.fsy"
                 : 'gentype_tuple_literal));
# 2964 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 346 ".\Parser.fsy"
                                                                                    EListLiteral ([], _3) 
                   )
# 346 ".\Parser.fsy"
                 : 'gentype_list_literal));
# 2975 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 347 ".\Parser.fsy"
                                                                                        EListLiteral (_3, _5) 
                   )
# 347 ".\Parser.fsy"
                 : 'gentype_list_literal));
# 2987 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 349 ".\Parser.fsy"
                                                                                        EVectorLiteral ([], _3) 
                   )
# 349 ".\Parser.fsy"
                 : 'gentype_vector_literal));
# 2998 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 350 ".\Parser.fsy"
                                                                                            EVectorLiteral (_3, _5) 
                   )
# 350 ".\Parser.fsy"
                 : 'gentype_vector_literal));
# 3010 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 355 ".\Parser.fsy"
                                                                                                    ERecordLiteral (_4) :: expandFieldSyntax _6 
                   )
# 355 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 3022 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 356 ".\Parser.fsy"
                                                                               [ERecordLiteral (_4)] 
                   )
# 356 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 3033 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 357 ".\Parser.fsy"
                                                                        ERecordLiteral ([]) :: expandFieldSyntax _3 
                   )
# 357 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 3044 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 358 ".\Parser.fsy"
                                                                [ERecordLiteral ([])] 
                   )
# 358 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 3054 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_field in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 360 ".\Parser.fsy"
                                                                       EVariantLiteral (_3) 
                   )
# 360 ".\Parser.fsy"
                 : 'gentype_variant_literal));
# 3065 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?>  List<CaseClause>  in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 362 ".\Parser.fsy"
                                                                                                           ECase (_3, _6) 
                   )
# 362 ".\Parser.fsy"
                 : 'gentype_case_word));
# 3077 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_case_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 364 ".\Parser.fsy"
                                                          [_1] 
                   )
# 364 ".\Parser.fsy"
                 :  List<CaseClause> ));
# 3088 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_case_clause in
            let _2 = parseState.GetInput(2) :?>  List<CaseClause>  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 365 ".\Parser.fsy"
                                                           _1 :: _2 
                   )
# 365 ".\Parser.fsy"
                 :  List<CaseClause> ));
# 3100 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 367 ".\Parser.fsy"
                                                                             { Tag = _1; Body = _3 } 
                   )
# 367 ".\Parser.fsy"
                 : 'gentype_case_clause));
# 3112 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_field in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 369 ".\Parser.fsy"
                                              [_1] 
                   )
# 369 ".\Parser.fsy"
                 : 'gentype_field_list));
# 3123 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_field in
            let _3 = parseState.GetInput(3) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 370 ".\Parser.fsy"
                                                     _1 :: _3 
                   )
# 370 ".\Parser.fsy"
                 : 'gentype_field_list));
# 3135 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 372 ".\Parser.fsy"
                                                             (_1, _3) 
                   )
# 372 ".\Parser.fsy"
                 : 'gentype_field));
# 3147 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 374 ".\Parser.fsy"
                                                   sIdentifier (List.take (_1.Length - 1) _1) (List.last _1) 
                   )
# 374 ".\Parser.fsy"
                 :  Identifier ));
# 3158 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_qualified_ctor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 376 ".\Parser.fsy"
                                                        sIdentifier (List.take (List.length _1 - 1) _1) (List.last _1) 
                   )
# 376 ".\Parser.fsy"
                 : 'gentype_type_identifier));
# 3169 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 378 ".\Parser.fsy"
                                                          [_1] 
                   )
# 378 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 3180 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 379 ".\Parser.fsy"
                                               [_1] 
                   )
# 379 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 3191 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 380 ".\Parser.fsy"
                                                   [_1] 
                   )
# 380 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 3202 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 381 ".\Parser.fsy"
                                                    [_1] 
                   )
# 381 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 3213 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 382 ".\Parser.fsy"
                                                                      _1 :: _3 
                   )
# 382 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 3225 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 384 ".\Parser.fsy"
                                                        [_1] 
                   )
# 384 ".\Parser.fsy"
                 : 'gentype_qualified_ctor));
# 3236 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 385 ".\Parser.fsy"
                                                   [_1] 
                   )
# 385 ".\Parser.fsy"
                 : 'gentype_qualified_ctor));
# 3247 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 386 ".\Parser.fsy"
                                                    [_1] 
                   )
# 386 ".\Parser.fsy"
                 : 'gentype_qualified_ctor));
# 3258 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_qualified_ctor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 387 ".\Parser.fsy"
                                                                      _1 :: _3 
                   )
# 387 ".\Parser.fsy"
                 : 'gentype_qualified_ctor));
# 3270 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 391 ".\Parser.fsy"
                                                                      ind _1 SEnd 
                   )
# 391 ".\Parser.fsy"
                 : 'gentype_no_dot_pattern_expr_list));
# 3281 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_no_dot_pattern_expr_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 392 ".\Parser.fsy"
                                                                      ind _2 _1 
                   )
# 392 ".\Parser.fsy"
                 : 'gentype_no_dot_pattern_expr_list));
# 3293 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 394 ".\Parser.fsy"
                                                        SEnd 
                   )
# 394 ".\Parser.fsy"
                 : 'gentype_var_only_pattern_list));
# 3303 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _2 = parseState.GetInput(2) :?> 'gentype_var_only_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 395 ".\Parser.fsy"
                                                                 ind (PNamed (_1, PWildcard)) _2 
                   )
# 395 ".\Parser.fsy"
                 : 'gentype_var_only_pattern_list));
# 3315 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 397 ".\Parser.fsy"
                                                            ind _1 SEnd 
                   )
# 397 ".\Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 3326 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 398 ".\Parser.fsy"
                                                       dot _1 SEnd 
                   )
# 398 ".\Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 3337 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 399 ".\Parser.fsy"
                                                               ind _2 _1 
                   )
# 399 ".\Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 3349 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 401 ".\Parser.fsy"
                                                                                ind (_1, _3) SEnd 
                   )
# 401 ".\Parser.fsy"
                 : 'gentype_field_pattern_list));
# 3361 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 402 ".\Parser.fsy"
                                                           dot (_1, PWildcard) SEnd 
                   )
# 402 ".\Parser.fsy"
                 : 'gentype_field_pattern_list));
# 3372 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_field_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 403 ".\Parser.fsy"
                                                                                  ind (_1, _3) _4 
                   )
# 403 ".\Parser.fsy"
                 : 'gentype_field_pattern_list));
# 3385 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 405 ".\Parser.fsy"
                                                      PTrue 
                   )
# 405 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3395 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 406 ".\Parser.fsy"
                                             PFalse 
                   )
# 406 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3405 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 407 ".\Parser.fsy"
                                               PInteger (_1) 
                   )
# 407 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3416 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> DecimalLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 408 ".\Parser.fsy"
                                               PDecimal (_1) 
                   )
# 408 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3427 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 409 ".\Parser.fsy"
                                              PString (_1) 
                   )
# 409 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3438 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 410 ".\Parser.fsy"
                                                 PWildcard 
                   )
# 410 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3448 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 411 ".\Parser.fsy"
                                                      PRef (_2) 
                   )
# 411 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3459 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 412 ".\Parser.fsy"
                                                 PNamed (_1, PWildcard) 
                   )
# 412 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3470 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 413 ".\Parser.fsy"
                                                              PNamed (_1, _3) 
                   )
# 413 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3482 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_identifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 415 ".\Parser.fsy"
                            PConstructor (_1, SEnd) 
                   )
# 415 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3493 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_type_identifier in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 417 ".\Parser.fsy"
                            PConstructor (_2, _3) 
                   )
# 417 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3505 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tuple_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 418 ".\Parser.fsy"
                                                   _1 
                   )
# 418 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3516 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_list_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 419 ".\Parser.fsy"
                                                   _1 
                   )
# 419 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3527 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_vector_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 420 ".\Parser.fsy"
                                                    _1 
                   )
# 420 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3538 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_slice_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 421 ".\Parser.fsy"
                                                   _1 
                   )
# 421 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3549 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_record_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 422 ".\Parser.fsy"
                                                    _1 
                   )
# 422 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3560 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 424 ".\Parser.fsy"
                                                                                 PTuple (_3) 
                   )
# 424 ".\Parser.fsy"
                 : 'gentype_tuple_pattern));
# 3571 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 426 ".\Parser.fsy"
                                                                               PList (_3) 
                   )
# 426 ".\Parser.fsy"
                 : 'gentype_list_pattern));
# 3582 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 428 ".\Parser.fsy"
                                                                                  PVector (_3) 
                   )
# 428 ".\Parser.fsy"
                 : 'gentype_vector_pattern));
# 3593 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 430 ".\Parser.fsy"
                                                                                 PSlice (_3) 
                   )
# 430 ".\Parser.fsy"
                 : 'gentype_slice_pattern));
# 3604 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_field_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 432 ".\Parser.fsy"
                                                                                   PRecord (_3) 
                   )
# 432 ".\Parser.fsy"
                 : 'gentype_record_pattern));
|]
# 3616 "Parser.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 109;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let unit lexer lexbuf :  Unit  =
    engine lexer lexbuf 0 :?> _
