// Implementation file for parser generated by fsyacc
module Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 ".\Parser.fsy"


open Boba.Compiler.Syntax
open Boba.Core.DotSeq
open Boba.Core.Kinds
open Boba.Core.Types
open Boba.Core.TypeBuilder


# 16 "Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | IS
  | ONE
  | TRUE
  | FALSE
  | AND
  | OR
  | NOT
  | TUPLE
  | LIST
  | VECTOR
  | SLICE
  | DICTIONARY
  | CASE
  | RECORD
  | VARIANT
  | FOR
  | BREAK
  | FINAL
  | FILL
  | LENGTH
  | RESULT
  | IF
  | WHEN
  | SWITCH
  | WHILE
  | THEN
  | ELSE
  | DO
  | MATCH
  | INJECT
  | WITH
  | AFTER
  | HANDLE
  | UNTAG
  | BY
  | PER
  | TRUST
  | DISTRUST
  | AUDIT
  | NEW_REF
  | GET_REF
  | PUT_REF
  | WITH_STATE
  | WITH_PERMISSION
  | FUNCTION
  | NATIVE
  | LOCAL
  | LET
  | IS_ROUGHLY
  | IS_NOT
  | SATISFIES
  | VIOLATES
  | TEST
  | LAW
  | EXHAUSTIVE
  | SYNONYM
  | TAG
  | EFFECT
  | OVERLOAD
  | INSTANCE
  | RULE
  | CHECK
  | PATTERN
  | RECURSIVE
  | DATA
  | MAIN
  | EXPORT
  | FROM
  | AS
  | IMPORT
  | REF
  | UNDERSCORE
  | EQUALS
  | ELLIPSIS
  | BAR
  | DOT
  | PLUS
  | MINUS
  | STAR
  | COLON
  | DOUBLE_COLON
  | COMMA
  | SEMICOLON
  | FN_CTOR
  | L_BIND
  | R_BIND
  | L_STAR
  | R_STAR
  | L_ARROW
  | R_ARROW
  | L_BRACKET
  | R_BRACKET
  | L_BRACE
  | R_BRACE
  | L_PAREN
  | R_PAREN
  | L_ANGLE
  | R_ANGLE
  | NATIVE_CODE_LINE of (NativeCodeLine)
  | STRING of (StringLiteral)
  | DECIMAL of (DecimalLiteral)
  | INTEGER of (IntegerLiteral)
  | TEST_NAME of (Name)
  | PREDICATE_NAME of (Name)
  | OPERATOR_NAME of (Name)
  | BIG_NAME of (Name)
  | SMALL_NAME of (Name)
  | EOF
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_IS
    | TOKEN_ONE
    | TOKEN_TRUE
    | TOKEN_FALSE
    | TOKEN_AND
    | TOKEN_OR
    | TOKEN_NOT
    | TOKEN_TUPLE
    | TOKEN_LIST
    | TOKEN_VECTOR
    | TOKEN_SLICE
    | TOKEN_DICTIONARY
    | TOKEN_CASE
    | TOKEN_RECORD
    | TOKEN_VARIANT
    | TOKEN_FOR
    | TOKEN_BREAK
    | TOKEN_FINAL
    | TOKEN_FILL
    | TOKEN_LENGTH
    | TOKEN_RESULT
    | TOKEN_IF
    | TOKEN_WHEN
    | TOKEN_SWITCH
    | TOKEN_WHILE
    | TOKEN_THEN
    | TOKEN_ELSE
    | TOKEN_DO
    | TOKEN_MATCH
    | TOKEN_INJECT
    | TOKEN_WITH
    | TOKEN_AFTER
    | TOKEN_HANDLE
    | TOKEN_UNTAG
    | TOKEN_BY
    | TOKEN_PER
    | TOKEN_TRUST
    | TOKEN_DISTRUST
    | TOKEN_AUDIT
    | TOKEN_NEW_REF
    | TOKEN_GET_REF
    | TOKEN_PUT_REF
    | TOKEN_WITH_STATE
    | TOKEN_WITH_PERMISSION
    | TOKEN_FUNCTION
    | TOKEN_NATIVE
    | TOKEN_LOCAL
    | TOKEN_LET
    | TOKEN_IS_ROUGHLY
    | TOKEN_IS_NOT
    | TOKEN_SATISFIES
    | TOKEN_VIOLATES
    | TOKEN_TEST
    | TOKEN_LAW
    | TOKEN_EXHAUSTIVE
    | TOKEN_SYNONYM
    | TOKEN_TAG
    | TOKEN_EFFECT
    | TOKEN_OVERLOAD
    | TOKEN_INSTANCE
    | TOKEN_RULE
    | TOKEN_CHECK
    | TOKEN_PATTERN
    | TOKEN_RECURSIVE
    | TOKEN_DATA
    | TOKEN_MAIN
    | TOKEN_EXPORT
    | TOKEN_FROM
    | TOKEN_AS
    | TOKEN_IMPORT
    | TOKEN_REF
    | TOKEN_UNDERSCORE
    | TOKEN_EQUALS
    | TOKEN_ELLIPSIS
    | TOKEN_BAR
    | TOKEN_DOT
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_STAR
    | TOKEN_COLON
    | TOKEN_DOUBLE_COLON
    | TOKEN_COMMA
    | TOKEN_SEMICOLON
    | TOKEN_FN_CTOR
    | TOKEN_L_BIND
    | TOKEN_R_BIND
    | TOKEN_L_STAR
    | TOKEN_R_STAR
    | TOKEN_L_ARROW
    | TOKEN_R_ARROW
    | TOKEN_L_BRACKET
    | TOKEN_R_BRACKET
    | TOKEN_L_BRACE
    | TOKEN_R_BRACE
    | TOKEN_L_PAREN
    | TOKEN_R_PAREN
    | TOKEN_L_ANGLE
    | TOKEN_R_ANGLE
    | TOKEN_NATIVE_CODE_LINE
    | TOKEN_STRING
    | TOKEN_DECIMAL
    | TOKEN_INTEGER
    | TOKEN_TEST_NAME
    | TOKEN_PREDICATE_NAME
    | TOKEN_OPERATOR_NAME
    | TOKEN_BIG_NAME
    | TOKEN_SMALL_NAME
    | TOKEN_EOF
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startunit
    | NONTERM_unit
    | NONTERM_import_list
    | NONTERM_decl_list
    | NONTERM_main
    | NONTERM_import
    | NONTERM_import_path
    | NONTERM_remote
    | NONTERM_export
    | NONTERM_brace_names
    | NONTERM_name_list
    | NONTERM_name
    | NONTERM_declaration
    | NONTERM_function
    | NONTERM_function_list
    | NONTERM_native
    | NONTERM_native_code_list
    | NONTERM_datatype
    | NONTERM_datatype_list
    | NONTERM_constructor
    | NONTERM_constructor_list
    | NONTERM_rule
    | NONTERM_overload
    | NONTERM_instance
    | NONTERM_effect
    | NONTERM_handler_template_list
    | NONTERM_handler_template
    | NONTERM_test
    | NONTERM_law
    | NONTERM_test_all
    | NONTERM_check
    | NONTERM_tag
    | NONTERM_qual_type
    | NONTERM_predicate_list
    | NONTERM_predicate
    | NONTERM_any_type
    | NONTERM_any_type_list
    | NONTERM_term_statement_block
    | NONTERM_term_statement_list
    | NONTERM_term_statement
    | NONTERM_non_empty_simple_expr
    | NONTERM_simple_expr
    | NONTERM_word
    | NONTERM_with_permission
    | NONTERM_handle_word
    | NONTERM_handler
    | NONTERM_return
    | NONTERM_param_list
    | NONTERM_handler_list
    | NONTERM_inject_word
    | NONTERM_eff_list
    | NONTERM_match_word
    | NONTERM_match_clause_list
    | NONTERM_match_clause
    | NONTERM_if_word
    | NONTERM_switch_word
    | NONTERM_switch_clause_list
    | NONTERM_when_word
    | NONTERM_while_word
    | NONTERM_function_literal
    | NONTERM_lit_expr_list
    | NONTERM_tuple_literal
    | NONTERM_list_literal
    | NONTERM_record_literal
    | NONTERM_variant_literal
    | NONTERM_case_word
    | NONTERM_case_clause_list
    | NONTERM_case_clause
    | NONTERM_field_list
    | NONTERM_field
    | NONTERM_identifier
    | NONTERM_type_identifier
    | NONTERM_qualified_name
    | NONTERM_qualified_ctor
    | NONTERM_no_dot_pattern_expr_list
    | NONTERM_var_only_pattern_list
    | NONTERM_pattern_expr_list
    | NONTERM_field_pattern_list
    | NONTERM_pattern_expr
    | NONTERM_tuple_pattern
    | NONTERM_list_pattern
    | NONTERM_vector_pattern
    | NONTERM_slice_pattern
    | NONTERM_record_pattern

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | IS  -> 0 
  | ONE  -> 1 
  | TRUE  -> 2 
  | FALSE  -> 3 
  | AND  -> 4 
  | OR  -> 5 
  | NOT  -> 6 
  | TUPLE  -> 7 
  | LIST  -> 8 
  | VECTOR  -> 9 
  | SLICE  -> 10 
  | DICTIONARY  -> 11 
  | CASE  -> 12 
  | RECORD  -> 13 
  | VARIANT  -> 14 
  | FOR  -> 15 
  | BREAK  -> 16 
  | FINAL  -> 17 
  | FILL  -> 18 
  | LENGTH  -> 19 
  | RESULT  -> 20 
  | IF  -> 21 
  | WHEN  -> 22 
  | SWITCH  -> 23 
  | WHILE  -> 24 
  | THEN  -> 25 
  | ELSE  -> 26 
  | DO  -> 27 
  | MATCH  -> 28 
  | INJECT  -> 29 
  | WITH  -> 30 
  | AFTER  -> 31 
  | HANDLE  -> 32 
  | UNTAG  -> 33 
  | BY  -> 34 
  | PER  -> 35 
  | TRUST  -> 36 
  | DISTRUST  -> 37 
  | AUDIT  -> 38 
  | NEW_REF  -> 39 
  | GET_REF  -> 40 
  | PUT_REF  -> 41 
  | WITH_STATE  -> 42 
  | WITH_PERMISSION  -> 43 
  | FUNCTION  -> 44 
  | NATIVE  -> 45 
  | LOCAL  -> 46 
  | LET  -> 47 
  | IS_ROUGHLY  -> 48 
  | IS_NOT  -> 49 
  | SATISFIES  -> 50 
  | VIOLATES  -> 51 
  | TEST  -> 52 
  | LAW  -> 53 
  | EXHAUSTIVE  -> 54 
  | SYNONYM  -> 55 
  | TAG  -> 56 
  | EFFECT  -> 57 
  | OVERLOAD  -> 58 
  | INSTANCE  -> 59 
  | RULE  -> 60 
  | CHECK  -> 61 
  | PATTERN  -> 62 
  | RECURSIVE  -> 63 
  | DATA  -> 64 
  | MAIN  -> 65 
  | EXPORT  -> 66 
  | FROM  -> 67 
  | AS  -> 68 
  | IMPORT  -> 69 
  | REF  -> 70 
  | UNDERSCORE  -> 71 
  | EQUALS  -> 72 
  | ELLIPSIS  -> 73 
  | BAR  -> 74 
  | DOT  -> 75 
  | PLUS  -> 76 
  | MINUS  -> 77 
  | STAR  -> 78 
  | COLON  -> 79 
  | DOUBLE_COLON  -> 80 
  | COMMA  -> 81 
  | SEMICOLON  -> 82 
  | FN_CTOR  -> 83 
  | L_BIND  -> 84 
  | R_BIND  -> 85 
  | L_STAR  -> 86 
  | R_STAR  -> 87 
  | L_ARROW  -> 88 
  | R_ARROW  -> 89 
  | L_BRACKET  -> 90 
  | R_BRACKET  -> 91 
  | L_BRACE  -> 92 
  | R_BRACE  -> 93 
  | L_PAREN  -> 94 
  | R_PAREN  -> 95 
  | L_ANGLE  -> 96 
  | R_ANGLE  -> 97 
  | NATIVE_CODE_LINE _ -> 98 
  | STRING _ -> 99 
  | DECIMAL _ -> 100 
  | INTEGER _ -> 101 
  | TEST_NAME _ -> 102 
  | PREDICATE_NAME _ -> 103 
  | OPERATOR_NAME _ -> 104 
  | BIG_NAME _ -> 105 
  | SMALL_NAME _ -> 106 
  | EOF  -> 107 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_IS 
  | 1 -> TOKEN_ONE 
  | 2 -> TOKEN_TRUE 
  | 3 -> TOKEN_FALSE 
  | 4 -> TOKEN_AND 
  | 5 -> TOKEN_OR 
  | 6 -> TOKEN_NOT 
  | 7 -> TOKEN_TUPLE 
  | 8 -> TOKEN_LIST 
  | 9 -> TOKEN_VECTOR 
  | 10 -> TOKEN_SLICE 
  | 11 -> TOKEN_DICTIONARY 
  | 12 -> TOKEN_CASE 
  | 13 -> TOKEN_RECORD 
  | 14 -> TOKEN_VARIANT 
  | 15 -> TOKEN_FOR 
  | 16 -> TOKEN_BREAK 
  | 17 -> TOKEN_FINAL 
  | 18 -> TOKEN_FILL 
  | 19 -> TOKEN_LENGTH 
  | 20 -> TOKEN_RESULT 
  | 21 -> TOKEN_IF 
  | 22 -> TOKEN_WHEN 
  | 23 -> TOKEN_SWITCH 
  | 24 -> TOKEN_WHILE 
  | 25 -> TOKEN_THEN 
  | 26 -> TOKEN_ELSE 
  | 27 -> TOKEN_DO 
  | 28 -> TOKEN_MATCH 
  | 29 -> TOKEN_INJECT 
  | 30 -> TOKEN_WITH 
  | 31 -> TOKEN_AFTER 
  | 32 -> TOKEN_HANDLE 
  | 33 -> TOKEN_UNTAG 
  | 34 -> TOKEN_BY 
  | 35 -> TOKEN_PER 
  | 36 -> TOKEN_TRUST 
  | 37 -> TOKEN_DISTRUST 
  | 38 -> TOKEN_AUDIT 
  | 39 -> TOKEN_NEW_REF 
  | 40 -> TOKEN_GET_REF 
  | 41 -> TOKEN_PUT_REF 
  | 42 -> TOKEN_WITH_STATE 
  | 43 -> TOKEN_WITH_PERMISSION 
  | 44 -> TOKEN_FUNCTION 
  | 45 -> TOKEN_NATIVE 
  | 46 -> TOKEN_LOCAL 
  | 47 -> TOKEN_LET 
  | 48 -> TOKEN_IS_ROUGHLY 
  | 49 -> TOKEN_IS_NOT 
  | 50 -> TOKEN_SATISFIES 
  | 51 -> TOKEN_VIOLATES 
  | 52 -> TOKEN_TEST 
  | 53 -> TOKEN_LAW 
  | 54 -> TOKEN_EXHAUSTIVE 
  | 55 -> TOKEN_SYNONYM 
  | 56 -> TOKEN_TAG 
  | 57 -> TOKEN_EFFECT 
  | 58 -> TOKEN_OVERLOAD 
  | 59 -> TOKEN_INSTANCE 
  | 60 -> TOKEN_RULE 
  | 61 -> TOKEN_CHECK 
  | 62 -> TOKEN_PATTERN 
  | 63 -> TOKEN_RECURSIVE 
  | 64 -> TOKEN_DATA 
  | 65 -> TOKEN_MAIN 
  | 66 -> TOKEN_EXPORT 
  | 67 -> TOKEN_FROM 
  | 68 -> TOKEN_AS 
  | 69 -> TOKEN_IMPORT 
  | 70 -> TOKEN_REF 
  | 71 -> TOKEN_UNDERSCORE 
  | 72 -> TOKEN_EQUALS 
  | 73 -> TOKEN_ELLIPSIS 
  | 74 -> TOKEN_BAR 
  | 75 -> TOKEN_DOT 
  | 76 -> TOKEN_PLUS 
  | 77 -> TOKEN_MINUS 
  | 78 -> TOKEN_STAR 
  | 79 -> TOKEN_COLON 
  | 80 -> TOKEN_DOUBLE_COLON 
  | 81 -> TOKEN_COMMA 
  | 82 -> TOKEN_SEMICOLON 
  | 83 -> TOKEN_FN_CTOR 
  | 84 -> TOKEN_L_BIND 
  | 85 -> TOKEN_R_BIND 
  | 86 -> TOKEN_L_STAR 
  | 87 -> TOKEN_R_STAR 
  | 88 -> TOKEN_L_ARROW 
  | 89 -> TOKEN_R_ARROW 
  | 90 -> TOKEN_L_BRACKET 
  | 91 -> TOKEN_R_BRACKET 
  | 92 -> TOKEN_L_BRACE 
  | 93 -> TOKEN_R_BRACE 
  | 94 -> TOKEN_L_PAREN 
  | 95 -> TOKEN_R_PAREN 
  | 96 -> TOKEN_L_ANGLE 
  | 97 -> TOKEN_R_ANGLE 
  | 98 -> TOKEN_NATIVE_CODE_LINE 
  | 99 -> TOKEN_STRING 
  | 100 -> TOKEN_DECIMAL 
  | 101 -> TOKEN_INTEGER 
  | 102 -> TOKEN_TEST_NAME 
  | 103 -> TOKEN_PREDICATE_NAME 
  | 104 -> TOKEN_OPERATOR_NAME 
  | 105 -> TOKEN_BIG_NAME 
  | 106 -> TOKEN_SMALL_NAME 
  | 107 -> TOKEN_EOF 
  | 110 -> TOKEN_end_of_input
  | 108 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startunit 
    | 1 -> NONTERM_unit 
    | 2 -> NONTERM_unit 
    | 3 -> NONTERM_import_list 
    | 4 -> NONTERM_import_list 
    | 5 -> NONTERM_decl_list 
    | 6 -> NONTERM_decl_list 
    | 7 -> NONTERM_main 
    | 8 -> NONTERM_import 
    | 9 -> NONTERM_import 
    | 10 -> NONTERM_import 
    | 11 -> NONTERM_import_path 
    | 12 -> NONTERM_import_path 
    | 13 -> NONTERM_remote 
    | 14 -> NONTERM_export 
    | 15 -> NONTERM_brace_names 
    | 16 -> NONTERM_name_list 
    | 17 -> NONTERM_name_list 
    | 18 -> NONTERM_name 
    | 19 -> NONTERM_name 
    | 20 -> NONTERM_name 
    | 21 -> NONTERM_declaration 
    | 22 -> NONTERM_declaration 
    | 23 -> NONTERM_declaration 
    | 24 -> NONTERM_declaration 
    | 25 -> NONTERM_declaration 
    | 26 -> NONTERM_declaration 
    | 27 -> NONTERM_declaration 
    | 28 -> NONTERM_declaration 
    | 29 -> NONTERM_declaration 
    | 30 -> NONTERM_declaration 
    | 31 -> NONTERM_declaration 
    | 32 -> NONTERM_declaration 
    | 33 -> NONTERM_declaration 
    | 34 -> NONTERM_declaration 
    | 35 -> NONTERM_declaration 
    | 36 -> NONTERM_declaration 
    | 37 -> NONTERM_function 
    | 38 -> NONTERM_function 
    | 39 -> NONTERM_function_list 
    | 40 -> NONTERM_function_list 
    | 41 -> NONTERM_native 
    | 42 -> NONTERM_native_code_list 
    | 43 -> NONTERM_native_code_list 
    | 44 -> NONTERM_datatype 
    | 45 -> NONTERM_datatype 
    | 46 -> NONTERM_datatype_list 
    | 47 -> NONTERM_datatype_list 
    | 48 -> NONTERM_constructor 
    | 49 -> NONTERM_constructor 
    | 50 -> NONTERM_constructor_list 
    | 51 -> NONTERM_constructor_list 
    | 52 -> NONTERM_rule 
    | 53 -> NONTERM_rule 
    | 54 -> NONTERM_rule 
    | 55 -> NONTERM_rule 
    | 56 -> NONTERM_overload 
    | 57 -> NONTERM_instance 
    | 58 -> NONTERM_effect 
    | 59 -> NONTERM_handler_template_list 
    | 60 -> NONTERM_handler_template_list 
    | 61 -> NONTERM_handler_template 
    | 62 -> NONTERM_test 
    | 63 -> NONTERM_law 
    | 64 -> NONTERM_test_all 
    | 65 -> NONTERM_test_all 
    | 66 -> NONTERM_test_all 
    | 67 -> NONTERM_test_all 
    | 68 -> NONTERM_test_all 
    | 69 -> NONTERM_test_all 
    | 70 -> NONTERM_test_all 
    | 71 -> NONTERM_check 
    | 72 -> NONTERM_tag 
    | 73 -> NONTERM_qual_type 
    | 74 -> NONTERM_qual_type 
    | 75 -> NONTERM_predicate_list 
    | 76 -> NONTERM_predicate_list 
    | 77 -> NONTERM_predicate_list 
    | 78 -> NONTERM_predicate_list 
    | 79 -> NONTERM_predicate 
    | 80 -> NONTERM_predicate 
    | 81 -> NONTERM_any_type 
    | 82 -> NONTERM_any_type 
    | 83 -> NONTERM_any_type 
    | 84 -> NONTERM_any_type 
    | 85 -> NONTERM_any_type 
    | 86 -> NONTERM_any_type 
    | 87 -> NONTERM_any_type 
    | 88 -> NONTERM_any_type 
    | 89 -> NONTERM_any_type 
    | 90 -> NONTERM_any_type 
    | 91 -> NONTERM_any_type 
    | 92 -> NONTERM_any_type 
    | 93 -> NONTERM_any_type 
    | 94 -> NONTERM_any_type 
    | 95 -> NONTERM_any_type 
    | 96 -> NONTERM_any_type 
    | 97 -> NONTERM_any_type 
    | 98 -> NONTERM_any_type 
    | 99 -> NONTERM_any_type 
    | 100 -> NONTERM_any_type 
    | 101 -> NONTERM_any_type_list 
    | 102 -> NONTERM_any_type_list 
    | 103 -> NONTERM_term_statement_block 
    | 104 -> NONTERM_term_statement_list 
    | 105 -> NONTERM_term_statement_list 
    | 106 -> NONTERM_term_statement 
    | 107 -> NONTERM_term_statement 
    | 108 -> NONTERM_term_statement 
    | 109 -> NONTERM_non_empty_simple_expr 
    | 110 -> NONTERM_non_empty_simple_expr 
    | 111 -> NONTERM_non_empty_simple_expr 
    | 112 -> NONTERM_non_empty_simple_expr 
    | 113 -> NONTERM_non_empty_simple_expr 
    | 114 -> NONTERM_non_empty_simple_expr 
    | 115 -> NONTERM_simple_expr 
    | 116 -> NONTERM_simple_expr 
    | 117 -> NONTERM_word 
    | 118 -> NONTERM_word 
    | 119 -> NONTERM_word 
    | 120 -> NONTERM_word 
    | 121 -> NONTERM_word 
    | 122 -> NONTERM_word 
    | 123 -> NONTERM_word 
    | 124 -> NONTERM_word 
    | 125 -> NONTERM_word 
    | 126 -> NONTERM_word 
    | 127 -> NONTERM_word 
    | 128 -> NONTERM_word 
    | 129 -> NONTERM_word 
    | 130 -> NONTERM_word 
    | 131 -> NONTERM_word 
    | 132 -> NONTERM_word 
    | 133 -> NONTERM_word 
    | 134 -> NONTERM_word 
    | 135 -> NONTERM_word 
    | 136 -> NONTERM_word 
    | 137 -> NONTERM_word 
    | 138 -> NONTERM_word 
    | 139 -> NONTERM_word 
    | 140 -> NONTERM_word 
    | 141 -> NONTERM_word 
    | 142 -> NONTERM_word 
    | 143 -> NONTERM_word 
    | 144 -> NONTERM_word 
    | 145 -> NONTERM_word 
    | 146 -> NONTERM_word 
    | 147 -> NONTERM_word 
    | 148 -> NONTERM_word 
    | 149 -> NONTERM_with_permission 
    | 150 -> NONTERM_handle_word 
    | 151 -> NONTERM_handle_word 
    | 152 -> NONTERM_handler 
    | 153 -> NONTERM_return 
    | 154 -> NONTERM_return 
    | 155 -> NONTERM_param_list 
    | 156 -> NONTERM_param_list 
    | 157 -> NONTERM_handler_list 
    | 158 -> NONTERM_handler_list 
    | 159 -> NONTERM_inject_word 
    | 160 -> NONTERM_eff_list 
    | 161 -> NONTERM_eff_list 
    | 162 -> NONTERM_match_word 
    | 163 -> NONTERM_match_word 
    | 164 -> NONTERM_match_clause_list 
    | 165 -> NONTERM_match_clause_list 
    | 166 -> NONTERM_match_clause 
    | 167 -> NONTERM_if_word 
    | 168 -> NONTERM_switch_word 
    | 169 -> NONTERM_switch_clause_list 
    | 170 -> NONTERM_switch_clause_list 
    | 171 -> NONTERM_switch_clause_list 
    | 172 -> NONTERM_when_word 
    | 173 -> NONTERM_while_word 
    | 174 -> NONTERM_function_literal 
    | 175 -> NONTERM_function_literal 
    | 176 -> NONTERM_lit_expr_list 
    | 177 -> NONTERM_lit_expr_list 
    | 178 -> NONTERM_tuple_literal 
    | 179 -> NONTERM_tuple_literal 
    | 180 -> NONTERM_tuple_literal 
    | 181 -> NONTERM_tuple_literal 
    | 182 -> NONTERM_list_literal 
    | 183 -> NONTERM_list_literal 
    | 184 -> NONTERM_record_literal 
    | 185 -> NONTERM_record_literal 
    | 186 -> NONTERM_record_literal 
    | 187 -> NONTERM_record_literal 
    | 188 -> NONTERM_variant_literal 
    | 189 -> NONTERM_case_word 
    | 190 -> NONTERM_case_clause_list 
    | 191 -> NONTERM_case_clause_list 
    | 192 -> NONTERM_case_clause 
    | 193 -> NONTERM_field_list 
    | 194 -> NONTERM_field_list 
    | 195 -> NONTERM_field 
    | 196 -> NONTERM_identifier 
    | 197 -> NONTERM_type_identifier 
    | 198 -> NONTERM_qualified_name 
    | 199 -> NONTERM_qualified_name 
    | 200 -> NONTERM_qualified_name 
    | 201 -> NONTERM_qualified_name 
    | 202 -> NONTERM_qualified_name 
    | 203 -> NONTERM_qualified_ctor 
    | 204 -> NONTERM_qualified_ctor 
    | 205 -> NONTERM_qualified_ctor 
    | 206 -> NONTERM_qualified_ctor 
    | 207 -> NONTERM_no_dot_pattern_expr_list 
    | 208 -> NONTERM_no_dot_pattern_expr_list 
    | 209 -> NONTERM_var_only_pattern_list 
    | 210 -> NONTERM_var_only_pattern_list 
    | 211 -> NONTERM_pattern_expr_list 
    | 212 -> NONTERM_pattern_expr_list 
    | 213 -> NONTERM_pattern_expr_list 
    | 214 -> NONTERM_field_pattern_list 
    | 215 -> NONTERM_field_pattern_list 
    | 216 -> NONTERM_pattern_expr 
    | 217 -> NONTERM_pattern_expr 
    | 218 -> NONTERM_pattern_expr 
    | 219 -> NONTERM_pattern_expr 
    | 220 -> NONTERM_pattern_expr 
    | 221 -> NONTERM_pattern_expr 
    | 222 -> NONTERM_pattern_expr 
    | 223 -> NONTERM_pattern_expr 
    | 224 -> NONTERM_pattern_expr 
    | 225 -> NONTERM_pattern_expr 
    | 226 -> NONTERM_pattern_expr 
    | 227 -> NONTERM_pattern_expr 
    | 228 -> NONTERM_pattern_expr 
    | 229 -> NONTERM_pattern_expr 
    | 230 -> NONTERM_pattern_expr 
    | 231 -> NONTERM_pattern_expr 
    | 232 -> NONTERM_tuple_pattern 
    | 233 -> NONTERM_list_pattern 
    | 234 -> NONTERM_vector_pattern 
    | 235 -> NONTERM_slice_pattern 
    | 236 -> NONTERM_record_pattern 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 110 
let _fsyacc_tagOfErrorTerminal = 108

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | IS  -> "IS" 
  | ONE  -> "ONE" 
  | TRUE  -> "TRUE" 
  | FALSE  -> "FALSE" 
  | AND  -> "AND" 
  | OR  -> "OR" 
  | NOT  -> "NOT" 
  | TUPLE  -> "TUPLE" 
  | LIST  -> "LIST" 
  | VECTOR  -> "VECTOR" 
  | SLICE  -> "SLICE" 
  | DICTIONARY  -> "DICTIONARY" 
  | CASE  -> "CASE" 
  | RECORD  -> "RECORD" 
  | VARIANT  -> "VARIANT" 
  | FOR  -> "FOR" 
  | BREAK  -> "BREAK" 
  | FINAL  -> "FINAL" 
  | FILL  -> "FILL" 
  | LENGTH  -> "LENGTH" 
  | RESULT  -> "RESULT" 
  | IF  -> "IF" 
  | WHEN  -> "WHEN" 
  | SWITCH  -> "SWITCH" 
  | WHILE  -> "WHILE" 
  | THEN  -> "THEN" 
  | ELSE  -> "ELSE" 
  | DO  -> "DO" 
  | MATCH  -> "MATCH" 
  | INJECT  -> "INJECT" 
  | WITH  -> "WITH" 
  | AFTER  -> "AFTER" 
  | HANDLE  -> "HANDLE" 
  | UNTAG  -> "UNTAG" 
  | BY  -> "BY" 
  | PER  -> "PER" 
  | TRUST  -> "TRUST" 
  | DISTRUST  -> "DISTRUST" 
  | AUDIT  -> "AUDIT" 
  | NEW_REF  -> "NEW_REF" 
  | GET_REF  -> "GET_REF" 
  | PUT_REF  -> "PUT_REF" 
  | WITH_STATE  -> "WITH_STATE" 
  | WITH_PERMISSION  -> "WITH_PERMISSION" 
  | FUNCTION  -> "FUNCTION" 
  | NATIVE  -> "NATIVE" 
  | LOCAL  -> "LOCAL" 
  | LET  -> "LET" 
  | IS_ROUGHLY  -> "IS_ROUGHLY" 
  | IS_NOT  -> "IS_NOT" 
  | SATISFIES  -> "SATISFIES" 
  | VIOLATES  -> "VIOLATES" 
  | TEST  -> "TEST" 
  | LAW  -> "LAW" 
  | EXHAUSTIVE  -> "EXHAUSTIVE" 
  | SYNONYM  -> "SYNONYM" 
  | TAG  -> "TAG" 
  | EFFECT  -> "EFFECT" 
  | OVERLOAD  -> "OVERLOAD" 
  | INSTANCE  -> "INSTANCE" 
  | RULE  -> "RULE" 
  | CHECK  -> "CHECK" 
  | PATTERN  -> "PATTERN" 
  | RECURSIVE  -> "RECURSIVE" 
  | DATA  -> "DATA" 
  | MAIN  -> "MAIN" 
  | EXPORT  -> "EXPORT" 
  | FROM  -> "FROM" 
  | AS  -> "AS" 
  | IMPORT  -> "IMPORT" 
  | REF  -> "REF" 
  | UNDERSCORE  -> "UNDERSCORE" 
  | EQUALS  -> "EQUALS" 
  | ELLIPSIS  -> "ELLIPSIS" 
  | BAR  -> "BAR" 
  | DOT  -> "DOT" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | STAR  -> "STAR" 
  | COLON  -> "COLON" 
  | DOUBLE_COLON  -> "DOUBLE_COLON" 
  | COMMA  -> "COMMA" 
  | SEMICOLON  -> "SEMICOLON" 
  | FN_CTOR  -> "FN_CTOR" 
  | L_BIND  -> "L_BIND" 
  | R_BIND  -> "R_BIND" 
  | L_STAR  -> "L_STAR" 
  | R_STAR  -> "R_STAR" 
  | L_ARROW  -> "L_ARROW" 
  | R_ARROW  -> "R_ARROW" 
  | L_BRACKET  -> "L_BRACKET" 
  | R_BRACKET  -> "R_BRACKET" 
  | L_BRACE  -> "L_BRACE" 
  | R_BRACE  -> "R_BRACE" 
  | L_PAREN  -> "L_PAREN" 
  | R_PAREN  -> "R_PAREN" 
  | L_ANGLE  -> "L_ANGLE" 
  | R_ANGLE  -> "R_ANGLE" 
  | NATIVE_CODE_LINE _ -> "NATIVE_CODE_LINE" 
  | STRING _ -> "STRING" 
  | DECIMAL _ -> "DECIMAL" 
  | INTEGER _ -> "INTEGER" 
  | TEST_NAME _ -> "TEST_NAME" 
  | PREDICATE_NAME _ -> "PREDICATE_NAME" 
  | OPERATOR_NAME _ -> "OPERATOR_NAME" 
  | BIG_NAME _ -> "BIG_NAME" 
  | SMALL_NAME _ -> "SMALL_NAME" 
  | EOF  -> "EOF" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | IS  -> (null : System.Object) 
  | ONE  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | TUPLE  -> (null : System.Object) 
  | LIST  -> (null : System.Object) 
  | VECTOR  -> (null : System.Object) 
  | SLICE  -> (null : System.Object) 
  | DICTIONARY  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | RECORD  -> (null : System.Object) 
  | VARIANT  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | BREAK  -> (null : System.Object) 
  | FINAL  -> (null : System.Object) 
  | FILL  -> (null : System.Object) 
  | LENGTH  -> (null : System.Object) 
  | RESULT  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | WHEN  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | INJECT  -> (null : System.Object) 
  | WITH  -> (null : System.Object) 
  | AFTER  -> (null : System.Object) 
  | HANDLE  -> (null : System.Object) 
  | UNTAG  -> (null : System.Object) 
  | BY  -> (null : System.Object) 
  | PER  -> (null : System.Object) 
  | TRUST  -> (null : System.Object) 
  | DISTRUST  -> (null : System.Object) 
  | AUDIT  -> (null : System.Object) 
  | NEW_REF  -> (null : System.Object) 
  | GET_REF  -> (null : System.Object) 
  | PUT_REF  -> (null : System.Object) 
  | WITH_STATE  -> (null : System.Object) 
  | WITH_PERMISSION  -> (null : System.Object) 
  | FUNCTION  -> (null : System.Object) 
  | NATIVE  -> (null : System.Object) 
  | LOCAL  -> (null : System.Object) 
  | LET  -> (null : System.Object) 
  | IS_ROUGHLY  -> (null : System.Object) 
  | IS_NOT  -> (null : System.Object) 
  | SATISFIES  -> (null : System.Object) 
  | VIOLATES  -> (null : System.Object) 
  | TEST  -> (null : System.Object) 
  | LAW  -> (null : System.Object) 
  | EXHAUSTIVE  -> (null : System.Object) 
  | SYNONYM  -> (null : System.Object) 
  | TAG  -> (null : System.Object) 
  | EFFECT  -> (null : System.Object) 
  | OVERLOAD  -> (null : System.Object) 
  | INSTANCE  -> (null : System.Object) 
  | RULE  -> (null : System.Object) 
  | CHECK  -> (null : System.Object) 
  | PATTERN  -> (null : System.Object) 
  | RECURSIVE  -> (null : System.Object) 
  | DATA  -> (null : System.Object) 
  | MAIN  -> (null : System.Object) 
  | EXPORT  -> (null : System.Object) 
  | FROM  -> (null : System.Object) 
  | AS  -> (null : System.Object) 
  | IMPORT  -> (null : System.Object) 
  | REF  -> (null : System.Object) 
  | UNDERSCORE  -> (null : System.Object) 
  | EQUALS  -> (null : System.Object) 
  | ELLIPSIS  -> (null : System.Object) 
  | BAR  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | DOUBLE_COLON  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | FN_CTOR  -> (null : System.Object) 
  | L_BIND  -> (null : System.Object) 
  | R_BIND  -> (null : System.Object) 
  | L_STAR  -> (null : System.Object) 
  | R_STAR  -> (null : System.Object) 
  | L_ARROW  -> (null : System.Object) 
  | R_ARROW  -> (null : System.Object) 
  | L_BRACKET  -> (null : System.Object) 
  | R_BRACKET  -> (null : System.Object) 
  | L_BRACE  -> (null : System.Object) 
  | R_BRACE  -> (null : System.Object) 
  | L_PAREN  -> (null : System.Object) 
  | R_PAREN  -> (null : System.Object) 
  | L_ANGLE  -> (null : System.Object) 
  | R_ANGLE  -> (null : System.Object) 
  | NATIVE_CODE_LINE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DECIMAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INTEGER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | TEST_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PREDICATE_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OPERATOR_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BIG_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | SMALL_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EOF  -> (null : System.Object) 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 8us; 9us; 2us; 65535us; 2us; 3us; 10us; 11us; 1us; 65535us; 3us; 4us; 2us; 65535us; 0us; 8us; 8us; 8us; 2us; 65535us; 15us; 16us; 19us; 20us; 2us; 65535us; 15us; 26us; 19us; 26us; 1us; 65535us; 3us; 6us; 2us; 65535us; 15us; 19us; 38us; 39us; 2us; 65535us; 40us; 41us; 43us; 44us; 2us; 65535us; 40us; 43us; 43us; 43us; 2us; 65535us; 2us; 10us; 10us; 10us; 5us; 65535us; 2us; 48us; 10us; 48us; 49us; 50us; 51us; 79us; 79us; 79us; 2us; 65535us; 51us; 52us; 79us; 80us; 2us; 65535us; 2us; 54us; 10us; 54us; 2us; 65535us; 85us; 86us; 87us; 88us; 5us; 65535us; 2us; 60us; 10us; 60us; 49us; 61us; 51us; 94us; 94us; 94us; 2us; 65535us; 51us; 62us; 94us; 95us; 2us; 65535us; 92us; 103us; 104us; 103us; 2us; 65535us; 92us; 93us; 104us; 105us; 2us; 65535us; 2us; 66us; 10us; 66us; 2us; 65535us; 2us; 64us; 10us; 64us; 2us; 65535us; 2us; 65us; 10us; 65us; 2us; 65535us; 2us; 67us; 10us; 67us; 1us; 65535us; 133us; 134us; 2us; 65535us; 133us; 136us; 134us; 137us; 2us; 65535us; 2us; 68us; 10us; 68us; 2us; 65535us; 2us; 69us; 10us; 69us; 2us; 65535us; 145us; 146us; 152us; 153us; 2us; 65535us; 2us; 70us; 10us; 70us; 2us; 65535us; 2us; 71us; 10us; 71us; 3us; 65535us; 126us; 127us; 140us; 141us; 170us; 171us; 5us; 65535us; 126us; 176us; 140us; 176us; 170us; 176us; 182us; 183us; 184us; 185us; 5us; 65535us; 126us; 180us; 140us; 180us; 170us; 180us; 182us; 180us; 184us; 180us; 31us; 65535us; 83us; 84us; 97us; 229us; 98us; 99us; 100us; 230us; 101us; 102us; 108us; 229us; 109us; 229us; 111us; 230us; 112us; 229us; 114us; 230us; 116us; 230us; 122us; 123us; 126us; 179us; 140us; 179us; 170us; 179us; 177us; 178us; 186us; 229us; 187us; 229us; 188us; 230us; 195us; 196us; 196us; 229us; 197us; 198us; 200us; 201us; 203us; 204us; 206us; 207us; 213us; 214us; 218us; 229us; 220us; 230us; 223us; 230us; 225us; 226us; 226us; 227us; 8us; 65535us; 97us; 100us; 108us; 111us; 109us; 114us; 112us; 116us; 186us; 188us; 187us; 188us; 196us; 223us; 218us; 220us; 49us; 65535us; 13us; 253us; 74us; 253us; 77us; 253us; 128us; 253us; 144us; 253us; 146us; 253us; 151us; 253us; 153us; 253us; 161us; 253us; 165us; 253us; 231us; 253us; 235us; 253us; 239us; 253us; 240us; 253us; 241us; 253us; 245us; 253us; 246us; 253us; 247us; 253us; 248us; 253us; 249us; 253us; 271us; 272us; 293us; 294us; 296us; 297us; 307us; 253us; 311us; 253us; 314us; 253us; 319us; 320us; 329us; 253us; 337us; 253us; 340us; 253us; 342us; 343us; 344us; 345us; 350us; 253us; 352us; 253us; 356us; 254us; 361us; 253us; 363us; 364us; 365us; 253us; 367us; 368us; 369us; 253us; 373us; 253us; 378us; 253us; 380us; 253us; 383us; 253us; 385us; 253us; 389us; 253us; 405us; 253us; 412us; 253us; 419us; 253us; 1us; 65535us; 231us; 232us; 2us; 65535us; 231us; 234us; 235us; 236us; 34us; 65535us; 13us; 245us; 74us; 245us; 77us; 245us; 128us; 245us; 144us; 245us; 146us; 245us; 151us; 245us; 153us; 245us; 161us; 245us; 165us; 245us; 231us; 241us; 235us; 241us; 239us; 240us; 307us; 245us; 311us; 245us; 314us; 245us; 329us; 245us; 337us; 245us; 340us; 245us; 350us; 245us; 352us; 245us; 356us; 245us; 361us; 245us; 365us; 245us; 369us; 245us; 373us; 245us; 378us; 247us; 380us; 246us; 383us; 248us; 385us; 246us; 389us; 249us; 405us; 245us; 412us; 245us; 419us; 245us; 26us; 65535us; 13us; 14us; 74us; 75us; 77us; 78us; 128us; 129us; 144us; 145us; 146us; 147us; 151us; 152us; 153us; 154us; 161us; 162us; 165us; 166us; 307us; 308us; 311us; 312us; 314us; 315us; 329us; 330us; 337us; 338us; 340us; 341us; 350us; 355us; 352us; 353us; 356us; 357us; 361us; 362us; 365us; 366us; 369us; 370us; 373us; 374us; 405us; 406us; 412us; 413us; 419us; 420us; 41us; 65535us; 13us; 242us; 74us; 242us; 77us; 242us; 128us; 242us; 144us; 242us; 146us; 242us; 151us; 242us; 153us; 242us; 161us; 242us; 165us; 242us; 231us; 242us; 235us; 242us; 239us; 242us; 240us; 250us; 241us; 250us; 245us; 250us; 246us; 250us; 247us; 250us; 248us; 250us; 249us; 250us; 307us; 242us; 311us; 242us; 314us; 242us; 329us; 242us; 337us; 242us; 340us; 242us; 350us; 242us; 352us; 242us; 356us; 242us; 361us; 242us; 365us; 242us; 369us; 242us; 373us; 242us; 378us; 242us; 380us; 242us; 383us; 242us; 385us; 242us; 389us; 242us; 405us; 242us; 412us; 242us; 419us; 242us; 41us; 65535us; 13us; 273us; 74us; 273us; 77us; 273us; 128us; 273us; 144us; 273us; 146us; 273us; 151us; 273us; 153us; 273us; 161us; 273us; 165us; 273us; 231us; 273us; 235us; 273us; 239us; 273us; 240us; 273us; 241us; 273us; 245us; 273us; 246us; 273us; 247us; 273us; 248us; 273us; 249us; 273us; 307us; 273us; 311us; 273us; 314us; 273us; 329us; 273us; 337us; 273us; 340us; 273us; 350us; 273us; 352us; 273us; 356us; 273us; 361us; 273us; 365us; 273us; 369us; 273us; 373us; 273us; 378us; 273us; 380us; 273us; 383us; 273us; 385us; 273us; 389us; 273us; 405us; 273us; 412us; 273us; 419us; 273us; 41us; 65535us; 13us; 255us; 74us; 255us; 77us; 255us; 128us; 255us; 144us; 255us; 146us; 255us; 151us; 255us; 153us; 255us; 161us; 255us; 165us; 255us; 231us; 255us; 235us; 255us; 239us; 255us; 240us; 255us; 241us; 255us; 245us; 255us; 246us; 255us; 247us; 255us; 248us; 255us; 249us; 255us; 307us; 255us; 311us; 255us; 314us; 255us; 329us; 255us; 337us; 255us; 340us; 255us; 350us; 255us; 352us; 255us; 356us; 255us; 361us; 255us; 365us; 255us; 369us; 255us; 373us; 255us; 378us; 255us; 380us; 255us; 383us; 255us; 385us; 255us; 389us; 255us; 405us; 255us; 412us; 255us; 419us; 255us; 1us; 65535us; 300us; 317us; 1us; 65535us; 300us; 301us; 7us; 65535us; 56us; 57us; 90us; 91us; 131us; 132us; 149us; 150us; 292us; 293us; 295us; 296us; 305us; 306us; 1us; 65535us; 299us; 300us; 41us; 65535us; 13us; 256us; 74us; 256us; 77us; 256us; 128us; 256us; 144us; 256us; 146us; 256us; 151us; 256us; 153us; 256us; 161us; 256us; 165us; 256us; 231us; 256us; 235us; 256us; 239us; 256us; 240us; 256us; 241us; 256us; 245us; 256us; 246us; 256us; 247us; 256us; 248us; 256us; 249us; 256us; 307us; 256us; 311us; 256us; 314us; 256us; 329us; 256us; 337us; 256us; 340us; 256us; 350us; 256us; 352us; 256us; 356us; 256us; 361us; 256us; 365us; 256us; 369us; 256us; 373us; 256us; 378us; 256us; 380us; 256us; 383us; 256us; 385us; 256us; 389us; 256us; 405us; 256us; 412us; 256us; 419us; 256us; 2us; 65535us; 318us; 319us; 321us; 322us; 41us; 65535us; 13us; 257us; 74us; 257us; 77us; 257us; 128us; 257us; 144us; 257us; 146us; 257us; 151us; 257us; 153us; 257us; 161us; 257us; 165us; 257us; 231us; 257us; 235us; 257us; 239us; 257us; 240us; 257us; 241us; 257us; 245us; 257us; 246us; 257us; 247us; 257us; 248us; 257us; 249us; 257us; 307us; 257us; 311us; 257us; 314us; 257us; 329us; 257us; 337us; 257us; 340us; 257us; 350us; 257us; 352us; 257us; 356us; 257us; 361us; 257us; 365us; 257us; 369us; 257us; 373us; 257us; 378us; 257us; 380us; 257us; 383us; 257us; 385us; 257us; 389us; 257us; 405us; 257us; 412us; 257us; 419us; 257us; 1us; 65535us; 324us; 325us; 2us; 65535us; 324us; 333us; 325us; 334us; 41us; 65535us; 13us; 258us; 74us; 258us; 77us; 258us; 128us; 258us; 144us; 258us; 146us; 258us; 151us; 258us; 153us; 258us; 161us; 258us; 165us; 258us; 231us; 258us; 235us; 258us; 239us; 258us; 240us; 258us; 241us; 258us; 245us; 258us; 246us; 258us; 247us; 258us; 248us; 258us; 249us; 258us; 307us; 258us; 311us; 258us; 314us; 258us; 329us; 258us; 337us; 258us; 340us; 258us; 350us; 258us; 352us; 258us; 356us; 258us; 361us; 258us; 365us; 258us; 369us; 258us; 373us; 258us; 378us; 258us; 380us; 258us; 383us; 258us; 385us; 258us; 389us; 258us; 405us; 258us; 412us; 258us; 419us; 258us; 41us; 65535us; 13us; 259us; 74us; 259us; 77us; 259us; 128us; 259us; 144us; 259us; 146us; 259us; 151us; 259us; 153us; 259us; 161us; 259us; 165us; 259us; 231us; 259us; 235us; 259us; 239us; 259us; 240us; 259us; 241us; 259us; 245us; 259us; 246us; 259us; 247us; 259us; 248us; 259us; 249us; 259us; 307us; 259us; 311us; 259us; 314us; 259us; 329us; 259us; 337us; 259us; 340us; 259us; 350us; 259us; 352us; 259us; 356us; 259us; 361us; 259us; 365us; 259us; 369us; 259us; 373us; 259us; 378us; 259us; 380us; 259us; 383us; 259us; 385us; 259us; 389us; 259us; 405us; 259us; 412us; 259us; 419us; 259us; 3us; 65535us; 254us; 360us; 347us; 348us; 358us; 359us; 41us; 65535us; 13us; 260us; 74us; 260us; 77us; 260us; 128us; 260us; 144us; 260us; 146us; 260us; 151us; 260us; 153us; 260us; 161us; 260us; 165us; 260us; 231us; 260us; 235us; 260us; 239us; 260us; 240us; 260us; 241us; 260us; 245us; 260us; 246us; 260us; 247us; 260us; 248us; 260us; 249us; 260us; 307us; 260us; 311us; 260us; 314us; 260us; 329us; 260us; 337us; 260us; 340us; 260us; 350us; 260us; 352us; 260us; 356us; 260us; 361us; 260us; 365us; 260us; 369us; 260us; 373us; 260us; 378us; 260us; 380us; 260us; 383us; 260us; 385us; 260us; 389us; 260us; 405us; 260us; 412us; 260us; 419us; 260us; 41us; 65535us; 13us; 261us; 74us; 261us; 77us; 261us; 128us; 261us; 144us; 261us; 146us; 261us; 151us; 261us; 153us; 261us; 161us; 261us; 165us; 261us; 231us; 261us; 235us; 261us; 239us; 261us; 240us; 261us; 241us; 261us; 245us; 261us; 246us; 261us; 247us; 261us; 248us; 261us; 249us; 261us; 307us; 261us; 311us; 261us; 314us; 261us; 329us; 261us; 337us; 261us; 340us; 261us; 350us; 261us; 352us; 261us; 356us; 261us; 361us; 261us; 365us; 261us; 369us; 261us; 373us; 261us; 378us; 261us; 380us; 261us; 383us; 261us; 385us; 261us; 389us; 261us; 405us; 261us; 412us; 261us; 419us; 261us; 41us; 65535us; 13us; 262us; 74us; 262us; 77us; 262us; 128us; 262us; 144us; 262us; 146us; 262us; 151us; 262us; 153us; 262us; 161us; 262us; 165us; 262us; 231us; 262us; 235us; 262us; 239us; 262us; 240us; 262us; 241us; 262us; 245us; 262us; 246us; 262us; 247us; 262us; 248us; 262us; 249us; 262us; 307us; 262us; 311us; 262us; 314us; 262us; 329us; 262us; 337us; 262us; 340us; 262us; 350us; 262us; 352us; 262us; 356us; 262us; 361us; 262us; 365us; 262us; 369us; 262us; 373us; 262us; 378us; 262us; 380us; 262us; 383us; 262us; 385us; 262us; 389us; 262us; 405us; 262us; 412us; 262us; 419us; 262us; 2us; 65535us; 380us; 376us; 385us; 377us; 41us; 65535us; 13us; 244us; 74us; 244us; 77us; 244us; 128us; 244us; 144us; 244us; 146us; 244us; 151us; 244us; 153us; 244us; 161us; 244us; 165us; 244us; 231us; 244us; 235us; 244us; 239us; 244us; 240us; 252us; 241us; 252us; 245us; 252us; 246us; 252us; 247us; 252us; 248us; 252us; 249us; 252us; 307us; 244us; 311us; 244us; 314us; 244us; 329us; 244us; 337us; 244us; 340us; 244us; 350us; 244us; 352us; 244us; 356us; 244us; 361us; 244us; 365us; 244us; 369us; 244us; 373us; 244us; 378us; 244us; 380us; 244us; 383us; 244us; 385us; 244us; 389us; 244us; 405us; 244us; 412us; 244us; 419us; 244us; 0us; 65535us; 41us; 65535us; 13us; 243us; 74us; 243us; 77us; 243us; 128us; 243us; 144us; 243us; 146us; 243us; 151us; 243us; 153us; 243us; 161us; 243us; 165us; 243us; 231us; 243us; 235us; 243us; 239us; 243us; 240us; 251us; 241us; 251us; 245us; 251us; 246us; 251us; 247us; 251us; 248us; 251us; 249us; 251us; 307us; 243us; 311us; 243us; 314us; 243us; 329us; 243us; 337us; 243us; 340us; 243us; 350us; 243us; 352us; 243us; 356us; 243us; 361us; 243us; 365us; 243us; 369us; 243us; 373us; 243us; 378us; 243us; 380us; 243us; 383us; 243us; 385us; 243us; 389us; 243us; 405us; 243us; 412us; 243us; 419us; 243us; 41us; 65535us; 13us; 269us; 74us; 269us; 77us; 269us; 128us; 269us; 144us; 269us; 146us; 269us; 151us; 269us; 153us; 269us; 161us; 269us; 165us; 269us; 231us; 269us; 235us; 269us; 239us; 269us; 240us; 269us; 241us; 269us; 245us; 269us; 246us; 269us; 247us; 269us; 248us; 269us; 249us; 269us; 307us; 269us; 311us; 269us; 314us; 269us; 329us; 269us; 337us; 269us; 340us; 269us; 350us; 269us; 352us; 269us; 356us; 269us; 361us; 269us; 365us; 269us; 369us; 269us; 373us; 269us; 378us; 269us; 380us; 269us; 383us; 269us; 385us; 269us; 389us; 269us; 405us; 269us; 412us; 269us; 419us; 269us; 41us; 65535us; 13us; 270us; 74us; 270us; 77us; 270us; 128us; 270us; 144us; 270us; 146us; 270us; 151us; 270us; 153us; 270us; 161us; 270us; 165us; 270us; 231us; 270us; 235us; 270us; 239us; 270us; 240us; 270us; 241us; 270us; 245us; 270us; 246us; 270us; 247us; 270us; 248us; 270us; 249us; 270us; 307us; 270us; 311us; 270us; 314us; 270us; 329us; 270us; 337us; 270us; 340us; 270us; 350us; 270us; 352us; 270us; 356us; 270us; 361us; 270us; 365us; 270us; 369us; 270us; 373us; 270us; 378us; 270us; 380us; 270us; 383us; 270us; 385us; 270us; 389us; 270us; 405us; 270us; 412us; 270us; 419us; 270us; 2us; 65535us; 402us; 403us; 409us; 410us; 2us; 65535us; 402us; 409us; 409us; 409us; 3us; 65535us; 388us; 394us; 390us; 391us; 416us; 417us; 4us; 65535us; 388us; 415us; 390us; 415us; 398us; 399us; 416us; 415us; 42us; 65535us; 13us; 291us; 74us; 291us; 77us; 291us; 128us; 291us; 144us; 291us; 146us; 291us; 151us; 291us; 153us; 291us; 161us; 291us; 165us; 291us; 231us; 291us; 235us; 291us; 239us; 291us; 240us; 291us; 241us; 291us; 245us; 291us; 246us; 291us; 247us; 291us; 248us; 291us; 249us; 291us; 300us; 305us; 307us; 291us; 311us; 291us; 314us; 291us; 329us; 291us; 337us; 291us; 340us; 291us; 350us; 291us; 352us; 291us; 356us; 291us; 361us; 291us; 365us; 291us; 369us; 291us; 373us; 291us; 378us; 291us; 380us; 291us; 383us; 291us; 385us; 291us; 389us; 291us; 405us; 291us; 412us; 291us; 419us; 291us; 57us; 65535us; 58us; 464us; 73us; 464us; 76us; 464us; 83us; 190us; 97us; 190us; 98us; 190us; 100us; 190us; 101us; 190us; 108us; 190us; 109us; 190us; 111us; 190us; 112us; 190us; 114us; 190us; 116us; 190us; 122us; 190us; 126us; 187us; 140us; 187us; 170us; 187us; 177us; 190us; 182us; 186us; 184us; 186us; 186us; 190us; 187us; 190us; 188us; 190us; 195us; 190us; 196us; 190us; 197us; 190us; 200us; 190us; 203us; 190us; 206us; 190us; 213us; 190us; 218us; 190us; 220us; 190us; 223us; 190us; 225us; 190us; 226us; 190us; 237us; 464us; 238us; 464us; 310us; 464us; 313us; 464us; 327us; 464us; 335us; 464us; 336us; 464us; 443us; 464us; 444us; 464us; 445us; 464us; 446us; 464us; 447us; 464us; 450us; 464us; 460us; 464us; 462us; 464us; 465us; 466us; 466us; 464us; 474us; 464us; 477us; 464us; 480us; 464us; 483us; 464us; 45us; 65535us; 13us; 421us; 74us; 421us; 77us; 421us; 128us; 421us; 144us; 421us; 146us; 421us; 151us; 421us; 153us; 421us; 161us; 421us; 165us; 421us; 231us; 421us; 235us; 421us; 239us; 421us; 240us; 421us; 241us; 421us; 245us; 421us; 246us; 421us; 247us; 421us; 248us; 421us; 249us; 421us; 281us; 282us; 283us; 284us; 300us; 421us; 307us; 421us; 311us; 421us; 314us; 421us; 329us; 421us; 337us; 421us; 340us; 421us; 350us; 421us; 352us; 421us; 356us; 421us; 361us; 421us; 365us; 421us; 369us; 421us; 373us; 421us; 378us; 421us; 380us; 421us; 383us; 421us; 385us; 421us; 389us; 421us; 405us; 421us; 412us; 421us; 419us; 421us; 428us; 429us; 58us; 65535us; 58us; 422us; 73us; 422us; 76us; 422us; 83us; 422us; 97us; 422us; 98us; 422us; 100us; 422us; 101us; 422us; 108us; 422us; 109us; 422us; 111us; 422us; 112us; 422us; 114us; 422us; 116us; 422us; 122us; 422us; 126us; 422us; 140us; 422us; 170us; 422us; 177us; 422us; 182us; 422us; 184us; 422us; 186us; 422us; 187us; 422us; 188us; 422us; 195us; 422us; 196us; 422us; 197us; 422us; 200us; 422us; 203us; 422us; 206us; 422us; 213us; 422us; 218us; 422us; 220us; 422us; 223us; 422us; 225us; 422us; 226us; 422us; 237us; 422us; 238us; 422us; 310us; 422us; 313us; 422us; 327us; 422us; 335us; 422us; 336us; 422us; 435us; 436us; 443us; 422us; 444us; 422us; 445us; 422us; 446us; 422us; 447us; 422us; 450us; 422us; 460us; 422us; 462us; 422us; 465us; 422us; 466us; 422us; 474us; 422us; 477us; 422us; 480us; 422us; 483us; 422us; 3us; 65535us; 73us; 76us; 237us; 238us; 310us; 313us; 3us; 65535us; 369us; 372us; 424us; 440us; 439us; 440us; 7us; 65535us; 327us; 336us; 335us; 336us; 466us; 443us; 474us; 444us; 477us; 445us; 480us; 446us; 483us; 447us; 2us; 65535us; 452us; 453us; 486us; 487us; 23us; 65535us; 58us; 59us; 73us; 437us; 76us; 438us; 237us; 437us; 238us; 438us; 310us; 437us; 313us; 438us; 327us; 441us; 335us; 441us; 336us; 448us; 443us; 448us; 444us; 448us; 445us; 448us; 446us; 448us; 447us; 448us; 450us; 451us; 460us; 461us; 462us; 463us; 466us; 441us; 474us; 441us; 477us; 441us; 480us; 441us; 483us; 441us; 23us; 65535us; 58us; 468us; 73us; 468us; 76us; 468us; 237us; 468us; 238us; 468us; 310us; 468us; 313us; 468us; 327us; 468us; 335us; 468us; 336us; 468us; 443us; 468us; 444us; 468us; 445us; 468us; 446us; 468us; 447us; 468us; 450us; 468us; 460us; 468us; 462us; 468us; 466us; 468us; 474us; 468us; 477us; 468us; 480us; 468us; 483us; 468us; 23us; 65535us; 58us; 469us; 73us; 469us; 76us; 469us; 237us; 469us; 238us; 469us; 310us; 469us; 313us; 469us; 327us; 469us; 335us; 469us; 336us; 469us; 443us; 469us; 444us; 469us; 445us; 469us; 446us; 469us; 447us; 469us; 450us; 469us; 460us; 469us; 462us; 469us; 466us; 469us; 474us; 469us; 477us; 469us; 480us; 469us; 483us; 469us; 23us; 65535us; 58us; 470us; 73us; 470us; 76us; 470us; 237us; 470us; 238us; 470us; 310us; 470us; 313us; 470us; 327us; 470us; 335us; 470us; 336us; 470us; 443us; 470us; 444us; 470us; 445us; 470us; 446us; 470us; 447us; 470us; 450us; 470us; 460us; 470us; 462us; 470us; 466us; 470us; 474us; 470us; 477us; 470us; 480us; 470us; 483us; 470us; 23us; 65535us; 58us; 471us; 73us; 471us; 76us; 471us; 237us; 471us; 238us; 471us; 310us; 471us; 313us; 471us; 327us; 471us; 335us; 471us; 336us; 471us; 443us; 471us; 444us; 471us; 445us; 471us; 446us; 471us; 447us; 471us; 450us; 471us; 460us; 471us; 462us; 471us; 466us; 471us; 474us; 471us; 477us; 471us; 480us; 471us; 483us; 471us; 23us; 65535us; 58us; 472us; 73us; 472us; 76us; 472us; 237us; 472us; 238us; 472us; 310us; 472us; 313us; 472us; 327us; 472us; 335us; 472us; 336us; 472us; 443us; 472us; 444us; 472us; 445us; 472us; 446us; 472us; 447us; 472us; 450us; 472us; 460us; 472us; 462us; 472us; 466us; 472us; 474us; 472us; 477us; 472us; 480us; 472us; 483us; 472us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 11us; 14us; 17us; 20us; 22us; 25us; 28us; 31us; 34us; 40us; 43us; 46us; 49us; 55us; 58us; 61us; 64us; 67us; 70us; 73us; 76us; 78us; 81us; 84us; 87us; 90us; 93us; 96us; 100us; 106us; 112us; 144us; 153us; 203us; 205us; 208us; 243us; 270us; 312us; 354us; 396us; 398us; 400us; 408us; 410us; 452us; 455us; 497us; 499us; 502us; 544us; 586us; 590us; 632us; 674us; 716us; 719us; 761us; 762us; 804us; 846us; 888us; 891us; 894us; 898us; 903us; 946us; 1004us; 1050us; 1109us; 1113us; 1117us; 1125us; 1128us; 1152us; 1176us; 1200us; 1224us; 1248us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 2us; 1us; 2us; 2us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 2us; 1us; 4us; 1us; 4us; 1us; 6us; 1us; 6us; 1us; 7us; 1us; 7us; 1us; 7us; 3us; 8us; 9us; 10us; 1us; 8us; 1us; 8us; 1us; 8us; 1us; 9us; 1us; 9us; 1us; 9us; 1us; 9us; 1us; 10us; 1us; 10us; 1us; 11us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 17us; 1us; 17us; 1us; 18us; 1us; 19us; 1us; 20us; 1us; 21us; 4us; 22us; 23us; 27us; 28us; 1us; 22us; 2us; 23us; 28us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 25us; 1us; 25us; 2us; 25us; 156us; 1us; 25us; 1us; 25us; 1us; 26us; 1us; 27us; 1us; 28us; 1us; 28us; 1us; 29us; 1us; 30us; 1us; 31us; 1us; 32us; 1us; 33us; 1us; 34us; 1us; 35us; 1us; 36us; 2us; 37us; 38us; 2us; 37us; 38us; 1us; 37us; 1us; 37us; 2us; 38us; 208us; 1us; 38us; 1us; 38us; 2us; 39us; 40us; 1us; 40us; 1us; 41us; 1us; 41us; 1us; 41us; 1us; 41us; 1us; 41us; 1us; 41us; 1us; 43us; 1us; 43us; 2us; 44us; 45us; 2us; 44us; 45us; 3us; 44us; 45us; 156us; 1us; 44us; 1us; 44us; 2us; 46us; 47us; 1us; 47us; 2us; 48us; 49us; 2us; 48us; 49us; 1us; 48us; 1us; 48us; 2us; 49us; 102us; 1us; 49us; 1us; 49us; 2us; 50us; 51us; 1us; 51us; 1us; 51us; 4us; 52us; 53us; 54us; 55us; 4us; 52us; 53us; 54us; 55us; 4us; 52us; 53us; 54us; 55us; 2us; 52us; 54us; 1us; 52us; 3us; 53us; 55us; 102us; 2us; 53us; 55us; 1us; 53us; 2us; 54us; 102us; 1us; 54us; 2us; 55us; 102us; 1us; 55us; 1us; 56us; 1us; 56us; 1us; 56us; 1us; 56us; 1us; 56us; 1us; 56us; 1us; 57us; 1us; 57us; 1us; 57us; 1us; 57us; 1us; 57us; 1us; 57us; 1us; 58us; 1us; 58us; 2us; 58us; 156us; 1us; 58us; 2us; 58us; 60us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 61us; 1us; 61us; 1us; 61us; 1us; 62us; 1us; 62us; 1us; 62us; 1us; 62us; 1us; 62us; 1us; 62us; 1us; 63us; 1us; 63us; 2us; 63us; 156us; 1us; 63us; 1us; 63us; 1us; 63us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 66us; 2us; 67us; 69us; 2us; 68us; 70us; 1us; 69us; 1us; 69us; 1us; 69us; 1us; 69us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 71us; 1us; 71us; 1us; 71us; 1us; 71us; 1us; 72us; 1us; 72us; 1us; 72us; 1us; 72us; 1us; 73us; 1us; 73us; 1us; 73us; 1us; 74us; 4us; 75us; 76us; 77us; 78us; 2us; 76us; 78us; 1us; 77us; 1us; 77us; 1us; 78us; 1us; 78us; 2us; 79us; 80us; 3us; 79us; 80us; 82us; 2us; 80us; 102us; 3us; 81us; 83us; 206us; 1us; 82us; 1us; 83us; 1us; 84us; 1us; 85us; 1us; 86us; 8us; 87us; 88us; 89us; 90us; 92us; 93us; 98us; 99us; 7us; 87us; 88us; 90us; 92us; 93us; 98us; 99us; 1us; 87us; 1us; 87us; 1us; 87us; 1us; 88us; 1us; 88us; 1us; 88us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 90us; 1us; 90us; 1us; 90us; 1us; 91us; 1us; 92us; 1us; 92us; 1us; 92us; 1us; 93us; 1us; 93us; 1us; 93us; 1us; 94us; 1us; 95us; 2us; 96us; 97us; 1us; 96us; 2us; 97us; 102us; 1us; 97us; 1us; 98us; 2us; 99us; 102us; 1us; 99us; 1us; 100us; 1us; 100us; 1us; 100us; 1us; 100us; 1us; 101us; 1us; 102us; 1us; 103us; 2us; 103us; 105us; 1us; 103us; 1us; 104us; 1us; 105us; 1us; 105us; 2us; 106us; 107us; 3us; 106us; 107us; 208us; 1us; 107us; 4us; 107us; 112us; 113us; 114us; 4us; 108us; 112us; 113us; 114us; 1us; 109us; 1us; 110us; 1us; 111us; 4us; 112us; 113us; 114us; 116us; 4us; 112us; 113us; 114us; 176us; 4us; 112us; 113us; 114us; 177us; 5us; 112us; 113us; 114us; 180us; 181us; 5us; 112us; 113us; 114us; 184us; 185us; 1us; 112us; 1us; 113us; 1us; 114us; 1us; 117us; 2us; 117us; 171us; 1us; 118us; 1us; 119us; 1us; 120us; 1us; 121us; 1us; 122us; 1us; 123us; 1us; 124us; 1us; 125us; 1us; 126us; 1us; 126us; 1us; 127us; 1us; 127us; 1us; 128us; 1us; 128us; 1us; 129us; 1us; 130us; 1us; 131us; 1us; 131us; 1us; 132us; 1us; 133us; 1us; 134us; 1us; 135us; 1us; 136us; 1us; 137us; 1us; 138us; 1us; 139us; 1us; 140us; 1us; 140us; 1us; 141us; 1us; 141us; 1us; 142us; 1us; 143us; 1us; 144us; 1us; 145us; 1us; 146us; 1us; 147us; 1us; 148us; 1us; 149us; 2us; 149us; 156us; 1us; 149us; 2us; 150us; 151us; 3us; 150us; 151us; 156us; 2us; 150us; 151us; 2us; 150us; 151us; 2us; 150us; 151us; 3us; 150us; 151us; 158us; 1us; 150us; 1us; 150us; 1us; 150us; 1us; 151us; 1us; 152us; 2us; 152us; 156us; 1us; 152us; 1us; 152us; 1us; 152us; 2us; 153us; 154us; 1us; 153us; 1us; 153us; 2us; 154us; 208us; 1us; 154us; 1us; 154us; 1us; 156us; 1us; 158us; 1us; 159us; 1us; 159us; 1us; 159us; 2us; 160us; 161us; 1us; 161us; 2us; 162us; 163us; 2us; 162us; 163us; 3us; 162us; 163us; 165us; 1us; 162us; 2us; 163us; 166us; 1us; 163us; 1us; 163us; 1us; 163us; 1us; 163us; 1us; 163us; 1us; 164us; 1us; 165us; 1us; 166us; 2us; 166us; 213us; 1us; 166us; 1us; 166us; 1us; 166us; 1us; 167us; 1us; 167us; 1us; 167us; 1us; 167us; 1us; 167us; 1us; 167us; 1us; 168us; 1us; 168us; 1us; 168us; 1us; 168us; 3us; 169us; 170us; 171us; 1us; 169us; 1us; 169us; 1us; 169us; 1us; 169us; 2us; 170us; 171us; 2us; 170us; 171us; 1us; 170us; 1us; 170us; 1us; 170us; 1us; 171us; 1us; 172us; 1us; 172us; 1us; 172us; 1us; 172us; 1us; 173us; 1us; 173us; 1us; 173us; 1us; 173us; 2us; 174us; 175us; 1us; 174us; 1us; 174us; 1us; 175us; 1us; 175us; 1us; 175us; 1us; 175us; 2us; 177us; 179us; 2us; 177us; 181us; 1us; 177us; 4us; 178us; 179us; 180us; 181us; 4us; 178us; 179us; 180us; 181us; 1us; 178us; 1us; 179us; 2us; 180us; 181us; 1us; 180us; 1us; 181us; 1us; 181us; 4us; 184us; 185us; 186us; 187us; 4us; 184us; 185us; 186us; 187us; 2us; 184us; 185us; 1us; 184us; 1us; 184us; 1us; 184us; 1us; 185us; 1us; 186us; 1us; 186us; 1us; 187us; 1us; 188us; 1us; 188us; 1us; 188us; 1us; 188us; 1us; 189us; 1us; 189us; 1us; 189us; 1us; 189us; 1us; 189us; 1us; 189us; 1us; 189us; 1us; 189us; 2us; 190us; 191us; 1us; 191us; 1us; 192us; 1us; 192us; 1us; 192us; 1us; 192us; 2us; 193us; 194us; 1us; 194us; 1us; 194us; 1us; 195us; 1us; 195us; 1us; 195us; 1us; 196us; 1us; 197us; 2us; 198us; 202us; 3us; 198us; 202us; 210us; 1us; 199us; 1us; 200us; 1us; 201us; 1us; 202us; 1us; 202us; 1us; 203us; 1us; 204us; 1us; 205us; 1us; 206us; 3us; 206us; 223us; 224us; 1us; 206us; 1us; 206us; 1us; 207us; 1us; 208us; 1us; 210us; 1us; 210us; 2us; 211us; 212us; 1us; 212us; 2us; 213us; 226us; 2us; 213us; 232us; 2us; 213us; 233us; 2us; 213us; 234us; 2us; 213us; 235us; 1us; 213us; 2us; 214us; 215us; 2us; 214us; 215us; 2us; 214us; 215us; 1us; 215us; 1us; 215us; 1us; 216us; 1us; 217us; 1us; 218us; 1us; 219us; 1us; 220us; 1us; 221us; 1us; 222us; 1us; 222us; 1us; 224us; 1us; 224us; 1us; 225us; 1us; 226us; 1us; 226us; 1us; 226us; 1us; 227us; 1us; 228us; 1us; 229us; 1us; 230us; 1us; 231us; 1us; 232us; 1us; 232us; 1us; 232us; 1us; 233us; 1us; 233us; 1us; 233us; 1us; 234us; 1us; 234us; 1us; 234us; 1us; 235us; 1us; 235us; 1us; 235us; 1us; 236us; 1us; 236us; 1us; 236us; 1us; 236us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 7us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 26us; 28us; 30us; 32us; 36us; 38us; 40us; 42us; 44us; 46us; 48us; 50us; 52us; 54us; 56us; 58us; 60us; 62us; 64us; 66us; 68us; 70us; 72us; 74us; 76us; 78us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 107us; 109us; 112us; 114us; 116us; 118us; 120us; 122us; 125us; 127us; 129us; 131us; 133us; 135us; 137us; 139us; 141us; 143us; 145us; 147us; 149us; 151us; 153us; 156us; 159us; 161us; 163us; 166us; 168us; 170us; 173us; 175us; 177us; 179us; 181us; 183us; 185us; 187us; 189us; 191us; 194us; 197us; 201us; 203us; 205us; 208us; 210us; 213us; 216us; 218us; 220us; 223us; 225us; 227us; 230us; 232us; 234us; 239us; 244us; 249us; 252us; 254us; 258us; 261us; 263us; 266us; 268us; 271us; 273us; 275us; 277us; 279us; 281us; 283us; 285us; 287us; 289us; 291us; 293us; 295us; 297us; 299us; 301us; 304us; 306us; 309us; 311us; 313us; 315us; 317us; 319us; 321us; 323us; 325us; 327us; 329us; 331us; 333us; 335us; 337us; 339us; 342us; 344us; 346us; 348us; 350us; 352us; 354us; 356us; 359us; 362us; 364us; 366us; 368us; 370us; 372us; 374us; 376us; 378us; 380us; 382us; 384us; 386us; 388us; 390us; 392us; 394us; 396us; 398us; 400us; 402us; 407us; 410us; 412us; 414us; 416us; 418us; 421us; 425us; 428us; 432us; 434us; 436us; 438us; 440us; 442us; 451us; 459us; 461us; 463us; 465us; 467us; 469us; 471us; 473us; 475us; 477us; 479us; 481us; 483us; 485us; 487us; 489us; 491us; 493us; 495us; 497us; 499us; 501us; 504us; 506us; 509us; 511us; 513us; 516us; 518us; 520us; 522us; 524us; 526us; 528us; 530us; 532us; 535us; 537us; 539us; 541us; 543us; 546us; 550us; 552us; 557us; 562us; 564us; 566us; 568us; 573us; 578us; 583us; 589us; 595us; 597us; 599us; 601us; 603us; 606us; 608us; 610us; 612us; 614us; 616us; 618us; 620us; 622us; 624us; 626us; 628us; 630us; 632us; 634us; 636us; 638us; 640us; 642us; 644us; 646us; 648us; 650us; 652us; 654us; 656us; 658us; 660us; 662us; 664us; 666us; 668us; 670us; 672us; 674us; 676us; 678us; 680us; 682us; 685us; 687us; 690us; 694us; 697us; 700us; 703us; 707us; 709us; 711us; 713us; 715us; 717us; 720us; 722us; 724us; 726us; 729us; 731us; 733us; 736us; 738us; 740us; 742us; 744us; 746us; 748us; 750us; 753us; 755us; 758us; 761us; 765us; 767us; 770us; 772us; 774us; 776us; 778us; 780us; 782us; 784us; 786us; 789us; 791us; 793us; 795us; 797us; 799us; 801us; 803us; 805us; 807us; 809us; 811us; 813us; 815us; 819us; 821us; 823us; 825us; 827us; 830us; 833us; 835us; 837us; 839us; 841us; 843us; 845us; 847us; 849us; 851us; 853us; 855us; 857us; 860us; 862us; 864us; 866us; 868us; 870us; 872us; 875us; 878us; 880us; 885us; 890us; 892us; 894us; 897us; 899us; 901us; 903us; 908us; 913us; 916us; 918us; 920us; 922us; 924us; 926us; 928us; 930us; 932us; 934us; 936us; 938us; 940us; 942us; 944us; 946us; 948us; 950us; 952us; 954us; 957us; 959us; 961us; 963us; 965us; 967us; 970us; 972us; 974us; 976us; 978us; 980us; 982us; 984us; 987us; 991us; 993us; 995us; 997us; 999us; 1001us; 1003us; 1005us; 1007us; 1009us; 1013us; 1015us; 1017us; 1019us; 1021us; 1023us; 1025us; 1028us; 1030us; 1033us; 1036us; 1039us; 1042us; 1045us; 1047us; 1050us; 1053us; 1056us; 1058us; 1060us; 1062us; 1064us; 1066us; 1068us; 1070us; 1072us; 1074us; 1076us; 1078us; 1080us; 1082us; 1084us; 1086us; 1088us; 1090us; 1092us; 1094us; 1096us; 1098us; 1100us; 1102us; 1104us; 1106us; 1108us; 1110us; 1112us; 1114us; 1116us; 1118us; 1120us; 1122us; 1124us; 1126us; 1128us; |]
let _fsyacc_action_rows = 489
let _fsyacc_actionTableElements = [|1us; 16387us; 69us; 15us; 0us; 49152us; 13us; 16389us; 44us; 72us; 45us; 81us; 52us; 142us; 53us; 148us; 56us; 172us; 57us; 130us; 58us; 118us; 59us; 124us; 60us; 106us; 61us; 168us; 62us; 55us; 63us; 49us; 64us; 89us; 2us; 32768us; 65us; 12us; 66us; 38us; 1us; 32768us; 107us; 5us; 0us; 16385us; 1us; 32768us; 107us; 7us; 0us; 16386us; 1us; 16387us; 69us; 15us; 0us; 16388us; 13us; 16389us; 44us; 72us; 45us; 81us; 52us; 142us; 53us; 148us; 56us; 172us; 57us; 130us; 58us; 118us; 59us; 124us; 60us; 106us; 61us; 168us; 62us; 55us; 63us; 49us; 64us; 89us; 0us; 16390us; 1us; 32768us; 72us; 13us; 37us; 16499us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 0us; 16391us; 4us; 32768us; 45us; 23us; 92us; 40us; 99us; 25us; 106us; 27us; 1us; 32768us; 68us; 17us; 1us; 32768us; 106us; 18us; 0us; 16392us; 2us; 32768us; 99us; 25us; 106us; 27us; 1us; 32768us; 68us; 21us; 1us; 32768us; 106us; 22us; 0us; 16393us; 1us; 32768us; 99us; 24us; 0us; 16394us; 0us; 16395us; 0us; 16396us; 1us; 32768us; 75us; 28us; 1us; 32768us; 106us; 29us; 1us; 32768us; 75us; 30us; 1us; 32768us; 106us; 31us; 1us; 32768us; 79us; 32us; 1us; 32768us; 101us; 33us; 1us; 32768us; 75us; 34us; 1us; 32768us; 101us; 35us; 1us; 32768us; 75us; 36us; 1us; 32768us; 101us; 37us; 0us; 16397us; 1us; 32768us; 92us; 40us; 0us; 16398us; 3us; 16400us; 103us; 47us; 105us; 46us; 106us; 45us; 1us; 32768us; 93us; 42us; 0us; 16399us; 3us; 16400us; 103us; 47us; 105us; 46us; 106us; 45us; 0us; 16401us; 0us; 16402us; 0us; 16403us; 0us; 16404us; 0us; 16405us; 3us; 32768us; 44us; 72us; 64us; 89us; 92us; 51us; 0us; 16406us; 2us; 32768us; 44us; 72us; 64us; 89us; 1us; 32768us; 93us; 53us; 0us; 16407us; 0us; 16408us; 1us; 32768us; 105us; 56us; 0us; 16539us; 2us; 32768us; 72us; 58us; 106us; 316us; 17us; 32768us; 2us; 454us; 3us; 455us; 7us; 473us; 8us; 476us; 9us; 479us; 10us; 482us; 13us; 485us; 70us; 460us; 71us; 459us; 94us; 465us; 99us; 458us; 100us; 457us; 101us; 456us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 434us; 0us; 16409us; 0us; 16410us; 0us; 16411us; 1us; 32768us; 93us; 63us; 0us; 16412us; 0us; 16413us; 0us; 16414us; 0us; 16415us; 0us; 16416us; 0us; 16417us; 0us; 16418us; 0us; 16419us; 0us; 16420us; 1us; 32768us; 106us; 73us; 18us; 32768us; 2us; 454us; 3us; 455us; 7us; 473us; 8us; 476us; 9us; 479us; 10us; 482us; 13us; 485us; 70us; 460us; 71us; 459us; 72us; 74us; 94us; 465us; 99us; 458us; 100us; 457us; 101us; 456us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 434us; 37us; 16499us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 0us; 16421us; 18us; 32768us; 2us; 454us; 3us; 455us; 7us; 473us; 8us; 476us; 9us; 479us; 10us; 482us; 13us; 485us; 70us; 460us; 71us; 459us; 72us; 77us; 94us; 465us; 99us; 458us; 100us; 457us; 101us; 456us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 434us; 37us; 16499us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 0us; 16422us; 1us; 16423us; 44us; 72us; 0us; 16424us; 1us; 32768us; 106us; 82us; 1us; 32768us; 79us; 83us; 13us; 32768us; 1us; 209us; 2us; 193us; 3us; 194us; 75us; 217us; 83us; 192us; 90us; 218us; 92us; 225us; 94us; 195us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 1us; 32768us; 72us; 85us; 1us; 16426us; 98us; 87us; 0us; 16425us; 1us; 16426us; 98us; 87us; 0us; 16427us; 1us; 32768us; 105us; 90us; 0us; 16539us; 2us; 16429us; 72us; 92us; 106us; 316us; 1us; 32768us; 105us; 96us; 0us; 16428us; 1us; 16430us; 64us; 89us; 0us; 16431us; 1us; 32768us; 79us; 97us; 14us; 32768us; 1us; 209us; 2us; 193us; 3us; 194us; 75us; 217us; 82us; 98us; 83us; 192us; 90us; 218us; 92us; 225us; 94us; 195us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 13us; 32768us; 1us; 209us; 2us; 193us; 3us; 194us; 75us; 217us; 83us; 192us; 90us; 218us; 92us; 225us; 94us; 195us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 0us; 16432us; 14us; 32768us; 1us; 209us; 2us; 193us; 3us; 194us; 75us; 217us; 82us; 101us; 83us; 192us; 90us; 218us; 92us; 225us; 94us; 195us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 13us; 32768us; 1us; 209us; 2us; 193us; 3us; 194us; 75us; 217us; 83us; 192us; 90us; 218us; 92us; 225us; 94us; 195us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 0us; 16433us; 1us; 16434us; 74us; 104us; 1us; 32768us; 105us; 96us; 0us; 16435us; 1us; 32768us; 102us; 107us; 1us; 32768us; 72us; 108us; 14us; 32768us; 1us; 209us; 2us; 193us; 3us; 194us; 75us; 217us; 83us; 192us; 85us; 109us; 90us; 218us; 92us; 225us; 94us; 195us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 14us; 32768us; 1us; 209us; 2us; 193us; 3us; 194us; 75us; 217us; 82us; 110us; 83us; 192us; 90us; 218us; 92us; 225us; 94us; 195us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 0us; 16436us; 14us; 32768us; 1us; 209us; 2us; 193us; 3us; 194us; 75us; 217us; 83us; 192us; 85us; 112us; 90us; 218us; 92us; 225us; 94us; 195us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 14us; 32768us; 1us; 209us; 2us; 193us; 3us; 194us; 75us; 217us; 82us; 113us; 83us; 192us; 90us; 218us; 92us; 225us; 94us; 195us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 0us; 16437us; 14us; 32768us; 1us; 209us; 2us; 193us; 3us; 194us; 75us; 217us; 82us; 115us; 83us; 192us; 90us; 218us; 92us; 225us; 94us; 195us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 0us; 16438us; 14us; 32768us; 1us; 209us; 2us; 193us; 3us; 194us; 75us; 217us; 82us; 117us; 83us; 192us; 90us; 218us; 92us; 225us; 94us; 195us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 0us; 16439us; 1us; 32768us; 106us; 119us; 1us; 32768us; 68us; 120us; 1us; 32768us; 103us; 121us; 1us; 32768us; 79us; 122us; 13us; 32768us; 1us; 209us; 2us; 193us; 3us; 194us; 75us; 217us; 83us; 192us; 90us; 218us; 92us; 225us; 94us; 195us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 0us; 16440us; 1us; 32768us; 106us; 125us; 1us; 32768us; 79us; 126us; 13us; 32768us; 1us; 209us; 2us; 193us; 3us; 194us; 75us; 217us; 83us; 192us; 90us; 218us; 92us; 225us; 94us; 195us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 1us; 32768us; 72us; 128us; 37us; 16499us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 0us; 16441us; 1us; 32768us; 104us; 131us; 0us; 16539us; 2us; 32768us; 92us; 133us; 106us; 316us; 1us; 32768us; 30us; 138us; 2us; 32768us; 30us; 138us; 93us; 135us; 0us; 16442us; 0us; 16443us; 0us; 16444us; 1us; 32768us; 104us; 139us; 1us; 32768us; 79us; 140us; 13us; 32768us; 1us; 209us; 2us; 193us; 3us; 194us; 75us; 217us; 83us; 192us; 90us; 218us; 92us; 225us; 94us; 195us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 0us; 16445us; 1us; 32768us; 102us; 143us; 1us; 32768us; 72us; 144us; 37us; 16499us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 5us; 32768us; 0us; 158us; 48us; 157us; 49us; 159us; 50us; 155us; 51us; 156us; 37us; 16499us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 0us; 16446us; 1us; 32768us; 102us; 149us; 0us; 16539us; 2us; 32768us; 72us; 151us; 106us; 316us; 37us; 16499us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 5us; 32768us; 0us; 158us; 48us; 157us; 49us; 159us; 50us; 155us; 51us; 156us; 37us; 16499us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 0us; 16447us; 0us; 16448us; 0us; 16449us; 0us; 16450us; 1us; 16451us; 30us; 160us; 1us; 16452us; 30us; 164us; 1us; 32768us; 92us; 161us; 37us; 16499us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 1us; 32768us; 93us; 163us; 0us; 16453us; 1us; 32768us; 92us; 165us; 37us; 16499us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 1us; 32768us; 93us; 167us; 0us; 16454us; 1us; 32768us; 106us; 169us; 1us; 32768us; 79us; 170us; 13us; 32768us; 1us; 209us; 2us; 193us; 3us; 194us; 75us; 217us; 83us; 192us; 90us; 218us; 92us; 225us; 94us; 195us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 0us; 16455us; 1us; 32768us; 105us; 173us; 1us; 32768us; 72us; 174us; 1us; 32768us; 106us; 175us; 0us; 16456us; 1us; 32768us; 85us; 177us; 13us; 32768us; 1us; 209us; 2us; 193us; 3us; 194us; 75us; 217us; 83us; 192us; 90us; 218us; 92us; 225us; 94us; 195us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 0us; 16457us; 0us; 16458us; 2us; 16459us; 78us; 181us; 81us; 182us; 1us; 16460us; 81us; 184us; 4us; 32768us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 433us; 0us; 16461us; 4us; 32768us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 433us; 0us; 16462us; 13us; 16463us; 1us; 209us; 2us; 193us; 3us; 194us; 75us; 217us; 83us; 192us; 90us; 218us; 92us; 225us; 94us; 195us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 31us; 16463us; 1us; 209us; 2us; 193us; 3us; 194us; 30us; 16466us; 44us; 16466us; 45us; 16466us; 52us; 16466us; 53us; 16466us; 56us; 16466us; 57us; 16466us; 58us; 16466us; 59us; 16466us; 60us; 16466us; 61us; 16466us; 62us; 16466us; 63us; 16466us; 64us; 16466us; 65us; 16466us; 66us; 16466us; 72us; 16466us; 75us; 217us; 83us; 192us; 90us; 218us; 92us; 225us; 93us; 16466us; 94us; 195us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 13us; 16464us; 1us; 209us; 2us; 193us; 3us; 194us; 75us; 217us; 83us; 192us; 90us; 218us; 92us; 225us; 94us; 195us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 2us; 16465us; 73us; 191us; 80us; 435us; 0us; 16466us; 0us; 16467us; 0us; 16468us; 0us; 16469us; 0us; 16470us; 14us; 32768us; 1us; 209us; 2us; 193us; 3us; 194us; 6us; 203us; 75us; 217us; 83us; 192us; 90us; 218us; 92us; 225us; 94us; 195us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 19us; 32768us; 1us; 209us; 2us; 193us; 3us; 194us; 4us; 197us; 5us; 200us; 74us; 206us; 75us; 217us; 76us; 213us; 78us; 210us; 83us; 192us; 90us; 218us; 92us; 225us; 94us; 195us; 95us; 222us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 13us; 32768us; 1us; 209us; 2us; 193us; 3us; 194us; 75us; 217us; 83us; 192us; 90us; 218us; 92us; 225us; 94us; 195us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 1us; 32768us; 95us; 199us; 0us; 16471us; 13us; 32768us; 1us; 209us; 2us; 193us; 3us; 194us; 75us; 217us; 83us; 192us; 90us; 218us; 92us; 225us; 94us; 195us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 1us; 32768us; 95us; 202us; 0us; 16472us; 13us; 32768us; 1us; 209us; 2us; 193us; 3us; 194us; 75us; 217us; 83us; 192us; 90us; 218us; 92us; 225us; 94us; 195us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 1us; 32768us; 95us; 205us; 0us; 16473us; 13us; 32768us; 1us; 209us; 2us; 193us; 3us; 194us; 75us; 217us; 83us; 192us; 90us; 218us; 92us; 225us; 94us; 195us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 1us; 32768us; 95us; 208us; 0us; 16474us; 0us; 16475us; 1us; 32768us; 101us; 211us; 1us; 32768us; 95us; 212us; 0us; 16476us; 13us; 32768us; 1us; 209us; 2us; 193us; 3us; 194us; 75us; 217us; 83us; 192us; 90us; 218us; 92us; 225us; 94us; 195us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 1us; 32768us; 95us; 215us; 0us; 16477us; 0us; 16478us; 0us; 16479us; 14us; 32768us; 1us; 209us; 2us; 193us; 3us; 194us; 75us; 217us; 83us; 192us; 90us; 218us; 91us; 219us; 92us; 225us; 94us; 195us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 0us; 16480us; 14us; 32768us; 1us; 209us; 2us; 193us; 3us; 194us; 75us; 217us; 83us; 192us; 90us; 218us; 91us; 221us; 92us; 225us; 94us; 195us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 0us; 16481us; 0us; 16482us; 14us; 32768us; 1us; 209us; 2us; 193us; 3us; 194us; 75us; 217us; 83us; 192us; 90us; 218us; 92us; 225us; 94us; 195us; 95us; 224us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 0us; 16483us; 13us; 32768us; 1us; 209us; 2us; 193us; 3us; 194us; 75us; 217us; 83us; 192us; 90us; 218us; 92us; 225us; 94us; 195us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 13us; 32768us; 1us; 209us; 2us; 193us; 3us; 194us; 75us; 217us; 83us; 192us; 90us; 218us; 92us; 225us; 94us; 195us; 101us; 216us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 189us; 1us; 32768us; 93us; 228us; 0us; 16484us; 0us; 16485us; 0us; 16486us; 38us; 32768us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 47us; 237us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 2us; 32768us; 82us; 235us; 93us; 233us; 0us; 16487us; 0us; 16488us; 38us; 32768us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 47us; 237us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 0us; 16489us; 17us; 32768us; 2us; 454us; 3us; 455us; 7us; 473us; 8us; 476us; 9us; 479us; 10us; 482us; 13us; 485us; 70us; 460us; 71us; 459us; 94us; 465us; 99us; 458us; 100us; 457us; 101us; 456us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 434us; 18us; 16490us; 2us; 454us; 3us; 455us; 7us; 473us; 8us; 476us; 9us; 479us; 10us; 482us; 13us; 485us; 70us; 460us; 71us; 459us; 72us; 239us; 94us; 465us; 99us; 458us; 100us; 457us; 101us; 456us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 434us; 37us; 32768us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 37us; 16491us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 37us; 16492us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 0us; 16493us; 0us; 16494us; 0us; 16495us; 37us; 16500us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 37us; 16560us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 37us; 16561us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 39us; 32768us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 30us; 385us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 93us; 384us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 39us; 32768us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 30us; 390us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 93us; 393us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 0us; 16496us; 0us; 16497us; 0us; 16498us; 0us; 16501us; 1us; 16501us; 74us; 350us; 0us; 16502us; 0us; 16503us; 0us; 16504us; 0us; 16505us; 0us; 16506us; 0us; 16507us; 0us; 16508us; 0us; 16509us; 1us; 32768us; 106us; 264us; 0us; 16510us; 1us; 32768us; 106us; 266us; 0us; 16511us; 1us; 32768us; 106us; 268us; 0us; 16512us; 0us; 16513us; 0us; 16514us; 1us; 32768us; 92us; 231us; 0us; 16515us; 0us; 16516us; 0us; 16517us; 0us; 16518us; 0us; 16519us; 0us; 16520us; 0us; 16521us; 0us; 16522us; 0us; 16523us; 4us; 32768us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 0us; 16524us; 4us; 32768us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 0us; 16525us; 0us; 16526us; 0us; 16527us; 0us; 16528us; 0us; 16529us; 0us; 16530us; 0us; 16531us; 0us; 16532us; 0us; 16539us; 2us; 32768us; 92us; 231us; 106us; 316us; 0us; 16533us; 0us; 16539us; 2us; 32768us; 92us; 231us; 106us; 316us; 1us; 32768us; 30us; 298us; 1us; 32768us; 92us; 299us; 0us; 16541us; 6us; 32768us; 31us; 310us; 93us; 304us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 1us; 32768us; 82us; 302us; 1us; 32768us; 93us; 303us; 0us; 16534us; 0us; 16535us; 0us; 16539us; 2us; 32768us; 85us; 307us; 106us; 316us; 37us; 16499us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 1us; 32768us; 82us; 309us; 0us; 16536us; 18us; 32768us; 2us; 454us; 3us; 455us; 7us; 473us; 8us; 476us; 9us; 479us; 10us; 482us; 13us; 485us; 70us; 460us; 71us; 459us; 85us; 311us; 94us; 465us; 99us; 458us; 100us; 457us; 101us; 456us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 434us; 37us; 16499us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 0us; 16537us; 18us; 32768us; 2us; 454us; 3us; 455us; 7us; 473us; 8us; 476us; 9us; 479us; 10us; 482us; 13us; 485us; 70us; 460us; 71us; 459us; 85us; 314us; 94us; 465us; 99us; 458us; 100us; 457us; 101us; 456us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 434us; 37us; 16499us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 0us; 16538us; 0us; 16540us; 0us; 16542us; 1us; 32768us; 104us; 321us; 1us; 32768us; 92us; 231us; 0us; 16543us; 1us; 16544us; 104us; 321us; 0us; 16545us; 1us; 32768us; 92us; 324us; 1us; 32768us; 74us; 335us; 2us; 32768us; 74us; 327us; 93us; 326us; 0us; 16546us; 18us; 32768us; 2us; 454us; 3us; 455us; 7us; 473us; 8us; 476us; 9us; 479us; 10us; 482us; 13us; 485us; 26us; 328us; 70us; 460us; 71us; 459us; 94us; 465us; 99us; 458us; 100us; 457us; 101us; 456us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 434us; 1us; 32768us; 85us; 329us; 37us; 16499us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 1us; 32768us; 82us; 331us; 1us; 32768us; 93us; 332us; 0us; 16547us; 0us; 16548us; 0us; 16549us; 17us; 32768us; 2us; 454us; 3us; 455us; 7us; 473us; 8us; 476us; 9us; 479us; 10us; 482us; 13us; 485us; 70us; 460us; 71us; 459us; 94us; 465us; 99us; 458us; 100us; 457us; 101us; 456us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 434us; 18us; 32768us; 2us; 454us; 3us; 455us; 7us; 473us; 8us; 476us; 9us; 479us; 10us; 482us; 13us; 485us; 70us; 460us; 71us; 459us; 85us; 337us; 94us; 465us; 99us; 458us; 100us; 457us; 101us; 456us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 434us; 37us; 16499us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 1us; 32768us; 82us; 339us; 0us; 16550us; 37us; 16499us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 1us; 32768us; 25us; 342us; 1us; 32768us; 92us; 231us; 1us; 32768us; 26us; 344us; 1us; 32768us; 92us; 231us; 0us; 16551us; 1us; 32768us; 92us; 347us; 1us; 32768us; 74us; 350us; 1us; 32768us; 93us; 349us; 0us; 16552us; 38us; 16499us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 26us; 351us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 1us; 32768us; 85us; 352us; 37us; 16499us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 1us; 32768us; 82us; 354us; 0us; 16553us; 1us; 32768us; 85us; 356us; 37us; 16499us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 1us; 32768us; 82us; 358us; 1us; 32768us; 74us; 350us; 0us; 16554us; 0us; 16555us; 37us; 16499us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 1us; 32768us; 25us; 363us; 1us; 32768us; 92us; 231us; 0us; 16556us; 37us; 16499us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 1us; 32768us; 25us; 367us; 1us; 32768us; 92us; 231us; 0us; 16557us; 38us; 16499us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 85us; 16593us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 424us; 1us; 32768us; 95us; 371us; 0us; 16558us; 1us; 32768us; 85us; 373us; 37us; 16499us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 1us; 32768us; 95us; 375us; 0us; 16559us; 2us; 32768us; 81us; 378us; 93us; 382us; 2us; 32768us; 81us; 378us; 93us; 386us; 37us; 32768us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 1us; 32768us; 92us; 380us; 39us; 32768us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 73us; 383us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 93us; 381us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 0us; 16562us; 0us; 16563us; 37us; 32768us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 0us; 16564us; 37us; 32768us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 0us; 16565us; 1us; 32768us; 92us; 388us; 3us; 32768us; 73us; 389us; 93us; 396us; 106us; 418us; 37us; 32768us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 1us; 32768us; 106us; 418us; 1us; 32768us; 93us; 392us; 0us; 16568us; 0us; 16569us; 1us; 32768us; 93us; 395us; 0us; 16570us; 0us; 16571us; 1us; 32768us; 92us; 398us; 1us; 32768us; 106us; 418us; 1us; 32768us; 93us; 400us; 0us; 16572us; 1us; 32768us; 92us; 402us; 1us; 32768us; 106us; 411us; 1us; 32768us; 26us; 404us; 1us; 32768us; 85us; 405us; 37us; 16499us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 1us; 32768us; 82us; 407us; 1us; 32768us; 93us; 408us; 0us; 16573us; 1us; 16574us; 106us; 411us; 0us; 16575us; 1us; 32768us; 85us; 412us; 37us; 16499us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 1us; 32768us; 82us; 414us; 0us; 16576us; 1us; 16577us; 81us; 416us; 1us; 32768us; 106us; 418us; 0us; 16578us; 1us; 32768us; 72us; 419us; 37us; 16499us; 2us; 286us; 3us; 287us; 7us; 379us; 12us; 401us; 13us; 387us; 14us; 397us; 21us; 340us; 22us; 361us; 23us; 346us; 24us; 365us; 27us; 285us; 28us; 323us; 29us; 318us; 32us; 295us; 33us; 280us; 34us; 281us; 35us; 283us; 36us; 274us; 37us; 275us; 38us; 276us; 39us; 277us; 40us; 278us; 41us; 279us; 42us; 271us; 43us; 292us; 86us; 267us; 88us; 265us; 89us; 263us; 92us; 231us; 94us; 369us; 99us; 290us; 100us; 289us; 101us; 288us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 0us; 16579us; 0us; 16580us; 0us; 16581us; 1us; 16582us; 80us; 428us; 3us; 16582us; 80us; 428us; 85us; 16593us; 106us; 439us; 0us; 16583us; 0us; 16584us; 0us; 16585us; 4us; 32768us; 103us; 427us; 104us; 426us; 105us; 425us; 106us; 423us; 0us; 16586us; 0us; 16587us; 0us; 16588us; 0us; 16589us; 1us; 32768us; 80us; 435us; 2us; 16607us; 0us; 462us; 80us; 435us; 4us; 32768us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 433us; 0us; 16590us; 0us; 16591us; 0us; 16592us; 1us; 16593us; 106us; 439us; 0us; 16594us; 1us; 16595us; 73us; 442us; 0us; 16596us; 18us; 32768us; 2us; 454us; 3us; 455us; 7us; 473us; 8us; 476us; 9us; 479us; 10us; 482us; 13us; 485us; 70us; 460us; 71us; 459us; 94us; 465us; 95us; 467us; 99us; 458us; 100us; 457us; 101us; 456us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 434us; 18us; 32768us; 2us; 454us; 3us; 455us; 7us; 473us; 8us; 476us; 9us; 479us; 10us; 482us; 13us; 485us; 70us; 460us; 71us; 459us; 93us; 475us; 94us; 465us; 99us; 458us; 100us; 457us; 101us; 456us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 434us; 18us; 32768us; 2us; 454us; 3us; 455us; 7us; 473us; 8us; 476us; 9us; 479us; 10us; 482us; 13us; 485us; 70us; 460us; 71us; 459us; 93us; 478us; 94us; 465us; 99us; 458us; 100us; 457us; 101us; 456us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 434us; 18us; 32768us; 2us; 454us; 3us; 455us; 7us; 473us; 8us; 476us; 9us; 479us; 10us; 482us; 13us; 485us; 70us; 460us; 71us; 459us; 93us; 481us; 94us; 465us; 99us; 458us; 100us; 457us; 101us; 456us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 434us; 18us; 32768us; 2us; 454us; 3us; 455us; 7us; 473us; 8us; 476us; 9us; 479us; 10us; 482us; 13us; 485us; 70us; 460us; 71us; 459us; 93us; 484us; 94us; 465us; 99us; 458us; 100us; 457us; 101us; 456us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 434us; 0us; 16597us; 1us; 32768us; 72us; 450us; 17us; 32768us; 2us; 454us; 3us; 455us; 7us; 473us; 8us; 476us; 9us; 479us; 10us; 482us; 13us; 485us; 70us; 460us; 71us; 459us; 94us; 465us; 99us; 458us; 100us; 457us; 101us; 456us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 434us; 1us; 16598us; 81us; 452us; 1us; 32768us; 106us; 449us; 0us; 16599us; 0us; 16600us; 0us; 16601us; 0us; 16602us; 0us; 16603us; 0us; 16604us; 0us; 16605us; 17us; 32768us; 2us; 454us; 3us; 455us; 7us; 473us; 8us; 476us; 9us; 479us; 10us; 482us; 13us; 485us; 70us; 460us; 71us; 459us; 94us; 465us; 99us; 458us; 100us; 457us; 101us; 456us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 434us; 0us; 16606us; 17us; 32768us; 2us; 454us; 3us; 455us; 7us; 473us; 8us; 476us; 9us; 479us; 10us; 482us; 13us; 485us; 70us; 460us; 71us; 459us; 94us; 465us; 99us; 458us; 100us; 457us; 101us; 456us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 434us; 0us; 16608us; 0us; 16609us; 4us; 32768us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 433us; 17us; 32768us; 2us; 454us; 3us; 455us; 7us; 473us; 8us; 476us; 9us; 479us; 10us; 482us; 13us; 485us; 70us; 460us; 71us; 459us; 94us; 465us; 99us; 458us; 100us; 457us; 101us; 456us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 434us; 0us; 16610us; 0us; 16611us; 0us; 16612us; 0us; 16613us; 0us; 16614us; 0us; 16615us; 1us; 32768us; 92us; 474us; 17us; 32768us; 2us; 454us; 3us; 455us; 7us; 473us; 8us; 476us; 9us; 479us; 10us; 482us; 13us; 485us; 70us; 460us; 71us; 459us; 94us; 465us; 99us; 458us; 100us; 457us; 101us; 456us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 434us; 0us; 16616us; 1us; 32768us; 92us; 477us; 17us; 32768us; 2us; 454us; 3us; 455us; 7us; 473us; 8us; 476us; 9us; 479us; 10us; 482us; 13us; 485us; 70us; 460us; 71us; 459us; 94us; 465us; 99us; 458us; 100us; 457us; 101us; 456us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 434us; 0us; 16617us; 1us; 32768us; 92us; 480us; 17us; 32768us; 2us; 454us; 3us; 455us; 7us; 473us; 8us; 476us; 9us; 479us; 10us; 482us; 13us; 485us; 70us; 460us; 71us; 459us; 94us; 465us; 99us; 458us; 100us; 457us; 101us; 456us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 434us; 0us; 16618us; 1us; 32768us; 92us; 483us; 17us; 32768us; 2us; 454us; 3us; 455us; 7us; 473us; 8us; 476us; 9us; 479us; 10us; 482us; 13us; 485us; 70us; 460us; 71us; 459us; 94us; 465us; 99us; 458us; 100us; 457us; 101us; 456us; 103us; 432us; 104us; 431us; 105us; 430us; 106us; 434us; 0us; 16619us; 1us; 32768us; 92us; 486us; 1us; 32768us; 106us; 449us; 1us; 32768us; 93us; 488us; 0us; 16620us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 2us; 3us; 17us; 20us; 22us; 23us; 25us; 26us; 28us; 29us; 43us; 44us; 46us; 84us; 85us; 90us; 92us; 94us; 95us; 98us; 100us; 102us; 103us; 105us; 106us; 107us; 108us; 110us; 112us; 114us; 116us; 118us; 120us; 122us; 124us; 126us; 128us; 129us; 131us; 132us; 136us; 138us; 139us; 143us; 144us; 145us; 146us; 147us; 148us; 152us; 153us; 156us; 158us; 159us; 160us; 162us; 163us; 166us; 184us; 185us; 186us; 187us; 189us; 190us; 191us; 192us; 193us; 194us; 195us; 196us; 197us; 198us; 200us; 219us; 257us; 258us; 277us; 315us; 316us; 318us; 319us; 321us; 323us; 337us; 339us; 341us; 342us; 344us; 345us; 347us; 348us; 351us; 353us; 354us; 356us; 357us; 359us; 374us; 388us; 389us; 404us; 418us; 419us; 421us; 423us; 424us; 426us; 428us; 443us; 458us; 459us; 474us; 489us; 490us; 505us; 506us; 521us; 522us; 524us; 526us; 528us; 530us; 544us; 545us; 547us; 549us; 563us; 565us; 603us; 604us; 606us; 607us; 610us; 612us; 615us; 616us; 617us; 618us; 620us; 622us; 636us; 637us; 639us; 641us; 679us; 685us; 723us; 724us; 726us; 727us; 730us; 768us; 774us; 812us; 813us; 814us; 815us; 816us; 818us; 820us; 822us; 860us; 862us; 863us; 865us; 903us; 905us; 906us; 908us; 910us; 924us; 925us; 927us; 929us; 931us; 932us; 934us; 948us; 949us; 950us; 953us; 955us; 960us; 961us; 966us; 967us; 981us; 1013us; 1027us; 1030us; 1031us; 1032us; 1033us; 1034us; 1035us; 1050us; 1070us; 1084us; 1086us; 1087us; 1101us; 1103us; 1104us; 1118us; 1120us; 1121us; 1135us; 1137us; 1138us; 1139us; 1141us; 1143us; 1144us; 1158us; 1160us; 1161us; 1162us; 1163us; 1178us; 1179us; 1194us; 1195us; 1196us; 1211us; 1212us; 1226us; 1240us; 1242us; 1243us; 1244us; 1245us; 1284us; 1287us; 1288us; 1289us; 1328us; 1329us; 1347us; 1366us; 1404us; 1442us; 1480us; 1481us; 1482us; 1483us; 1521us; 1559us; 1597us; 1637us; 1677us; 1678us; 1679us; 1680us; 1681us; 1683us; 1684us; 1685us; 1686us; 1687us; 1688us; 1689us; 1690us; 1691us; 1693us; 1694us; 1696us; 1697us; 1699us; 1700us; 1701us; 1702us; 1704us; 1705us; 1706us; 1707us; 1708us; 1709us; 1710us; 1711us; 1712us; 1713us; 1718us; 1719us; 1724us; 1725us; 1726us; 1727us; 1728us; 1729us; 1730us; 1731us; 1732us; 1733us; 1736us; 1737us; 1738us; 1741us; 1743us; 1745us; 1746us; 1753us; 1755us; 1757us; 1758us; 1759us; 1760us; 1763us; 1801us; 1803us; 1804us; 1823us; 1861us; 1862us; 1881us; 1919us; 1920us; 1921us; 1922us; 1924us; 1926us; 1927us; 1929us; 1930us; 1932us; 1934us; 1937us; 1938us; 1957us; 1959us; 1997us; 1999us; 2001us; 2002us; 2003us; 2004us; 2022us; 2041us; 2079us; 2081us; 2082us; 2120us; 2122us; 2124us; 2126us; 2128us; 2129us; 2131us; 2133us; 2135us; 2136us; 2175us; 2177us; 2215us; 2217us; 2218us; 2220us; 2258us; 2260us; 2262us; 2263us; 2264us; 2302us; 2304us; 2306us; 2307us; 2345us; 2347us; 2349us; 2350us; 2389us; 2391us; 2392us; 2394us; 2432us; 2434us; 2435us; 2438us; 2441us; 2479us; 2481us; 2521us; 2522us; 2523us; 2561us; 2562us; 2600us; 2601us; 2603us; 2607us; 2645us; 2647us; 2649us; 2650us; 2651us; 2653us; 2654us; 2655us; 2657us; 2659us; 2661us; 2662us; 2664us; 2666us; 2668us; 2670us; 2708us; 2710us; 2712us; 2713us; 2715us; 2716us; 2718us; 2756us; 2758us; 2759us; 2761us; 2763us; 2764us; 2766us; 2804us; 2805us; 2806us; 2807us; 2809us; 2813us; 2814us; 2815us; 2816us; 2821us; 2822us; 2823us; 2824us; 2825us; 2827us; 2830us; 2835us; 2836us; 2837us; 2838us; 2840us; 2841us; 2843us; 2844us; 2863us; 2882us; 2901us; 2920us; 2939us; 2940us; 2942us; 2960us; 2962us; 2964us; 2965us; 2966us; 2967us; 2968us; 2969us; 2970us; 2971us; 2989us; 2990us; 3008us; 3009us; 3010us; 3015us; 3033us; 3034us; 3035us; 3036us; 3037us; 3038us; 3039us; 3041us; 3059us; 3060us; 3062us; 3080us; 3081us; 3083us; 3101us; 3102us; 3104us; 3122us; 3123us; 3125us; 3127us; 3129us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 4us; 4us; 0us; 2us; 0us; 2us; 3us; 4us; 5us; 3us; 1us; 1us; 11us; 2us; 3us; 0us; 2us; 1us; 1us; 1us; 1us; 2us; 4us; 1us; 5us; 1us; 2us; 4us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 4us; 5us; 1us; 2us; 6us; 0us; 2us; 5us; 3us; 1us; 2us; 4us; 5us; 1us; 3us; 5us; 6us; 6us; 7us; 6us; 6us; 6us; 1us; 2us; 4us; 6us; 7us; 1us; 1us; 1us; 1us; 1us; 5us; 5us; 4us; 4us; 3us; 1us; 1us; 2us; 3us; 4us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 5us; 5us; 4us; 5us; 1us; 5us; 5us; 1us; 1us; 2us; 3us; 3us; 4us; 4us; 1us; 2us; 3us; 1us; 3us; 2us; 4us; 1us; 1us; 1us; 1us; 2us; 2us; 2us; 0us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 9us; 7us; 5us; 3us; 4us; 0us; 2us; 0us; 2us; 3us; 1us; 2us; 4us; 9us; 1us; 2us; 5us; 6us; 4us; 5us; 6us; 5us; 4us; 4us; 3us; 5us; 1us; 3us; 3us; 4us; 5us; 7us; 4us; 6us; 7us; 5us; 4us; 3us; 4us; 8us; 1us; 2us; 4us; 1us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 1us; 1us; 3us; 1us; 2us; 0us; 2us; 1us; 2us; 2us; 3us; 5us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 3us; 1us; 4us; 1us; 1us; 1us; 1us; 1us; 4us; 4us; 4us; 4us; 4us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 5us; 6us; 6us; 7us; 8us; 9us; 10us; 10us; 11us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 13us; 14us; 14us; 15us; 16us; 16us; 17us; 17us; 18us; 18us; 19us; 19us; 20us; 20us; 21us; 21us; 21us; 21us; 22us; 23us; 24us; 25us; 25us; 26us; 27us; 28us; 29us; 29us; 29us; 29us; 29us; 29us; 29us; 30us; 31us; 32us; 32us; 33us; 33us; 33us; 33us; 34us; 34us; 35us; 35us; 35us; 35us; 35us; 35us; 35us; 35us; 35us; 35us; 35us; 35us; 35us; 35us; 35us; 35us; 35us; 35us; 35us; 35us; 36us; 36us; 37us; 38us; 38us; 39us; 39us; 39us; 40us; 40us; 40us; 40us; 40us; 40us; 41us; 41us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 42us; 43us; 44us; 44us; 45us; 46us; 46us; 47us; 47us; 48us; 48us; 49us; 50us; 50us; 51us; 51us; 52us; 52us; 53us; 54us; 55us; 56us; 56us; 56us; 57us; 58us; 59us; 59us; 60us; 60us; 61us; 61us; 61us; 61us; 62us; 62us; 63us; 63us; 63us; 63us; 64us; 65us; 66us; 66us; 67us; 68us; 68us; 69us; 70us; 71us; 72us; 72us; 72us; 72us; 72us; 73us; 73us; 73us; 73us; 74us; 74us; 75us; 75us; 76us; 76us; 76us; 77us; 77us; 78us; 78us; 78us; 78us; 78us; 78us; 78us; 78us; 78us; 78us; 78us; 78us; 78us; 78us; 78us; 78us; 79us; 80us; 81us; 82us; 83us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 65535us; 65535us; 16385us; 65535us; 16386us; 65535us; 16388us; 65535us; 16390us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 16392us; 65535us; 65535us; 65535us; 16393us; 65535us; 16394us; 16395us; 16396us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16397us; 65535us; 16398us; 65535us; 65535us; 16399us; 65535us; 16401us; 16402us; 16403us; 16404us; 16405us; 65535us; 16406us; 65535us; 65535us; 16407us; 16408us; 65535us; 65535us; 65535us; 65535us; 16409us; 16410us; 16411us; 65535us; 16412us; 16413us; 16414us; 16415us; 16416us; 16417us; 16418us; 16419us; 16420us; 65535us; 65535us; 65535us; 16421us; 65535us; 65535us; 16422us; 65535us; 16424us; 65535us; 65535us; 65535us; 65535us; 65535us; 16425us; 65535us; 16427us; 65535us; 65535us; 65535us; 65535us; 16428us; 65535us; 16431us; 65535us; 65535us; 65535us; 16432us; 65535us; 65535us; 16433us; 65535us; 65535us; 16435us; 65535us; 65535us; 65535us; 65535us; 16436us; 65535us; 65535us; 16437us; 65535us; 16438us; 65535us; 16439us; 65535us; 65535us; 65535us; 65535us; 65535us; 16440us; 65535us; 65535us; 65535us; 65535us; 65535us; 16441us; 65535us; 65535us; 65535us; 65535us; 65535us; 16442us; 16443us; 16444us; 65535us; 65535us; 65535us; 16445us; 65535us; 65535us; 65535us; 65535us; 65535us; 16446us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16447us; 16448us; 16449us; 16450us; 65535us; 65535us; 65535us; 65535us; 65535us; 16453us; 65535us; 65535us; 65535us; 16454us; 65535us; 65535us; 65535us; 16455us; 65535us; 65535us; 65535us; 16456us; 65535us; 65535us; 16457us; 16458us; 65535us; 65535us; 65535us; 16461us; 65535us; 16462us; 65535us; 65535us; 65535us; 65535us; 16466us; 16467us; 16468us; 16469us; 16470us; 65535us; 65535us; 65535us; 65535us; 16471us; 65535us; 65535us; 16472us; 65535us; 65535us; 16473us; 65535us; 65535us; 16474us; 16475us; 65535us; 65535us; 16476us; 65535us; 65535us; 16477us; 16478us; 16479us; 65535us; 16480us; 65535us; 16481us; 16482us; 65535us; 16483us; 65535us; 65535us; 65535us; 16484us; 16485us; 16486us; 65535us; 65535us; 16487us; 16488us; 65535us; 16489us; 65535us; 65535us; 65535us; 65535us; 65535us; 16493us; 16494us; 16495us; 65535us; 65535us; 65535us; 65535us; 65535us; 16496us; 16497us; 16498us; 16501us; 65535us; 16502us; 16503us; 16504us; 16505us; 16506us; 16507us; 16508us; 16509us; 65535us; 16510us; 65535us; 16511us; 65535us; 16512us; 16513us; 16514us; 65535us; 16515us; 16516us; 16517us; 16518us; 16519us; 16520us; 16521us; 16522us; 16523us; 65535us; 16524us; 65535us; 16525us; 16526us; 16527us; 16528us; 16529us; 16530us; 16531us; 16532us; 65535us; 65535us; 16533us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16534us; 16535us; 65535us; 65535us; 65535us; 65535us; 16536us; 65535us; 65535us; 16537us; 65535us; 65535us; 16538us; 16540us; 16542us; 65535us; 65535us; 16543us; 65535us; 16545us; 65535us; 65535us; 65535us; 16546us; 65535us; 65535us; 65535us; 65535us; 65535us; 16547us; 16548us; 16549us; 65535us; 65535us; 65535us; 65535us; 16550us; 65535us; 65535us; 65535us; 65535us; 65535us; 16551us; 65535us; 65535us; 65535us; 16552us; 65535us; 65535us; 65535us; 65535us; 16553us; 65535us; 65535us; 65535us; 65535us; 16554us; 16555us; 65535us; 65535us; 65535us; 16556us; 65535us; 65535us; 65535us; 16557us; 65535us; 65535us; 16558us; 65535us; 65535us; 65535us; 16559us; 65535us; 65535us; 65535us; 65535us; 65535us; 16562us; 16563us; 65535us; 16564us; 65535us; 16565us; 65535us; 65535us; 65535us; 65535us; 65535us; 16568us; 16569us; 65535us; 16570us; 16571us; 65535us; 65535us; 65535us; 16572us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16573us; 65535us; 16575us; 65535us; 65535us; 65535us; 16576us; 65535us; 65535us; 16578us; 65535us; 65535us; 16579us; 16580us; 16581us; 65535us; 65535us; 16583us; 16584us; 16585us; 65535us; 16586us; 16587us; 16588us; 16589us; 65535us; 65535us; 65535us; 16590us; 16591us; 16592us; 65535us; 16594us; 65535us; 16596us; 65535us; 65535us; 65535us; 65535us; 65535us; 16597us; 65535us; 65535us; 65535us; 65535us; 16599us; 16600us; 16601us; 16602us; 16603us; 16604us; 16605us; 65535us; 16606us; 65535us; 16608us; 16609us; 65535us; 65535us; 16610us; 16611us; 16612us; 16613us; 16614us; 16615us; 65535us; 65535us; 16616us; 65535us; 65535us; 16617us; 65535us; 65535us; 16618us; 65535us; 65535us; 16619us; 65535us; 65535us; 65535us; 16620us; |]
let _fsyacc_reductions ()  =    [| 
# 1032 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  Unit  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startunit));
# 1041 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_main in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 ".\Parser.fsy"
                                                             UMain(_1, _2, _3) 
                   )
# 92 ".\Parser.fsy"
                 :  Unit ));
# 1054 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_export in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 ".\Parser.fsy"
                                                            UExport(_1, _2, _3) 
                   )
# 93 ".\Parser.fsy"
                 :  Unit ));
# 1067 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 ".\Parser.fsy"
                                          [] 
                   )
# 95 ".\Parser.fsy"
                 : 'gentype_import_list));
# 1077 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import in
            let _2 = parseState.GetInput(2) :?> 'gentype_import_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 ".\Parser.fsy"
                                                  _1 :: _2 
                   )
# 96 ".\Parser.fsy"
                 : 'gentype_import_list));
# 1089 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 ".\Parser.fsy"
                                         [] 
                   )
# 98 ".\Parser.fsy"
                 : 'gentype_decl_list));
# 1099 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_declaration in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 ".\Parser.fsy"
                                                   _1 :: _2 
                   )
# 99 ".\Parser.fsy"
                 : 'gentype_decl_list));
# 1111 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 ".\Parser.fsy"
                                                      _3 
                   )
# 101 ".\Parser.fsy"
                 : 'gentype_main));
# 1122 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_import_path in
            let _4 = parseState.GetInput(4) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 ".\Parser.fsy"
                                                                    { Native = false; Explicit = []; Path = _2; Alias = _4 } 
                   )
# 103 ".\Parser.fsy"
                 : 'gentype_import));
# 1134 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_brace_names in
            let _3 = parseState.GetInput(3) :?> 'gentype_import_path in
            let _5 = parseState.GetInput(5) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 ".\Parser.fsy"
                                                                          { Native = false; Explicit = _2; Path = _3; Alias = _5 } 
                   )
# 104 ".\Parser.fsy"
                 : 'gentype_import));
# 1147 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 ".\Parser.fsy"
                                                        { Native = true; Explicit = []; Path = IPLocal (_3); Alias = stringToSmallName "" } 
                   )
# 105 ".\Parser.fsy"
                 : 'gentype_import));
# 1158 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 ".\Parser.fsy"
                                            IPLocal (_1) 
                   )
# 107 ".\Parser.fsy"
                 : 'gentype_import_path));
# 1169 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_remote in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 ".\Parser.fsy"
                                   IPRemote (_1) 
                   )
# 108 ".\Parser.fsy"
                 : 'gentype_import_path));
# 1180 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> Name in
            let _7 = parseState.GetInput(7) :?> IntegerLiteral in
            let _9 = parseState.GetInput(9) :?> IntegerLiteral in
            let _11 = parseState.GetInput(11) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 ".\Parser.fsy"
                          { Org = _1; Project = _3; Unit = _5; Major = _7; Minor = _9; Patch = _11 } 
                   )
# 111 ".\Parser.fsy"
                 : 'gentype_remote));
# 1196 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_brace_names in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 ".\Parser.fsy"
                                                   _2 
                   )
# 113 ".\Parser.fsy"
                 : 'gentype_export));
# 1207 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_name_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 ".\Parser.fsy"
                                                               _2 
                   )
# 115 ".\Parser.fsy"
                 : 'gentype_brace_names));
# 1218 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 ".\Parser.fsy"
                                       [] 
                   )
# 117 ".\Parser.fsy"
                 : 'gentype_name_list));
# 1228 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_name in
            let _2 = parseState.GetInput(2) :?> 'gentype_name_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 ".\Parser.fsy"
                                            _1 :: _2 
                   )
# 118 ".\Parser.fsy"
                 : 'gentype_name_list));
# 1240 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 ".\Parser.fsy"
                                          _1 
                   )
# 120 ".\Parser.fsy"
                 : 'gentype_name));
# 1251 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 ".\Parser.fsy"
                                         _1 
                   )
# 121 ".\Parser.fsy"
                 : 'gentype_name));
# 1262 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 ".\Parser.fsy"
                                          _1 
                   )
# 122 ".\Parser.fsy"
                 : 'gentype_name));
# 1273 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 ".\Parser.fsy"
                                                        DFunc (_1) 
                   )
# 126 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1284 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 ".\Parser.fsy"
                                                      DRecFuncs ([_2]) 
                   )
# 127 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1295 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_function_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 ".\Parser.fsy"
                                                                      DRecFuncs (_3) 
                   )
# 128 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1306 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_native in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 ".\Parser.fsy"
                                             DNative (_1) 
                   )
# 129 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1317 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 ".\Parser.fsy"
                                                                            DPattern (_2, _3, _5) 
                   )
# 130 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1330 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 ".\Parser.fsy"
                                               DType (_1) 
                   )
# 131 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1341 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 ".\Parser.fsy"
                                                      DRecTypes ([_2]) 
                   )
# 132 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1352 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_datatype_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 ".\Parser.fsy"
                                                                      DRecTypes (_3) 
                   )
# 133 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1363 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_overload in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 ".\Parser.fsy"
                                               _1 
                   )
# 134 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1374 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_instance in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 ".\Parser.fsy"
                                               _1 
                   )
# 135 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1385 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rule in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 ".\Parser.fsy"
                                            _1 
                   )
# 136 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1396 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_effect in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 ".\Parser.fsy"
                                             DEffect (_1) 
                   )
# 137 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1407 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_test in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 ".\Parser.fsy"
                                            DTest (_1) 
                   )
# 138 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1418 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_law in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 ".\Parser.fsy"
                                           DLaw (_1) 
                   )
# 139 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1429 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_check in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 ".\Parser.fsy"
                                             DCheck (_1) 
                   )
# 140 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1440 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tag in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 ".\Parser.fsy"
                                           _1 
                   )
# 141 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1451 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 ".\Parser.fsy"
                          { Name = _2; Body = _4 } 
                   )
# 144 ".\Parser.fsy"
                 : 'gentype_function));
# 1463 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_no_dot_pattern_expr_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 ".\Parser.fsy"
                           { Name = _2; Body = [EStatementBlock([SLet { Matcher = _3; Body = [] }; SExpression(_5)])] } 
                   )
# 146 ".\Parser.fsy"
                 : 'gentype_function));
# 1476 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 ".\Parser.fsy"
                                                   [_1] 
                   )
# 148 ".\Parser.fsy"
                 : 'gentype_function_list));
# 1487 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            let _2 = parseState.GetInput(2) :?> 'gentype_function_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 ".\Parser.fsy"
                                                     _1 :: _2 
                   )
# 149 ".\Parser.fsy"
                 : 'gentype_function_list));
# 1499 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_any_type in
            let _6 = parseState.GetInput(6) :?> 'gentype_native_code_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 ".\Parser.fsy"
                                                                                         { Name = _2; Type = _4; Lines = _6 } 
                   )
# 151 ".\Parser.fsy"
                 : 'gentype_native));
# 1512 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 ".\Parser.fsy"
                                                    [] 
                   )
# 153 ".\Parser.fsy"
                 : 'gentype_native_code_list));
# 1522 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> NativeCodeLine in
            let _2 = parseState.GetInput(2) :?> 'gentype_native_code_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 ".\Parser.fsy"
                                                                _1 :: _2 
                   )
# 154 ".\Parser.fsy"
                 : 'gentype_native_code_list));
# 1534 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_constructor_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 ".\Parser.fsy"
                                                                                   { Name = _2; Params = _3; Constructors = _5 } 
                   )
# 156 ".\Parser.fsy"
                 : 'gentype_datatype));
# 1547 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 ".\Parser.fsy"
                                                           { Name = _2; Params = _3; Constructors = [] } 
                   )
# 157 ".\Parser.fsy"
                 : 'gentype_datatype));
# 1559 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 ".\Parser.fsy"
                                                   [_1] 
                   )
# 159 ".\Parser.fsy"
                 : 'gentype_datatype_list));
# 1570 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            let _2 = parseState.GetInput(2) :?> 'gentype_datatype_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 ".\Parser.fsy"
                                                     _1 :: _2 
                   )
# 160 ".\Parser.fsy"
                 : 'gentype_datatype_list));
# 1582 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 ".\Parser.fsy"
                                                                       { Name = _1; Components = []; Result = _4 } 
                   )
# 162 ".\Parser.fsy"
                 : 'gentype_constructor));
# 1594 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_any_type_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 ".\Parser.fsy"
                                                                            { Name = _1; Components = List.rev _3; Result = _5 } 
                   )
# 163 ".\Parser.fsy"
                 : 'gentype_constructor));
# 1607 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constructor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 ".\Parser.fsy"
                                                           [_1] 
                   )
# 165 ".\Parser.fsy"
                 : 'gentype_constructor_list));
# 1618 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constructor in
            let _3 = parseState.GetInput(3) :?> 'gentype_constructor_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 ".\Parser.fsy"
                                                               _1 :: _3 
                   )
# 166 ".\Parser.fsy"
                 : 'gentype_constructor_list));
# 1630 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 ".\Parser.fsy"
                                                                     DPropagationRule (_2, [], []) 
                   )
# 168 ".\Parser.fsy"
                 : 'gentype_rule));
# 1641 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_any_type_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 ".\Parser.fsy"
                                                                                DPropagationRule (_2, _4, []) 
                   )
# 169 ".\Parser.fsy"
                 : 'gentype_rule));
# 1653 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_any_type_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 ".\Parser.fsy"
                                                                                DPropagationRule (_2, [], _5) 
                   )
# 170 ".\Parser.fsy"
                 : 'gentype_rule));
# 1665 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_any_type_list in
            let _6 = parseState.GetInput(6) :?> 'gentype_any_type_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 ".\Parser.fsy"
                                                                                              DPropagationRule (_2, _4, _6) 
                   )
# 171 ".\Parser.fsy"
                 : 'gentype_rule));
# 1678 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> Name in
            let _6 = parseState.GetInput(6) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 ".\Parser.fsy"
                                                                                       DOverload (_2, _4, _6, []) 
                   )
# 173 ".\Parser.fsy"
                 : 'gentype_overload));
# 1691 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_qual_type in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 ".\Parser.fsy"
                                                                                         DInstance(_2, _4, _6) 
                   )
# 175 ".\Parser.fsy"
                 : 'gentype_instance));
# 1704 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_handler_template_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 ".\Parser.fsy"
                          { Name = _2; Params = _3; Handlers = _5 } 
                   )
# 178 ".\Parser.fsy"
                 : 'gentype_effect));
# 1717 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handler_template in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 ".\Parser.fsy"
                                                                     [_1] 
                   )
# 180 ".\Parser.fsy"
                 : 'gentype_handler_template_list));
# 1728 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handler_template_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_handler_template in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 ".\Parser.fsy"
                                                                       List.append _1 [_2] 
                   )
# 181 ".\Parser.fsy"
                 : 'gentype_handler_template_list));
# 1740 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_qual_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 ".\Parser.fsy"
                                                                             { Name = _2; Type = _4 } 
                   )
# 183 ".\Parser.fsy"
                 : 'gentype_handler_template));
# 1752 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_test_all in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 ".\Parser.fsy"
                         { Name = _2; Left = _4; Right = _6; Kind = _5 } 
                   )
# 186 ".\Parser.fsy"
                 : 'gentype_test));
# 1766 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_test_all in
            let _7 = parseState.GetInput(7) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 ".\Parser.fsy"
                         { Name = _2; Exhaustive = false; Params = _3; Left = _5; Right = _7; Kind = _6 } 
                   )
# 189 ".\Parser.fsy"
                 : 'gentype_law));
# 1781 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 ".\Parser.fsy"
                                            TKSatisfies 
                   )
# 191 ".\Parser.fsy"
                 : 'gentype_test_all));
# 1791 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 ".\Parser.fsy"
                                      TKViolates 
                   )
# 192 ".\Parser.fsy"
                 : 'gentype_test_all));
# 1801 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 ".\Parser.fsy"
                                       TKIsRoughly 
                   )
# 193 ".\Parser.fsy"
                 : 'gentype_test_all));
# 1811 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 ".\Parser.fsy"
                                 TKIs [] 
                   )
# 194 ".\Parser.fsy"
                 : 'gentype_test_all));
# 1821 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 ".\Parser.fsy"
                                    TKIsNot [] 
                   )
# 195 ".\Parser.fsy"
                 : 'gentype_test_all));
# 1831 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 ".\Parser.fsy"
                                                                 TKIs _4 
                   )
# 196 ".\Parser.fsy"
                 : 'gentype_test_all));
# 1842 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 ".\Parser.fsy"
                                                                    TKIsNot _4 
                   )
# 197 ".\Parser.fsy"
                 : 'gentype_test_all));
# 1853 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_qual_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 ".\Parser.fsy"
                                                                { Name = _2; Matcher = _4 } 
                   )
# 199 ".\Parser.fsy"
                 : 'gentype_check));
# 1865 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 ".\Parser.fsy"
                                                            DTag (_2, _4) 
                   )
# 201 ".\Parser.fsy"
                 : 'gentype_tag));
# 1877 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_predicate_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 ".\Parser.fsy"
                                                                    sQualType _1 _3 
                   )
# 205 ".\Parser.fsy"
                 : 'gentype_qual_type));
# 1889 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 ".\Parser.fsy"
                                             sQualType SEnd _1 
                   )
# 206 ".\Parser.fsy"
                 : 'gentype_qual_type));
# 1900 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_predicate in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 ".\Parser.fsy"
                                                         ind _1 SEnd 
                   )
# 208 ".\Parser.fsy"
                 : 'gentype_predicate_list));
# 1911 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_predicate in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 ".\Parser.fsy"
                                                    dot _1 SEnd 
                   )
# 209 ".\Parser.fsy"
                 : 'gentype_predicate_list));
# 1922 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_predicate in
            let _3 = parseState.GetInput(3) :?> 'gentype_predicate_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 ".\Parser.fsy"
                                                                ind _1 _3 
                   )
# 210 ".\Parser.fsy"
                 : 'gentype_predicate_list));
# 1934 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_predicate in
            let _4 = parseState.GetInput(4) :?> 'gentype_predicate_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 ".\Parser.fsy"
                                                                   dot _1 _4 
                   )
# 211 ".\Parser.fsy"
                 : 'gentype_predicate_list));
# 1946 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_identifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 ".\Parser.fsy"
                                                         STCon _1 
                   )
# 213 ".\Parser.fsy"
                 : 'gentype_predicate));
# 1957 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_identifier in
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 ".\Parser.fsy"
                                                             appendTypeArgs (STCon _1) (List.rev _2) 
                   )
# 214 ".\Parser.fsy"
                 : 'gentype_predicate));
# 1969 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 ".\Parser.fsy"
                                                    STVar _1 
                   )
# 216 ".\Parser.fsy"
                 : 'gentype_any_type));
# 1980 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_identifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 ".\Parser.fsy"
                                                  STCon _1 
                   )
# 217 ".\Parser.fsy"
                 : 'gentype_any_type));
# 1991 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 ".\Parser.fsy"
                                                     STDotVar _1 
                   )
# 218 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2002 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 ".\Parser.fsy"
                                            STPrim PrFunction 
                   )
# 219 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2012 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 ".\Parser.fsy"
                                          STTrue 
                   )
# 220 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2022 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 221 ".\Parser.fsy"
                                          STFalse 
                   )
# 221 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2032 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type in
            let _4 = parseState.GetInput(4) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 222 ".\Parser.fsy"
                                                                  STAnd (_2, _4) 
                   )
# 222 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2044 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type in
            let _4 = parseState.GetInput(4) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 ".\Parser.fsy"
                                                                  STOr (_2, _4) 
                   )
# 223 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2056 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 ".\Parser.fsy"
                                                            STNot (_3) 
                   )
# 224 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2067 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type in
            let _4 = parseState.GetInput(4) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 225 ".\Parser.fsy"
                                                                  appendTypeArgs STRowExtend [_4; _2] 
                   )
# 225 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2079 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 ".\Parser.fsy"
                                         STAbelianOne 
                   )
# 226 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2089 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type in
            let _4 = parseState.GetInput(4) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 ".\Parser.fsy"
                                                                  STExponent (_2, _4) 
                   )
# 227 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2101 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type in
            let _4 = parseState.GetInput(4) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 ".\Parser.fsy"
                                                                   STMultiply (_2, _4) 
                   )
# 228 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2113 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 ".\Parser.fsy"
                                            STFixedConst _1 
                   )
# 229 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2124 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 ".\Parser.fsy"
                                         STRowEmpty 
                   )
# 230 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2134 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 ".\Parser.fsy"
                                                     STSeq (SEnd, KValue) 
                   )
# 231 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2144 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 232 ".\Parser.fsy"
                                                               STSeq (dotVarToDotSeq (ofList (List.rev _2)), KValue) 
                   )
# 232 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2155 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 233 ".\Parser.fsy"
                                                         _2 
                   )
# 233 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2166 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_any_type_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 234 ".\Parser.fsy"
                                                                   appendTypeArgs _2 (List.rev _3) 
                   )
# 234 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2178 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 ".\Parser.fsy"
                           appendTypeArgs (STPrim PrValue) [_3; _2] 
                   )
# 236 ".\Parser.fsy"
                 : 'gentype_any_type));
# 2190 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 ".\Parser.fsy"
                                                   [_1] 
                   )
# 238 ".\Parser.fsy"
                 : 'gentype_any_type_list));
# 2201 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_any_type_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_any_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 239 ".\Parser.fsy"
                                                     List.append _1 [_2] 
                   )
# 239 ".\Parser.fsy"
                 : 'gentype_any_type_list));
# 2213 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term_statement_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 243 ".\Parser.fsy"
                                                                                  _2 
                   )
# 243 ".\Parser.fsy"
                 : 'gentype_term_statement_block));
# 2224 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_statement in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 245 ".\Parser.fsy"
                                                                   [_1] 
                   )
# 245 ".\Parser.fsy"
                 : 'gentype_term_statement_list));
# 2235 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_statement_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 246 ".\Parser.fsy"
                                                                            List.append _1 [_3] 
                   )
# 246 ".\Parser.fsy"
                 : 'gentype_term_statement_list));
# 2247 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_no_dot_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 248 ".\Parser.fsy"
                                                                            SLet { Matcher = _2; Body = [] } 
                   )
# 248 ".\Parser.fsy"
                 : 'gentype_term_statement));
# 2258 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_no_dot_pattern_expr_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 249 ".\Parser.fsy"
                                                                                         SLet { Matcher = _2; Body = _4 } 
                   )
# 249 ".\Parser.fsy"
                 : 'gentype_term_statement));
# 2270 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 252 ".\Parser.fsy"
                                                              SExpression (_1) 
                   )
# 252 ".\Parser.fsy"
                 : 'gentype_term_statement));
# 2281 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 259 ".\Parser.fsy"
                                                            [_1] 
                   )
# 259 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 2292 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_record_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 260 ".\Parser.fsy"
                                                     _1 
                   )
# 260 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 2303 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tuple_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 261 ".\Parser.fsy"
                                                    _1 
                   )
# 261 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 2314 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 262 ".\Parser.fsy"
                                                              List.append _1 [_2] 
                   )
# 262 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 2326 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_record_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 263 ".\Parser.fsy"
                                                                     List.append _1 _2 
                   )
# 263 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 2338 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_tuple_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 264 ".\Parser.fsy"
                                                                     List.append _1 _2 
                   )
# 264 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 2350 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 266 ".\Parser.fsy"
                                            [] 
                   )
# 266 ".\Parser.fsy"
                 : 'gentype_simple_expr));
# 2360 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 267 ".\Parser.fsy"
                                                    _1 
                   )
# 267 ".\Parser.fsy"
                 : 'gentype_simple_expr));
# 2371 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 271 ".\Parser.fsy"
                                                      EStatementBlock (_1) 
                   )
# 271 ".\Parser.fsy"
                 : 'gentype_word));
# 2382 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handle_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 272 ".\Parser.fsy"
                                            _1 
                   )
# 272 ".\Parser.fsy"
                 : 'gentype_word));
# 2393 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_inject_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 273 ".\Parser.fsy"
                                            _1 
                   )
# 273 ".\Parser.fsy"
                 : 'gentype_word));
# 2404 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 274 ".\Parser.fsy"
                                           _1 
                   )
# 274 ".\Parser.fsy"
                 : 'gentype_word));
# 2415 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_if_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 275 ".\Parser.fsy"
                                         _1 
                   )
# 275 ".\Parser.fsy"
                 : 'gentype_word));
# 2426 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_switch_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 276 ".\Parser.fsy"
                                            _1 
                   )
# 276 ".\Parser.fsy"
                 : 'gentype_word));
# 2437 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_when_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 277 ".\Parser.fsy"
                                          _1 
                   )
# 277 ".\Parser.fsy"
                 : 'gentype_word));
# 2448 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_while_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 278 ".\Parser.fsy"
                                           _1 
                   )
# 278 ".\Parser.fsy"
                 : 'gentype_word));
# 2459 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 279 ".\Parser.fsy"
                                                EFunctionLiteral (_1) 
                   )
# 279 ".\Parser.fsy"
                 : 'gentype_word));
# 2470 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 285 ".\Parser.fsy"
                                                 EExtension (_2) 
                   )
# 285 ".\Parser.fsy"
                 : 'gentype_word));
# 2481 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 286 ".\Parser.fsy"
                                                 ESelect (false, _2) 
                   )
# 286 ".\Parser.fsy"
                 : 'gentype_word));
# 2492 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 287 ".\Parser.fsy"
                                                ESelect (true, _2) 
                   )
# 287 ".\Parser.fsy"
                 : 'gentype_word));
# 2503 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_variant_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 289 ".\Parser.fsy"
                                               _1 
                   )
# 289 ".\Parser.fsy"
                 : 'gentype_word));
# 2514 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_case_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 290 ".\Parser.fsy"
                                          _1 
                   )
# 290 ".\Parser.fsy"
                 : 'gentype_word));
# 2525 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 291 ".\Parser.fsy"
                                                           EWithState (_2) 
                   )
# 291 ".\Parser.fsy"
                 : 'gentype_word));
# 2536 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_with_permission in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 292 ".\Parser.fsy"
                                               _1 
                   )
# 292 ".\Parser.fsy"
                 : 'gentype_word));
# 2547 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 293 ".\Parser.fsy"
                                       ETrust 
                   )
# 293 ".\Parser.fsy"
                 : 'gentype_word));
# 2557 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 294 ".\Parser.fsy"
                                          EDistrust 
                   )
# 294 ".\Parser.fsy"
                 : 'gentype_word));
# 2567 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 295 ".\Parser.fsy"
                                       EAudit 
                   )
# 295 ".\Parser.fsy"
                 : 'gentype_word));
# 2577 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 296 ".\Parser.fsy"
                                         ENewRef 
                   )
# 296 ".\Parser.fsy"
                 : 'gentype_word));
# 2587 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 297 ".\Parser.fsy"
                                         EGetRef 
                   )
# 297 ".\Parser.fsy"
                 : 'gentype_word));
# 2597 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 298 ".\Parser.fsy"
                                         EPutRef 
                   )
# 298 ".\Parser.fsy"
                 : 'gentype_word));
# 2607 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 299 ".\Parser.fsy"
                                        EUntag 
                   )
# 299 ".\Parser.fsy"
                 : 'gentype_word));
# 2617 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 300 ".\Parser.fsy"
                                                EBy { Qualifier = List.take (List.length _2 - 1) _2; Name = List.last _2 } 
                   )
# 300 ".\Parser.fsy"
                 : 'gentype_word));
# 2628 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 301 ".\Parser.fsy"
                                                 EPer { Qualifier = List.take (List.length _2 - 1) _2; Name = List.last _2 } 
                   )
# 301 ".\Parser.fsy"
                 : 'gentype_word));
# 2639 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 302 ".\Parser.fsy"
                                     EDo 
                   )
# 302 ".\Parser.fsy"
                 : 'gentype_word));
# 2649 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 304 ".\Parser.fsy"
                                       ETrue 
                   )
# 304 ".\Parser.fsy"
                 : 'gentype_word));
# 2659 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 305 ".\Parser.fsy"
                                       EFalse 
                   )
# 305 ".\Parser.fsy"
                 : 'gentype_word));
# 2669 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 306 ".\Parser.fsy"
                                         EInteger (_1) 
                   )
# 306 ".\Parser.fsy"
                 : 'gentype_word));
# 2680 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> DecimalLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 307 ".\Parser.fsy"
                                         EDecimal (_1) 
                   )
# 307 ".\Parser.fsy"
                 : 'gentype_word));
# 2691 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 308 ".\Parser.fsy"
                                        EString (_1) 
                   )
# 308 ".\Parser.fsy"
                 : 'gentype_word));
# 2702 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  Identifier  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 309 ".\Parser.fsy"
                                           EIdentifier (_1) 
                   )
# 309 ".\Parser.fsy"
                 : 'gentype_word));
# 2713 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 311 ".\Parser.fsy"
                                                                                         EWithPermission (_2, _3) 
                   )
# 311 ".\Parser.fsy"
                 : 'gentype_with_permission));
# 2725 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_handler_list in
            let _7 = parseState.GetInput(7) :?> 'gentype_return in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 313 ".\Parser.fsy"
                                                                                                                               EHandle (_2, _3, _6, _7) 
                   )
# 313 ".\Parser.fsy"
                 : 'gentype_handle_word));
# 2739 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_handler_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 314 ".\Parser.fsy"
                                                                                                         EHandle (_2, _3, _6, []) 
                   )
# 314 ".\Parser.fsy"
                 : 'gentype_handle_word));
# 2752 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  Identifier  in
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 316 ".\Parser.fsy"
                                                                                    { Name = _1; Params = _2; Body = _4; } 
                   )
# 316 ".\Parser.fsy"
                 : 'gentype_handler));
# 2765 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 319 ".\Parser.fsy"
                          _3 
                   )
# 319 ".\Parser.fsy"
                 : 'gentype_return));
# 2776 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_no_dot_pattern_expr_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 321 ".\Parser.fsy"
                             [EStatementBlock([SLet { Matcher = _2; Body = [] }; SExpression(_4)])] 
                   )
# 321 ".\Parser.fsy"
                 : 'gentype_return));
# 2788 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 323 ".\Parser.fsy"
                                         [] 
                   )
# 323 ".\Parser.fsy"
                 : 'gentype_param_list));
# 2798 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_param_list in
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 324 ".\Parser.fsy"
                                                     List.append _1 [_2] 
                   )
# 324 ".\Parser.fsy"
                 : 'gentype_param_list));
# 2810 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 326 ".\Parser.fsy"
                                           [] 
                   )
# 326 ".\Parser.fsy"
                 : 'gentype_handler_list));
# 2820 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handler_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_handler in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 327 ".\Parser.fsy"
                                                  List.append _1 [_2] 
                   )
# 327 ".\Parser.fsy"
                 : 'gentype_handler_list));
# 2832 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_eff_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 329 ".\Parser.fsy"
                                                                          EInject (_2, _3) 
                   )
# 329 ".\Parser.fsy"
                 : 'gentype_inject_word));
# 2844 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 331 ".\Parser.fsy"
                                                  [_1] 
                   )
# 331 ".\Parser.fsy"
                 : 'gentype_eff_list));
# 2855 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _2 = parseState.GetInput(2) :?> 'gentype_eff_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 332 ".\Parser.fsy"
                                                   _1 :: _2 
                   )
# 332 ".\Parser.fsy"
                 : 'gentype_eff_list));
# 2867 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_match_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 334 ".\Parser.fsy"
                                                                                    EMatch (_3, []) 
                   )
# 334 ".\Parser.fsy"
                 : 'gentype_match_word));
# 2878 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_match_clause_list in
            let _7 = parseState.GetInput(7) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 335 ".\Parser.fsy"
                                                                                                            EMatch (_3, _7) 
                   )
# 335 ".\Parser.fsy"
                 : 'gentype_match_word));
# 2890 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 337 ".\Parser.fsy"
                                                            [_1] 
                   )
# 337 ".\Parser.fsy"
                 : 'gentype_match_clause_list));
# 2901 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_clause_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_match_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 338 ".\Parser.fsy"
                                                              List.append _1 [_2] 
                   )
# 338 ".\Parser.fsy"
                 : 'gentype_match_clause_list));
# 2913 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 340 ".\Parser.fsy"
                                                                                         { Matcher = _2; Body = _4 } 
                   )
# 340 ".\Parser.fsy"
                 : 'gentype_match_clause));
# 2925 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 342 ".\Parser.fsy"
                                                                                                    EIf (_2, _4, _6) 
                   )
# 342 ".\Parser.fsy"
                 : 'gentype_if_word));
# 2938 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_switch_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 344 ".\Parser.fsy"
                                                                               switchClausesToIfs _3 
                   )
# 344 ".\Parser.fsy"
                 : 'gentype_switch_word));
# 2949 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 346 ".\Parser.fsy"
                                                                                         [_4] 
                   )
# 346 ".\Parser.fsy"
                 : 'gentype_switch_clause_list));
# 2960 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_switch_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 347 ".\Parser.fsy"
                                                                                                _2 :: _4 :: _6 
                   )
# 347 ".\Parser.fsy"
                 : 'gentype_switch_clause_list));
# 2973 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            let _5 = parseState.GetInput(5) :?> 'gentype_switch_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 348 ".\Parser.fsy"
                                                                                                _2 :: [EStatementBlock _4] :: _5 
                   )
# 348 ".\Parser.fsy"
                 : 'gentype_switch_clause_list));
# 2986 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 350 ".\Parser.fsy"
                                                                              EIf (_2, _4, []) 
                   )
# 350 ".\Parser.fsy"
                 : 'gentype_when_word));
# 2998 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 352 ".\Parser.fsy"
                                                                                EWhile (_2, _4) 
                   )
# 352 ".\Parser.fsy"
                 : 'gentype_while_word));
# 3010 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 354 ".\Parser.fsy"
                                                                      _2 
                   )
# 354 ".\Parser.fsy"
                 : 'gentype_function_literal));
# 3021 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_var_only_pattern_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 356 ".\Parser.fsy"
                             [EStatementBlock([SLet { Matcher = _2; Body = [] }; SExpression(_4)])] 
                   )
# 356 ".\Parser.fsy"
                 : 'gentype_function_literal));
# 3033 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 358 ".\Parser.fsy"
                                                                  [_1] 
                   )
# 358 ".\Parser.fsy"
                 : 'gentype_lit_expr_list));
# 3044 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_lit_expr_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 359 ".\Parser.fsy"
                                                                        List.append _1 [_3] 
                   )
# 359 ".\Parser.fsy"
                 : 'gentype_lit_expr_list));
# 3056 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 361 ".\Parser.fsy"
                                                                         [ETupleLiteral []] 
                   )
# 361 ".\Parser.fsy"
                 : 'gentype_tuple_literal));
# 3066 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_lit_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 362 ".\Parser.fsy"
                                                                           ETupleLiteral [] :: expandTupleConsSyntax _3 
                   )
# 362 ".\Parser.fsy"
                 : 'gentype_tuple_literal));
# 3077 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 363 ".\Parser.fsy"
                                                                                       [ETupleLiteral _4] 
                   )
# 363 ".\Parser.fsy"
                 : 'gentype_tuple_literal));
# 3088 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_non_empty_simple_expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_lit_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 364 ".\Parser.fsy"
                                                                                                      ETupleLiteral _4 :: expandTupleConsSyntax _6 
                   )
# 364 ".\Parser.fsy"
                 : 'gentype_tuple_literal));
# 3100 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_lit_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 366 ".\Parser.fsy"
                                                                                    EListLiteral ([], _3) 
                   )
# 366 ".\Parser.fsy"
                 : 'gentype_list_literal));
# 3111 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_non_empty_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_lit_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 367 ".\Parser.fsy"
                                                                                               EListLiteral (_3, _5) 
                   )
# 367 ".\Parser.fsy"
                 : 'gentype_list_literal));
# 3123 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_non_empty_simple_expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 375 ".\Parser.fsy"
                                                                                                              ERecordLiteral (_4) :: expandFieldSyntax _6 
                   )
# 375 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 3135 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 376 ".\Parser.fsy"
                                                                                         [ERecordLiteral (_4)] 
                   )
# 376 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 3146 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 377 ".\Parser.fsy"
                                                                          ERecordLiteral ([]) :: expandFieldSyntax _3 
                   )
# 377 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 3157 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 378 ".\Parser.fsy"
                                                                  [ERecordLiteral ([])] 
                   )
# 378 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 3167 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_field in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 380 ".\Parser.fsy"
                                                                       EVariantLiteral (_3) 
                   )
# 380 ".\Parser.fsy"
                 : 'gentype_variant_literal));
# 3178 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?>  List<CaseClause>  in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 382 ".\Parser.fsy"
                                                                                                           ECase (_3, _6) 
                   )
# 382 ".\Parser.fsy"
                 : 'gentype_case_word));
# 3190 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_case_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 384 ".\Parser.fsy"
                                                          [_1] 
                   )
# 384 ".\Parser.fsy"
                 :  List<CaseClause> ));
# 3201 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_case_clause in
            let _2 = parseState.GetInput(2) :?>  List<CaseClause>  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 385 ".\Parser.fsy"
                                                           _1 :: _2 
                   )
# 385 ".\Parser.fsy"
                 :  List<CaseClause> ));
# 3213 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 387 ".\Parser.fsy"
                                                                             { Tag = _1; Body = _3 } 
                   )
# 387 ".\Parser.fsy"
                 : 'gentype_case_clause));
# 3225 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_field in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 389 ".\Parser.fsy"
                                              [_1] 
                   )
# 389 ".\Parser.fsy"
                 : 'gentype_field_list));
# 3236 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_field in
            let _3 = parseState.GetInput(3) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 390 ".\Parser.fsy"
                                                     _1 :: _3 
                   )
# 390 ".\Parser.fsy"
                 : 'gentype_field_list));
# 3248 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 392 ".\Parser.fsy"
                                                             (_1, _3) 
                   )
# 392 ".\Parser.fsy"
                 : 'gentype_field));
# 3260 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 394 ".\Parser.fsy"
                                                   sIdentifier (List.take (_1.Length - 1) _1) (List.last _1) 
                   )
# 394 ".\Parser.fsy"
                 :  Identifier ));
# 3271 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_qualified_ctor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 396 ".\Parser.fsy"
                                                        sIdentifier (List.take (List.length _1 - 1) _1) (List.last _1) 
                   )
# 396 ".\Parser.fsy"
                 : 'gentype_type_identifier));
# 3282 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 398 ".\Parser.fsy"
                                                          [_1] 
                   )
# 398 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 3293 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 399 ".\Parser.fsy"
                                               [_1] 
                   )
# 399 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 3304 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 400 ".\Parser.fsy"
                                                   [_1] 
                   )
# 400 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 3315 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 401 ".\Parser.fsy"
                                                    [_1] 
                   )
# 401 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 3326 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 402 ".\Parser.fsy"
                                                                      _1 :: _3 
                   )
# 402 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 3338 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 404 ".\Parser.fsy"
                                                        [_1] 
                   )
# 404 ".\Parser.fsy"
                 : 'gentype_qualified_ctor));
# 3349 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 405 ".\Parser.fsy"
                                                   [_1] 
                   )
# 405 ".\Parser.fsy"
                 : 'gentype_qualified_ctor));
# 3360 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 406 ".\Parser.fsy"
                                                    [_1] 
                   )
# 406 ".\Parser.fsy"
                 : 'gentype_qualified_ctor));
# 3371 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_qualified_ctor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 407 ".\Parser.fsy"
                                                                      _1 :: _3 
                   )
# 407 ".\Parser.fsy"
                 : 'gentype_qualified_ctor));
# 3383 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 411 ".\Parser.fsy"
                                                                      ind _1 SEnd 
                   )
# 411 ".\Parser.fsy"
                 : 'gentype_no_dot_pattern_expr_list));
# 3394 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_no_dot_pattern_expr_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 412 ".\Parser.fsy"
                                                                      ind _2 _1 
                   )
# 412 ".\Parser.fsy"
                 : 'gentype_no_dot_pattern_expr_list));
# 3406 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 414 ".\Parser.fsy"
                                                        SEnd 
                   )
# 414 ".\Parser.fsy"
                 : 'gentype_var_only_pattern_list));
# 3416 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _2 = parseState.GetInput(2) :?> 'gentype_var_only_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 415 ".\Parser.fsy"
                                                                 ind (PNamed (_1, PWildcard)) _2 
                   )
# 415 ".\Parser.fsy"
                 : 'gentype_var_only_pattern_list));
# 3428 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 417 ".\Parser.fsy"
                                                            ind _1 SEnd 
                   )
# 417 ".\Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 3439 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 418 ".\Parser.fsy"
                                                       dot _1 SEnd 
                   )
# 418 ".\Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 3450 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 419 ".\Parser.fsy"
                                                               ind _2 _1 
                   )
# 419 ".\Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 3462 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 421 ".\Parser.fsy"
                                                                                  [(_1, _3)] 
                   )
# 421 ".\Parser.fsy"
                 : 'gentype_field_pattern_list));
# 3474 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_field_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 422 ".\Parser.fsy"
                                                                                        (_1, _3) :: _5 
                   )
# 422 ".\Parser.fsy"
                 : 'gentype_field_pattern_list));
# 3487 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 424 ".\Parser.fsy"
                                                      PTrue 
                   )
# 424 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3497 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 425 ".\Parser.fsy"
                                             PFalse 
                   )
# 425 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3507 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 426 ".\Parser.fsy"
                                               PInteger (_1) 
                   )
# 426 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3518 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> DecimalLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 427 ".\Parser.fsy"
                                               PDecimal (_1) 
                   )
# 427 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3529 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 428 ".\Parser.fsy"
                                              PString (_1) 
                   )
# 428 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3540 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 429 ".\Parser.fsy"
                                                 PWildcard 
                   )
# 429 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3550 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 430 ".\Parser.fsy"
                                                      PRef (_2) 
                   )
# 430 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3561 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 431 ".\Parser.fsy"
                                                 PNamed (_1, PWildcard) 
                   )
# 431 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3572 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 432 ".\Parser.fsy"
                                                              PNamed (_1, _3) 
                   )
# 432 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3584 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_identifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 434 ".\Parser.fsy"
                            PConstructor (_1, SEnd) 
                   )
# 434 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3595 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_type_identifier in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 436 ".\Parser.fsy"
                            PConstructor (_2, _3) 
                   )
# 436 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3607 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tuple_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 437 ".\Parser.fsy"
                                                   _1 
                   )
# 437 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3618 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_list_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 438 ".\Parser.fsy"
                                                   _1 
                   )
# 438 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3629 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_vector_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 439 ".\Parser.fsy"
                                                    _1 
                   )
# 439 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3640 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_slice_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 440 ".\Parser.fsy"
                                                   _1 
                   )
# 440 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3651 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_record_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 441 ".\Parser.fsy"
                                                    _1 
                   )
# 441 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 3662 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 443 ".\Parser.fsy"
                                                                                 PTuple (_3) 
                   )
# 443 ".\Parser.fsy"
                 : 'gentype_tuple_pattern));
# 3673 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 445 ".\Parser.fsy"
                                                                               PList (_3) 
                   )
# 445 ".\Parser.fsy"
                 : 'gentype_list_pattern));
# 3684 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 447 ".\Parser.fsy"
                                                                                  PVector (_3) 
                   )
# 447 ".\Parser.fsy"
                 : 'gentype_vector_pattern));
# 3695 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 449 ".\Parser.fsy"
                                                                                 PSlice (_3) 
                   )
# 449 ".\Parser.fsy"
                 : 'gentype_slice_pattern));
# 3706 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_field_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 451 ".\Parser.fsy"
                                                                                   PRecord (_3) 
                   )
# 451 ".\Parser.fsy"
                 : 'gentype_record_pattern));
|]
# 3718 "Parser.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 111;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let unit lexer lexbuf :  Unit  =
    engine lexer lexbuf 0 :?> _
