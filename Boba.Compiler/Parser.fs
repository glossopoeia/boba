// Implementation file for parser generated by fsyacc
module Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 ".\Parser.fsy"


open Boba.Compiler.Syntax
open Boba.Core.DotSeq
open Boba.Core.Kinds
open Boba.Core.Types
open Boba.Core.TypeBuilder


# 16 "Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | IS
  | ONE
  | TRUE
  | FALSE
  | NOT
  | TUPLE
  | LIST
  | ITERATOR
  | STRING_KEY
  | VECTOR
  | SLICE
  | DICTIONARY
  | CASE
  | FOR
  | IN
  | BREAK
  | FINAL
  | FILL
  | LENGTH
  | RESULT
  | IF
  | WHEN
  | SWITCH
  | WHILE
  | THEN
  | ELSE
  | DO
  | MATCH
  | INJECT
  | WITH
  | AFTER
  | HANDLE
  | UNTAG
  | BY
  | PER
  | TRUST
  | DISTRUST
  | AUDIT
  | WITH_STATE
  | PERMISSION
  | FUNCTION
  | NATIVE
  | LOCAL
  | LET
  | BOOLEAN
  | ABELIAN
  | SYNTACTIC
  | IS_ROUGHLY
  | IS_NOT
  | SATISFIES
  | VIOLATES
  | TEST
  | LAW
  | EXHAUSTIVE
  | SYNONYM
  | TAG
  | EFFECT
  | OVERLOAD
  | INSTANCE
  | RULE
  | CHECK
  | PATTERN
  | RECURSIVE
  | KIND
  | DATA
  | ABOUT
  | MAIN
  | EXPORT
  | FROM
  | AS
  | IMPORT
  | REF
  | UNDERSCORE
  | EQUALS
  | ELLIPSIS
  | DOUBLE_AMP
  | DOUBLE_BAR
  | BAR
  | DOT
  | PLUS
  | MINUS
  | STAR
  | COLON
  | DOUBLE_COLON
  | CARET
  | COMMA
  | SEMICOLON
  | FN_CTOR
  | FN_ARROW_BACK
  | FN_ARROW_FRONT
  | FN_DIVIDE
  | L_CONE
  | R_CONE
  | L_BOX
  | R_BOX
  | L_PUMPKIN
  | R_PUMPKIN
  | L_BANANA
  | R_BANANA
  | L_BIND
  | R_BIND
  | L_STAR
  | R_STAR
  | L_ARROW
  | R_ARROW
  | L_BRACKET
  | R_BRACKET
  | L_BRACE
  | R_BRACE
  | L_PAREN
  | R_PAREN
  | DOCUMENTATION_LINE of (DocumentationLine)
  | NATIVE_CODE_LINE of (NativeCodeLine)
  | CHARACTER of (CharacterLiteral)
  | STRING of (StringLiteral)
  | DECIMAL of (DecimalLiteral)
  | INTEGER of (IntegerLiteral)
  | TEST_NAME of (Name)
  | PREDICATE_NAME of (Name)
  | OPERATOR_NAME of (Name)
  | BIG_NAME of (Name)
  | SMALL_NAME of (Name)
  | EOF
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_IS
    | TOKEN_ONE
    | TOKEN_TRUE
    | TOKEN_FALSE
    | TOKEN_NOT
    | TOKEN_TUPLE
    | TOKEN_LIST
    | TOKEN_ITERATOR
    | TOKEN_STRING_KEY
    | TOKEN_VECTOR
    | TOKEN_SLICE
    | TOKEN_DICTIONARY
    | TOKEN_CASE
    | TOKEN_FOR
    | TOKEN_IN
    | TOKEN_BREAK
    | TOKEN_FINAL
    | TOKEN_FILL
    | TOKEN_LENGTH
    | TOKEN_RESULT
    | TOKEN_IF
    | TOKEN_WHEN
    | TOKEN_SWITCH
    | TOKEN_WHILE
    | TOKEN_THEN
    | TOKEN_ELSE
    | TOKEN_DO
    | TOKEN_MATCH
    | TOKEN_INJECT
    | TOKEN_WITH
    | TOKEN_AFTER
    | TOKEN_HANDLE
    | TOKEN_UNTAG
    | TOKEN_BY
    | TOKEN_PER
    | TOKEN_TRUST
    | TOKEN_DISTRUST
    | TOKEN_AUDIT
    | TOKEN_WITH_STATE
    | TOKEN_PERMISSION
    | TOKEN_FUNCTION
    | TOKEN_NATIVE
    | TOKEN_LOCAL
    | TOKEN_LET
    | TOKEN_BOOLEAN
    | TOKEN_ABELIAN
    | TOKEN_SYNTACTIC
    | TOKEN_IS_ROUGHLY
    | TOKEN_IS_NOT
    | TOKEN_SATISFIES
    | TOKEN_VIOLATES
    | TOKEN_TEST
    | TOKEN_LAW
    | TOKEN_EXHAUSTIVE
    | TOKEN_SYNONYM
    | TOKEN_TAG
    | TOKEN_EFFECT
    | TOKEN_OVERLOAD
    | TOKEN_INSTANCE
    | TOKEN_RULE
    | TOKEN_CHECK
    | TOKEN_PATTERN
    | TOKEN_RECURSIVE
    | TOKEN_KIND
    | TOKEN_DATA
    | TOKEN_ABOUT
    | TOKEN_MAIN
    | TOKEN_EXPORT
    | TOKEN_FROM
    | TOKEN_AS
    | TOKEN_IMPORT
    | TOKEN_REF
    | TOKEN_UNDERSCORE
    | TOKEN_EQUALS
    | TOKEN_ELLIPSIS
    | TOKEN_DOUBLE_AMP
    | TOKEN_DOUBLE_BAR
    | TOKEN_BAR
    | TOKEN_DOT
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_STAR
    | TOKEN_COLON
    | TOKEN_DOUBLE_COLON
    | TOKEN_CARET
    | TOKEN_COMMA
    | TOKEN_SEMICOLON
    | TOKEN_FN_CTOR
    | TOKEN_FN_ARROW_BACK
    | TOKEN_FN_ARROW_FRONT
    | TOKEN_FN_DIVIDE
    | TOKEN_L_CONE
    | TOKEN_R_CONE
    | TOKEN_L_BOX
    | TOKEN_R_BOX
    | TOKEN_L_PUMPKIN
    | TOKEN_R_PUMPKIN
    | TOKEN_L_BANANA
    | TOKEN_R_BANANA
    | TOKEN_L_BIND
    | TOKEN_R_BIND
    | TOKEN_L_STAR
    | TOKEN_R_STAR
    | TOKEN_L_ARROW
    | TOKEN_R_ARROW
    | TOKEN_L_BRACKET
    | TOKEN_R_BRACKET
    | TOKEN_L_BRACE
    | TOKEN_R_BRACE
    | TOKEN_L_PAREN
    | TOKEN_R_PAREN
    | TOKEN_DOCUMENTATION_LINE
    | TOKEN_NATIVE_CODE_LINE
    | TOKEN_CHARACTER
    | TOKEN_STRING
    | TOKEN_DECIMAL
    | TOKEN_INTEGER
    | TOKEN_TEST_NAME
    | TOKEN_PREDICATE_NAME
    | TOKEN_OPERATOR_NAME
    | TOKEN_BIG_NAME
    | TOKEN_SMALL_NAME
    | TOKEN_EOF
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startunit
    | NONTERM_unit
    | NONTERM_import_list
    | NONTERM_decl_list
    | NONTERM_main
    | NONTERM_import
    | NONTERM_import_path
    | NONTERM_remote
    | NONTERM_export
    | NONTERM_brace_names
    | NONTERM_name_list
    | NONTERM_name
    | NONTERM_declaration
    | NONTERM_documentation
    | NONTERM_documentation_lines
    | NONTERM_function
    | NONTERM_function_list
    | NONTERM_native
    | NONTERM_native_code_list
    | NONTERM_userkind
    | NONTERM_kind_unify
    | NONTERM_datatype
    | NONTERM_type_param_list
    | NONTERM_datatype_list
    | NONTERM_constructor
    | NONTERM_constructor_list
    | NONTERM_rule
    | NONTERM_overload
    | NONTERM_opt_type_param_list
    | NONTERM_instance
    | NONTERM_effect
    | NONTERM_handler_template_list
    | NONTERM_handler_template
    | NONTERM_test
    | NONTERM_law
    | NONTERM_law_param_list
    | NONTERM_law_param
    | NONTERM_test_all
    | NONTERM_check
    | NONTERM_tag
    | NONTERM_base_kind
    | NONTERM_compound_kind
    | NONTERM_constraint_list
    | NONTERM_constraint
    | NONTERM_predicate_list
    | NONTERM_predicate
    | NONTERM_qual_fn_type
    | NONTERM_base_type
    | NONTERM_val_type
    | NONTERM_top_fn_type
    | NONTERM_fn_type
    | NONTERM_fn_type_seq
    | NONTERM_fn_row_type
    | NONTERM_field_row_type
    | NONTERM_field_type
    | NONTERM_compound_type
    | NONTERM_and_sequence
    | NONTERM_or_sequence
    | NONTERM_mul_sequence
    | NONTERM_type_arg_list
    | NONTERM_term_statement_block
    | NONTERM_term_statement_list
    | NONTERM_term_statement
    | NONTERM_non_empty_simple_expr
    | NONTERM_simple_expr
    | NONTERM_word
    | NONTERM_permission
    | NONTERM_handle_word
    | NONTERM_handler
    | NONTERM_return
    | NONTERM_param_list
    | NONTERM_handler_list
    | NONTERM_inject_word
    | NONTERM_eff_list
    | NONTERM_match_word
    | NONTERM_match_clause_list
    | NONTERM_match_clause
    | NONTERM_if_word
    | NONTERM_switch_word
    | NONTERM_switch_clause_list
    | NONTERM_when_word
    | NONTERM_while_word
    | NONTERM_for_word
    | NONTERM_for_results
    | NONTERM_for_result
    | NONTERM_for_sequence
    | NONTERM_parallel_sequences
    | NONTERM_fold_inits
    | NONTERM_function_literal
    | NONTERM_lit_expr_list
    | NONTERM_tuple_literal
    | NONTERM_list_literal
    | NONTERM_record_literal
    | NONTERM_variant_literal
    | NONTERM_case_word
    | NONTERM_case_clause_list
    | NONTERM_case_clause
    | NONTERM_field_list
    | NONTERM_field
    | NONTERM_identifier
    | NONTERM_type_identifier
    | NONTERM_pred_identifier
    | NONTERM_qualified_name
    | NONTERM_qualified_ctor
    | NONTERM_qualified_pred
    | NONTERM_no_dot_pattern_expr_list
    | NONTERM_var_only_pattern_list
    | NONTERM_pattern_expr_list
    | NONTERM_field_pattern_list
    | NONTERM_pattern_expr
    | NONTERM_tuple_pattern
    | NONTERM_list_pattern
    | NONTERM_vector_pattern
    | NONTERM_slice_pattern
    | NONTERM_record_pattern

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | IS  -> 0 
  | ONE  -> 1 
  | TRUE  -> 2 
  | FALSE  -> 3 
  | NOT  -> 4 
  | TUPLE  -> 5 
  | LIST  -> 6 
  | ITERATOR  -> 7 
  | STRING_KEY  -> 8 
  | VECTOR  -> 9 
  | SLICE  -> 10 
  | DICTIONARY  -> 11 
  | CASE  -> 12 
  | FOR  -> 13 
  | IN  -> 14 
  | BREAK  -> 15 
  | FINAL  -> 16 
  | FILL  -> 17 
  | LENGTH  -> 18 
  | RESULT  -> 19 
  | IF  -> 20 
  | WHEN  -> 21 
  | SWITCH  -> 22 
  | WHILE  -> 23 
  | THEN  -> 24 
  | ELSE  -> 25 
  | DO  -> 26 
  | MATCH  -> 27 
  | INJECT  -> 28 
  | WITH  -> 29 
  | AFTER  -> 30 
  | HANDLE  -> 31 
  | UNTAG  -> 32 
  | BY  -> 33 
  | PER  -> 34 
  | TRUST  -> 35 
  | DISTRUST  -> 36 
  | AUDIT  -> 37 
  | WITH_STATE  -> 38 
  | PERMISSION  -> 39 
  | FUNCTION  -> 40 
  | NATIVE  -> 41 
  | LOCAL  -> 42 
  | LET  -> 43 
  | BOOLEAN  -> 44 
  | ABELIAN  -> 45 
  | SYNTACTIC  -> 46 
  | IS_ROUGHLY  -> 47 
  | IS_NOT  -> 48 
  | SATISFIES  -> 49 
  | VIOLATES  -> 50 
  | TEST  -> 51 
  | LAW  -> 52 
  | EXHAUSTIVE  -> 53 
  | SYNONYM  -> 54 
  | TAG  -> 55 
  | EFFECT  -> 56 
  | OVERLOAD  -> 57 
  | INSTANCE  -> 58 
  | RULE  -> 59 
  | CHECK  -> 60 
  | PATTERN  -> 61 
  | RECURSIVE  -> 62 
  | KIND  -> 63 
  | DATA  -> 64 
  | ABOUT  -> 65 
  | MAIN  -> 66 
  | EXPORT  -> 67 
  | FROM  -> 68 
  | AS  -> 69 
  | IMPORT  -> 70 
  | REF  -> 71 
  | UNDERSCORE  -> 72 
  | EQUALS  -> 73 
  | ELLIPSIS  -> 74 
  | DOUBLE_AMP  -> 75 
  | DOUBLE_BAR  -> 76 
  | BAR  -> 77 
  | DOT  -> 78 
  | PLUS  -> 79 
  | MINUS  -> 80 
  | STAR  -> 81 
  | COLON  -> 82 
  | DOUBLE_COLON  -> 83 
  | CARET  -> 84 
  | COMMA  -> 85 
  | SEMICOLON  -> 86 
  | FN_CTOR  -> 87 
  | FN_ARROW_BACK  -> 88 
  | FN_ARROW_FRONT  -> 89 
  | FN_DIVIDE  -> 90 
  | L_CONE  -> 91 
  | R_CONE  -> 92 
  | L_BOX  -> 93 
  | R_BOX  -> 94 
  | L_PUMPKIN  -> 95 
  | R_PUMPKIN  -> 96 
  | L_BANANA  -> 97 
  | R_BANANA  -> 98 
  | L_BIND  -> 99 
  | R_BIND  -> 100 
  | L_STAR  -> 101 
  | R_STAR  -> 102 
  | L_ARROW  -> 103 
  | R_ARROW  -> 104 
  | L_BRACKET  -> 105 
  | R_BRACKET  -> 106 
  | L_BRACE  -> 107 
  | R_BRACE  -> 108 
  | L_PAREN  -> 109 
  | R_PAREN  -> 110 
  | DOCUMENTATION_LINE _ -> 111 
  | NATIVE_CODE_LINE _ -> 112 
  | CHARACTER _ -> 113 
  | STRING _ -> 114 
  | DECIMAL _ -> 115 
  | INTEGER _ -> 116 
  | TEST_NAME _ -> 117 
  | PREDICATE_NAME _ -> 118 
  | OPERATOR_NAME _ -> 119 
  | BIG_NAME _ -> 120 
  | SMALL_NAME _ -> 121 
  | EOF  -> 122 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_IS 
  | 1 -> TOKEN_ONE 
  | 2 -> TOKEN_TRUE 
  | 3 -> TOKEN_FALSE 
  | 4 -> TOKEN_NOT 
  | 5 -> TOKEN_TUPLE 
  | 6 -> TOKEN_LIST 
  | 7 -> TOKEN_ITERATOR 
  | 8 -> TOKEN_STRING_KEY 
  | 9 -> TOKEN_VECTOR 
  | 10 -> TOKEN_SLICE 
  | 11 -> TOKEN_DICTIONARY 
  | 12 -> TOKEN_CASE 
  | 13 -> TOKEN_FOR 
  | 14 -> TOKEN_IN 
  | 15 -> TOKEN_BREAK 
  | 16 -> TOKEN_FINAL 
  | 17 -> TOKEN_FILL 
  | 18 -> TOKEN_LENGTH 
  | 19 -> TOKEN_RESULT 
  | 20 -> TOKEN_IF 
  | 21 -> TOKEN_WHEN 
  | 22 -> TOKEN_SWITCH 
  | 23 -> TOKEN_WHILE 
  | 24 -> TOKEN_THEN 
  | 25 -> TOKEN_ELSE 
  | 26 -> TOKEN_DO 
  | 27 -> TOKEN_MATCH 
  | 28 -> TOKEN_INJECT 
  | 29 -> TOKEN_WITH 
  | 30 -> TOKEN_AFTER 
  | 31 -> TOKEN_HANDLE 
  | 32 -> TOKEN_UNTAG 
  | 33 -> TOKEN_BY 
  | 34 -> TOKEN_PER 
  | 35 -> TOKEN_TRUST 
  | 36 -> TOKEN_DISTRUST 
  | 37 -> TOKEN_AUDIT 
  | 38 -> TOKEN_WITH_STATE 
  | 39 -> TOKEN_PERMISSION 
  | 40 -> TOKEN_FUNCTION 
  | 41 -> TOKEN_NATIVE 
  | 42 -> TOKEN_LOCAL 
  | 43 -> TOKEN_LET 
  | 44 -> TOKEN_BOOLEAN 
  | 45 -> TOKEN_ABELIAN 
  | 46 -> TOKEN_SYNTACTIC 
  | 47 -> TOKEN_IS_ROUGHLY 
  | 48 -> TOKEN_IS_NOT 
  | 49 -> TOKEN_SATISFIES 
  | 50 -> TOKEN_VIOLATES 
  | 51 -> TOKEN_TEST 
  | 52 -> TOKEN_LAW 
  | 53 -> TOKEN_EXHAUSTIVE 
  | 54 -> TOKEN_SYNONYM 
  | 55 -> TOKEN_TAG 
  | 56 -> TOKEN_EFFECT 
  | 57 -> TOKEN_OVERLOAD 
  | 58 -> TOKEN_INSTANCE 
  | 59 -> TOKEN_RULE 
  | 60 -> TOKEN_CHECK 
  | 61 -> TOKEN_PATTERN 
  | 62 -> TOKEN_RECURSIVE 
  | 63 -> TOKEN_KIND 
  | 64 -> TOKEN_DATA 
  | 65 -> TOKEN_ABOUT 
  | 66 -> TOKEN_MAIN 
  | 67 -> TOKEN_EXPORT 
  | 68 -> TOKEN_FROM 
  | 69 -> TOKEN_AS 
  | 70 -> TOKEN_IMPORT 
  | 71 -> TOKEN_REF 
  | 72 -> TOKEN_UNDERSCORE 
  | 73 -> TOKEN_EQUALS 
  | 74 -> TOKEN_ELLIPSIS 
  | 75 -> TOKEN_DOUBLE_AMP 
  | 76 -> TOKEN_DOUBLE_BAR 
  | 77 -> TOKEN_BAR 
  | 78 -> TOKEN_DOT 
  | 79 -> TOKEN_PLUS 
  | 80 -> TOKEN_MINUS 
  | 81 -> TOKEN_STAR 
  | 82 -> TOKEN_COLON 
  | 83 -> TOKEN_DOUBLE_COLON 
  | 84 -> TOKEN_CARET 
  | 85 -> TOKEN_COMMA 
  | 86 -> TOKEN_SEMICOLON 
  | 87 -> TOKEN_FN_CTOR 
  | 88 -> TOKEN_FN_ARROW_BACK 
  | 89 -> TOKEN_FN_ARROW_FRONT 
  | 90 -> TOKEN_FN_DIVIDE 
  | 91 -> TOKEN_L_CONE 
  | 92 -> TOKEN_R_CONE 
  | 93 -> TOKEN_L_BOX 
  | 94 -> TOKEN_R_BOX 
  | 95 -> TOKEN_L_PUMPKIN 
  | 96 -> TOKEN_R_PUMPKIN 
  | 97 -> TOKEN_L_BANANA 
  | 98 -> TOKEN_R_BANANA 
  | 99 -> TOKEN_L_BIND 
  | 100 -> TOKEN_R_BIND 
  | 101 -> TOKEN_L_STAR 
  | 102 -> TOKEN_R_STAR 
  | 103 -> TOKEN_L_ARROW 
  | 104 -> TOKEN_R_ARROW 
  | 105 -> TOKEN_L_BRACKET 
  | 106 -> TOKEN_R_BRACKET 
  | 107 -> TOKEN_L_BRACE 
  | 108 -> TOKEN_R_BRACE 
  | 109 -> TOKEN_L_PAREN 
  | 110 -> TOKEN_R_PAREN 
  | 111 -> TOKEN_DOCUMENTATION_LINE 
  | 112 -> TOKEN_NATIVE_CODE_LINE 
  | 113 -> TOKEN_CHARACTER 
  | 114 -> TOKEN_STRING 
  | 115 -> TOKEN_DECIMAL 
  | 116 -> TOKEN_INTEGER 
  | 117 -> TOKEN_TEST_NAME 
  | 118 -> TOKEN_PREDICATE_NAME 
  | 119 -> TOKEN_OPERATOR_NAME 
  | 120 -> TOKEN_BIG_NAME 
  | 121 -> TOKEN_SMALL_NAME 
  | 122 -> TOKEN_EOF 
  | 125 -> TOKEN_end_of_input
  | 123 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startunit 
    | 1 -> NONTERM_unit 
    | 2 -> NONTERM_unit 
    | 3 -> NONTERM_import_list 
    | 4 -> NONTERM_import_list 
    | 5 -> NONTERM_decl_list 
    | 6 -> NONTERM_decl_list 
    | 7 -> NONTERM_main 
    | 8 -> NONTERM_import 
    | 9 -> NONTERM_import 
    | 10 -> NONTERM_import 
    | 11 -> NONTERM_import_path 
    | 12 -> NONTERM_import_path 
    | 13 -> NONTERM_remote 
    | 14 -> NONTERM_export 
    | 15 -> NONTERM_brace_names 
    | 16 -> NONTERM_name_list 
    | 17 -> NONTERM_name_list 
    | 18 -> NONTERM_name 
    | 19 -> NONTERM_name 
    | 20 -> NONTERM_name 
    | 21 -> NONTERM_declaration 
    | 22 -> NONTERM_declaration 
    | 23 -> NONTERM_declaration 
    | 24 -> NONTERM_declaration 
    | 25 -> NONTERM_declaration 
    | 26 -> NONTERM_declaration 
    | 27 -> NONTERM_declaration 
    | 28 -> NONTERM_declaration 
    | 29 -> NONTERM_declaration 
    | 30 -> NONTERM_declaration 
    | 31 -> NONTERM_declaration 
    | 32 -> NONTERM_declaration 
    | 33 -> NONTERM_declaration 
    | 34 -> NONTERM_declaration 
    | 35 -> NONTERM_declaration 
    | 36 -> NONTERM_declaration 
    | 37 -> NONTERM_declaration 
    | 38 -> NONTERM_documentation 
    | 39 -> NONTERM_documentation_lines 
    | 40 -> NONTERM_documentation_lines 
    | 41 -> NONTERM_function 
    | 42 -> NONTERM_function 
    | 43 -> NONTERM_function 
    | 44 -> NONTERM_function 
    | 45 -> NONTERM_function_list 
    | 46 -> NONTERM_function_list 
    | 47 -> NONTERM_native 
    | 48 -> NONTERM_native 
    | 49 -> NONTERM_native_code_list 
    | 50 -> NONTERM_native_code_list 
    | 51 -> NONTERM_userkind 
    | 52 -> NONTERM_userkind 
    | 53 -> NONTERM_kind_unify 
    | 54 -> NONTERM_kind_unify 
    | 55 -> NONTERM_kind_unify 
    | 56 -> NONTERM_datatype 
    | 57 -> NONTERM_datatype 
    | 58 -> NONTERM_datatype 
    | 59 -> NONTERM_datatype 
    | 60 -> NONTERM_datatype 
    | 61 -> NONTERM_datatype 
    | 62 -> NONTERM_type_param_list 
    | 63 -> NONTERM_type_param_list 
    | 64 -> NONTERM_type_param_list 
    | 65 -> NONTERM_datatype_list 
    | 66 -> NONTERM_datatype_list 
    | 67 -> NONTERM_constructor 
    | 68 -> NONTERM_constructor 
    | 69 -> NONTERM_constructor_list 
    | 70 -> NONTERM_constructor_list 
    | 71 -> NONTERM_rule 
    | 72 -> NONTERM_overload 
    | 73 -> NONTERM_overload 
    | 74 -> NONTERM_opt_type_param_list 
    | 75 -> NONTERM_opt_type_param_list 
    | 76 -> NONTERM_opt_type_param_list 
    | 77 -> NONTERM_instance 
    | 78 -> NONTERM_instance 
    | 79 -> NONTERM_effect 
    | 80 -> NONTERM_effect 
    | 81 -> NONTERM_effect 
    | 82 -> NONTERM_effect 
    | 83 -> NONTERM_handler_template_list 
    | 84 -> NONTERM_handler_template_list 
    | 85 -> NONTERM_handler_template 
    | 86 -> NONTERM_test 
    | 87 -> NONTERM_law 
    | 88 -> NONTERM_law_param_list 
    | 89 -> NONTERM_law_param_list 
    | 90 -> NONTERM_law_param 
    | 91 -> NONTERM_test_all 
    | 92 -> NONTERM_test_all 
    | 93 -> NONTERM_test_all 
    | 94 -> NONTERM_test_all 
    | 95 -> NONTERM_test_all 
    | 96 -> NONTERM_test_all 
    | 97 -> NONTERM_test_all 
    | 98 -> NONTERM_check 
    | 99 -> NONTERM_tag 
    | 100 -> NONTERM_base_kind 
    | 101 -> NONTERM_base_kind 
    | 102 -> NONTERM_compound_kind 
    | 103 -> NONTERM_compound_kind 
    | 104 -> NONTERM_compound_kind 
    | 105 -> NONTERM_compound_kind 
    | 106 -> NONTERM_constraint_list 
    | 107 -> NONTERM_constraint_list 
    | 108 -> NONTERM_constraint 
    | 109 -> NONTERM_constraint 
    | 110 -> NONTERM_predicate_list 
    | 111 -> NONTERM_predicate_list 
    | 112 -> NONTERM_predicate_list 
    | 113 -> NONTERM_predicate 
    | 114 -> NONTERM_qual_fn_type 
    | 115 -> NONTERM_qual_fn_type 
    | 116 -> NONTERM_base_type 
    | 117 -> NONTERM_base_type 
    | 118 -> NONTERM_base_type 
    | 119 -> NONTERM_base_type 
    | 120 -> NONTERM_base_type 
    | 121 -> NONTERM_base_type 
    | 122 -> NONTERM_base_type 
    | 123 -> NONTERM_base_type 
    | 124 -> NONTERM_base_type 
    | 125 -> NONTERM_base_type 
    | 126 -> NONTERM_base_type 
    | 127 -> NONTERM_base_type 
    | 128 -> NONTERM_base_type 
    | 129 -> NONTERM_base_type 
    | 130 -> NONTERM_base_type 
    | 131 -> NONTERM_base_type 
    | 132 -> NONTERM_val_type 
    | 133 -> NONTERM_top_fn_type 
    | 134 -> NONTERM_fn_type 
    | 135 -> NONTERM_fn_type_seq 
    | 136 -> NONTERM_fn_type_seq 
    | 137 -> NONTERM_fn_type_seq 
    | 138 -> NONTERM_fn_row_type 
    | 139 -> NONTERM_fn_row_type 
    | 140 -> NONTERM_fn_row_type 
    | 141 -> NONTERM_field_row_type 
    | 142 -> NONTERM_field_row_type 
    | 143 -> NONTERM_field_row_type 
    | 144 -> NONTERM_field_type 
    | 145 -> NONTERM_field_type 
    | 146 -> NONTERM_compound_type 
    | 147 -> NONTERM_compound_type 
    | 148 -> NONTERM_compound_type 
    | 149 -> NONTERM_compound_type 
    | 150 -> NONTERM_compound_type 
    | 151 -> NONTERM_compound_type 
    | 152 -> NONTERM_compound_type 
    | 153 -> NONTERM_and_sequence 
    | 154 -> NONTERM_and_sequence 
    | 155 -> NONTERM_or_sequence 
    | 156 -> NONTERM_or_sequence 
    | 157 -> NONTERM_mul_sequence 
    | 158 -> NONTERM_mul_sequence 
    | 159 -> NONTERM_mul_sequence 
    | 160 -> NONTERM_mul_sequence 
    | 161 -> NONTERM_mul_sequence 
    | 162 -> NONTERM_type_arg_list 
    | 163 -> NONTERM_type_arg_list 
    | 164 -> NONTERM_term_statement_block 
    | 165 -> NONTERM_term_statement_list 
    | 166 -> NONTERM_term_statement_list 
    | 167 -> NONTERM_term_statement 
    | 168 -> NONTERM_term_statement 
    | 169 -> NONTERM_term_statement 
    | 170 -> NONTERM_non_empty_simple_expr 
    | 171 -> NONTERM_non_empty_simple_expr 
    | 172 -> NONTERM_non_empty_simple_expr 
    | 173 -> NONTERM_non_empty_simple_expr 
    | 174 -> NONTERM_non_empty_simple_expr 
    | 175 -> NONTERM_non_empty_simple_expr 
    | 176 -> NONTERM_non_empty_simple_expr 
    | 177 -> NONTERM_non_empty_simple_expr 
    | 178 -> NONTERM_simple_expr 
    | 179 -> NONTERM_simple_expr 
    | 180 -> NONTERM_word 
    | 181 -> NONTERM_word 
    | 182 -> NONTERM_word 
    | 183 -> NONTERM_word 
    | 184 -> NONTERM_word 
    | 185 -> NONTERM_word 
    | 186 -> NONTERM_word 
    | 187 -> NONTERM_word 
    | 188 -> NONTERM_word 
    | 189 -> NONTERM_word 
    | 190 -> NONTERM_word 
    | 191 -> NONTERM_word 
    | 192 -> NONTERM_word 
    | 193 -> NONTERM_word 
    | 194 -> NONTERM_word 
    | 195 -> NONTERM_word 
    | 196 -> NONTERM_word 
    | 197 -> NONTERM_word 
    | 198 -> NONTERM_word 
    | 199 -> NONTERM_word 
    | 200 -> NONTERM_word 
    | 201 -> NONTERM_word 
    | 202 -> NONTERM_word 
    | 203 -> NONTERM_word 
    | 204 -> NONTERM_word 
    | 205 -> NONTERM_word 
    | 206 -> NONTERM_word 
    | 207 -> NONTERM_word 
    | 208 -> NONTERM_word 
    | 209 -> NONTERM_permission 
    | 210 -> NONTERM_permission 
    | 211 -> NONTERM_handle_word 
    | 212 -> NONTERM_handle_word 
    | 213 -> NONTERM_handler 
    | 214 -> NONTERM_return 
    | 215 -> NONTERM_return 
    | 216 -> NONTERM_param_list 
    | 217 -> NONTERM_param_list 
    | 218 -> NONTERM_handler_list 
    | 219 -> NONTERM_handler_list 
    | 220 -> NONTERM_inject_word 
    | 221 -> NONTERM_eff_list 
    | 222 -> NONTERM_eff_list 
    | 223 -> NONTERM_match_word 
    | 224 -> NONTERM_match_word 
    | 225 -> NONTERM_match_clause_list 
    | 226 -> NONTERM_match_clause_list 
    | 227 -> NONTERM_match_clause 
    | 228 -> NONTERM_if_word 
    | 229 -> NONTERM_switch_word 
    | 230 -> NONTERM_switch_clause_list 
    | 231 -> NONTERM_switch_clause_list 
    | 232 -> NONTERM_when_word 
    | 233 -> NONTERM_while_word 
    | 234 -> NONTERM_for_word 
    | 235 -> NONTERM_for_word 
    | 236 -> NONTERM_for_word 
    | 237 -> NONTERM_for_results 
    | 238 -> NONTERM_for_results 
    | 239 -> NONTERM_for_result 
    | 240 -> NONTERM_for_result 
    | 241 -> NONTERM_for_result 
    | 242 -> NONTERM_for_result 
    | 243 -> NONTERM_for_sequence 
    | 244 -> NONTERM_for_sequence 
    | 245 -> NONTERM_for_sequence 
    | 246 -> NONTERM_for_sequence 
    | 247 -> NONTERM_for_sequence 
    | 248 -> NONTERM_parallel_sequences 
    | 249 -> NONTERM_parallel_sequences 
    | 250 -> NONTERM_fold_inits 
    | 251 -> NONTERM_fold_inits 
    | 252 -> NONTERM_function_literal 
    | 253 -> NONTERM_function_literal 
    | 254 -> NONTERM_lit_expr_list 
    | 255 -> NONTERM_lit_expr_list 
    | 256 -> NONTERM_tuple_literal 
    | 257 -> NONTERM_tuple_literal 
    | 258 -> NONTERM_tuple_literal 
    | 259 -> NONTERM_tuple_literal 
    | 260 -> NONTERM_list_literal 
    | 261 -> NONTERM_list_literal 
    | 262 -> NONTERM_list_literal 
    | 263 -> NONTERM_list_literal 
    | 264 -> NONTERM_record_literal 
    | 265 -> NONTERM_record_literal 
    | 266 -> NONTERM_record_literal 
    | 267 -> NONTERM_record_literal 
    | 268 -> NONTERM_variant_literal 
    | 269 -> NONTERM_case_word 
    | 270 -> NONTERM_case_clause_list 
    | 271 -> NONTERM_case_clause_list 
    | 272 -> NONTERM_case_clause 
    | 273 -> NONTERM_field_list 
    | 274 -> NONTERM_field_list 
    | 275 -> NONTERM_field 
    | 276 -> NONTERM_identifier 
    | 277 -> NONTERM_type_identifier 
    | 278 -> NONTERM_pred_identifier 
    | 279 -> NONTERM_qualified_name 
    | 280 -> NONTERM_qualified_name 
    | 281 -> NONTERM_qualified_name 
    | 282 -> NONTERM_qualified_name 
    | 283 -> NONTERM_qualified_name 
    | 284 -> NONTERM_qualified_ctor 
    | 285 -> NONTERM_qualified_ctor 
    | 286 -> NONTERM_qualified_ctor 
    | 287 -> NONTERM_qualified_pred 
    | 288 -> NONTERM_qualified_pred 
    | 289 -> NONTERM_no_dot_pattern_expr_list 
    | 290 -> NONTERM_no_dot_pattern_expr_list 
    | 291 -> NONTERM_var_only_pattern_list 
    | 292 -> NONTERM_var_only_pattern_list 
    | 293 -> NONTERM_pattern_expr_list 
    | 294 -> NONTERM_pattern_expr_list 
    | 295 -> NONTERM_pattern_expr_list 
    | 296 -> NONTERM_field_pattern_list 
    | 297 -> NONTERM_field_pattern_list 
    | 298 -> NONTERM_pattern_expr 
    | 299 -> NONTERM_pattern_expr 
    | 300 -> NONTERM_pattern_expr 
    | 301 -> NONTERM_pattern_expr 
    | 302 -> NONTERM_pattern_expr 
    | 303 -> NONTERM_pattern_expr 
    | 304 -> NONTERM_pattern_expr 
    | 305 -> NONTERM_pattern_expr 
    | 306 -> NONTERM_pattern_expr 
    | 307 -> NONTERM_pattern_expr 
    | 308 -> NONTERM_pattern_expr 
    | 309 -> NONTERM_pattern_expr 
    | 310 -> NONTERM_pattern_expr 
    | 311 -> NONTERM_pattern_expr 
    | 312 -> NONTERM_pattern_expr 
    | 313 -> NONTERM_pattern_expr 
    | 314 -> NONTERM_pattern_expr 
    | 315 -> NONTERM_tuple_pattern 
    | 316 -> NONTERM_list_pattern 
    | 317 -> NONTERM_list_pattern 
    | 318 -> NONTERM_vector_pattern 
    | 319 -> NONTERM_slice_pattern 
    | 320 -> NONTERM_record_pattern 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 125 
let _fsyacc_tagOfErrorTerminal = 123

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | IS  -> "IS" 
  | ONE  -> "ONE" 
  | TRUE  -> "TRUE" 
  | FALSE  -> "FALSE" 
  | NOT  -> "NOT" 
  | TUPLE  -> "TUPLE" 
  | LIST  -> "LIST" 
  | ITERATOR  -> "ITERATOR" 
  | STRING_KEY  -> "STRING_KEY" 
  | VECTOR  -> "VECTOR" 
  | SLICE  -> "SLICE" 
  | DICTIONARY  -> "DICTIONARY" 
  | CASE  -> "CASE" 
  | FOR  -> "FOR" 
  | IN  -> "IN" 
  | BREAK  -> "BREAK" 
  | FINAL  -> "FINAL" 
  | FILL  -> "FILL" 
  | LENGTH  -> "LENGTH" 
  | RESULT  -> "RESULT" 
  | IF  -> "IF" 
  | WHEN  -> "WHEN" 
  | SWITCH  -> "SWITCH" 
  | WHILE  -> "WHILE" 
  | THEN  -> "THEN" 
  | ELSE  -> "ELSE" 
  | DO  -> "DO" 
  | MATCH  -> "MATCH" 
  | INJECT  -> "INJECT" 
  | WITH  -> "WITH" 
  | AFTER  -> "AFTER" 
  | HANDLE  -> "HANDLE" 
  | UNTAG  -> "UNTAG" 
  | BY  -> "BY" 
  | PER  -> "PER" 
  | TRUST  -> "TRUST" 
  | DISTRUST  -> "DISTRUST" 
  | AUDIT  -> "AUDIT" 
  | WITH_STATE  -> "WITH_STATE" 
  | PERMISSION  -> "PERMISSION" 
  | FUNCTION  -> "FUNCTION" 
  | NATIVE  -> "NATIVE" 
  | LOCAL  -> "LOCAL" 
  | LET  -> "LET" 
  | BOOLEAN  -> "BOOLEAN" 
  | ABELIAN  -> "ABELIAN" 
  | SYNTACTIC  -> "SYNTACTIC" 
  | IS_ROUGHLY  -> "IS_ROUGHLY" 
  | IS_NOT  -> "IS_NOT" 
  | SATISFIES  -> "SATISFIES" 
  | VIOLATES  -> "VIOLATES" 
  | TEST  -> "TEST" 
  | LAW  -> "LAW" 
  | EXHAUSTIVE  -> "EXHAUSTIVE" 
  | SYNONYM  -> "SYNONYM" 
  | TAG  -> "TAG" 
  | EFFECT  -> "EFFECT" 
  | OVERLOAD  -> "OVERLOAD" 
  | INSTANCE  -> "INSTANCE" 
  | RULE  -> "RULE" 
  | CHECK  -> "CHECK" 
  | PATTERN  -> "PATTERN" 
  | RECURSIVE  -> "RECURSIVE" 
  | KIND  -> "KIND" 
  | DATA  -> "DATA" 
  | ABOUT  -> "ABOUT" 
  | MAIN  -> "MAIN" 
  | EXPORT  -> "EXPORT" 
  | FROM  -> "FROM" 
  | AS  -> "AS" 
  | IMPORT  -> "IMPORT" 
  | REF  -> "REF" 
  | UNDERSCORE  -> "UNDERSCORE" 
  | EQUALS  -> "EQUALS" 
  | ELLIPSIS  -> "ELLIPSIS" 
  | DOUBLE_AMP  -> "DOUBLE_AMP" 
  | DOUBLE_BAR  -> "DOUBLE_BAR" 
  | BAR  -> "BAR" 
  | DOT  -> "DOT" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | STAR  -> "STAR" 
  | COLON  -> "COLON" 
  | DOUBLE_COLON  -> "DOUBLE_COLON" 
  | CARET  -> "CARET" 
  | COMMA  -> "COMMA" 
  | SEMICOLON  -> "SEMICOLON" 
  | FN_CTOR  -> "FN_CTOR" 
  | FN_ARROW_BACK  -> "FN_ARROW_BACK" 
  | FN_ARROW_FRONT  -> "FN_ARROW_FRONT" 
  | FN_DIVIDE  -> "FN_DIVIDE" 
  | L_CONE  -> "L_CONE" 
  | R_CONE  -> "R_CONE" 
  | L_BOX  -> "L_BOX" 
  | R_BOX  -> "R_BOX" 
  | L_PUMPKIN  -> "L_PUMPKIN" 
  | R_PUMPKIN  -> "R_PUMPKIN" 
  | L_BANANA  -> "L_BANANA" 
  | R_BANANA  -> "R_BANANA" 
  | L_BIND  -> "L_BIND" 
  | R_BIND  -> "R_BIND" 
  | L_STAR  -> "L_STAR" 
  | R_STAR  -> "R_STAR" 
  | L_ARROW  -> "L_ARROW" 
  | R_ARROW  -> "R_ARROW" 
  | L_BRACKET  -> "L_BRACKET" 
  | R_BRACKET  -> "R_BRACKET" 
  | L_BRACE  -> "L_BRACE" 
  | R_BRACE  -> "R_BRACE" 
  | L_PAREN  -> "L_PAREN" 
  | R_PAREN  -> "R_PAREN" 
  | DOCUMENTATION_LINE _ -> "DOCUMENTATION_LINE" 
  | NATIVE_CODE_LINE _ -> "NATIVE_CODE_LINE" 
  | CHARACTER _ -> "CHARACTER" 
  | STRING _ -> "STRING" 
  | DECIMAL _ -> "DECIMAL" 
  | INTEGER _ -> "INTEGER" 
  | TEST_NAME _ -> "TEST_NAME" 
  | PREDICATE_NAME _ -> "PREDICATE_NAME" 
  | OPERATOR_NAME _ -> "OPERATOR_NAME" 
  | BIG_NAME _ -> "BIG_NAME" 
  | SMALL_NAME _ -> "SMALL_NAME" 
  | EOF  -> "EOF" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | IS  -> (null : System.Object) 
  | ONE  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | TUPLE  -> (null : System.Object) 
  | LIST  -> (null : System.Object) 
  | ITERATOR  -> (null : System.Object) 
  | STRING_KEY  -> (null : System.Object) 
  | VECTOR  -> (null : System.Object) 
  | SLICE  -> (null : System.Object) 
  | DICTIONARY  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | BREAK  -> (null : System.Object) 
  | FINAL  -> (null : System.Object) 
  | FILL  -> (null : System.Object) 
  | LENGTH  -> (null : System.Object) 
  | RESULT  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | WHEN  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | INJECT  -> (null : System.Object) 
  | WITH  -> (null : System.Object) 
  | AFTER  -> (null : System.Object) 
  | HANDLE  -> (null : System.Object) 
  | UNTAG  -> (null : System.Object) 
  | BY  -> (null : System.Object) 
  | PER  -> (null : System.Object) 
  | TRUST  -> (null : System.Object) 
  | DISTRUST  -> (null : System.Object) 
  | AUDIT  -> (null : System.Object) 
  | WITH_STATE  -> (null : System.Object) 
  | PERMISSION  -> (null : System.Object) 
  | FUNCTION  -> (null : System.Object) 
  | NATIVE  -> (null : System.Object) 
  | LOCAL  -> (null : System.Object) 
  | LET  -> (null : System.Object) 
  | BOOLEAN  -> (null : System.Object) 
  | ABELIAN  -> (null : System.Object) 
  | SYNTACTIC  -> (null : System.Object) 
  | IS_ROUGHLY  -> (null : System.Object) 
  | IS_NOT  -> (null : System.Object) 
  | SATISFIES  -> (null : System.Object) 
  | VIOLATES  -> (null : System.Object) 
  | TEST  -> (null : System.Object) 
  | LAW  -> (null : System.Object) 
  | EXHAUSTIVE  -> (null : System.Object) 
  | SYNONYM  -> (null : System.Object) 
  | TAG  -> (null : System.Object) 
  | EFFECT  -> (null : System.Object) 
  | OVERLOAD  -> (null : System.Object) 
  | INSTANCE  -> (null : System.Object) 
  | RULE  -> (null : System.Object) 
  | CHECK  -> (null : System.Object) 
  | PATTERN  -> (null : System.Object) 
  | RECURSIVE  -> (null : System.Object) 
  | KIND  -> (null : System.Object) 
  | DATA  -> (null : System.Object) 
  | ABOUT  -> (null : System.Object) 
  | MAIN  -> (null : System.Object) 
  | EXPORT  -> (null : System.Object) 
  | FROM  -> (null : System.Object) 
  | AS  -> (null : System.Object) 
  | IMPORT  -> (null : System.Object) 
  | REF  -> (null : System.Object) 
  | UNDERSCORE  -> (null : System.Object) 
  | EQUALS  -> (null : System.Object) 
  | ELLIPSIS  -> (null : System.Object) 
  | DOUBLE_AMP  -> (null : System.Object) 
  | DOUBLE_BAR  -> (null : System.Object) 
  | BAR  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | DOUBLE_COLON  -> (null : System.Object) 
  | CARET  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | FN_CTOR  -> (null : System.Object) 
  | FN_ARROW_BACK  -> (null : System.Object) 
  | FN_ARROW_FRONT  -> (null : System.Object) 
  | FN_DIVIDE  -> (null : System.Object) 
  | L_CONE  -> (null : System.Object) 
  | R_CONE  -> (null : System.Object) 
  | L_BOX  -> (null : System.Object) 
  | R_BOX  -> (null : System.Object) 
  | L_PUMPKIN  -> (null : System.Object) 
  | R_PUMPKIN  -> (null : System.Object) 
  | L_BANANA  -> (null : System.Object) 
  | R_BANANA  -> (null : System.Object) 
  | L_BIND  -> (null : System.Object) 
  | R_BIND  -> (null : System.Object) 
  | L_STAR  -> (null : System.Object) 
  | R_STAR  -> (null : System.Object) 
  | L_ARROW  -> (null : System.Object) 
  | R_ARROW  -> (null : System.Object) 
  | L_BRACKET  -> (null : System.Object) 
  | R_BRACKET  -> (null : System.Object) 
  | L_BRACE  -> (null : System.Object) 
  | R_BRACE  -> (null : System.Object) 
  | L_PAREN  -> (null : System.Object) 
  | R_PAREN  -> (null : System.Object) 
  | DOCUMENTATION_LINE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NATIVE_CODE_LINE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CHARACTER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DECIMAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INTEGER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | TEST_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PREDICATE_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OPERATOR_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BIG_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | SMALL_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EOF  -> (null : System.Object) 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 8us; 9us; 2us; 65535us; 2us; 3us; 10us; 11us; 1us; 65535us; 3us; 4us; 2us; 65535us; 0us; 8us; 8us; 8us; 2us; 65535us; 15us; 16us; 19us; 20us; 2us; 65535us; 15us; 26us; 19us; 26us; 1us; 65535us; 3us; 6us; 2us; 65535us; 15us; 19us; 38us; 39us; 2us; 65535us; 40us; 41us; 43us; 44us; 2us; 65535us; 40us; 43us; 43us; 43us; 2us; 65535us; 2us; 10us; 10us; 10us; 6us; 65535us; 2us; 86us; 10us; 86us; 49us; 87us; 51us; 87us; 95us; 85us; 143us; 127us; 2us; 65535us; 74us; 75us; 76us; 77us; 5us; 65535us; 2us; 48us; 10us; 48us; 49us; 50us; 51us; 95us; 95us; 95us; 2us; 65535us; 51us; 52us; 95us; 96us; 2us; 65535us; 2us; 54us; 10us; 54us; 3us; 65535us; 101us; 102us; 107us; 108us; 109us; 110us; 2us; 65535us; 2us; 60us; 10us; 60us; 2us; 65535us; 113us; 114us; 117us; 118us; 5us; 65535us; 2us; 61us; 10us; 61us; 49us; 62us; 51us; 143us; 143us; 143us; 2us; 65535us; 123us; 124us; 129us; 130us; 2us; 65535us; 51us; 63us; 143us; 144us; 3us; 65535us; 125us; 152us; 131us; 152us; 153us; 152us; 3us; 65535us; 125us; 126us; 131us; 132us; 153us; 154us; 2us; 65535us; 2us; 67us; 10us; 67us; 2us; 65535us; 2us; 65us; 10us; 65us; 4us; 65535us; 164us; 165us; 171us; 172us; 196us; 175us; 200us; 176us; 2us; 65535us; 2us; 66us; 10us; 66us; 2us; 65535us; 2us; 68us; 10us; 68us; 2us; 65535us; 197us; 198us; 201us; 202us; 3us; 65535us; 197us; 203us; 201us; 203us; 204us; 205us; 2us; 65535us; 2us; 69us; 10us; 69us; 2us; 65535us; 2us; 70us; 10us; 70us; 2us; 65535us; 216us; 217us; 223us; 224us; 2us; 65535us; 216us; 222us; 223us; 222us; 2us; 65535us; 212us; 213us; 219us; 220us; 2us; 65535us; 2us; 71us; 10us; 71us; 2us; 65535us; 2us; 72us; 10us; 72us; 8us; 65535us; 133us; 259us; 135us; 259us; 140us; 259us; 180us; 259us; 250us; 259us; 253us; 259us; 256us; 259us; 260us; 259us; 8us; 65535us; 133us; 134us; 135us; 136us; 140us; 141us; 180us; 181us; 250us; 251us; 253us; 254us; 256us; 257us; 260us; 261us; 2us; 65535us; 159us; 160us; 263us; 264us; 2us; 65535us; 159us; 262us; 263us; 262us; 3us; 65535us; 157us; 158us; 189us; 190us; 280us; 274us; 7us; 65535us; 157us; 269us; 159us; 265us; 189us; 269us; 263us; 265us; 270us; 271us; 275us; 276us; 280us; 269us; 6us; 65535us; 99us; 100us; 105us; 106us; 166us; 167us; 173us; 174us; 207us; 208us; 243us; 244us; 33us; 65535us; 146us; 316us; 147us; 148us; 149us; 316us; 150us; 151us; 159us; 316us; 185us; 316us; 186us; 316us; 191us; 316us; 192us; 316us; 263us; 316us; 267us; 316us; 277us; 316us; 278us; 316us; 289us; 316us; 300us; 316us; 302us; 316us; 310us; 316us; 314us; 316us; 317us; 318us; 320us; 316us; 325us; 316us; 328us; 316us; 334us; 316us; 339us; 316us; 341us; 316us; 349us; 316us; 351us; 352us; 353us; 354us; 355us; 356us; 357us; 358us; 359us; 360us; 362us; 363us; 365us; 366us; 23us; 65535us; 146us; 344us; 149us; 344us; 159us; 344us; 185us; 344us; 186us; 344us; 191us; 344us; 192us; 344us; 263us; 344us; 267us; 344us; 277us; 344us; 278us; 344us; 289us; 344us; 300us; 344us; 302us; 344us; 310us; 344us; 314us; 344us; 320us; 344us; 325us; 344us; 328us; 344us; 334us; 344us; 339us; 344us; 341us; 344us; 349us; 344us; 7us; 65535us; 99us; 279us; 105us; 279us; 166us; 279us; 173us; 279us; 207us; 279us; 243us; 279us; 281us; 282us; 8us; 65535us; 99us; 319us; 105us; 319us; 166us; 319us; 173us; 319us; 207us; 319us; 243us; 319us; 281us; 319us; 297us; 298us; 10us; 65535us; 99us; 320us; 105us; 320us; 166us; 320us; 173us; 320us; 207us; 320us; 243us; 320us; 281us; 320us; 297us; 320us; 313us; 314us; 327us; 328us; 2us; 65535us; 321us; 322us; 323us; 324us; 2us; 65535us; 304us; 305us; 307us; 308us; 1us; 65535us; 339us; 340us; 23us; 65535us; 146us; 368us; 149us; 369us; 159us; 266us; 185us; 368us; 186us; 369us; 191us; 368us; 192us; 369us; 263us; 266us; 267us; 268us; 277us; 368us; 278us; 369us; 289us; 300us; 300us; 368us; 302us; 369us; 310us; 311us; 314us; 329us; 320us; 329us; 325us; 326us; 328us; 329us; 334us; 335us; 339us; 343us; 341us; 342us; 349us; 350us; 23us; 65535us; 146us; 346us; 149us; 346us; 159us; 346us; 185us; 346us; 186us; 346us; 191us; 346us; 192us; 346us; 263us; 346us; 267us; 346us; 277us; 346us; 278us; 346us; 289us; 346us; 300us; 346us; 302us; 346us; 310us; 346us; 314us; 346us; 320us; 346us; 325us; 346us; 328us; 346us; 334us; 346us; 339us; 346us; 341us; 346us; 349us; 346us; 23us; 65535us; 146us; 347us; 149us; 347us; 159us; 347us; 185us; 347us; 186us; 347us; 191us; 347us; 192us; 347us; 263us; 347us; 267us; 347us; 277us; 347us; 278us; 347us; 289us; 347us; 300us; 347us; 302us; 347us; 310us; 347us; 314us; 347us; 320us; 347us; 325us; 347us; 328us; 347us; 334us; 347us; 339us; 347us; 341us; 347us; 349us; 347us; 23us; 65535us; 146us; 348us; 149us; 348us; 159us; 348us; 185us; 348us; 186us; 348us; 191us; 348us; 192us; 348us; 263us; 348us; 267us; 348us; 277us; 348us; 278us; 348us; 289us; 348us; 300us; 348us; 302us; 348us; 310us; 348us; 314us; 348us; 320us; 348us; 325us; 348us; 328us; 348us; 334us; 348us; 339us; 348us; 341us; 348us; 349us; 348us; 5us; 65535us; 146us; 149us; 185us; 186us; 191us; 192us; 277us; 278us; 300us; 302us; 63us; 65535us; 13us; 395us; 80us; 395us; 83us; 395us; 90us; 395us; 93us; 395us; 187us; 395us; 193us; 395us; 211us; 395us; 213us; 395us; 218us; 395us; 220us; 395us; 226us; 395us; 234us; 395us; 238us; 395us; 370us; 395us; 374us; 395us; 378us; 395us; 379us; 395us; 380us; 395us; 385us; 395us; 386us; 395us; 387us; 395us; 388us; 395us; 389us; 395us; 390us; 395us; 413us; 414us; 431us; 432us; 433us; 434us; 435us; 395us; 438us; 439us; 440us; 441us; 443us; 444us; 454us; 395us; 457us; 395us; 460us; 395us; 465us; 466us; 475us; 395us; 482us; 395us; 485us; 486us; 487us; 488us; 493us; 395us; 495us; 395us; 498us; 395us; 501us; 395us; 503us; 504us; 505us; 395us; 507us; 508us; 511us; 512us; 515us; 516us; 519us; 520us; 534us; 395us; 539us; 395us; 543us; 395us; 547us; 395us; 554us; 395us; 555us; 395us; 560us; 395us; 562us; 395us; 567us; 395us; 569us; 395us; 586us; 395us; 593us; 395us; 600us; 395us; 1us; 65535us; 370us; 371us; 2us; 65535us; 370us; 373us; 374us; 375us; 41us; 65535us; 13us; 385us; 80us; 385us; 83us; 385us; 90us; 385us; 93us; 385us; 187us; 385us; 193us; 385us; 211us; 385us; 213us; 385us; 218us; 385us; 220us; 385us; 226us; 385us; 234us; 385us; 238us; 385us; 370us; 380us; 374us; 380us; 378us; 379us; 435us; 385us; 454us; 385us; 457us; 385us; 460us; 385us; 475us; 385us; 482us; 385us; 493us; 385us; 495us; 385us; 498us; 385us; 501us; 385us; 505us; 385us; 534us; 385us; 539us; 385us; 543us; 385us; 547us; 385us; 554us; 389us; 555us; 387us; 560us; 386us; 562us; 388us; 567us; 386us; 569us; 390us; 586us; 385us; 593us; 385us; 600us; 385us; 32us; 65535us; 13us; 14us; 80us; 81us; 83us; 84us; 90us; 91us; 93us; 94us; 187us; 188us; 193us; 194us; 211us; 212us; 213us; 214us; 218us; 219us; 220us; 221us; 226us; 227us; 234us; 235us; 238us; 239us; 435us; 484us; 454us; 455us; 457us; 458us; 460us; 461us; 475us; 476us; 482us; 483us; 493us; 497us; 495us; 496us; 498us; 499us; 501us; 502us; 505us; 506us; 534us; 535us; 539us; 540us; 543us; 544us; 547us; 548us; 586us; 587us; 593us; 594us; 600us; 601us; 49us; 65535us; 13us; 381us; 80us; 381us; 83us; 381us; 90us; 381us; 93us; 381us; 187us; 381us; 193us; 381us; 211us; 381us; 213us; 381us; 218us; 381us; 220us; 381us; 226us; 381us; 234us; 381us; 238us; 381us; 370us; 381us; 374us; 381us; 378us; 381us; 379us; 391us; 380us; 391us; 385us; 391us; 386us; 391us; 387us; 391us; 388us; 391us; 389us; 391us; 390us; 391us; 435us; 381us; 454us; 381us; 457us; 381us; 460us; 381us; 475us; 381us; 482us; 381us; 493us; 381us; 495us; 381us; 498us; 381us; 501us; 381us; 505us; 381us; 534us; 381us; 539us; 381us; 543us; 381us; 547us; 381us; 554us; 381us; 555us; 381us; 560us; 381us; 562us; 381us; 567us; 381us; 569us; 381us; 586us; 381us; 593us; 381us; 600us; 381us; 49us; 65535us; 13us; 415us; 80us; 415us; 83us; 415us; 90us; 415us; 93us; 415us; 187us; 415us; 193us; 415us; 211us; 415us; 213us; 415us; 218us; 415us; 220us; 415us; 226us; 415us; 234us; 415us; 238us; 415us; 370us; 415us; 374us; 415us; 378us; 415us; 379us; 415us; 380us; 415us; 385us; 415us; 386us; 415us; 387us; 415us; 388us; 415us; 389us; 415us; 390us; 415us; 435us; 415us; 454us; 415us; 457us; 415us; 460us; 415us; 475us; 415us; 482us; 415us; 493us; 415us; 495us; 415us; 498us; 415us; 501us; 415us; 505us; 415us; 534us; 415us; 539us; 415us; 543us; 415us; 547us; 415us; 554us; 415us; 555us; 415us; 560us; 415us; 562us; 415us; 567us; 415us; 569us; 415us; 586us; 415us; 593us; 415us; 600us; 415us; 49us; 65535us; 13us; 396us; 80us; 396us; 83us; 396us; 90us; 396us; 93us; 396us; 187us; 396us; 193us; 396us; 211us; 396us; 213us; 396us; 218us; 396us; 220us; 396us; 226us; 396us; 234us; 396us; 238us; 396us; 370us; 396us; 374us; 396us; 378us; 396us; 379us; 396us; 380us; 396us; 385us; 396us; 386us; 396us; 387us; 396us; 388us; 396us; 389us; 396us; 390us; 396us; 435us; 396us; 454us; 396us; 457us; 396us; 460us; 396us; 475us; 396us; 482us; 396us; 493us; 396us; 495us; 396us; 498us; 396us; 501us; 396us; 505us; 396us; 534us; 396us; 539us; 396us; 543us; 396us; 547us; 396us; 554us; 396us; 555us; 396us; 560us; 396us; 562us; 396us; 567us; 396us; 569us; 396us; 586us; 396us; 593us; 396us; 600us; 396us; 1us; 65535us; 447us; 463us; 1us; 65535us; 447us; 448us; 5us; 65535us; 56us; 57us; 429us; 430us; 436us; 437us; 442us; 443us; 452us; 453us; 1us; 65535us; 446us; 447us; 49us; 65535us; 13us; 397us; 80us; 397us; 83us; 397us; 90us; 397us; 93us; 397us; 187us; 397us; 193us; 397us; 211us; 397us; 213us; 397us; 218us; 397us; 220us; 397us; 226us; 397us; 234us; 397us; 238us; 397us; 370us; 397us; 374us; 397us; 378us; 397us; 379us; 397us; 380us; 397us; 385us; 397us; 386us; 397us; 387us; 397us; 388us; 397us; 389us; 397us; 390us; 397us; 435us; 397us; 454us; 397us; 457us; 397us; 460us; 397us; 475us; 397us; 482us; 397us; 493us; 397us; 495us; 397us; 498us; 397us; 501us; 397us; 505us; 397us; 534us; 397us; 539us; 397us; 543us; 397us; 547us; 397us; 554us; 397us; 555us; 397us; 560us; 397us; 562us; 397us; 567us; 397us; 569us; 397us; 586us; 397us; 593us; 397us; 600us; 397us; 2us; 65535us; 464us; 465us; 467us; 468us; 49us; 65535us; 13us; 398us; 80us; 398us; 83us; 398us; 90us; 398us; 93us; 398us; 187us; 398us; 193us; 398us; 211us; 398us; 213us; 398us; 218us; 398us; 220us; 398us; 226us; 398us; 234us; 398us; 238us; 398us; 370us; 398us; 374us; 398us; 378us; 398us; 379us; 398us; 380us; 398us; 385us; 398us; 386us; 398us; 387us; 398us; 388us; 398us; 389us; 398us; 390us; 398us; 435us; 398us; 454us; 398us; 457us; 398us; 460us; 398us; 475us; 398us; 482us; 398us; 493us; 398us; 495us; 398us; 498us; 398us; 501us; 398us; 505us; 398us; 534us; 398us; 539us; 398us; 543us; 398us; 547us; 398us; 554us; 398us; 555us; 398us; 560us; 398us; 562us; 398us; 567us; 398us; 569us; 398us; 586us; 398us; 593us; 398us; 600us; 398us; 1us; 65535us; 470us; 471us; 2us; 65535us; 470us; 478us; 471us; 479us; 49us; 65535us; 13us; 399us; 80us; 399us; 83us; 399us; 90us; 399us; 93us; 399us; 187us; 399us; 193us; 399us; 211us; 399us; 213us; 399us; 218us; 399us; 220us; 399us; 226us; 399us; 234us; 399us; 238us; 399us; 370us; 399us; 374us; 399us; 378us; 399us; 379us; 399us; 380us; 399us; 385us; 399us; 386us; 399us; 387us; 399us; 388us; 399us; 389us; 399us; 390us; 399us; 435us; 399us; 454us; 399us; 457us; 399us; 460us; 399us; 475us; 399us; 482us; 399us; 493us; 399us; 495us; 399us; 498us; 399us; 501us; 399us; 505us; 399us; 534us; 399us; 539us; 399us; 543us; 399us; 547us; 399us; 554us; 399us; 555us; 399us; 560us; 399us; 562us; 399us; 567us; 399us; 569us; 399us; 586us; 399us; 593us; 399us; 600us; 399us; 49us; 65535us; 13us; 400us; 80us; 400us; 83us; 400us; 90us; 400us; 93us; 400us; 187us; 400us; 193us; 400us; 211us; 400us; 213us; 400us; 218us; 400us; 220us; 400us; 226us; 400us; 234us; 400us; 238us; 400us; 370us; 400us; 374us; 400us; 378us; 400us; 379us; 400us; 380us; 400us; 385us; 400us; 386us; 400us; 387us; 400us; 388us; 400us; 389us; 400us; 390us; 400us; 435us; 400us; 454us; 400us; 457us; 400us; 460us; 400us; 475us; 400us; 482us; 400us; 493us; 400us; 495us; 400us; 498us; 400us; 501us; 400us; 505us; 400us; 534us; 400us; 539us; 400us; 543us; 400us; 547us; 400us; 554us; 400us; 555us; 400us; 560us; 400us; 562us; 400us; 567us; 400us; 569us; 400us; 586us; 400us; 593us; 400us; 600us; 400us; 2us; 65535us; 490us; 491us; 499us; 500us; 49us; 65535us; 13us; 401us; 80us; 401us; 83us; 401us; 90us; 401us; 93us; 401us; 187us; 401us; 193us; 401us; 211us; 401us; 213us; 401us; 218us; 401us; 220us; 401us; 226us; 401us; 234us; 401us; 238us; 401us; 370us; 401us; 374us; 401us; 378us; 401us; 379us; 401us; 380us; 401us; 385us; 401us; 386us; 401us; 387us; 401us; 388us; 401us; 389us; 401us; 390us; 401us; 435us; 401us; 454us; 401us; 457us; 401us; 460us; 401us; 475us; 401us; 482us; 401us; 493us; 401us; 495us; 401us; 498us; 401us; 501us; 401us; 505us; 401us; 534us; 401us; 539us; 401us; 543us; 401us; 547us; 401us; 554us; 401us; 555us; 401us; 560us; 401us; 562us; 401us; 567us; 401us; 569us; 401us; 586us; 401us; 593us; 401us; 600us; 401us; 49us; 65535us; 13us; 402us; 80us; 402us; 83us; 402us; 90us; 402us; 93us; 402us; 187us; 402us; 193us; 402us; 211us; 402us; 213us; 402us; 218us; 402us; 220us; 402us; 226us; 402us; 234us; 402us; 238us; 402us; 370us; 402us; 374us; 402us; 378us; 402us; 379us; 402us; 380us; 402us; 385us; 402us; 386us; 402us; 387us; 402us; 388us; 402us; 389us; 402us; 390us; 402us; 435us; 402us; 454us; 402us; 457us; 402us; 460us; 402us; 475us; 402us; 482us; 402us; 493us; 402us; 495us; 402us; 498us; 402us; 501us; 402us; 505us; 402us; 534us; 402us; 539us; 402us; 543us; 402us; 547us; 402us; 554us; 402us; 555us; 402us; 560us; 402us; 562us; 402us; 567us; 402us; 569us; 402us; 586us; 402us; 593us; 402us; 600us; 402us; 49us; 65535us; 13us; 403us; 80us; 403us; 83us; 403us; 90us; 403us; 93us; 403us; 187us; 403us; 193us; 403us; 211us; 403us; 213us; 403us; 218us; 403us; 220us; 403us; 226us; 403us; 234us; 403us; 238us; 403us; 370us; 403us; 374us; 403us; 378us; 403us; 379us; 403us; 380us; 403us; 385us; 403us; 386us; 403us; 387us; 403us; 388us; 403us; 389us; 403us; 390us; 403us; 435us; 403us; 454us; 403us; 457us; 403us; 460us; 403us; 475us; 403us; 482us; 403us; 493us; 403us; 495us; 403us; 498us; 403us; 501us; 403us; 505us; 403us; 534us; 403us; 539us; 403us; 543us; 403us; 547us; 403us; 554us; 403us; 555us; 403us; 560us; 403us; 562us; 403us; 567us; 403us; 569us; 403us; 586us; 403us; 593us; 403us; 600us; 403us; 2us; 65535us; 513us; 514us; 522us; 523us; 2us; 65535us; 513us; 521us; 522us; 521us; 1us; 65535us; 533us; 534us; 2us; 65535us; 509us; 510us; 536us; 537us; 2us; 65535us; 517us; 518us; 541us; 542us; 49us; 65535us; 13us; 404us; 80us; 404us; 83us; 404us; 90us; 404us; 93us; 404us; 187us; 404us; 193us; 404us; 211us; 404us; 213us; 404us; 218us; 404us; 220us; 404us; 226us; 404us; 234us; 404us; 238us; 404us; 370us; 404us; 374us; 404us; 378us; 404us; 379us; 404us; 380us; 404us; 385us; 404us; 386us; 404us; 387us; 404us; 388us; 404us; 389us; 404us; 390us; 404us; 435us; 404us; 454us; 404us; 457us; 404us; 460us; 404us; 475us; 404us; 482us; 404us; 493us; 404us; 495us; 404us; 498us; 404us; 501us; 404us; 505us; 404us; 534us; 404us; 539us; 404us; 543us; 404us; 547us; 404us; 554us; 404us; 555us; 404us; 560us; 404us; 562us; 404us; 567us; 404us; 569us; 404us; 586us; 404us; 593us; 404us; 600us; 404us; 4us; 65535us; 555us; 550us; 560us; 551us; 562us; 552us; 567us; 553us; 49us; 65535us; 13us; 383us; 80us; 383us; 83us; 383us; 90us; 383us; 93us; 383us; 187us; 383us; 193us; 383us; 211us; 383us; 213us; 383us; 218us; 383us; 220us; 383us; 226us; 383us; 234us; 383us; 238us; 383us; 370us; 383us; 374us; 383us; 378us; 383us; 379us; 393us; 380us; 393us; 385us; 393us; 386us; 393us; 387us; 393us; 388us; 393us; 389us; 393us; 390us; 393us; 435us; 383us; 454us; 383us; 457us; 383us; 460us; 383us; 475us; 383us; 482us; 383us; 493us; 383us; 495us; 383us; 498us; 383us; 501us; 383us; 505us; 383us; 534us; 383us; 539us; 383us; 543us; 383us; 547us; 383us; 554us; 383us; 555us; 383us; 560us; 383us; 562us; 383us; 567us; 383us; 569us; 383us; 586us; 383us; 593us; 383us; 600us; 383us; 49us; 65535us; 13us; 384us; 80us; 384us; 83us; 384us; 90us; 384us; 93us; 384us; 187us; 384us; 193us; 384us; 211us; 384us; 213us; 384us; 218us; 384us; 220us; 384us; 226us; 384us; 234us; 384us; 238us; 384us; 370us; 384us; 374us; 384us; 378us; 384us; 379us; 394us; 380us; 394us; 385us; 394us; 386us; 394us; 387us; 394us; 388us; 394us; 389us; 394us; 390us; 394us; 435us; 384us; 454us; 384us; 457us; 384us; 460us; 384us; 475us; 384us; 482us; 384us; 493us; 384us; 495us; 384us; 498us; 384us; 501us; 384us; 505us; 384us; 534us; 384us; 539us; 384us; 543us; 384us; 547us; 384us; 554us; 384us; 555us; 384us; 560us; 384us; 562us; 384us; 567us; 384us; 569us; 384us; 586us; 384us; 593us; 384us; 600us; 384us; 49us; 65535us; 13us; 382us; 80us; 382us; 83us; 382us; 90us; 382us; 93us; 382us; 187us; 382us; 193us; 382us; 211us; 382us; 213us; 382us; 218us; 382us; 220us; 382us; 226us; 382us; 234us; 382us; 238us; 382us; 370us; 382us; 374us; 382us; 378us; 382us; 379us; 392us; 380us; 392us; 385us; 392us; 386us; 392us; 387us; 392us; 388us; 392us; 389us; 392us; 390us; 392us; 435us; 382us; 454us; 382us; 457us; 382us; 460us; 382us; 475us; 382us; 482us; 382us; 493us; 382us; 495us; 382us; 498us; 382us; 501us; 382us; 505us; 382us; 534us; 382us; 539us; 382us; 543us; 382us; 547us; 382us; 554us; 382us; 555us; 382us; 560us; 382us; 562us; 382us; 567us; 382us; 569us; 382us; 586us; 382us; 593us; 382us; 600us; 382us; 49us; 65535us; 13us; 411us; 80us; 411us; 83us; 411us; 90us; 411us; 93us; 411us; 187us; 411us; 193us; 411us; 211us; 411us; 213us; 411us; 218us; 411us; 220us; 411us; 226us; 411us; 234us; 411us; 238us; 411us; 370us; 411us; 374us; 411us; 378us; 411us; 379us; 411us; 380us; 411us; 385us; 411us; 386us; 411us; 387us; 411us; 388us; 411us; 389us; 411us; 390us; 411us; 435us; 411us; 454us; 411us; 457us; 411us; 460us; 411us; 475us; 411us; 482us; 411us; 493us; 411us; 495us; 411us; 498us; 411us; 501us; 411us; 505us; 411us; 534us; 411us; 539us; 411us; 543us; 411us; 547us; 411us; 554us; 411us; 555us; 411us; 560us; 411us; 562us; 411us; 567us; 411us; 569us; 411us; 586us; 411us; 593us; 411us; 600us; 411us; 49us; 65535us; 13us; 412us; 80us; 412us; 83us; 412us; 90us; 412us; 93us; 412us; 187us; 412us; 193us; 412us; 211us; 412us; 213us; 412us; 218us; 412us; 220us; 412us; 226us; 412us; 234us; 412us; 238us; 412us; 370us; 412us; 374us; 412us; 378us; 412us; 379us; 412us; 380us; 412us; 385us; 412us; 386us; 412us; 387us; 412us; 388us; 412us; 389us; 412us; 390us; 412us; 435us; 412us; 454us; 412us; 457us; 412us; 460us; 412us; 475us; 412us; 482us; 412us; 493us; 412us; 495us; 412us; 498us; 412us; 501us; 412us; 505us; 412us; 534us; 412us; 539us; 412us; 543us; 412us; 547us; 412us; 554us; 412us; 555us; 412us; 560us; 412us; 562us; 412us; 567us; 412us; 569us; 412us; 586us; 412us; 593us; 412us; 600us; 412us; 1us; 65535us; 582us; 583us; 2us; 65535us; 582us; 589us; 583us; 590us; 3us; 65535us; 569us; 575us; 571us; 572us; 596us; 597us; 4us; 65535us; 569us; 595us; 571us; 595us; 578us; 579us; 596us; 595us; 50us; 65535us; 13us; 427us; 80us; 427us; 83us; 427us; 90us; 427us; 93us; 427us; 187us; 427us; 193us; 427us; 211us; 427us; 213us; 427us; 218us; 427us; 220us; 427us; 226us; 427us; 234us; 427us; 238us; 427us; 370us; 427us; 374us; 427us; 378us; 427us; 379us; 427us; 380us; 427us; 385us; 427us; 386us; 427us; 387us; 427us; 388us; 427us; 389us; 427us; 390us; 427us; 435us; 427us; 451us; 452us; 454us; 427us; 457us; 427us; 460us; 427us; 475us; 427us; 482us; 427us; 493us; 427us; 495us; 427us; 498us; 427us; 501us; 427us; 505us; 427us; 534us; 427us; 539us; 427us; 543us; 427us; 547us; 427us; 554us; 427us; 555us; 427us; 560us; 427us; 562us; 427us; 567us; 427us; 569us; 427us; 586us; 427us; 593us; 427us; 600us; 427us; 67us; 65535us; 58us; 652us; 79us; 652us; 82us; 652us; 89us; 652us; 92us; 652us; 133us; 249us; 135us; 249us; 140us; 249us; 146us; 292us; 147us; 292us; 149us; 292us; 150us; 292us; 159us; 292us; 180us; 249us; 185us; 292us; 186us; 292us; 191us; 292us; 192us; 292us; 250us; 249us; 253us; 249us; 256us; 249us; 260us; 249us; 263us; 292us; 267us; 292us; 277us; 292us; 278us; 292us; 289us; 292us; 300us; 292us; 302us; 292us; 310us; 292us; 314us; 292us; 317us; 292us; 320us; 292us; 325us; 292us; 328us; 292us; 334us; 292us; 339us; 292us; 341us; 292us; 349us; 292us; 351us; 292us; 353us; 292us; 355us; 292us; 357us; 292us; 359us; 292us; 362us; 292us; 365us; 292us; 376us; 652us; 377us; 652us; 456us; 652us; 459us; 652us; 473us; 652us; 480us; 652us; 481us; 652us; 630us; 652us; 631us; 652us; 632us; 652us; 633us; 652us; 634us; 652us; 637us; 652us; 648us; 652us; 650us; 652us; 653us; 654us; 654us; 652us; 661us; 652us; 663us; 652us; 667us; 652us; 670us; 652us; 7us; 65535us; 157us; 277us; 159us; 277us; 189us; 277us; 263us; 277us; 270us; 277us; 275us; 277us; 280us; 277us; 51us; 65535us; 13us; 602us; 80us; 602us; 83us; 602us; 90us; 602us; 93us; 602us; 187us; 602us; 193us; 602us; 211us; 602us; 213us; 602us; 218us; 602us; 220us; 602us; 226us; 602us; 234us; 602us; 238us; 602us; 370us; 602us; 374us; 602us; 378us; 602us; 379us; 602us; 380us; 602us; 385us; 602us; 386us; 602us; 387us; 602us; 388us; 602us; 389us; 602us; 390us; 602us; 435us; 602us; 451us; 602us; 454us; 602us; 457us; 602us; 460us; 602us; 475us; 602us; 482us; 602us; 493us; 602us; 495us; 602us; 498us; 602us; 501us; 602us; 505us; 602us; 534us; 602us; 539us; 602us; 543us; 602us; 547us; 602us; 554us; 602us; 555us; 602us; 560us; 602us; 562us; 602us; 567us; 602us; 569us; 602us; 586us; 602us; 593us; 602us; 600us; 602us; 610us; 611us; 69us; 65535us; 58us; 603us; 79us; 603us; 82us; 603us; 89us; 603us; 92us; 603us; 133us; 603us; 135us; 603us; 140us; 603us; 146us; 603us; 147us; 603us; 149us; 603us; 150us; 603us; 159us; 603us; 180us; 603us; 185us; 603us; 186us; 603us; 191us; 603us; 192us; 603us; 250us; 603us; 253us; 603us; 256us; 603us; 260us; 603us; 263us; 603us; 267us; 603us; 277us; 603us; 278us; 603us; 289us; 603us; 300us; 603us; 302us; 603us; 310us; 603us; 314us; 603us; 317us; 603us; 320us; 603us; 325us; 603us; 328us; 603us; 334us; 603us; 339us; 603us; 341us; 603us; 349us; 603us; 351us; 603us; 353us; 603us; 355us; 603us; 357us; 603us; 359us; 603us; 362us; 603us; 365us; 603us; 376us; 603us; 377us; 603us; 456us; 603us; 459us; 603us; 473us; 603us; 480us; 603us; 481us; 603us; 617us; 619us; 618us; 619us; 630us; 603us; 631us; 603us; 632us; 603us; 633us; 603us; 634us; 603us; 637us; 603us; 648us; 603us; 650us; 603us; 653us; 603us; 654us; 603us; 661us; 603us; 663us; 603us; 667us; 603us; 670us; 603us; 9us; 65535us; 157us; 604us; 159us; 604us; 189us; 604us; 263us; 604us; 270us; 604us; 275us; 604us; 280us; 604us; 618us; 623us; 622us; 623us; 4us; 65535us; 79us; 82us; 89us; 92us; 376us; 377us; 456us; 459us; 3us; 65535us; 543us; 546us; 606us; 627us; 626us; 627us; 7us; 65535us; 473us; 481us; 480us; 481us; 654us; 630us; 661us; 631us; 663us; 632us; 667us; 633us; 670us; 634us; 2us; 65535us; 639us; 640us; 672us; 673us; 25us; 65535us; 58us; 59us; 79us; 624us; 82us; 625us; 89us; 624us; 92us; 625us; 376us; 624us; 377us; 625us; 456us; 624us; 459us; 625us; 473us; 628us; 480us; 628us; 481us; 635us; 630us; 635us; 631us; 635us; 632us; 635us; 633us; 635us; 634us; 635us; 637us; 638us; 648us; 649us; 650us; 651us; 654us; 628us; 661us; 628us; 663us; 628us; 667us; 628us; 670us; 628us; 25us; 65535us; 58us; 656us; 79us; 656us; 82us; 656us; 89us; 656us; 92us; 656us; 376us; 656us; 377us; 656us; 456us; 656us; 459us; 656us; 473us; 656us; 480us; 656us; 481us; 656us; 630us; 656us; 631us; 656us; 632us; 656us; 633us; 656us; 634us; 656us; 637us; 656us; 648us; 656us; 650us; 656us; 654us; 656us; 661us; 656us; 663us; 656us; 667us; 656us; 670us; 656us; 25us; 65535us; 58us; 657us; 79us; 657us; 82us; 657us; 89us; 657us; 92us; 657us; 376us; 657us; 377us; 657us; 456us; 657us; 459us; 657us; 473us; 657us; 480us; 657us; 481us; 657us; 630us; 657us; 631us; 657us; 632us; 657us; 633us; 657us; 634us; 657us; 637us; 657us; 648us; 657us; 650us; 657us; 654us; 657us; 661us; 657us; 663us; 657us; 667us; 657us; 670us; 657us; 25us; 65535us; 58us; 658us; 79us; 658us; 82us; 658us; 89us; 658us; 92us; 658us; 376us; 658us; 377us; 658us; 456us; 658us; 459us; 658us; 473us; 658us; 480us; 658us; 481us; 658us; 630us; 658us; 631us; 658us; 632us; 658us; 633us; 658us; 634us; 658us; 637us; 658us; 648us; 658us; 650us; 658us; 654us; 658us; 661us; 658us; 663us; 658us; 667us; 658us; 670us; 658us; 25us; 65535us; 58us; 659us; 79us; 659us; 82us; 659us; 89us; 659us; 92us; 659us; 376us; 659us; 377us; 659us; 456us; 659us; 459us; 659us; 473us; 659us; 480us; 659us; 481us; 659us; 630us; 659us; 631us; 659us; 632us; 659us; 633us; 659us; 634us; 659us; 637us; 659us; 648us; 659us; 650us; 659us; 654us; 659us; 661us; 659us; 663us; 659us; 667us; 659us; 670us; 659us; 25us; 65535us; 58us; 660us; 79us; 660us; 82us; 660us; 89us; 660us; 92us; 660us; 376us; 660us; 377us; 660us; 456us; 660us; 459us; 660us; 473us; 660us; 480us; 660us; 481us; 660us; 630us; 660us; 631us; 660us; 632us; 660us; 633us; 660us; 634us; 660us; 637us; 660us; 648us; 660us; 650us; 660us; 654us; 660us; 661us; 660us; 663us; 660us; 667us; 660us; 670us; 660us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 11us; 14us; 17us; 20us; 22us; 25us; 28us; 31us; 34us; 41us; 44us; 50us; 53us; 56us; 60us; 63us; 66us; 72us; 75us; 78us; 82us; 86us; 89us; 92us; 97us; 100us; 103us; 106us; 110us; 113us; 116us; 119us; 122us; 125us; 128us; 131us; 140us; 149us; 152us; 155us; 159us; 167us; 174us; 208us; 232us; 240us; 249us; 260us; 263us; 266us; 268us; 292us; 316us; 340us; 364us; 370us; 434us; 436us; 439us; 481us; 514us; 564us; 614us; 664us; 666us; 668us; 674us; 676us; 726us; 729us; 779us; 781us; 784us; 834us; 884us; 887us; 937us; 987us; 1037us; 1040us; 1043us; 1045us; 1048us; 1051us; 1101us; 1106us; 1156us; 1206us; 1256us; 1306us; 1356us; 1358us; 1361us; 1365us; 1370us; 1421us; 1489us; 1497us; 1549us; 1619us; 1629us; 1634us; 1638us; 1646us; 1649us; 1675us; 1701us; 1727us; 1753us; 1779us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 2us; 1us; 2us; 2us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 2us; 1us; 4us; 1us; 4us; 1us; 6us; 1us; 6us; 1us; 7us; 1us; 7us; 1us; 7us; 3us; 8us; 9us; 10us; 1us; 8us; 1us; 8us; 1us; 8us; 1us; 9us; 1us; 9us; 1us; 9us; 1us; 9us; 1us; 10us; 1us; 10us; 1us; 11us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 17us; 1us; 17us; 1us; 18us; 1us; 19us; 1us; 20us; 1us; 21us; 4us; 22us; 23us; 28us; 29us; 1us; 22us; 2us; 23us; 29us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 25us; 1us; 25us; 2us; 25us; 217us; 1us; 25us; 1us; 25us; 1us; 26us; 1us; 27us; 1us; 28us; 1us; 29us; 1us; 29us; 1us; 30us; 1us; 31us; 1us; 32us; 1us; 33us; 1us; 34us; 1us; 35us; 1us; 36us; 1us; 37us; 1us; 38us; 1us; 38us; 1us; 38us; 1us; 40us; 1us; 40us; 2us; 41us; 42us; 2us; 41us; 42us; 1us; 41us; 1us; 41us; 2us; 42us; 290us; 1us; 42us; 1us; 42us; 2us; 43us; 44us; 10us; 43us; 44us; 48us; 52us; 57us; 59us; 61us; 73us; 80us; 82us; 5us; 43us; 44us; 57us; 59us; 61us; 2us; 43us; 44us; 2us; 43us; 44us; 1us; 43us; 1us; 43us; 2us; 44us; 290us; 1us; 44us; 1us; 44us; 2us; 45us; 46us; 1us; 46us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 50us; 1us; 50us; 1us; 51us; 1us; 51us; 1us; 51us; 1us; 51us; 1us; 52us; 1us; 52us; 1us; 52us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 3us; 56us; 58us; 60us; 3us; 56us; 58us; 60us; 4us; 56us; 58us; 63us; 64us; 1us; 56us; 1us; 56us; 3us; 57us; 59us; 61us; 3us; 57us; 59us; 61us; 3us; 57us; 59us; 61us; 4us; 57us; 59us; 63us; 64us; 1us; 57us; 1us; 57us; 1us; 60us; 1us; 60us; 1us; 61us; 1us; 61us; 1us; 63us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 64us; 2us; 65us; 66us; 1us; 66us; 2us; 67us; 68us; 2us; 67us; 68us; 1us; 67us; 1us; 67us; 2us; 68us; 163us; 1us; 68us; 1us; 68us; 2us; 69us; 70us; 1us; 70us; 1us; 70us; 1us; 71us; 1us; 71us; 1us; 71us; 2us; 71us; 112us; 1us; 71us; 1us; 71us; 1us; 72us; 1us; 72us; 1us; 72us; 1us; 72us; 3us; 72us; 75us; 76us; 1us; 72us; 1us; 72us; 1us; 73us; 1us; 73us; 1us; 73us; 1us; 73us; 3us; 73us; 75us; 76us; 1us; 73us; 1us; 73us; 4us; 75us; 76us; 79us; 81us; 4us; 75us; 76us; 80us; 82us; 1us; 75us; 1us; 76us; 1us; 76us; 1us; 76us; 1us; 76us; 1us; 76us; 2us; 77us; 78us; 2us; 77us; 78us; 2us; 77us; 78us; 2us; 77us; 163us; 1us; 77us; 1us; 77us; 1us; 78us; 2us; 78us; 112us; 1us; 78us; 2us; 78us; 163us; 1us; 78us; 1us; 78us; 2us; 79us; 81us; 2us; 79us; 81us; 1us; 79us; 2us; 79us; 84us; 2us; 80us; 82us; 2us; 80us; 82us; 1us; 80us; 2us; 80us; 84us; 1us; 83us; 1us; 84us; 1us; 84us; 1us; 85us; 1us; 85us; 1us; 85us; 1us; 86us; 1us; 86us; 1us; 86us; 1us; 86us; 1us; 86us; 1us; 86us; 1us; 87us; 1us; 87us; 1us; 87us; 1us; 87us; 1us; 87us; 1us; 87us; 1us; 87us; 2us; 88us; 89us; 1us; 89us; 1us; 89us; 1us; 90us; 1us; 90us; 1us; 90us; 1us; 91us; 1us; 92us; 1us; 93us; 2us; 94us; 96us; 2us; 95us; 97us; 1us; 96us; 1us; 96us; 1us; 96us; 1us; 96us; 1us; 97us; 1us; 97us; 1us; 97us; 1us; 97us; 1us; 98us; 1us; 98us; 1us; 98us; 1us; 98us; 1us; 99us; 1us; 99us; 1us; 99us; 1us; 99us; 1us; 100us; 1us; 101us; 1us; 101us; 1us; 101us; 1us; 102us; 1us; 102us; 1us; 102us; 1us; 103us; 1us; 103us; 1us; 103us; 2us; 104us; 105us; 1us; 105us; 1us; 105us; 2us; 106us; 107us; 1us; 107us; 1us; 107us; 1us; 108us; 1us; 109us; 1us; 109us; 1us; 109us; 1us; 110us; 1us; 111us; 1us; 111us; 1us; 111us; 1us; 111us; 2us; 112us; 115us; 1us; 112us; 1us; 112us; 1us; 113us; 2us; 113us; 163us; 1us; 114us; 1us; 115us; 1us; 115us; 1us; 115us; 1us; 116us; 1us; 117us; 3us; 118us; 119us; 286us; 3us; 118us; 144us; 286us; 2us; 118us; 286us; 3us; 118us; 286us; 288us; 3us; 119us; 126us; 127us; 1us; 119us; 1us; 119us; 1us; 120us; 1us; 121us; 1us; 122us; 1us; 123us; 1us; 124us; 1us; 125us; 1us; 125us; 1us; 125us; 2us; 126us; 127us; 1us; 126us; 2us; 127us; 163us; 1us; 127us; 1us; 128us; 2us; 128us; 143us; 1us; 128us; 1us; 129us; 2us; 129us; 143us; 1us; 129us; 1us; 130us; 1us; 130us; 1us; 130us; 1us; 131us; 3us; 131us; 136us; 137us; 1us; 131us; 7us; 132us; 146us; 148us; 153us; 155us; 157us; 159us; 2us; 132us; 148us; 1us; 132us; 1us; 133us; 3us; 134us; 136us; 137us; 1us; 134us; 2us; 134us; 140us; 1us; 134us; 2us; 134us; 140us; 1us; 134us; 1us; 134us; 1us; 134us; 3us; 134us; 136us; 137us; 2us; 136us; 137us; 1us; 136us; 1us; 138us; 1us; 139us; 1us; 139us; 1us; 140us; 1us; 140us; 1us; 141us; 1us; 142us; 1us; 142us; 1us; 143us; 1us; 143us; 1us; 144us; 1us; 144us; 1us; 145us; 1us; 147us; 1us; 148us; 2us; 149us; 154us; 2us; 150us; 156us; 3us; 151us; 160us; 161us; 1us; 152us; 1us; 152us; 1us; 153us; 1us; 153us; 1us; 154us; 1us; 154us; 1us; 155us; 1us; 155us; 1us; 156us; 1us; 156us; 2us; 157us; 159us; 1us; 157us; 1us; 158us; 1us; 158us; 1us; 158us; 1us; 159us; 2us; 160us; 161us; 1us; 160us; 1us; 161us; 1us; 162us; 1us; 163us; 1us; 164us; 2us; 164us; 166us; 1us; 164us; 1us; 165us; 1us; 166us; 1us; 166us; 2us; 167us; 168us; 3us; 167us; 168us; 290us; 1us; 168us; 5us; 168us; 174us; 175us; 176us; 177us; 5us; 169us; 174us; 175us; 176us; 177us; 1us; 170us; 1us; 171us; 1us; 172us; 1us; 173us; 5us; 174us; 175us; 176us; 177us; 179us; 5us; 174us; 175us; 176us; 177us; 254us; 7us; 174us; 175us; 176us; 177us; 254us; 258us; 259us; 7us; 174us; 175us; 176us; 177us; 254us; 262us; 263us; 5us; 174us; 175us; 176us; 177us; 255us; 6us; 174us; 175us; 176us; 177us; 264us; 265us; 1us; 174us; 1us; 175us; 1us; 176us; 1us; 177us; 1us; 180us; 1us; 181us; 1us; 182us; 1us; 183us; 1us; 184us; 1us; 185us; 1us; 186us; 1us; 187us; 1us; 188us; 1us; 189us; 1us; 190us; 1us; 190us; 1us; 191us; 1us; 191us; 1us; 192us; 1us; 192us; 1us; 193us; 1us; 194us; 1us; 195us; 1us; 195us; 1us; 196us; 1us; 197us; 1us; 198us; 1us; 199us; 1us; 200us; 1us; 201us; 1us; 202us; 1us; 203us; 1us; 204us; 1us; 205us; 1us; 206us; 1us; 207us; 1us; 208us; 1us; 209us; 1us; 209us; 2us; 209us; 217us; 1us; 209us; 1us; 209us; 1us; 209us; 1us; 209us; 2us; 210us; 228us; 1us; 210us; 2us; 210us; 217us; 1us; 210us; 1us; 210us; 1us; 210us; 1us; 210us; 2us; 211us; 212us; 3us; 211us; 212us; 217us; 2us; 211us; 212us; 2us; 211us; 212us; 2us; 211us; 212us; 3us; 211us; 212us; 219us; 1us; 211us; 1us; 211us; 1us; 212us; 3us; 213us; 214us; 215us; 1us; 213us; 2us; 213us; 217us; 1us; 213us; 1us; 213us; 2us; 214us; 215us; 1us; 214us; 1us; 214us; 2us; 215us; 290us; 1us; 215us; 1us; 215us; 1us; 217us; 1us; 219us; 1us; 220us; 1us; 220us; 1us; 220us; 2us; 221us; 222us; 1us; 222us; 2us; 223us; 224us; 2us; 223us; 224us; 3us; 223us; 224us; 226us; 1us; 223us; 2us; 224us; 227us; 1us; 224us; 1us; 224us; 1us; 224us; 1us; 224us; 1us; 225us; 1us; 226us; 1us; 227us; 2us; 227us; 295us; 1us; 227us; 1us; 227us; 1us; 228us; 1us; 228us; 1us; 228us; 1us; 228us; 1us; 228us; 1us; 229us; 1us; 229us; 1us; 229us; 1us; 229us; 2us; 230us; 231us; 1us; 230us; 1us; 230us; 1us; 230us; 1us; 231us; 1us; 231us; 1us; 231us; 1us; 231us; 1us; 232us; 1us; 232us; 1us; 232us; 1us; 232us; 1us; 233us; 1us; 233us; 1us; 233us; 1us; 233us; 3us; 234us; 235us; 236us; 3us; 234us; 235us; 236us; 1us; 234us; 1us; 234us; 1us; 235us; 1us; 235us; 1us; 235us; 1us; 235us; 1us; 236us; 1us; 236us; 1us; 236us; 1us; 236us; 2us; 237us; 238us; 1us; 238us; 1us; 238us; 1us; 239us; 1us; 240us; 1us; 241us; 1us; 242us; 1us; 243us; 1us; 244us; 1us; 245us; 1us; 246us; 2us; 248us; 249us; 2us; 248us; 249us; 2us; 248us; 249us; 2us; 248us; 249us; 1us; 249us; 1us; 249us; 2us; 250us; 251us; 2us; 250us; 251us; 2us; 250us; 251us; 1us; 251us; 1us; 251us; 2us; 252us; 253us; 1us; 252us; 1us; 252us; 1us; 253us; 1us; 253us; 1us; 253us; 1us; 253us; 2us; 255us; 257us; 2us; 255us; 259us; 2us; 255us; 261us; 2us; 255us; 263us; 1us; 255us; 4us; 256us; 257us; 258us; 259us; 1us; 256us; 1us; 257us; 2us; 258us; 259us; 1us; 258us; 1us; 259us; 1us; 259us; 4us; 260us; 261us; 262us; 263us; 1us; 260us; 1us; 261us; 2us; 262us; 263us; 1us; 262us; 1us; 263us; 1us; 263us; 4us; 264us; 265us; 266us; 267us; 2us; 264us; 265us; 1us; 264us; 1us; 264us; 1us; 264us; 1us; 265us; 1us; 266us; 1us; 266us; 1us; 267us; 1us; 268us; 1us; 268us; 1us; 268us; 1us; 269us; 1us; 269us; 2us; 269us; 271us; 2us; 269us; 272us; 1us; 269us; 1us; 269us; 1us; 269us; 1us; 269us; 1us; 270us; 1us; 271us; 1us; 272us; 1us; 272us; 1us; 272us; 1us; 272us; 2us; 273us; 274us; 1us; 274us; 1us; 274us; 1us; 275us; 3us; 275us; 279us; 283us; 1us; 275us; 1us; 275us; 1us; 276us; 1us; 277us; 1us; 278us; 2us; 279us; 283us; 3us; 279us; 283us; 292us; 1us; 280us; 1us; 281us; 1us; 282us; 1us; 283us; 1us; 283us; 1us; 284us; 1us; 285us; 1us; 286us; 2us; 286us; 288us; 3us; 286us; 306us; 307us; 1us; 286us; 2us; 286us; 288us; 1us; 286us; 1us; 287us; 1us; 288us; 1us; 288us; 1us; 288us; 1us; 289us; 1us; 290us; 1us; 292us; 1us; 292us; 2us; 293us; 294us; 1us; 294us; 2us; 295us; 309us; 2us; 295us; 315us; 2us; 295us; 316us; 2us; 295us; 318us; 2us; 295us; 319us; 1us; 295us; 2us; 296us; 297us; 2us; 296us; 297us; 2us; 296us; 297us; 1us; 297us; 1us; 297us; 1us; 298us; 1us; 299us; 1us; 300us; 1us; 301us; 1us; 302us; 1us; 303us; 1us; 304us; 1us; 305us; 1us; 305us; 1us; 307us; 1us; 307us; 1us; 308us; 1us; 309us; 1us; 309us; 1us; 309us; 1us; 310us; 1us; 311us; 1us; 312us; 1us; 313us; 1us; 314us; 1us; 315us; 1us; 315us; 2us; 316us; 317us; 1us; 316us; 1us; 317us; 1us; 318us; 1us; 318us; 1us; 318us; 1us; 319us; 1us; 319us; 1us; 319us; 1us; 320us; 1us; 320us; 1us; 320us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 7us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 26us; 28us; 30us; 32us; 36us; 38us; 40us; 42us; 44us; 46us; 48us; 50us; 52us; 54us; 56us; 58us; 60us; 62us; 64us; 66us; 68us; 70us; 72us; 74us; 76us; 78us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 107us; 109us; 112us; 114us; 116us; 118us; 120us; 122us; 125us; 127us; 129us; 131us; 133us; 135us; 137us; 139us; 141us; 143us; 145us; 147us; 149us; 151us; 153us; 155us; 157us; 159us; 161us; 163us; 165us; 168us; 171us; 173us; 175us; 178us; 180us; 182us; 185us; 196us; 202us; 205us; 208us; 210us; 212us; 215us; 217us; 219us; 222us; 224us; 226us; 228us; 230us; 232us; 234us; 236us; 238us; 240us; 242us; 244us; 246us; 248us; 250us; 252us; 254us; 256us; 258us; 260us; 262us; 264us; 266us; 268us; 270us; 272us; 274us; 278us; 282us; 287us; 289us; 291us; 295us; 299us; 303us; 308us; 310us; 312us; 314us; 316us; 318us; 320us; 322us; 324us; 326us; 328us; 330us; 332us; 335us; 337us; 340us; 343us; 345us; 347us; 350us; 352us; 354us; 357us; 359us; 361us; 363us; 365us; 367us; 370us; 372us; 374us; 376us; 378us; 380us; 382us; 386us; 388us; 390us; 392us; 394us; 396us; 398us; 402us; 404us; 406us; 411us; 416us; 418us; 420us; 422us; 424us; 426us; 428us; 431us; 434us; 437us; 440us; 442us; 444us; 446us; 449us; 451us; 454us; 456us; 458us; 461us; 464us; 466us; 469us; 472us; 475us; 477us; 480us; 482us; 484us; 486us; 488us; 490us; 492us; 494us; 496us; 498us; 500us; 502us; 504us; 506us; 508us; 510us; 512us; 514us; 516us; 518us; 521us; 523us; 525us; 527us; 529us; 531us; 533us; 535us; 537us; 540us; 543us; 545us; 547us; 549us; 551us; 553us; 555us; 557us; 559us; 561us; 563us; 565us; 567us; 569us; 571us; 573us; 575us; 577us; 579us; 581us; 583us; 585us; 587us; 589us; 591us; 593us; 595us; 598us; 600us; 602us; 605us; 607us; 609us; 611us; 613us; 615us; 617us; 619us; 621us; 623us; 625us; 627us; 630us; 632us; 634us; 636us; 639us; 641us; 643us; 645us; 647us; 649us; 651us; 655us; 659us; 662us; 666us; 670us; 672us; 674us; 676us; 678us; 680us; 682us; 684us; 686us; 688us; 690us; 693us; 695us; 698us; 700us; 702us; 705us; 707us; 709us; 712us; 714us; 716us; 718us; 720us; 722us; 726us; 728us; 736us; 739us; 741us; 743us; 747us; 749us; 752us; 754us; 757us; 759us; 761us; 763us; 767us; 770us; 772us; 774us; 776us; 778us; 780us; 782us; 784us; 786us; 788us; 790us; 792us; 794us; 796us; 798us; 800us; 802us; 805us; 808us; 812us; 814us; 816us; 818us; 820us; 822us; 824us; 826us; 828us; 830us; 832us; 835us; 837us; 839us; 841us; 843us; 845us; 848us; 850us; 852us; 854us; 856us; 858us; 861us; 863us; 865us; 867us; 869us; 872us; 876us; 878us; 884us; 890us; 892us; 894us; 896us; 898us; 904us; 910us; 918us; 926us; 932us; 939us; 941us; 943us; 945us; 947us; 949us; 951us; 953us; 955us; 957us; 959us; 961us; 963us; 965us; 967us; 969us; 971us; 973us; 975us; 977us; 979us; 981us; 983us; 985us; 987us; 989us; 991us; 993us; 995us; 997us; 999us; 1001us; 1003us; 1005us; 1007us; 1009us; 1011us; 1013us; 1015us; 1017us; 1020us; 1022us; 1024us; 1026us; 1028us; 1031us; 1033us; 1036us; 1038us; 1040us; 1042us; 1044us; 1047us; 1051us; 1054us; 1057us; 1060us; 1064us; 1066us; 1068us; 1070us; 1074us; 1076us; 1079us; 1081us; 1083us; 1086us; 1088us; 1090us; 1093us; 1095us; 1097us; 1099us; 1101us; 1103us; 1105us; 1107us; 1110us; 1112us; 1115us; 1118us; 1122us; 1124us; 1127us; 1129us; 1131us; 1133us; 1135us; 1137us; 1139us; 1141us; 1144us; 1146us; 1148us; 1150us; 1152us; 1154us; 1156us; 1158us; 1160us; 1162us; 1164us; 1166us; 1169us; 1171us; 1173us; 1175us; 1177us; 1179us; 1181us; 1183us; 1185us; 1187us; 1189us; 1191us; 1193us; 1195us; 1197us; 1199us; 1203us; 1207us; 1209us; 1211us; 1213us; 1215us; 1217us; 1219us; 1221us; 1223us; 1225us; 1227us; 1230us; 1232us; 1234us; 1236us; 1238us; 1240us; 1242us; 1244us; 1246us; 1248us; 1250us; 1253us; 1256us; 1259us; 1262us; 1264us; 1266us; 1269us; 1272us; 1275us; 1277us; 1279us; 1282us; 1284us; 1286us; 1288us; 1290us; 1292us; 1294us; 1297us; 1300us; 1303us; 1306us; 1308us; 1313us; 1315us; 1317us; 1320us; 1322us; 1324us; 1326us; 1331us; 1333us; 1335us; 1338us; 1340us; 1342us; 1344us; 1349us; 1352us; 1354us; 1356us; 1358us; 1360us; 1362us; 1364us; 1366us; 1368us; 1370us; 1372us; 1374us; 1376us; 1379us; 1382us; 1384us; 1386us; 1388us; 1390us; 1392us; 1394us; 1396us; 1398us; 1400us; 1402us; 1405us; 1407us; 1409us; 1411us; 1415us; 1417us; 1419us; 1421us; 1423us; 1425us; 1428us; 1432us; 1434us; 1436us; 1438us; 1440us; 1442us; 1444us; 1446us; 1448us; 1451us; 1455us; 1457us; 1460us; 1462us; 1464us; 1466us; 1468us; 1470us; 1472us; 1474us; 1476us; 1478us; 1481us; 1483us; 1486us; 1489us; 1492us; 1495us; 1498us; 1500us; 1503us; 1506us; 1509us; 1511us; 1513us; 1515us; 1517us; 1519us; 1521us; 1523us; 1525us; 1527us; 1529us; 1531us; 1533us; 1535us; 1537us; 1539us; 1541us; 1543us; 1545us; 1547us; 1549us; 1551us; 1553us; 1555us; 1557us; 1560us; 1562us; 1564us; 1566us; 1568us; 1570us; 1572us; 1574us; 1576us; 1578us; 1580us; |]
let _fsyacc_action_rows = 675
let _fsyacc_actionTableElements = [|1us; 16387us; 70us; 15us; 0us; 49152us; 15us; 16389us; 40us; 78us; 41us; 97us; 51us; 209us; 52us; 215us; 55us; 245us; 56us; 195us; 57us; 161us; 58us; 183us; 59us; 155us; 60us; 241us; 61us; 55us; 62us; 49us; 63us; 111us; 64us; 122us; 65us; 73us; 2us; 32768us; 66us; 12us; 67us; 38us; 1us; 32768us; 122us; 5us; 0us; 16385us; 1us; 32768us; 122us; 7us; 0us; 16386us; 1us; 16387us; 70us; 15us; 0us; 16388us; 15us; 16389us; 40us; 78us; 41us; 97us; 51us; 209us; 52us; 215us; 55us; 245us; 56us; 195us; 57us; 161us; 58us; 183us; 59us; 155us; 60us; 241us; 61us; 55us; 62us; 49us; 63us; 111us; 64us; 122us; 65us; 73us; 0us; 16390us; 1us; 32768us; 73us; 13us; 35us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 0us; 16391us; 4us; 32768us; 41us; 23us; 107us; 40us; 114us; 25us; 121us; 27us; 1us; 32768us; 69us; 17us; 1us; 32768us; 121us; 18us; 0us; 16392us; 2us; 32768us; 114us; 25us; 121us; 27us; 1us; 32768us; 69us; 21us; 1us; 32768us; 121us; 22us; 0us; 16393us; 1us; 32768us; 114us; 24us; 0us; 16394us; 0us; 16395us; 0us; 16396us; 1us; 32768us; 78us; 28us; 1us; 32768us; 121us; 29us; 1us; 32768us; 78us; 30us; 1us; 32768us; 121us; 31us; 1us; 32768us; 82us; 32us; 1us; 32768us; 116us; 33us; 1us; 32768us; 78us; 34us; 1us; 32768us; 116us; 35us; 1us; 32768us; 78us; 36us; 1us; 32768us; 116us; 37us; 0us; 16397us; 1us; 32768us; 107us; 40us; 0us; 16398us; 3us; 16400us; 118us; 47us; 120us; 46us; 121us; 45us; 1us; 32768us; 108us; 42us; 0us; 16399us; 3us; 16400us; 118us; 47us; 120us; 46us; 121us; 45us; 0us; 16401us; 0us; 16402us; 0us; 16403us; 0us; 16404us; 0us; 16405us; 4us; 32768us; 40us; 78us; 64us; 122us; 65us; 73us; 107us; 51us; 0us; 16406us; 3us; 32768us; 40us; 78us; 64us; 122us; 65us; 73us; 1us; 32768us; 108us; 53us; 0us; 16407us; 0us; 16408us; 1us; 32768us; 120us; 56us; 0us; 16600us; 2us; 32768us; 73us; 58us; 121us; 462us; 17us; 32768us; 2us; 641us; 3us; 642us; 9us; 666us; 10us; 669us; 71us; 648us; 72us; 647us; 93us; 661us; 95us; 672us; 105us; 663us; 109us; 653us; 113us; 646us; 114us; 645us; 115us; 644us; 116us; 643us; 119us; 613us; 120us; 612us; 121us; 616us; 0us; 16409us; 0us; 16410us; 0us; 16411us; 0us; 16412us; 1us; 32768us; 108us; 64us; 0us; 16413us; 0us; 16414us; 0us; 16415us; 0us; 16416us; 0us; 16417us; 0us; 16418us; 0us; 16419us; 0us; 16420us; 0us; 16421us; 1us; 32768us; 82us; 74us; 1us; 16423us; 111us; 76us; 0us; 16422us; 1us; 16423us; 111us; 76us; 0us; 16424us; 1us; 32768us; 121us; 79us; 18us; 32768us; 2us; 641us; 3us; 642us; 9us; 666us; 10us; 669us; 71us; 648us; 72us; 647us; 73us; 80us; 93us; 661us; 95us; 672us; 105us; 663us; 109us; 653us; 113us; 646us; 114us; 645us; 115us; 644us; 116us; 643us; 119us; 613us; 120us; 612us; 121us; 616us; 35us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 0us; 16425us; 18us; 32768us; 2us; 641us; 3us; 642us; 9us; 666us; 10us; 669us; 71us; 648us; 72us; 647us; 73us; 83us; 93us; 661us; 95us; 672us; 105us; 663us; 109us; 653us; 113us; 646us; 114us; 645us; 115us; 644us; 116us; 643us; 119us; 613us; 120us; 612us; 121us; 616us; 35us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 0us; 16426us; 1us; 32768us; 40us; 88us; 6us; 32768us; 40us; 88us; 41us; 103us; 56us; 199us; 57us; 168us; 63us; 115us; 64us; 128us; 2us; 32768us; 40us; 88us; 64us; 128us; 1us; 32768us; 121us; 89us; 18us; 32768us; 2us; 641us; 3us; 642us; 9us; 666us; 10us; 669us; 71us; 648us; 72us; 647us; 73us; 90us; 93us; 661us; 95us; 672us; 105us; 663us; 109us; 653us; 113us; 646us; 114us; 645us; 115us; 644us; 116us; 643us; 119us; 613us; 120us; 612us; 121us; 616us; 35us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 0us; 16427us; 18us; 32768us; 2us; 641us; 3us; 642us; 9us; 666us; 10us; 669us; 71us; 648us; 72us; 647us; 73us; 93us; 93us; 661us; 95us; 672us; 105us; 663us; 109us; 653us; 113us; 646us; 114us; 645us; 115us; 644us; 116us; 643us; 119us; 613us; 120us; 612us; 121us; 616us; 35us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 0us; 16428us; 2us; 16429us; 40us; 78us; 65us; 73us; 0us; 16430us; 1us; 32768us; 121us; 98us; 1us; 32768us; 82us; 99us; 1us; 16519us; 99us; 280us; 1us; 32768us; 73us; 101us; 1us; 16433us; 112us; 109us; 0us; 16431us; 1us; 32768us; 121us; 104us; 1us; 32768us; 82us; 105us; 1us; 16519us; 99us; 280us; 1us; 32768us; 73us; 107us; 1us; 16433us; 112us; 109us; 0us; 16432us; 1us; 16433us; 112us; 109us; 0us; 16434us; 1us; 32768us; 120us; 112us; 1us; 32768us; 82us; 113us; 3us; 32768us; 44us; 119us; 45us; 120us; 46us; 121us; 0us; 16435us; 1us; 32768us; 120us; 116us; 1us; 32768us; 82us; 117us; 3us; 32768us; 44us; 119us; 45us; 120us; 46us; 121us; 0us; 16436us; 0us; 16437us; 0us; 16438us; 0us; 16439us; 1us; 32768us; 120us; 123us; 1us; 16446us; 82us; 133us; 3us; 16442us; 73us; 125us; 109us; 138us; 121us; 137us; 1us; 32768us; 120us; 145us; 0us; 16440us; 1us; 32768us; 64us; 128us; 1us; 32768us; 120us; 129us; 1us; 16446us; 82us; 135us; 3us; 16443us; 73us; 131us; 109us; 138us; 121us; 137us; 1us; 32768us; 120us; 145us; 0us; 16441us; 6us; 32768us; 105us; 253us; 107us; 256us; 109us; 250us; 119us; 613us; 120us; 612us; 121us; 614us; 0us; 16444us; 6us; 32768us; 105us; 253us; 107us; 256us; 109us; 250us; 119us; 613us; 120us; 612us; 121us; 614us; 0us; 16445us; 0us; 16447us; 1us; 32768us; 121us; 139us; 1us; 32768us; 82us; 140us; 6us; 32768us; 105us; 253us; 107us; 256us; 109us; 250us; 119us; 613us; 120us; 612us; 121us; 614us; 1us; 32768us; 110us; 142us; 0us; 16448us; 2us; 16449us; 64us; 122us; 65us; 73us; 0us; 16450us; 1us; 32768us; 82us; 146us; 18us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 4us; 349us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 100us; 147us; 105us; 310us; 109us; 289us; 116us; 361us; 119us; 613us; 120us; 612us; 121us; 287us; 15us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 119us; 613us; 120us; 612us; 121us; 287us; 0us; 16451us; 18us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 4us; 349us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 100us; 150us; 105us; 310us; 109us; 289us; 116us; 361us; 119us; 613us; 120us; 612us; 121us; 287us; 15us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 119us; 613us; 120us; 612us; 121us; 287us; 0us; 16452us; 1us; 16453us; 77us; 153us; 1us; 32768us; 120us; 145us; 0us; 16454us; 1us; 32768us; 117us; 156us; 1us; 32768us; 73us; 157us; 3us; 32768us; 109us; 270us; 118us; 620us; 121us; 621us; 2us; 32768us; 85us; 275us; 100us; 159us; 18us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 4us; 349us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 116us; 361us; 118us; 620us; 119us; 613us; 120us; 612us; 121us; 288us; 0us; 16455us; 1us; 32768us; 121us; 162us; 1us; 32768us; 69us; 163us; 1us; 32768us; 118us; 164us; 0us; 16458us; 3us; 32768us; 82us; 166us; 109us; 178us; 121us; 177us; 1us; 16519us; 99us; 280us; 0us; 16456us; 1us; 32768us; 121us; 169us; 1us; 32768us; 69us; 170us; 1us; 32768us; 118us; 171us; 0us; 16458us; 3us; 32768us; 82us; 173us; 109us; 178us; 121us; 177us; 1us; 16519us; 99us; 280us; 0us; 16457us; 3us; 16465us; 73us; 197us; 109us; 178us; 121us; 177us; 3us; 16466us; 73us; 201us; 109us; 178us; 121us; 177us; 0us; 16459us; 1us; 32768us; 121us; 179us; 1us; 32768us; 82us; 180us; 6us; 32768us; 105us; 253us; 107us; 256us; 109us; 250us; 119us; 613us; 120us; 612us; 121us; 614us; 1us; 32768us; 110us; 182us; 0us; 16460us; 1us; 32768us; 121us; 184us; 1us; 32768us; 82us; 185us; 18us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 4us; 349us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 99us; 189us; 105us; 310us; 109us; 289us; 116us; 361us; 119us; 613us; 120us; 612us; 121us; 287us; 18us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 4us; 349us; 72us; 296us; 73us; 187us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 116us; 361us; 119us; 613us; 120us; 612us; 121us; 287us; 35us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 0us; 16461us; 3us; 32768us; 109us; 270us; 118us; 620us; 121us; 621us; 2us; 32768us; 85us; 275us; 100us; 191us; 17us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 4us; 349us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 116us; 361us; 119us; 613us; 120us; 612us; 121us; 287us; 18us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 4us; 349us; 72us; 296us; 73us; 193us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 116us; 361us; 119us; 613us; 120us; 612us; 121us; 287us; 35us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 0us; 16462us; 1us; 32768us; 119us; 196us; 0us; 16458us; 1us; 32768us; 119us; 206us; 1us; 16463us; 77us; 204us; 1us; 32768us; 119us; 200us; 0us; 16458us; 1us; 32768us; 119us; 206us; 1us; 16464us; 77us; 204us; 0us; 16467us; 1us; 32768us; 119us; 206us; 0us; 16468us; 1us; 32768us; 82us; 207us; 1us; 16519us; 99us; 280us; 0us; 16469us; 1us; 32768us; 117us; 210us; 1us; 32768us; 73us; 211us; 35us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 5us; 32768us; 0us; 231us; 47us; 230us; 48us; 232us; 49us; 228us; 50us; 229us; 35us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 0us; 16470us; 1us; 32768us; 117us; 216us; 1us; 32768us; 121us; 225us; 1us; 32768us; 73us; 218us; 35us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 5us; 32768us; 0us; 231us; 47us; 230us; 48us; 232us; 49us; 228us; 50us; 229us; 35us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 0us; 16471us; 1us; 16472us; 85us; 223us; 1us; 32768us; 121us; 225us; 0us; 16473us; 1us; 32768us; 14us; 226us; 35us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 0us; 16474us; 0us; 16475us; 0us; 16476us; 0us; 16477us; 1us; 16478us; 33us; 233us; 1us; 16479us; 33us; 237us; 1us; 32768us; 107us; 234us; 35us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 1us; 32768us; 108us; 236us; 0us; 16480us; 1us; 32768us; 107us; 238us; 35us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 1us; 32768us; 108us; 240us; 0us; 16481us; 1us; 32768us; 121us; 242us; 1us; 32768us; 82us; 243us; 1us; 16519us; 99us; 280us; 0us; 16482us; 1us; 32768us; 120us; 246us; 1us; 32768us; 73us; 247us; 1us; 32768us; 121us; 248us; 0us; 16483us; 0us; 16484us; 6us; 32768us; 105us; 253us; 107us; 256us; 109us; 250us; 119us; 613us; 120us; 612us; 121us; 614us; 1us; 32768us; 110us; 252us; 0us; 16485us; 6us; 32768us; 105us; 253us; 107us; 256us; 109us; 250us; 119us; 613us; 120us; 612us; 121us; 614us; 1us; 32768us; 106us; 255us; 0us; 16486us; 6us; 32768us; 105us; 253us; 107us; 256us; 109us; 250us; 119us; 613us; 120us; 612us; 121us; 614us; 1us; 32768us; 108us; 258us; 0us; 16487us; 1us; 16488us; 87us; 260us; 6us; 32768us; 105us; 253us; 107us; 256us; 109us; 250us; 119us; 613us; 120us; 612us; 121us; 614us; 0us; 16489us; 1us; 16490us; 85us; 263us; 18us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 4us; 349us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 116us; 361us; 118us; 620us; 119us; 613us; 120us; 612us; 121us; 288us; 0us; 16491us; 0us; 16492us; 1us; 32768us; 73us; 267us; 17us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 4us; 349us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 116us; 361us; 119us; 613us; 120us; 612us; 121us; 287us; 0us; 16493us; 0us; 16494us; 2us; 32768us; 118us; 620us; 121us; 621us; 1us; 32768us; 110us; 272us; 1us; 32768us; 74us; 273us; 0us; 16495us; 2us; 32768us; 85us; 275us; 100us; 281us; 2us; 32768us; 118us; 620us; 121us; 621us; 0us; 16496us; 17us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 4us; 349us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 116us; 361us; 119us; 613us; 120us; 612us; 121us; 287us; 17us; 16497us; 1us; 294us; 2us; 283us; 3us; 284us; 4us; 349us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 116us; 361us; 119us; 613us; 120us; 612us; 121us; 287us; 0us; 16498us; 3us; 32768us; 109us; 270us; 118us; 620us; 121us; 621us; 0us; 16519us; 0us; 16499us; 0us; 16500us; 0us; 16501us; 2us; 16502us; 74us; 290us; 83us; 617us; 2us; 16502us; 73us; 341us; 83us; 617us; 1us; 16502us; 83us; 617us; 1us; 16502us; 83us; 618us; 17us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 4us; 349us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 116us; 361us; 119us; 613us; 120us; 612us; 121us; 285us; 1us; 32768us; 110us; 291us; 0us; 16503us; 0us; 16504us; 0us; 16505us; 0us; 16506us; 0us; 16507us; 0us; 16508us; 0us; 16519us; 1us; 32768us; 98us; 299us; 0us; 16509us; 18us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 4us; 349us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 110us; 301us; 116us; 361us; 119us; 613us; 120us; 612us; 121us; 287us; 0us; 16510us; 18us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 4us; 349us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 110us; 303us; 116us; 361us; 119us; 613us; 120us; 612us; 121us; 287us; 0us; 16511us; 2us; 32768us; 78us; 336us; 121us; 337us; 2us; 32768us; 85us; 339us; 96us; 306us; 0us; 16512us; 2us; 32768us; 78us; 336us; 121us; 337us; 2us; 32768us; 85us; 339us; 92us; 309us; 0us; 16513us; 17us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 4us; 349us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 116us; 361us; 119us; 613us; 120us; 612us; 121us; 287us; 1us; 32768us; 106us; 312us; 0us; 16514us; 0us; 16519us; 18us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 4us; 349us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 94us; 315us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 116us; 361us; 119us; 613us; 120us; 612us; 121us; 287us; 0us; 16515us; 4us; 16530us; 75us; 351us; 76us; 355us; 81us; 359us; 84us; 317us; 16us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 116us; 345us; 119us; 613us; 120us; 612us; 121us; 287us; 0us; 16516us; 0us; 16517us; 18us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 4us; 349us; 72us; 296us; 78us; 295us; 87us; 293us; 88us; 321us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 116us; 361us; 119us; 613us; 120us; 612us; 121us; 287us; 2us; 32768us; 78us; 331us; 121us; 332us; 2us; 32768us; 85us; 334us; 90us; 323us; 2us; 32768us; 78us; 331us; 121us; 332us; 2us; 32768us; 85us; 334us; 90us; 325us; 17us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 4us; 349us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 116us; 361us; 119us; 613us; 120us; 612us; 121us; 287us; 1us; 32768us; 89us; 327us; 0us; 16519us; 17us; 16518us; 1us; 294us; 2us; 283us; 3us; 284us; 4us; 349us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 116us; 361us; 119us; 613us; 120us; 612us; 121us; 287us; 1us; 16521us; 74us; 330us; 0us; 16520us; 0us; 16522us; 1us; 32768us; 74us; 333us; 0us; 16523us; 17us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 4us; 349us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 116us; 361us; 119us; 613us; 120us; 612us; 121us; 287us; 0us; 16524us; 0us; 16525us; 1us; 32768us; 74us; 338us; 0us; 16526us; 17us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 4us; 349us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 116us; 361us; 119us; 613us; 120us; 612us; 121us; 286us; 0us; 16527us; 17us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 4us; 349us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 116us; 361us; 119us; 613us; 120us; 612us; 121us; 287us; 0us; 16528us; 0us; 16529us; 0us; 16531us; 0us; 16532us; 1us; 16533us; 75us; 353us; 1us; 16534us; 76us; 357us; 1us; 16535us; 81us; 365us; 17us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 4us; 349us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 116us; 361us; 119us; 613us; 120us; 612us; 121us; 287us; 0us; 16536us; 15us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 119us; 613us; 120us; 612us; 121us; 287us; 0us; 16537us; 15us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 119us; 613us; 120us; 612us; 121us; 287us; 0us; 16538us; 15us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 119us; 613us; 120us; 612us; 121us; 287us; 0us; 16539us; 15us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 119us; 613us; 120us; 612us; 121us; 287us; 0us; 16540us; 16us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 116us; 364us; 119us; 613us; 120us; 612us; 121us; 287us; 0us; 16541us; 1us; 32768us; 81us; 362us; 15us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 119us; 613us; 120us; 612us; 121us; 287us; 0us; 16542us; 0us; 16543us; 16us; 32768us; 1us; 294us; 2us; 283us; 3us; 284us; 72us; 296us; 78us; 295us; 87us; 293us; 91us; 307us; 93us; 313us; 95us; 304us; 97us; 297us; 105us; 310us; 109us; 289us; 116us; 367us; 119us; 613us; 120us; 612us; 121us; 287us; 0us; 16544us; 0us; 16545us; 0us; 16546us; 0us; 16547us; 36us; 32768us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 43us; 376us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 2us; 32768us; 86us; 374us; 108us; 372us; 0us; 16548us; 0us; 16549us; 36us; 32768us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 43us; 376us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 0us; 16550us; 17us; 32768us; 2us; 641us; 3us; 642us; 9us; 666us; 10us; 669us; 71us; 648us; 72us; 647us; 93us; 661us; 95us; 672us; 105us; 663us; 109us; 653us; 113us; 646us; 114us; 645us; 115us; 644us; 116us; 643us; 119us; 613us; 120us; 612us; 121us; 616us; 18us; 16551us; 2us; 641us; 3us; 642us; 9us; 666us; 10us; 669us; 71us; 648us; 72us; 647us; 73us; 378us; 93us; 661us; 95us; 672us; 105us; 663us; 109us; 653us; 113us; 646us; 114us; 645us; 115us; 644us; 116us; 643us; 119us; 613us; 120us; 612us; 121us; 616us; 35us; 32768us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 35us; 16552us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 35us; 16553us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 0us; 16554us; 0us; 16555us; 0us; 16556us; 0us; 16557us; 35us; 16563us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 35us; 16638us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 36us; 16638us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 74us; 558us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 36us; 16638us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 74us; 565us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 35us; 16639us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 36us; 32768us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 74us; 570us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 0us; 16558us; 0us; 16559us; 0us; 16560us; 0us; 16561us; 0us; 16564us; 0us; 16565us; 0us; 16566us; 0us; 16567us; 0us; 16568us; 0us; 16569us; 0us; 16570us; 0us; 16571us; 0us; 16572us; 0us; 16573us; 1us; 32768us; 121us; 406us; 0us; 16574us; 1us; 32768us; 121us; 408us; 0us; 16575us; 1us; 32768us; 121us; 410us; 0us; 16576us; 0us; 16577us; 0us; 16578us; 1us; 32768us; 107us; 370us; 0us; 16579us; 0us; 16580us; 0us; 16581us; 0us; 16582us; 0us; 16583us; 0us; 16584us; 0us; 16585us; 0us; 16586us; 0us; 16587us; 0us; 16588us; 0us; 16589us; 0us; 16590us; 0us; 16591us; 0us; 16592us; 1us; 32768us; 39us; 429us; 0us; 16600us; 2us; 32768us; 24us; 431us; 121us; 462us; 1us; 32768us; 107us; 370us; 1us; 32768us; 25us; 433us; 1us; 32768us; 107us; 370us; 0us; 16593us; 36us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 39us; 436us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 0us; 16600us; 2us; 32768us; 24us; 438us; 121us; 462us; 1us; 32768us; 107us; 370us; 1us; 32768us; 25us; 440us; 1us; 32768us; 107us; 370us; 0us; 16594us; 0us; 16600us; 2us; 32768us; 107us; 370us; 121us; 462us; 1us; 32768us; 29us; 445us; 1us; 32768us; 107us; 446us; 0us; 16602us; 2us; 32768us; 77us; 451us; 108us; 450us; 1us; 32768us; 108us; 449us; 0us; 16595us; 0us; 16596us; 5us; 32768us; 30us; 456us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 0us; 16600us; 2us; 32768us; 100us; 454us; 121us; 462us; 35us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 0us; 16597us; 18us; 32768us; 2us; 641us; 3us; 642us; 9us; 666us; 10us; 669us; 71us; 648us; 72us; 647us; 93us; 661us; 95us; 672us; 100us; 457us; 105us; 663us; 109us; 653us; 113us; 646us; 114us; 645us; 115us; 644us; 116us; 643us; 119us; 613us; 120us; 612us; 121us; 616us; 35us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 0us; 16598us; 18us; 32768us; 2us; 641us; 3us; 642us; 9us; 666us; 10us; 669us; 71us; 648us; 72us; 647us; 93us; 661us; 95us; 672us; 100us; 460us; 105us; 663us; 109us; 653us; 113us; 646us; 114us; 645us; 115us; 644us; 116us; 643us; 119us; 613us; 120us; 612us; 121us; 616us; 35us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 0us; 16599us; 0us; 16601us; 0us; 16603us; 1us; 32768us; 119us; 467us; 1us; 32768us; 107us; 370us; 0us; 16604us; 1us; 16605us; 119us; 467us; 0us; 16606us; 1us; 32768us; 107us; 470us; 1us; 32768us; 77us; 480us; 2us; 32768us; 77us; 473us; 108us; 472us; 0us; 16607us; 18us; 32768us; 2us; 641us; 3us; 642us; 9us; 666us; 10us; 669us; 25us; 474us; 71us; 648us; 72us; 647us; 93us; 661us; 95us; 672us; 105us; 663us; 109us; 653us; 113us; 646us; 114us; 645us; 115us; 644us; 116us; 643us; 119us; 613us; 120us; 612us; 121us; 616us; 1us; 32768us; 100us; 475us; 35us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 1us; 32768us; 108us; 477us; 0us; 16608us; 0us; 16609us; 0us; 16610us; 17us; 32768us; 2us; 641us; 3us; 642us; 9us; 666us; 10us; 669us; 71us; 648us; 72us; 647us; 93us; 661us; 95us; 672us; 105us; 663us; 109us; 653us; 113us; 646us; 114us; 645us; 115us; 644us; 116us; 643us; 119us; 613us; 120us; 612us; 121us; 616us; 18us; 32768us; 2us; 641us; 3us; 642us; 9us; 666us; 10us; 669us; 71us; 648us; 72us; 647us; 93us; 661us; 95us; 672us; 100us; 482us; 105us; 663us; 109us; 653us; 113us; 646us; 114us; 645us; 115us; 644us; 116us; 643us; 119us; 613us; 120us; 612us; 121us; 616us; 35us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 0us; 16611us; 1us; 32768us; 24us; 485us; 1us; 32768us; 107us; 370us; 1us; 32768us; 25us; 487us; 1us; 32768us; 107us; 370us; 0us; 16612us; 1us; 32768us; 107us; 490us; 1us; 32768us; 77us; 493us; 1us; 32768us; 108us; 492us; 0us; 16613us; 36us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 25us; 494us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 1us; 32768us; 100us; 495us; 35us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 0us; 16614us; 1us; 32768us; 100us; 498us; 35us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 1us; 32768us; 77us; 493us; 0us; 16615us; 35us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 1us; 32768us; 24us; 503us; 1us; 32768us; 107us; 370us; 0us; 16616us; 35us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 1us; 32768us; 24us; 507us; 1us; 32768us; 107us; 370us; 0us; 16617us; 1us; 32768us; 121us; 532us; 3us; 32768us; 19us; 517us; 24us; 511us; 69us; 513us; 1us; 32768us; 107us; 370us; 0us; 16618us; 4us; 32768us; 5us; 524us; 6us; 525us; 8us; 527us; 9us; 526us; 1us; 32768us; 24us; 515us; 1us; 32768us; 107us; 370us; 0us; 16619us; 1us; 32768us; 121us; 538us; 1us; 32768us; 24us; 519us; 1us; 32768us; 107us; 370us; 0us; 16620us; 1us; 16621us; 85us; 522us; 4us; 32768us; 5us; 524us; 6us; 525us; 8us; 527us; 9us; 526us; 0us; 16622us; 0us; 16623us; 0us; 16624us; 0us; 16625us; 0us; 16626us; 0us; 16627us; 0us; 16628us; 0us; 16629us; 0us; 16630us; 1us; 32768us; 14us; 533us; 4us; 16631us; 5us; 528us; 6us; 529us; 8us; 531us; 9us; 530us; 35us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 1us; 16632us; 85us; 536us; 1us; 32768us; 121us; 532us; 0us; 16633us; 1us; 32768us; 73us; 539us; 35us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 1us; 16634us; 85us; 541us; 1us; 32768us; 121us; 538us; 0us; 16635us; 36us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 100us; 16675us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 606us; 1us; 32768us; 98us; 545us; 0us; 16636us; 1us; 32768us; 100us; 547us; 35us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 1us; 32768us; 98us; 549us; 0us; 16637us; 2us; 32768us; 85us; 554us; 94us; 557us; 2us; 32768us; 85us; 554us; 94us; 561us; 2us; 32768us; 85us; 554us; 106us; 564us; 2us; 32768us; 85us; 554us; 106us; 568us; 35us; 32768us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 36us; 32768us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 94us; 556us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 0us; 16640us; 0us; 16641us; 2us; 32768us; 29us; 560us; 94us; 559us; 0us; 16642us; 35us; 32768us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 0us; 16643us; 36us; 32768us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 106us; 563us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 0us; 16644us; 0us; 16645us; 2us; 32768us; 29us; 567us; 106us; 566us; 0us; 16646us; 35us; 32768us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 0us; 16647us; 36us; 32768us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 96us; 577us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 599us; 2us; 32768us; 29us; 571us; 96us; 574us; 1us; 32768us; 121us; 598us; 1us; 32768us; 96us; 573us; 0us; 16648us; 0us; 16649us; 1us; 32768us; 96us; 576us; 0us; 16650us; 0us; 16651us; 1us; 32768us; 121us; 598us; 1us; 32768us; 92us; 580us; 0us; 16652us; 1us; 32768us; 107us; 582us; 1us; 32768us; 77us; 591us; 1us; 32768us; 77us; 584us; 2us; 32768us; 25us; 585us; 121us; 592us; 1us; 32768us; 100us; 586us; 35us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 1us; 32768us; 108us; 588us; 0us; 16653us; 0us; 16654us; 0us; 16655us; 1us; 32768us; 121us; 592us; 1us; 32768us; 100us; 593us; 35us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 0us; 16656us; 1us; 16657us; 85us; 596us; 1us; 32768us; 121us; 598us; 0us; 16658us; 1us; 32768us; 73us; 600us; 2us; 16663us; 73us; 600us; 83us; 610us; 35us; 16562us; 2us; 421us; 3us; 422us; 12us; 581us; 13us; 509us; 20us; 435us; 21us; 501us; 22us; 489us; 23us; 505us; 26us; 420us; 27us; 469us; 28us; 464us; 29us; 428us; 31us; 442us; 32us; 419us; 35us; 416us; 36us; 417us; 37us; 418us; 38us; 413us; 91us; 578us; 93us; 555us; 95us; 569us; 97us; 543us; 101us; 409us; 103us; 407us; 104us; 405us; 105us; 562us; 107us; 370us; 113us; 426us; 114us; 425us; 115us; 424us; 116us; 423us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 0us; 16659us; 0us; 16660us; 0us; 16661us; 0us; 16662us; 1us; 16663us; 83us; 610us; 3us; 16663us; 83us; 610us; 100us; 16675us; 121us; 626us; 0us; 16664us; 0us; 16665us; 0us; 16666us; 4us; 32768us; 118us; 609us; 119us; 608us; 120us; 607us; 121us; 605us; 0us; 16667us; 0us; 16668us; 0us; 16669us; 1us; 32768us; 83us; 617us; 1us; 32768us; 83us; 618us; 2us; 16690us; 0us; 650us; 83us; 617us; 3us; 32768us; 119us; 613us; 120us; 612us; 121us; 614us; 4us; 32768us; 118us; 620us; 119us; 613us; 120us; 612us; 121us; 615us; 0us; 16670us; 0us; 16671us; 1us; 32768us; 83us; 622us; 2us; 32768us; 118us; 620us; 121us; 621us; 0us; 16672us; 0us; 16673us; 0us; 16674us; 1us; 16675us; 121us; 626us; 0us; 16676us; 1us; 16677us; 74us; 629us; 0us; 16678us; 18us; 32768us; 2us; 641us; 3us; 642us; 9us; 666us; 10us; 669us; 71us; 648us; 72us; 647us; 93us; 661us; 95us; 672us; 105us; 663us; 109us; 653us; 110us; 655us; 113us; 646us; 114us; 645us; 115us; 644us; 116us; 643us; 119us; 613us; 120us; 612us; 121us; 616us; 18us; 32768us; 2us; 641us; 3us; 642us; 9us; 666us; 10us; 669us; 71us; 648us; 72us; 647us; 93us; 661us; 94us; 662us; 95us; 672us; 105us; 663us; 109us; 653us; 113us; 646us; 114us; 645us; 115us; 644us; 116us; 643us; 119us; 613us; 120us; 612us; 121us; 616us; 18us; 32768us; 2us; 641us; 3us; 642us; 9us; 666us; 10us; 669us; 71us; 648us; 72us; 647us; 93us; 661us; 95us; 672us; 105us; 663us; 106us; 664us; 109us; 653us; 113us; 646us; 114us; 645us; 115us; 644us; 116us; 643us; 119us; 613us; 120us; 612us; 121us; 616us; 18us; 32768us; 2us; 641us; 3us; 642us; 9us; 666us; 10us; 669us; 71us; 648us; 72us; 647us; 93us; 661us; 95us; 672us; 105us; 663us; 108us; 668us; 109us; 653us; 113us; 646us; 114us; 645us; 115us; 644us; 116us; 643us; 119us; 613us; 120us; 612us; 121us; 616us; 18us; 32768us; 2us; 641us; 3us; 642us; 9us; 666us; 10us; 669us; 71us; 648us; 72us; 647us; 93us; 661us; 95us; 672us; 105us; 663us; 108us; 671us; 109us; 653us; 113us; 646us; 114us; 645us; 115us; 644us; 116us; 643us; 119us; 613us; 120us; 612us; 121us; 616us; 0us; 16679us; 1us; 32768us; 73us; 637us; 17us; 32768us; 2us; 641us; 3us; 642us; 9us; 666us; 10us; 669us; 71us; 648us; 72us; 647us; 93us; 661us; 95us; 672us; 105us; 663us; 109us; 653us; 113us; 646us; 114us; 645us; 115us; 644us; 116us; 643us; 119us; 613us; 120us; 612us; 121us; 616us; 1us; 16680us; 85us; 639us; 1us; 32768us; 121us; 636us; 0us; 16681us; 0us; 16682us; 0us; 16683us; 0us; 16684us; 0us; 16685us; 0us; 16686us; 0us; 16687us; 0us; 16688us; 17us; 32768us; 2us; 641us; 3us; 642us; 9us; 666us; 10us; 669us; 71us; 648us; 72us; 647us; 93us; 661us; 95us; 672us; 105us; 663us; 109us; 653us; 113us; 646us; 114us; 645us; 115us; 644us; 116us; 643us; 119us; 613us; 120us; 612us; 121us; 616us; 0us; 16689us; 17us; 32768us; 2us; 641us; 3us; 642us; 9us; 666us; 10us; 669us; 71us; 648us; 72us; 647us; 93us; 661us; 95us; 672us; 105us; 663us; 109us; 653us; 113us; 646us; 114us; 645us; 115us; 644us; 116us; 643us; 119us; 613us; 120us; 612us; 121us; 616us; 0us; 16691us; 0us; 16692us; 3us; 32768us; 119us; 613us; 120us; 612us; 121us; 614us; 17us; 32768us; 2us; 641us; 3us; 642us; 9us; 666us; 10us; 669us; 71us; 648us; 72us; 647us; 93us; 661us; 95us; 672us; 105us; 663us; 109us; 653us; 113us; 646us; 114us; 645us; 115us; 644us; 116us; 643us; 119us; 613us; 120us; 612us; 121us; 616us; 0us; 16693us; 0us; 16694us; 0us; 16695us; 0us; 16696us; 0us; 16697us; 0us; 16698us; 17us; 32768us; 2us; 641us; 3us; 642us; 9us; 666us; 10us; 669us; 71us; 648us; 72us; 647us; 93us; 661us; 95us; 672us; 105us; 663us; 109us; 653us; 113us; 646us; 114us; 645us; 115us; 644us; 116us; 643us; 119us; 613us; 120us; 612us; 121us; 616us; 0us; 16699us; 18us; 32768us; 2us; 641us; 3us; 642us; 9us; 666us; 10us; 669us; 71us; 648us; 72us; 647us; 93us; 661us; 95us; 672us; 105us; 663us; 106us; 665us; 109us; 653us; 113us; 646us; 114us; 645us; 115us; 644us; 116us; 643us; 119us; 613us; 120us; 612us; 121us; 616us; 0us; 16700us; 0us; 16701us; 1us; 32768us; 107us; 667us; 17us; 32768us; 2us; 641us; 3us; 642us; 9us; 666us; 10us; 669us; 71us; 648us; 72us; 647us; 93us; 661us; 95us; 672us; 105us; 663us; 109us; 653us; 113us; 646us; 114us; 645us; 115us; 644us; 116us; 643us; 119us; 613us; 120us; 612us; 121us; 616us; 0us; 16702us; 1us; 32768us; 107us; 670us; 17us; 32768us; 2us; 641us; 3us; 642us; 9us; 666us; 10us; 669us; 71us; 648us; 72us; 647us; 93us; 661us; 95us; 672us; 105us; 663us; 109us; 653us; 113us; 646us; 114us; 645us; 115us; 644us; 116us; 643us; 119us; 613us; 120us; 612us; 121us; 616us; 0us; 16703us; 1us; 32768us; 121us; 636us; 1us; 32768us; 96us; 674us; 0us; 16704us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 2us; 3us; 19us; 22us; 24us; 25us; 27us; 28us; 30us; 31us; 47us; 48us; 50us; 86us; 87us; 92us; 94us; 96us; 97us; 100us; 102us; 104us; 105us; 107us; 108us; 109us; 110us; 112us; 114us; 116us; 118us; 120us; 122us; 124us; 126us; 128us; 130us; 131us; 133us; 134us; 138us; 140us; 141us; 145us; 146us; 147us; 148us; 149us; 150us; 155us; 156us; 160us; 162us; 163us; 164us; 166us; 167us; 170us; 188us; 189us; 190us; 191us; 192us; 194us; 195us; 196us; 197us; 198us; 199us; 200us; 201us; 202us; 203us; 205us; 207us; 208us; 210us; 211us; 213us; 232us; 268us; 269us; 288us; 324us; 325us; 327us; 334us; 337us; 339us; 358us; 394us; 395us; 414us; 450us; 451us; 454us; 455us; 457us; 459us; 461us; 463us; 465us; 466us; 468us; 470us; 472us; 474us; 476us; 477us; 479us; 480us; 482us; 484us; 488us; 489us; 491us; 493us; 497us; 498us; 499us; 500us; 501us; 503us; 505us; 509us; 511us; 512us; 514us; 516us; 518us; 522us; 524us; 525us; 532us; 533us; 540us; 541us; 542us; 544us; 546us; 553us; 555us; 556us; 559us; 560us; 562us; 581us; 597us; 598us; 617us; 633us; 634us; 636us; 638us; 639us; 641us; 643us; 647us; 650us; 669us; 670us; 672us; 674us; 676us; 677us; 681us; 683us; 684us; 686us; 688us; 690us; 691us; 695us; 697us; 698us; 702us; 706us; 707us; 709us; 711us; 718us; 720us; 721us; 723us; 725us; 744us; 763us; 799us; 800us; 804us; 807us; 825us; 844us; 880us; 881us; 883us; 884us; 886us; 888us; 890us; 891us; 893us; 895us; 896us; 898us; 899us; 901us; 903us; 904us; 906us; 908us; 944us; 950us; 986us; 987us; 989us; 991us; 993us; 1029us; 1035us; 1071us; 1072us; 1074us; 1076us; 1077us; 1079us; 1115us; 1116us; 1117us; 1118us; 1119us; 1121us; 1123us; 1125us; 1161us; 1163us; 1164us; 1166us; 1202us; 1204us; 1205us; 1207us; 1209us; 1211us; 1212us; 1214us; 1216us; 1218us; 1219us; 1220us; 1227us; 1229us; 1230us; 1237us; 1239us; 1240us; 1247us; 1249us; 1250us; 1252us; 1259us; 1260us; 1262us; 1281us; 1282us; 1283us; 1285us; 1303us; 1304us; 1305us; 1308us; 1310us; 1312us; 1313us; 1316us; 1319us; 1320us; 1338us; 1356us; 1357us; 1361us; 1362us; 1363us; 1364us; 1365us; 1368us; 1371us; 1373us; 1375us; 1393us; 1395us; 1396us; 1397us; 1398us; 1399us; 1400us; 1401us; 1402us; 1404us; 1405us; 1424us; 1425us; 1444us; 1445us; 1448us; 1451us; 1452us; 1455us; 1458us; 1459us; 1477us; 1479us; 1480us; 1481us; 1500us; 1501us; 1506us; 1523us; 1524us; 1525us; 1544us; 1547us; 1550us; 1553us; 1556us; 1574us; 1576us; 1577us; 1595us; 1597us; 1598us; 1599us; 1601us; 1602us; 1620us; 1621us; 1622us; 1624us; 1625us; 1643us; 1644us; 1662us; 1663us; 1664us; 1665us; 1666us; 1668us; 1670us; 1672us; 1690us; 1691us; 1707us; 1708us; 1724us; 1725us; 1741us; 1742us; 1758us; 1759us; 1776us; 1777us; 1779us; 1795us; 1796us; 1797us; 1814us; 1815us; 1816us; 1817us; 1818us; 1855us; 1858us; 1859us; 1860us; 1897us; 1898us; 1916us; 1935us; 1971us; 2007us; 2043us; 2044us; 2045us; 2046us; 2047us; 2083us; 2119us; 2156us; 2193us; 2229us; 2266us; 2267us; 2268us; 2269us; 2270us; 2271us; 2272us; 2273us; 2274us; 2275us; 2276us; 2277us; 2278us; 2279us; 2280us; 2282us; 2283us; 2285us; 2286us; 2288us; 2289us; 2290us; 2291us; 2293us; 2294us; 2295us; 2296us; 2297us; 2298us; 2299us; 2300us; 2301us; 2302us; 2303us; 2304us; 2305us; 2306us; 2307us; 2309us; 2310us; 2313us; 2315us; 2317us; 2319us; 2320us; 2357us; 2358us; 2361us; 2363us; 2365us; 2367us; 2368us; 2369us; 2372us; 2374us; 2376us; 2377us; 2380us; 2382us; 2383us; 2384us; 2390us; 2391us; 2394us; 2430us; 2431us; 2450us; 2486us; 2487us; 2506us; 2542us; 2543us; 2544us; 2545us; 2547us; 2549us; 2550us; 2552us; 2553us; 2555us; 2557us; 2560us; 2561us; 2580us; 2582us; 2618us; 2620us; 2621us; 2622us; 2623us; 2641us; 2660us; 2696us; 2697us; 2699us; 2701us; 2703us; 2705us; 2706us; 2708us; 2710us; 2712us; 2713us; 2750us; 2752us; 2788us; 2789us; 2791us; 2827us; 2829us; 2830us; 2866us; 2868us; 2870us; 2871us; 2907us; 2909us; 2911us; 2912us; 2914us; 2918us; 2920us; 2921us; 2926us; 2928us; 2930us; 2931us; 2933us; 2935us; 2937us; 2938us; 2940us; 2945us; 2946us; 2947us; 2948us; 2949us; 2950us; 2951us; 2952us; 2953us; 2954us; 2956us; 2961us; 2997us; 2999us; 3001us; 3002us; 3004us; 3040us; 3042us; 3044us; 3045us; 3082us; 3084us; 3085us; 3087us; 3123us; 3125us; 3126us; 3129us; 3132us; 3135us; 3138us; 3174us; 3211us; 3212us; 3213us; 3216us; 3217us; 3253us; 3254us; 3291us; 3292us; 3293us; 3296us; 3297us; 3333us; 3334us; 3371us; 3374us; 3376us; 3378us; 3379us; 3380us; 3382us; 3383us; 3384us; 3386us; 3388us; 3389us; 3391us; 3393us; 3395us; 3398us; 3400us; 3436us; 3438us; 3439us; 3440us; 3441us; 3443us; 3445us; 3481us; 3482us; 3484us; 3486us; 3487us; 3489us; 3492us; 3528us; 3529us; 3530us; 3531us; 3532us; 3534us; 3538us; 3539us; 3540us; 3541us; 3546us; 3547us; 3548us; 3549us; 3551us; 3553us; 3556us; 3560us; 3565us; 3566us; 3567us; 3569us; 3572us; 3573us; 3574us; 3575us; 3577us; 3578us; 3580us; 3581us; 3600us; 3619us; 3638us; 3657us; 3676us; 3677us; 3679us; 3697us; 3699us; 3701us; 3702us; 3703us; 3704us; 3705us; 3706us; 3707us; 3708us; 3709us; 3727us; 3728us; 3746us; 3747us; 3748us; 3752us; 3770us; 3771us; 3772us; 3773us; 3774us; 3775us; 3776us; 3794us; 3795us; 3814us; 3815us; 3816us; 3818us; 3836us; 3837us; 3839us; 3857us; 3858us; 3860us; 3862us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 4us; 4us; 0us; 2us; 0us; 2us; 3us; 4us; 5us; 3us; 1us; 1us; 11us; 2us; 3us; 0us; 2us; 1us; 1us; 1us; 1us; 2us; 4us; 1us; 5us; 1us; 1us; 2us; 4us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 0us; 2us; 4us; 5us; 5us; 6us; 1us; 2us; 6us; 7us; 0us; 2us; 4us; 5us; 1us; 1us; 1us; 5us; 6us; 3us; 4us; 4us; 5us; 0us; 2us; 6us; 1us; 2us; 4us; 5us; 1us; 3us; 6us; 7us; 8us; 0us; 2us; 6us; 6us; 9us; 5us; 6us; 3us; 4us; 1us; 3us; 3us; 6us; 7us; 1us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 5us; 5us; 4us; 4us; 1us; 3us; 3us; 3us; 1us; 3us; 1us; 3us; 1us; 3us; 1us; 4us; 3us; 2us; 1us; 4us; 1us; 1us; 1us; 4us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 4us; 3us; 3us; 3us; 3us; 3us; 1us; 9us; 0us; 3us; 2us; 1us; 2us; 3us; 1us; 2us; 3us; 3us; 1us; 1us; 1us; 3us; 1us; 1us; 1us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 2us; 3us; 1us; 3us; 2us; 4us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 2us; 2us; 0us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 7us; 7us; 8us; 7us; 5us; 4us; 5us; 0us; 2us; 0us; 2us; 3us; 1us; 2us; 4us; 8us; 1us; 2us; 4us; 6us; 4us; 4us; 5us; 4us; 4us; 4us; 6us; 6us; 1us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 0us; 4us; 6us; 3us; 5us; 3us; 5us; 1us; 3us; 2us; 3us; 4us; 6us; 2us; 3us; 4us; 6us; 6us; 4us; 3us; 2us; 3us; 8us; 1us; 2us; 4us; 1us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 1us; 3us; 1us; 3us; 1us; 2us; 0us; 2us; 1us; 2us; 2us; 3us; 5us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 3us; 1us; 4us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 2us; 4us; 4us; 3us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 5us; 6us; 6us; 7us; 8us; 9us; 10us; 10us; 11us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 14us; 14us; 15us; 15us; 15us; 15us; 16us; 16us; 17us; 17us; 18us; 18us; 19us; 19us; 20us; 20us; 20us; 21us; 21us; 21us; 21us; 21us; 21us; 22us; 22us; 22us; 23us; 23us; 24us; 24us; 25us; 25us; 26us; 27us; 27us; 28us; 28us; 28us; 29us; 29us; 30us; 30us; 30us; 30us; 31us; 31us; 32us; 33us; 34us; 35us; 35us; 36us; 37us; 37us; 37us; 37us; 37us; 37us; 37us; 38us; 39us; 40us; 40us; 41us; 41us; 41us; 41us; 42us; 42us; 43us; 43us; 44us; 44us; 44us; 45us; 46us; 46us; 47us; 47us; 47us; 47us; 47us; 47us; 47us; 47us; 47us; 47us; 47us; 47us; 47us; 47us; 47us; 47us; 48us; 49us; 50us; 51us; 51us; 51us; 52us; 52us; 52us; 53us; 53us; 53us; 54us; 54us; 55us; 55us; 55us; 55us; 55us; 55us; 55us; 56us; 56us; 57us; 57us; 58us; 58us; 58us; 58us; 58us; 59us; 59us; 60us; 61us; 61us; 62us; 62us; 62us; 63us; 63us; 63us; 63us; 63us; 63us; 63us; 63us; 64us; 64us; 65us; 65us; 65us; 65us; 65us; 65us; 65us; 65us; 65us; 65us; 65us; 65us; 65us; 65us; 65us; 65us; 65us; 65us; 65us; 65us; 65us; 65us; 65us; 65us; 65us; 65us; 65us; 65us; 65us; 66us; 66us; 67us; 67us; 68us; 69us; 69us; 70us; 70us; 71us; 71us; 72us; 73us; 73us; 74us; 74us; 75us; 75us; 76us; 77us; 78us; 79us; 79us; 80us; 81us; 82us; 82us; 82us; 83us; 83us; 84us; 84us; 84us; 84us; 85us; 85us; 85us; 85us; 85us; 86us; 86us; 87us; 87us; 88us; 88us; 89us; 89us; 90us; 90us; 90us; 90us; 91us; 91us; 91us; 91us; 92us; 92us; 92us; 92us; 93us; 94us; 95us; 95us; 96us; 97us; 97us; 98us; 99us; 100us; 101us; 102us; 102us; 102us; 102us; 102us; 103us; 103us; 103us; 104us; 104us; 105us; 105us; 106us; 106us; 107us; 107us; 107us; 108us; 108us; 109us; 109us; 109us; 109us; 109us; 109us; 109us; 109us; 109us; 109us; 109us; 109us; 109us; 109us; 109us; 109us; 109us; 110us; 111us; 111us; 112us; 113us; 114us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 65535us; 65535us; 16385us; 65535us; 16386us; 65535us; 16388us; 65535us; 16390us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 16392us; 65535us; 65535us; 65535us; 16393us; 65535us; 16394us; 16395us; 16396us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16397us; 65535us; 16398us; 65535us; 65535us; 16399us; 65535us; 16401us; 16402us; 16403us; 16404us; 16405us; 65535us; 16406us; 65535us; 65535us; 16407us; 16408us; 65535us; 65535us; 65535us; 65535us; 16409us; 16410us; 16411us; 16412us; 65535us; 16413us; 16414us; 16415us; 16416us; 16417us; 16418us; 16419us; 16420us; 16421us; 65535us; 65535us; 16422us; 65535us; 16424us; 65535us; 65535us; 65535us; 16425us; 65535us; 65535us; 16426us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16427us; 65535us; 65535us; 16428us; 65535us; 16430us; 65535us; 65535us; 65535us; 65535us; 65535us; 16431us; 65535us; 65535us; 65535us; 65535us; 65535us; 16432us; 65535us; 16434us; 65535us; 65535us; 65535us; 16435us; 65535us; 65535us; 65535us; 16436us; 16437us; 16438us; 16439us; 65535us; 65535us; 65535us; 65535us; 16440us; 65535us; 65535us; 65535us; 65535us; 65535us; 16441us; 65535us; 16444us; 65535us; 16445us; 16447us; 65535us; 65535us; 65535us; 65535us; 16448us; 65535us; 16450us; 65535us; 65535us; 65535us; 16451us; 65535us; 65535us; 16452us; 65535us; 65535us; 16454us; 65535us; 65535us; 65535us; 65535us; 65535us; 16455us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16456us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16457us; 65535us; 65535us; 16459us; 65535us; 65535us; 65535us; 65535us; 16460us; 65535us; 65535us; 65535us; 65535us; 65535us; 16461us; 65535us; 65535us; 65535us; 65535us; 65535us; 16462us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16467us; 65535us; 16468us; 65535us; 65535us; 16469us; 65535us; 65535us; 65535us; 65535us; 65535us; 16470us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16471us; 65535us; 65535us; 16473us; 65535us; 65535us; 16474us; 16475us; 16476us; 16477us; 65535us; 65535us; 65535us; 65535us; 65535us; 16480us; 65535us; 65535us; 65535us; 16481us; 65535us; 65535us; 65535us; 16482us; 65535us; 65535us; 65535us; 16483us; 16484us; 65535us; 65535us; 16485us; 65535us; 65535us; 16486us; 65535us; 65535us; 16487us; 65535us; 65535us; 16489us; 65535us; 65535us; 16491us; 16492us; 65535us; 65535us; 16493us; 16494us; 65535us; 65535us; 65535us; 16495us; 65535us; 65535us; 16496us; 65535us; 65535us; 16498us; 65535us; 65535us; 16499us; 16500us; 16501us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16503us; 16504us; 16505us; 16506us; 16507us; 16508us; 65535us; 65535us; 16509us; 65535us; 16510us; 65535us; 16511us; 65535us; 65535us; 16512us; 65535us; 65535us; 16513us; 65535us; 65535us; 16514us; 65535us; 65535us; 16515us; 65535us; 65535us; 16516us; 16517us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16520us; 16522us; 65535us; 16523us; 65535us; 16524us; 16525us; 65535us; 16526us; 65535us; 16527us; 65535us; 16528us; 16529us; 16531us; 16532us; 65535us; 65535us; 65535us; 65535us; 16536us; 65535us; 16537us; 65535us; 16538us; 65535us; 16539us; 65535us; 16540us; 65535us; 16541us; 65535us; 65535us; 16542us; 16543us; 65535us; 16544us; 16545us; 16546us; 16547us; 65535us; 65535us; 16548us; 16549us; 65535us; 16550us; 65535us; 65535us; 65535us; 65535us; 65535us; 16554us; 16555us; 16556us; 16557us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16558us; 16559us; 16560us; 16561us; 16564us; 16565us; 16566us; 16567us; 16568us; 16569us; 16570us; 16571us; 16572us; 16573us; 65535us; 16574us; 65535us; 16575us; 65535us; 16576us; 16577us; 16578us; 65535us; 16579us; 16580us; 16581us; 16582us; 16583us; 16584us; 16585us; 16586us; 16587us; 16588us; 16589us; 16590us; 16591us; 16592us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16593us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16594us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16595us; 16596us; 65535us; 65535us; 65535us; 65535us; 16597us; 65535us; 65535us; 16598us; 65535us; 65535us; 16599us; 16601us; 16603us; 65535us; 65535us; 16604us; 65535us; 16606us; 65535us; 65535us; 65535us; 16607us; 65535us; 65535us; 65535us; 65535us; 16608us; 16609us; 16610us; 65535us; 65535us; 65535us; 16611us; 65535us; 65535us; 65535us; 65535us; 16612us; 65535us; 65535us; 65535us; 16613us; 65535us; 65535us; 65535us; 16614us; 65535us; 65535us; 65535us; 16615us; 65535us; 65535us; 65535us; 16616us; 65535us; 65535us; 65535us; 16617us; 65535us; 65535us; 65535us; 16618us; 65535us; 65535us; 65535us; 16619us; 65535us; 65535us; 65535us; 16620us; 65535us; 65535us; 16622us; 16623us; 16624us; 16625us; 16626us; 16627us; 16628us; 16629us; 16630us; 65535us; 65535us; 65535us; 65535us; 65535us; 16633us; 65535us; 65535us; 65535us; 65535us; 16635us; 65535us; 65535us; 16636us; 65535us; 65535us; 65535us; 16637us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16640us; 16641us; 65535us; 16642us; 65535us; 16643us; 65535us; 16644us; 16645us; 65535us; 16646us; 65535us; 16647us; 65535us; 65535us; 65535us; 65535us; 16648us; 16649us; 65535us; 16650us; 16651us; 65535us; 65535us; 16652us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16653us; 16654us; 16655us; 65535us; 65535us; 65535us; 16656us; 65535us; 65535us; 16658us; 65535us; 65535us; 65535us; 16659us; 16660us; 16661us; 16662us; 65535us; 65535us; 16664us; 16665us; 16666us; 65535us; 16667us; 16668us; 16669us; 65535us; 65535us; 65535us; 65535us; 65535us; 16670us; 16671us; 65535us; 65535us; 16672us; 16673us; 16674us; 65535us; 16676us; 65535us; 16678us; 65535us; 65535us; 65535us; 65535us; 65535us; 16679us; 65535us; 65535us; 65535us; 65535us; 16681us; 16682us; 16683us; 16684us; 16685us; 16686us; 16687us; 16688us; 65535us; 16689us; 65535us; 16691us; 16692us; 65535us; 65535us; 16693us; 16694us; 16695us; 16696us; 16697us; 16698us; 65535us; 16699us; 65535us; 16700us; 16701us; 65535us; 65535us; 16702us; 65535us; 65535us; 16703us; 65535us; 65535us; 16704us; |]
let _fsyacc_reductions ()  =    [| 
# 1237 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  Unit  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startunit));
# 1246 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_main in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 ".\Parser.fsy"
                                                             UMain(_1, _2, _3) 
                   )
# 101 ".\Parser.fsy"
                 :  Unit ));
# 1259 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_export in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 ".\Parser.fsy"
                                                            UExport(_1, _2, _3) 
                   )
# 102 ".\Parser.fsy"
                 :  Unit ));
# 1272 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 ".\Parser.fsy"
                                          [] 
                   )
# 104 ".\Parser.fsy"
                 : 'gentype_import_list));
# 1282 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_import in
            let _2 = parseState.GetInput(2) :?> 'gentype_import_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 ".\Parser.fsy"
                                                  _1 :: _2 
                   )
# 105 ".\Parser.fsy"
                 : 'gentype_import_list));
# 1294 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 ".\Parser.fsy"
                                         [] 
                   )
# 107 ".\Parser.fsy"
                 : 'gentype_decl_list));
# 1304 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_declaration in
            let _2 = parseState.GetInput(2) :?> 'gentype_decl_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 ".\Parser.fsy"
                                                   _1 :: _2 
                   )
# 108 ".\Parser.fsy"
                 : 'gentype_decl_list));
# 1316 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 ".\Parser.fsy"
                                                      _3 
                   )
# 110 ".\Parser.fsy"
                 : 'gentype_main));
# 1327 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_import_path in
            let _4 = parseState.GetInput(4) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 ".\Parser.fsy"
                                                                    { Native = false; Explicit = []; Path = _2; Alias = _4 } 
                   )
# 112 ".\Parser.fsy"
                 : 'gentype_import));
# 1339 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_brace_names in
            let _3 = parseState.GetInput(3) :?> 'gentype_import_path in
            let _5 = parseState.GetInput(5) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 ".\Parser.fsy"
                                                                          { Native = false; Explicit = _2; Path = _3; Alias = _5 } 
                   )
# 113 ".\Parser.fsy"
                 : 'gentype_import));
# 1352 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 ".\Parser.fsy"
                                                        { Native = true; Explicit = []; Path = IPLocal (_3); Alias = stringToSmallName "" } 
                   )
# 114 ".\Parser.fsy"
                 : 'gentype_import));
# 1363 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 ".\Parser.fsy"
                                            IPLocal (_1) 
                   )
# 116 ".\Parser.fsy"
                 : 'gentype_import_path));
# 1374 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_remote in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 ".\Parser.fsy"
                                   IPRemote (_1) 
                   )
# 117 ".\Parser.fsy"
                 : 'gentype_import_path));
# 1385 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> Name in
            let _7 = parseState.GetInput(7) :?> IntegerLiteral in
            let _9 = parseState.GetInput(9) :?> IntegerLiteral in
            let _11 = parseState.GetInput(11) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 ".\Parser.fsy"
                          { Org = _1; Project = _3; Unit = _5; Major = _7; Minor = _9; Patch = _11 } 
                   )
# 120 ".\Parser.fsy"
                 : 'gentype_remote));
# 1401 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_brace_names in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 ".\Parser.fsy"
                                                   _2 
                   )
# 122 ".\Parser.fsy"
                 : 'gentype_export));
# 1412 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_name_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 ".\Parser.fsy"
                                                               _2 
                   )
# 124 ".\Parser.fsy"
                 : 'gentype_brace_names));
# 1423 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 ".\Parser.fsy"
                                       [] 
                   )
# 126 ".\Parser.fsy"
                 : 'gentype_name_list));
# 1433 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_name in
            let _2 = parseState.GetInput(2) :?> 'gentype_name_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 ".\Parser.fsy"
                                            _1 :: _2 
                   )
# 127 ".\Parser.fsy"
                 : 'gentype_name_list));
# 1445 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 ".\Parser.fsy"
                                          _1 
                   )
# 129 ".\Parser.fsy"
                 : 'gentype_name));
# 1456 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 ".\Parser.fsy"
                                         _1 
                   )
# 130 ".\Parser.fsy"
                 : 'gentype_name));
# 1467 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 ".\Parser.fsy"
                                          _1 
                   )
# 131 ".\Parser.fsy"
                 : 'gentype_name));
# 1478 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 ".\Parser.fsy"
                                                        DFunc (_1) 
                   )
# 135 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1489 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 ".\Parser.fsy"
                                                      DRecFuncs ([_2]) 
                   )
# 136 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1500 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_function_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 ".\Parser.fsy"
                                                                      DRecFuncs (_3) 
                   )
# 137 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1511 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_native in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 ".\Parser.fsy"
                                             DNative (_1) 
                   )
# 138 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1522 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 ".\Parser.fsy"
                                                                            DPattern (_2, _3, _5) 
                   )
# 139 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1535 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_userkind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 ".\Parser.fsy"
                                               DKind (_1) 
                   )
# 140 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1546 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 ".\Parser.fsy"
                                               DType (_1) 
                   )
# 141 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1557 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 ".\Parser.fsy"
                                                      DRecTypes ([_2]) 
                   )
# 142 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1568 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_datatype_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 ".\Parser.fsy"
                                                                      DRecTypes (_3) 
                   )
# 143 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1579 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_overload in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 ".\Parser.fsy"
                                               _1 
                   )
# 144 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1590 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_instance in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 ".\Parser.fsy"
                                               _1 
                   )
# 145 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1601 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rule in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 ".\Parser.fsy"
                                            _1 
                   )
# 146 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1612 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_effect in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 ".\Parser.fsy"
                                             DEffect (_1) 
                   )
# 147 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1623 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_test in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 ".\Parser.fsy"
                                            DTest (_1) 
                   )
# 148 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1634 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_law in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 ".\Parser.fsy"
                                           DLaw (_1) 
                   )
# 149 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1645 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_check in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 ".\Parser.fsy"
                                             DCheck (_1) 
                   )
# 150 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1656 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tag in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 ".\Parser.fsy"
                                           _1 
                   )
# 151 ".\Parser.fsy"
                 : 'gentype_declaration));
# 1667 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_documentation_lines in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 ".\Parser.fsy"
                                                                        _3 
                   )
# 153 ".\Parser.fsy"
                 : 'gentype_documentation));
# 1678 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 ".\Parser.fsy"
                                                       [] 
                   )
# 155 ".\Parser.fsy"
                 : 'gentype_documentation_lines));
# 1688 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> DocumentationLine in
            let _2 = parseState.GetInput(2) :?> 'gentype_documentation_lines in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 ".\Parser.fsy"
                                                                     _1 :: _2 
                   )
# 156 ".\Parser.fsy"
                 : 'gentype_documentation_lines));
# 1700 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 ".\Parser.fsy"
                          { Name = _2; Docs = []; Body = _4 } 
                   )
# 159 ".\Parser.fsy"
                 : 'gentype_function));
# 1712 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_no_dot_pattern_expr_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 ".\Parser.fsy"
                           { Name = _2; Docs = []; Body = [EStatementBlock([SLet { Matcher = _3; Body = [] }; SExpression(_5)])] } 
                   )
# 161 ".\Parser.fsy"
                 : 'gentype_function));
# 1725 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 ".\Parser.fsy"
                           { Name = _3; Docs = _1; Body = _5 } 
                   )
# 163 ".\Parser.fsy"
                 : 'gentype_function));
# 1738 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_no_dot_pattern_expr_list in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 ".\Parser.fsy"
                           { Name = _3; Docs = _1; Body = [EStatementBlock([SLet { Matcher = _4; Body = [] }; SExpression(_6)])] } 
                   )
# 165 ".\Parser.fsy"
                 : 'gentype_function));
# 1752 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 ".\Parser.fsy"
                                                   [_1] 
                   )
# 167 ".\Parser.fsy"
                 : 'gentype_function_list));
# 1763 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function in
            let _2 = parseState.GetInput(2) :?> 'gentype_function_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 ".\Parser.fsy"
                                                     _1 :: _2 
                   )
# 168 ".\Parser.fsy"
                 : 'gentype_function_list));
# 1775 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_qual_fn_type in
            let _6 = parseState.GetInput(6) :?> 'gentype_native_code_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 ".\Parser.fsy"
                          { Name = _2; Docs = []; Type = _4; Lines = _6 } 
                   )
# 171 ".\Parser.fsy"
                 : 'gentype_native));
# 1788 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_qual_fn_type in
            let _7 = parseState.GetInput(7) :?> 'gentype_native_code_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 ".\Parser.fsy"
                             { Name = _3; Docs = _1; Type = _5; Lines = _7 } 
                   )
# 173 ".\Parser.fsy"
                 : 'gentype_native));
# 1802 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 ".\Parser.fsy"
                                                    [] 
                   )
# 175 ".\Parser.fsy"
                 : 'gentype_native_code_list));
# 1812 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> NativeCodeLine in
            let _2 = parseState.GetInput(2) :?> 'gentype_native_code_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 ".\Parser.fsy"
                                                                _1 :: _2 
                   )
# 176 ".\Parser.fsy"
                 : 'gentype_native_code_list));
# 1824 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_kind_unify in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 ".\Parser.fsy"
                          { Name = _2; Docs = []; Unify = _4 } 
                   )
# 179 ".\Parser.fsy"
                 : 'gentype_userkind));
# 1836 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_kind_unify in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 ".\Parser.fsy"
                           { Name = _3; Docs = _1; Unify = _5 } 
                   )
# 181 ".\Parser.fsy"
                 : 'gentype_userkind));
# 1849 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 ".\Parser.fsy"
                                             KUBoolean 
                   )
# 183 ".\Parser.fsy"
                 : 'gentype_kind_unify));
# 1859 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 ".\Parser.fsy"
                                       KUAbelian 
                   )
# 184 ".\Parser.fsy"
                 : 'gentype_kind_unify));
# 1869 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 ".\Parser.fsy"
                                         KUSyntactic 
                   )
# 185 ".\Parser.fsy"
                 : 'gentype_kind_unify));
# 1879 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_type_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_constructor_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 ".\Parser.fsy"
                          { Name = _2; Docs = []; Params = _3; Constructors = _5; Kind = SKBase (sIdentifier [] (stringToBigName "Data")) } 
                   )
# 188 ".\Parser.fsy"
                 : 'gentype_datatype));
# 1892 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_type_param_list in
            let _6 = parseState.GetInput(6) :?> 'gentype_constructor_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 ".\Parser.fsy"
                          { Name = _3; Docs = _1; Params = _4; Constructors = _6; Kind = SKBase (sIdentifier [] (stringToBigName "Data")) } 
                   )
# 190 ".\Parser.fsy"
                 : 'gentype_datatype));
# 1906 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_type_param_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 ".\Parser.fsy"
                           { Name = _2; Docs = []; Params = _3; Constructors = []; Kind = SKBase (sIdentifier [] (stringToBigName "Data")) } 
                   )
# 192 ".\Parser.fsy"
                 : 'gentype_datatype));
# 1918 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_type_param_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 ".\Parser.fsy"
                           { Name = _3; Docs = _1; Params = _4; Constructors = []; Kind = SKBase (sIdentifier [] (stringToBigName "Data")) } 
                   )
# 194 ".\Parser.fsy"
                 : 'gentype_datatype));
# 1931 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_compound_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 ".\Parser.fsy"
                           { Name = _2; Docs = []; Params = []; Constructors = []; Kind = _4 } 
                   )
# 196 ".\Parser.fsy"
                 : 'gentype_datatype));
# 1943 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_compound_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 ".\Parser.fsy"
                           { Name = _3; Docs = _1; Params = []; Constructors = []; Kind = _5 } 
                   )
# 198 ".\Parser.fsy"
                 : 'gentype_datatype));
# 1956 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 ".\Parser.fsy"
                            [] 
                   )
# 201 ".\Parser.fsy"
                 : 'gentype_type_param_list));
# 1966 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_param_list in
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 ".\Parser.fsy"
                            List.append _1 [(_2, SKBase (sIdentifier [] (stringToBigName "Value")))] 
                   )
# 203 ".\Parser.fsy"
                 : 'gentype_type_param_list));
# 1978 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_param_list in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_compound_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 ".\Parser.fsy"
                            List.append _1 [(_3, _5)] 
                   )
# 205 ".\Parser.fsy"
                 : 'gentype_type_param_list));
# 1991 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 ".\Parser.fsy"
                                                   [_1] 
                   )
# 207 ".\Parser.fsy"
                 : 'gentype_datatype_list));
# 2002 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_datatype in
            let _2 = parseState.GetInput(2) :?> 'gentype_datatype_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 ".\Parser.fsy"
                                                     _1 :: _2 
                   )
# 208 ".\Parser.fsy"
                 : 'gentype_datatype_list));
# 2014 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 ".\Parser.fsy"
                           { Name = _1; Docs = []; Components = []; Result = _4 } 
                   )
# 211 ".\Parser.fsy"
                 : 'gentype_constructor));
# 2026 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_type_arg_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 ".\Parser.fsy"
                           { Name = _1; Docs = []; Components = List.rev _3; Result = _5 } 
                   )
# 213 ".\Parser.fsy"
                 : 'gentype_constructor));
# 2039 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constructor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 ".\Parser.fsy"
                                                           [_1] 
                   )
# 215 ".\Parser.fsy"
                 : 'gentype_constructor_list));
# 2050 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constructor in
            let _3 = parseState.GetInput(3) :?> 'gentype_constructor_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 ".\Parser.fsy"
                                                               _1 :: _3 
                   )
# 216 ".\Parser.fsy"
                 : 'gentype_constructor_list));
# 2062 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_predicate_list in
            let _6 = parseState.GetInput(6) :?> 'gentype_constraint_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 ".\Parser.fsy"
                          DPropagationRule (_2, toList _4, _6) 
                   )
# 219 ".\Parser.fsy"
                 : 'gentype_rule));
# 2075 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_opt_type_param_list in
            let _7 = parseState.GetInput(7) :?> 'gentype_qual_fn_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 222 ".\Parser.fsy"
                          DOverload { Name = _2; Docs = []; Predicate = _4; Template = _7; Bodies = []; Params = _5 } 
                   )
# 222 ".\Parser.fsy"
                 : 'gentype_overload));
# 2089 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> Name in
            let _6 = parseState.GetInput(6) :?> 'gentype_opt_type_param_list in
            let _8 = parseState.GetInput(8) :?> 'gentype_qual_fn_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 ".\Parser.fsy"
                           DOverload { Name = _3; Docs = _1; Predicate = _5; Template = _8; Bodies = []; Params = _6 } 
                   )
# 224 ".\Parser.fsy"
                 : 'gentype_overload));
# 2104 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 ".\Parser.fsy"
                             [] 
                   )
# 227 ".\Parser.fsy"
                 : 'gentype_opt_type_param_list));
# 2114 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_opt_type_param_list in
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 ".\Parser.fsy"
                             List.append _1 [(_2, SKWildcard)] 
                   )
# 229 ".\Parser.fsy"
                 : 'gentype_opt_type_param_list));
# 2126 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_opt_type_param_list in
            let _3 = parseState.GetInput(3) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_compound_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 ".\Parser.fsy"
                             List.append _1 [(_3, _5)] 
                   )
# 231 ".\Parser.fsy"
                 : 'gentype_opt_type_param_list));
# 2139 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_type_arg_list in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 234 ".\Parser.fsy"
                          DInstance { Name = _2; Context = SEnd; Heads = List.rev _4; Body = _6 } 
                   )
# 234 ".\Parser.fsy"
                 : 'gentype_instance));
# 2152 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _5 = parseState.GetInput(5) :?> 'gentype_predicate_list in
            let _7 = parseState.GetInput(7) :?> 'gentype_type_arg_list in
            let _9 = parseState.GetInput(9) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 ".\Parser.fsy"
                           DInstance { Name = _2; Context = _5; Heads = List.rev _7; Body = _9 } 
                   )
# 236 ".\Parser.fsy"
                 : 'gentype_instance));
# 2166 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_opt_type_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_handler_template_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 239 ".\Parser.fsy"
                          { Name = _2; Docs = []; Params = _3; Handlers = _5 } 
                   )
# 239 ".\Parser.fsy"
                 : 'gentype_effect));
# 2179 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_opt_type_param_list in
            let _6 = parseState.GetInput(6) :?> 'gentype_handler_template_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 241 ".\Parser.fsy"
                          { Name = _3; Docs = _1; Params = _4; Handlers = _6 } 
                   )
# 241 ".\Parser.fsy"
                 : 'gentype_effect));
# 2193 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_opt_type_param_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 243 ".\Parser.fsy"
                             { Name = _2; Docs = []; Params = _3; Handlers = [] } 
                   )
# 243 ".\Parser.fsy"
                 : 'gentype_effect));
# 2205 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_documentation in
            let _3 = parseState.GetInput(3) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_opt_type_param_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 245 ".\Parser.fsy"
                             { Name = _3; Docs = []; Params = _4; Handlers = [] } 
                   )
# 245 ".\Parser.fsy"
                 : 'gentype_effect));
# 2218 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handler_template in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 247 ".\Parser.fsy"
                                                                      [_1] 
                   )
# 247 ".\Parser.fsy"
                 : 'gentype_handler_template_list));
# 2229 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handler_template_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_handler_template in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 248 ".\Parser.fsy"
                                                                           List.append _1 [_3] 
                   )
# 248 ".\Parser.fsy"
                 : 'gentype_handler_template_list));
# 2241 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_qual_fn_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 250 ".\Parser.fsy"
                                                                           { Name = _1; Type = _3 } 
                   )
# 250 ".\Parser.fsy"
                 : 'gentype_handler_template));
# 2253 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_test_all in
            let _6 = parseState.GetInput(6) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 253 ".\Parser.fsy"
                         { Name = _2; Left = _4; Right = _6; Kind = _5 } 
                   )
# 253 ".\Parser.fsy"
                 : 'gentype_test));
# 2267 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_law_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_test_all in
            let _7 = parseState.GetInput(7) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 256 ".\Parser.fsy"
                         { Name = _2; Exhaustive = false; Params = _3; Left = _5; Right = _7; Kind = _6 } 
                   )
# 256 ".\Parser.fsy"
                 : 'gentype_law));
# 2282 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_law_param in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 258 ".\Parser.fsy"
                                                       [_1] 
                   )
# 258 ".\Parser.fsy"
                 : 'gentype_law_param_list));
# 2293 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_law_param in
            let _3 = parseState.GetInput(3) :?> 'gentype_law_param_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 259 ".\Parser.fsy"
                                                              _1 :: _3 
                   )
# 259 ".\Parser.fsy"
                 : 'gentype_law_param_list));
# 2305 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 261 ".\Parser.fsy"
                                                             { Name = _1; Generator = _3 } 
                   )
# 261 ".\Parser.fsy"
                 : 'gentype_law_param));
# 2317 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 263 ".\Parser.fsy"
                                            TKSatisfies 
                   )
# 263 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2327 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 264 ".\Parser.fsy"
                                      TKViolates 
                   )
# 264 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2337 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 265 ".\Parser.fsy"
                                       TKIsRoughly 
                   )
# 265 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2347 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 266 ".\Parser.fsy"
                                 TKIs [] 
                   )
# 266 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2357 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 267 ".\Parser.fsy"
                                    TKIsNot [] 
                   )
# 267 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2367 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 268 ".\Parser.fsy"
                                                               TKIs _4 
                   )
# 268 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2378 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 269 ".\Parser.fsy"
                                                                  TKIsNot _4 
                   )
# 269 ".\Parser.fsy"
                 : 'gentype_test_all));
# 2389 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_qual_fn_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 271 ".\Parser.fsy"
                                                                    { Name = _2; Matcher = _4 } 
                   )
# 271 ".\Parser.fsy"
                 : 'gentype_check));
# 2401 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 273 ".\Parser.fsy"
                                                            DTag (_2, _4) 
                   )
# 273 ".\Parser.fsy"
                 : 'gentype_tag));
# 2413 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_identifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 277 ".\Parser.fsy"
                                                        SKBase _1 
                   )
# 277 ".\Parser.fsy"
                 : 'gentype_base_kind));
# 2424 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 278 ".\Parser.fsy"
                                                            _2 
                   )
# 278 ".\Parser.fsy"
                 : 'gentype_base_kind));
# 2435 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 280 ".\Parser.fsy"
                                                                         SKSeq _2 
                   )
# 280 ".\Parser.fsy"
                 : 'gentype_compound_kind));
# 2446 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 281 ".\Parser.fsy"
                                                             SKRow _2 
                   )
# 281 ".\Parser.fsy"
                 : 'gentype_compound_kind));
# 2457 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 282 ".\Parser.fsy"
                                               _1 
                   )
# 282 ".\Parser.fsy"
                 : 'gentype_compound_kind));
# 2468 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_kind in
            let _3 = parseState.GetInput(3) :?> 'gentype_compound_kind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 283 ".\Parser.fsy"
                                                               SKArrow (_1, _3) 
                   )
# 283 ".\Parser.fsy"
                 : 'gentype_compound_kind));
# 2480 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constraint in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 287 ".\Parser.fsy"
                                                         [_1] 
                   )
# 287 ".\Parser.fsy"
                 : 'gentype_constraint_list));
# 2491 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constraint in
            let _3 = parseState.GetInput(3) :?> 'gentype_constraint_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 288 ".\Parser.fsy"
                                                              _1 :: _3 
                   )
# 288 ".\Parser.fsy"
                 : 'gentype_constraint_list));
# 2503 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_predicate in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 290 ".\Parser.fsy"
                                                     SCPredicate _1 
                   )
# 290 ".\Parser.fsy"
                 : 'gentype_constraint));
# 2514 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_compound_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 291 ".\Parser.fsy"
                                                                 SCEquality (_1, _3) 
                   )
# 291 ".\Parser.fsy"
                 : 'gentype_constraint));
# 2526 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_predicate in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 293 ".\Parser.fsy"
                                                         ind _1 SEnd 
                   )
# 293 ".\Parser.fsy"
                 : 'gentype_predicate_list));
# 2537 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_predicate in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 294 ".\Parser.fsy"
                                                                   dot _2 SEnd 
                   )
# 294 ".\Parser.fsy"
                 : 'gentype_predicate_list));
# 2548 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_predicate_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_predicate in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 295 ".\Parser.fsy"
                                                                ind _3 _1 
                   )
# 295 ".\Parser.fsy"
                 : 'gentype_predicate_list));
# 2560 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pred_identifier in
            let _2 = parseState.GetInput(2) :?> 'gentype_type_arg_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 297 ".\Parser.fsy"
                                                                   appendTypeArgs (STCon _1) (List.rev _2) 
                   )
# 297 ".\Parser.fsy"
                 : 'gentype_predicate));
# 2572 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_top_fn_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 299 ".\Parser.fsy"
                                                          sQualType SEnd _1 
                   )
# 299 ".\Parser.fsy"
                 : 'gentype_qual_fn_type));
# 2583 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_predicate_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_top_fn_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 300 ".\Parser.fsy"
                                                                       sQualType _2 _4 
                   )
# 300 ".\Parser.fsy"
                 : 'gentype_qual_fn_type));
# 2595 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 302 ".\Parser.fsy"
                                                  STTrue 
                   )
# 302 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2605 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 303 ".\Parser.fsy"
                                             STFalse 
                   )
# 303 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2615 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 304 ".\Parser.fsy"
                                                 STVar _1 
                   )
# 304 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2626 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 305 ".\Parser.fsy"
                                                                    STDotVar _2 
                   )
# 305 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2637 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_identifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 306 ".\Parser.fsy"
                                                     STCon _1 
                   )
# 306 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2648 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 307 ".\Parser.fsy"
                                               STPrim PrFunction 
                   )
# 307 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2658 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 308 ".\Parser.fsy"
                                            STAbelianOne 
                   )
# 308 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2668 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 309 ".\Parser.fsy"
                                            STRowEmpty 
                   )
# 309 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2678 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 310 ".\Parser.fsy"
                                                 STWildcard 
                   )
# 310 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2688 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_fn_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 311 ".\Parser.fsy"
                                                            _2 
                   )
# 311 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2699 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 312 ".\Parser.fsy"
                                                               _2 
                   )
# 312 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2710 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_type_arg_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 313 ".\Parser.fsy"
                                                                          appendTypeArgs _2 (List.rev _3) 
                   )
# 313 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2722 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_field_row_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 314 ".\Parser.fsy"
                                                                   appendTypeArgs (STPrim PrRecord) [_2] 
                   )
# 314 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2733 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_field_row_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 315 ".\Parser.fsy"
                                                              appendTypeArgs (STPrim PrVariant) [_2] 
                   )
# 315 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2744 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 316 ".\Parser.fsy"
                                                                  appendTypeArgs (STPrim PrList) [_2] 
                   )
# 316 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2755 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_fn_type_seq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 317 ".\Parser.fsy"
                                                           appendTypeArgs (STPrim PrTuple) [STSeq (_2, primValueKind)] 
                   )
# 317 ".\Parser.fsy"
                 : 'gentype_base_type));
# 2766 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 319 ".\Parser.fsy"
                                                              appendTypeArgs (STPrim PrValue) [_3; _1] 
                   )
# 319 ".\Parser.fsy"
                 : 'gentype_val_type));
# 2778 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fn_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 321 ".\Parser.fsy"
                                             appendTypeArgs (STPrim PrValue) [STFalse; _1] 
                   )
# 321 ".\Parser.fsy"
                 : 'gentype_top_fn_type));
# 2789 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fn_type_seq in
            let _3 = parseState.GetInput(3) :?> 'gentype_fn_row_type in
            let _5 = parseState.GetInput(5) :?> 'gentype_fn_row_type in
            let _7 = parseState.GetInput(7) :?> 'gentype_compound_type in
            let _9 = parseState.GetInput(9) :?> 'gentype_fn_type_seq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 324 ".\Parser.fsy"
                          appendTypeArgs (STPrim PrFunction)
                                     [STSeq (_9, primValueKind);
                                         STSeq (_1, primValueKind);
                                         _7; _5; _3] 
                   )
# 324 ".\Parser.fsy"
                 : 'gentype_fn_type));
# 2807 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 329 ".\Parser.fsy"
                                               SEnd 
                   )
# 329 ".\Parser.fsy"
                 : 'gentype_fn_type_seq));
# 2817 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fn_type_seq in
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 330 ".\Parser.fsy"
                                                               dot _2 _1 
                   )
# 330 ".\Parser.fsy"
                 : 'gentype_fn_type_seq));
# 2829 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fn_type_seq in
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 331 ".\Parser.fsy"
                                                         ind _2 _1 
                   )
# 331 ".\Parser.fsy"
                 : 'gentype_fn_type_seq));
# 2841 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 333 ".\Parser.fsy"
                                               STRowEmpty 
                   )
# 333 ".\Parser.fsy"
                 : 'gentype_fn_row_type));
# 2851 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 334 ".\Parser.fsy"
                                                  STVar _1 
                   )
# 334 ".\Parser.fsy"
                 : 'gentype_fn_row_type));
# 2862 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fn_row_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 335 ".\Parser.fsy"
                                                            appendTypeArgs STRowExtend [_1; _3] 
                   )
# 335 ".\Parser.fsy"
                 : 'gentype_fn_row_type));
# 2874 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 337 ".\Parser.fsy"
                                                   STRowEmpty 
                   )
# 337 ".\Parser.fsy"
                 : 'gentype_field_row_type));
# 2884 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 338 ".\Parser.fsy"
                                                      STVar _1 
                   )
# 338 ".\Parser.fsy"
                 : 'gentype_field_row_type));
# 2895 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_field_row_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_field_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 339 ".\Parser.fsy"
                                                               appendTypeArgs STRowExtend [_1; _3] 
                   )
# 339 ".\Parser.fsy"
                 : 'gentype_field_row_type));
# 2907 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 341 ".\Parser.fsy"
                                                                     appendTypeArgs (STCon { Qualifier = []; Name = _1 }) [_3] 
                   )
# 341 ".\Parser.fsy"
                 : 'gentype_field_type));
# 2919 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 342 ".\Parser.fsy"
                                                  _1 
                   )
# 342 ".\Parser.fsy"
                 : 'gentype_field_type));
# 2930 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 344 ".\Parser.fsy"
                                                       _1 
                   )
# 344 ".\Parser.fsy"
                 : 'gentype_compound_type));
# 2941 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_val_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 345 ".\Parser.fsy"
                                             _1 
                   )
# 345 ".\Parser.fsy"
                 : 'gentype_compound_type));
# 2952 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_type in
            let _3 = parseState.GetInput(3) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 346 ".\Parser.fsy"
                                                         STExponent (_1, _3) 
                   )
# 346 ".\Parser.fsy"
                 : 'gentype_compound_type));
# 2964 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_and_sequence in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 347 ".\Parser.fsy"
                                                _1 
                   )
# 347 ".\Parser.fsy"
                 : 'gentype_compound_type));
# 2975 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_or_sequence in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 348 ".\Parser.fsy"
                                                _1 
                   )
# 348 ".\Parser.fsy"
                 : 'gentype_compound_type));
# 2986 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_mul_sequence in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 349 ".\Parser.fsy"
                                                _1 
                   )
# 349 ".\Parser.fsy"
                 : 'gentype_compound_type));
# 2997 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 350 ".\Parser.fsy"
                                                    STNot _2 
                   )
# 350 ".\Parser.fsy"
                 : 'gentype_compound_type));
# 3008 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 352 ".\Parser.fsy"
                                                                        STAnd (_1, _3) 
                   )
# 352 ".\Parser.fsy"
                 : 'gentype_and_sequence));
# 3020 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_and_sequence in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 353 ".\Parser.fsy"
                                                                 STAnd (_1, _3) 
                   )
# 353 ".\Parser.fsy"
                 : 'gentype_and_sequence));
# 3032 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 355 ".\Parser.fsy"
                                                                    STOr (_1, _3) 
                   )
# 355 ".\Parser.fsy"
                 : 'gentype_or_sequence));
# 3044 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_or_sequence in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 356 ".\Parser.fsy"
                                                             STOr (_1, _3) 
                   )
# 356 ".\Parser.fsy"
                 : 'gentype_or_sequence));
# 3056 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_type in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 358 ".\Parser.fsy"
                                                                STMultiply (_1, _3) 
                   )
# 358 ".\Parser.fsy"
                 : 'gentype_mul_sequence));
# 3068 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 359 ".\Parser.fsy"
                                                     STMultiply (STFixedConst _1, _3) 
                   )
# 359 ".\Parser.fsy"
                 : 'gentype_mul_sequence));
# 3080 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_base_type in
            let _3 = parseState.GetInput(3) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 360 ".\Parser.fsy"
                                                     STMultiply (_1, STFixedConst _3) 
                   )
# 360 ".\Parser.fsy"
                 : 'gentype_mul_sequence));
# 3092 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_mul_sequence in
            let _3 = parseState.GetInput(3) :?> 'gentype_base_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 361 ".\Parser.fsy"
                                                         STMultiply (_1, _3) 
                   )
# 361 ".\Parser.fsy"
                 : 'gentype_mul_sequence));
# 3104 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_mul_sequence in
            let _3 = parseState.GetInput(3) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 362 ".\Parser.fsy"
                                                       STMultiply (_1, STFixedConst _3) 
                   )
# 362 ".\Parser.fsy"
                 : 'gentype_mul_sequence));
# 3116 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 364 ".\Parser.fsy"
                                                        [_1] 
                   )
# 364 ".\Parser.fsy"
                 : 'gentype_type_arg_list));
# 3127 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_arg_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_compound_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 365 ".\Parser.fsy"
                                                          List.append _1 [_2] 
                   )
# 365 ".\Parser.fsy"
                 : 'gentype_type_arg_list));
# 3139 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term_statement_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 369 ".\Parser.fsy"
                                                                                  _2 
                   )
# 369 ".\Parser.fsy"
                 : 'gentype_term_statement_block));
# 3150 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_statement in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 371 ".\Parser.fsy"
                                                                   [_1] 
                   )
# 371 ".\Parser.fsy"
                 : 'gentype_term_statement_list));
# 3161 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_statement_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 372 ".\Parser.fsy"
                                                                            List.append _1 [_3] 
                   )
# 372 ".\Parser.fsy"
                 : 'gentype_term_statement_list));
# 3173 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_no_dot_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 374 ".\Parser.fsy"
                                                                            SLet { Matcher = _2; Body = [] } 
                   )
# 374 ".\Parser.fsy"
                 : 'gentype_term_statement));
# 3184 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_no_dot_pattern_expr_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 375 ".\Parser.fsy"
                                                                                         SLet { Matcher = _2; Body = _4 } 
                   )
# 375 ".\Parser.fsy"
                 : 'gentype_term_statement));
# 3196 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 378 ".\Parser.fsy"
                                                              SExpression (_1) 
                   )
# 378 ".\Parser.fsy"
                 : 'gentype_term_statement));
# 3207 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 385 ".\Parser.fsy"
                                                            [_1] 
                   )
# 385 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 3218 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_record_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 386 ".\Parser.fsy"
                                                     _1 
                   )
# 386 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 3229 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tuple_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 387 ".\Parser.fsy"
                                                    _1 
                   )
# 387 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 3240 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_list_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 388 ".\Parser.fsy"
                                                   _1 
                   )
# 388 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 3251 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 389 ".\Parser.fsy"
                                                              List.append _1 [_2] 
                   )
# 389 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 3263 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_record_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 390 ".\Parser.fsy"
                                                                     List.append _1 _2 
                   )
# 390 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 3275 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_tuple_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 391 ".\Parser.fsy"
                                                                     List.append _1 _2 
                   )
# 391 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 3287 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_list_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 392 ".\Parser.fsy"
                                                                    List.append _1 _2 
                   )
# 392 ".\Parser.fsy"
                 : 'gentype_non_empty_simple_expr));
# 3299 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 394 ".\Parser.fsy"
                                            [] 
                   )
# 394 ".\Parser.fsy"
                 : 'gentype_simple_expr));
# 3309 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 395 ".\Parser.fsy"
                                                    _1 
                   )
# 395 ".\Parser.fsy"
                 : 'gentype_simple_expr));
# 3320 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 399 ".\Parser.fsy"
                                                      EStatementBlock (_1) 
                   )
# 399 ".\Parser.fsy"
                 : 'gentype_word));
# 3331 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handle_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 400 ".\Parser.fsy"
                                            _1 
                   )
# 400 ".\Parser.fsy"
                 : 'gentype_word));
# 3342 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_inject_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 401 ".\Parser.fsy"
                                            _1 
                   )
# 401 ".\Parser.fsy"
                 : 'gentype_word));
# 3353 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 402 ".\Parser.fsy"
                                           _1 
                   )
# 402 ".\Parser.fsy"
                 : 'gentype_word));
# 3364 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_if_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 403 ".\Parser.fsy"
                                         _1 
                   )
# 403 ".\Parser.fsy"
                 : 'gentype_word));
# 3375 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_switch_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 404 ".\Parser.fsy"
                                            _1 
                   )
# 404 ".\Parser.fsy"
                 : 'gentype_word));
# 3386 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_when_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 405 ".\Parser.fsy"
                                          _1 
                   )
# 405 ".\Parser.fsy"
                 : 'gentype_word));
# 3397 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_while_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 406 ".\Parser.fsy"
                                           _1 
                   )
# 406 ".\Parser.fsy"
                 : 'gentype_word));
# 3408 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_for_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 407 ".\Parser.fsy"
                                          _1 
                   )
# 407 ".\Parser.fsy"
                 : 'gentype_word));
# 3419 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 408 ".\Parser.fsy"
                                                EFunctionLiteral (_1) 
                   )
# 408 ".\Parser.fsy"
                 : 'gentype_word));
# 3430 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 414 ".\Parser.fsy"
                                                 EExtension (_2) 
                   )
# 414 ".\Parser.fsy"
                 : 'gentype_word));
# 3441 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 415 ".\Parser.fsy"
                                                 ESelect (false, _2) 
                   )
# 415 ".\Parser.fsy"
                 : 'gentype_word));
# 3452 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 416 ".\Parser.fsy"
                                                ESelect (true, _2) 
                   )
# 416 ".\Parser.fsy"
                 : 'gentype_word));
# 3463 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_variant_literal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 418 ".\Parser.fsy"
                                               _1 
                   )
# 418 ".\Parser.fsy"
                 : 'gentype_word));
# 3474 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_case_word in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 419 ".\Parser.fsy"
                                          _1 
                   )
# 419 ".\Parser.fsy"
                 : 'gentype_word));
# 3485 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 420 ".\Parser.fsy"
                                                           EWithState (_2) 
                   )
# 420 ".\Parser.fsy"
                 : 'gentype_word));
# 3496 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_permission in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 421 ".\Parser.fsy"
                                           _1 
                   )
# 421 ".\Parser.fsy"
                 : 'gentype_word));
# 3507 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 422 ".\Parser.fsy"
                                       ETrust 
                   )
# 422 ".\Parser.fsy"
                 : 'gentype_word));
# 3517 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 423 ".\Parser.fsy"
                                          EDistrust 
                   )
# 423 ".\Parser.fsy"
                 : 'gentype_word));
# 3527 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 424 ".\Parser.fsy"
                                       EAudit 
                   )
# 424 ".\Parser.fsy"
                 : 'gentype_word));
# 3537 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 425 ".\Parser.fsy"
                                        EUntag 
                   )
# 425 ".\Parser.fsy"
                 : 'gentype_word));
# 3547 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 428 ".\Parser.fsy"
                                     EDo 
                   )
# 428 ".\Parser.fsy"
                 : 'gentype_word));
# 3557 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 430 ".\Parser.fsy"
                                       ETrue 
                   )
# 430 ".\Parser.fsy"
                 : 'gentype_word));
# 3567 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 431 ".\Parser.fsy"
                                       EFalse 
                   )
# 431 ".\Parser.fsy"
                 : 'gentype_word));
# 3577 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 432 ".\Parser.fsy"
                                         EInteger (_1) 
                   )
# 432 ".\Parser.fsy"
                 : 'gentype_word));
# 3588 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> DecimalLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 433 ".\Parser.fsy"
                                         EDecimal (_1) 
                   )
# 433 ".\Parser.fsy"
                 : 'gentype_word));
# 3599 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 434 ".\Parser.fsy"
                                        EString (_1) 
                   )
# 434 ".\Parser.fsy"
                 : 'gentype_word));
# 3610 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> CharacterLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 435 ".\Parser.fsy"
                                          ECharacter (_1) 
                   )
# 435 ".\Parser.fsy"
                 : 'gentype_word));
# 3621 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  Identifier  in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 436 ".\Parser.fsy"
                                           EIdentifier (_1) 
                   )
# 436 ".\Parser.fsy"
                 : 'gentype_word));
# 3632 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_term_statement_block in
            let _7 = parseState.GetInput(7) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 439 ".\Parser.fsy"
                           EWithPermission (_3, _5, _7) 
                   )
# 439 ".\Parser.fsy"
                 : 'gentype_permission));
# 3645 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_term_statement_block in
            let _7 = parseState.GetInput(7) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 441 ".\Parser.fsy"
                           EIfPermission (_3, _5, _7) 
                   )
# 441 ".\Parser.fsy"
                 : 'gentype_permission));
# 3658 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_handler_list in
            let _7 = parseState.GetInput(7) :?> 'gentype_return in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 444 ".\Parser.fsy"
                           EHandle (_2, _3, _6, _7) 
                   )
# 444 ".\Parser.fsy"
                 : 'gentype_handle_word));
# 3672 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_param_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_handler_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 446 ".\Parser.fsy"
                           EHandle (_2, _3, _6, []) 
                   )
# 446 ".\Parser.fsy"
                 : 'gentype_handle_word));
# 3685 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?>  Identifier  in
            let _3 = parseState.GetInput(3) :?> 'gentype_param_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 448 ".\Parser.fsy"
                                                                              { Name = _2; Params = _3; Body = _5; } 
                   )
# 448 ".\Parser.fsy"
                 : 'gentype_handler));
# 3698 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 451 ".\Parser.fsy"
                          _4 
                   )
# 451 ".\Parser.fsy"
                 : 'gentype_return));
# 3709 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_no_dot_pattern_expr_list in
            let _5 = parseState.GetInput(5) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 453 ".\Parser.fsy"
                             [EStatementBlock([SLet { Matcher = _3; Body = [] }; SExpression(_5)])] 
                   )
# 453 ".\Parser.fsy"
                 : 'gentype_return));
# 3721 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 455 ".\Parser.fsy"
                                         [] 
                   )
# 455 ".\Parser.fsy"
                 : 'gentype_param_list));
# 3731 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_param_list in
            let _2 = parseState.GetInput(2) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 456 ".\Parser.fsy"
                                                     List.append _1 [_2] 
                   )
# 456 ".\Parser.fsy"
                 : 'gentype_param_list));
# 3743 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 458 ".\Parser.fsy"
                                           [] 
                   )
# 458 ".\Parser.fsy"
                 : 'gentype_handler_list));
# 3753 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_handler_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_handler in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 459 ".\Parser.fsy"
                                                  List.append _1 [_2] 
                   )
# 459 ".\Parser.fsy"
                 : 'gentype_handler_list));
# 3765 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_eff_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 461 ".\Parser.fsy"
                                                                          EInject (_2, _3) 
                   )
# 461 ".\Parser.fsy"
                 : 'gentype_inject_word));
# 3777 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 463 ".\Parser.fsy"
                                                  [_1] 
                   )
# 463 ".\Parser.fsy"
                 : 'gentype_eff_list));
# 3788 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _2 = parseState.GetInput(2) :?> 'gentype_eff_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 464 ".\Parser.fsy"
                                                   _1 :: _2 
                   )
# 464 ".\Parser.fsy"
                 : 'gentype_eff_list));
# 3800 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_match_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 466 ".\Parser.fsy"
                                                                                   EMatch (_3, []) 
                   )
# 466 ".\Parser.fsy"
                 : 'gentype_match_word));
# 3811 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_match_clause_list in
            let _7 = parseState.GetInput(7) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 467 ".\Parser.fsy"
                                                                                                  EMatch (_3, _7) 
                   )
# 467 ".\Parser.fsy"
                 : 'gentype_match_word));
# 3823 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 469 ".\Parser.fsy"
                                                            [_1] 
                   )
# 469 ".\Parser.fsy"
                 : 'gentype_match_clause_list));
# 3834 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_clause_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_match_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 470 ".\Parser.fsy"
                                                              List.append _1 [_2] 
                   )
# 470 ".\Parser.fsy"
                 : 'gentype_match_clause_list));
# 3846 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 472 ".\Parser.fsy"
                                                                               { Matcher = _2; Body = _4 } 
                   )
# 472 ".\Parser.fsy"
                 : 'gentype_match_clause));
# 3858 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            let _6 = parseState.GetInput(6) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 474 ".\Parser.fsy"
                                                                                                    EIf (_2, _4, _6) 
                   )
# 474 ".\Parser.fsy"
                 : 'gentype_if_word));
# 3871 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_switch_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 476 ".\Parser.fsy"
                                                                               switchClausesToIfs _3 
                   )
# 476 ".\Parser.fsy"
                 : 'gentype_switch_word));
# 3882 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 478 ".\Parser.fsy"
                                                                               [_4] 
                   )
# 478 ".\Parser.fsy"
                 : 'gentype_switch_clause_list));
# 3893 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_switch_clause_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 479 ".\Parser.fsy"
                                                                                      _2 :: _4 :: _5 
                   )
# 479 ".\Parser.fsy"
                 : 'gentype_switch_clause_list));
# 3906 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 481 ".\Parser.fsy"
                                                                              EIf (_2, _4, []) 
                   )
# 481 ".\Parser.fsy"
                 : 'gentype_when_word));
# 3918 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 483 ".\Parser.fsy"
                                                                                EWhile (_2, _4) 
                   )
# 483 ".\Parser.fsy"
                 : 'gentype_while_word));
# 3930 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_parallel_sequences in
            let _4 = parseState.GetInput(4) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 486 ".\Parser.fsy"
                          EForEffect (_2, _4) 
                   )
# 486 ".\Parser.fsy"
                 : 'gentype_for_word));
# 3942 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_parallel_sequences in
            let _4 = parseState.GetInput(4) :?> 'gentype_for_results in
            let _6 = parseState.GetInput(6) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 488 ".\Parser.fsy"
                           EForComprehension (_4, _2, _6) 
                   )
# 488 ".\Parser.fsy"
                 : 'gentype_for_word));
# 3955 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_parallel_sequences in
            let _4 = parseState.GetInput(4) :?> 'gentype_fold_inits in
            let _6 = parseState.GetInput(6) :?> 'gentype_term_statement_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 490 ".\Parser.fsy"
                           EForFold (_4, _2, _6) 
                   )
# 490 ".\Parser.fsy"
                 : 'gentype_for_word));
# 3968 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_for_result in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 492 ".\Parser.fsy"
                                                    [_1] 
                   )
# 492 ".\Parser.fsy"
                 : 'gentype_for_results));
# 3979 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_for_result in
            let _3 = parseState.GetInput(3) :?> 'gentype_for_results in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 493 ".\Parser.fsy"
                                                         _1 :: _3 
                   )
# 493 ".\Parser.fsy"
                 : 'gentype_for_results));
# 3991 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 495 ".\Parser.fsy"
                                           FForTuple 
                   )
# 495 ".\Parser.fsy"
                 : 'gentype_for_result));
# 4001 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 496 ".\Parser.fsy"
                                    FForList 
                   )
# 496 ".\Parser.fsy"
                 : 'gentype_for_result));
# 4011 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 497 ".\Parser.fsy"
                                      FForVector 
                   )
# 497 ".\Parser.fsy"
                 : 'gentype_for_result));
# 4021 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 498 ".\Parser.fsy"
                                         FForString 
                   )
# 498 ".\Parser.fsy"
                 : 'gentype_for_result));
# 4031 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 500 ".\Parser.fsy"
                                             FForTuple 
                   )
# 500 ".\Parser.fsy"
                 : 'gentype_for_sequence));
# 4041 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 501 ".\Parser.fsy"
                                    FForList 
                   )
# 501 ".\Parser.fsy"
                 : 'gentype_for_sequence));
# 4051 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 502 ".\Parser.fsy"
                                     FForVector 
                   )
# 502 ".\Parser.fsy"
                 : 'gentype_for_sequence));
# 4061 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 503 ".\Parser.fsy"
                                        FForString 
                   )
# 503 ".\Parser.fsy"
                 : 'gentype_for_sequence));
# 4071 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 504 ".\Parser.fsy"
                                 FForIterator 
                   )
# 504 ".\Parser.fsy"
                 : 'gentype_for_sequence));
# 4081 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_for_sequence in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 507 ".\Parser.fsy"
                             [{ Name = _1; SeqType = _3; Assigned = _4 }] 
                   )
# 507 ".\Parser.fsy"
                 : 'gentype_parallel_sequences));
# 4094 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_for_sequence in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_parallel_sequences in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 509 ".\Parser.fsy"
                                { Name = _1; SeqType = _3; Assigned = _4 } :: _6 
                   )
# 509 ".\Parser.fsy"
                 : 'gentype_parallel_sequences));
# 4108 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 512 ".\Parser.fsy"
                           [{ Name = _1; Assigned = _3 }] 
                   )
# 512 ".\Parser.fsy"
                 : 'gentype_fold_inits));
# 4120 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_fold_inits in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 514 ".\Parser.fsy"
                              { Name = _1; Assigned = _3; } :: _5 
                   )
# 514 ".\Parser.fsy"
                 : 'gentype_fold_inits));
# 4133 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 517 ".\Parser.fsy"
                            _2 
                   )
# 517 ".\Parser.fsy"
                 : 'gentype_function_literal));
# 4144 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_var_only_pattern_list in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 519 ".\Parser.fsy"
                             [EStatementBlock([SLet { Matcher = _2; Body = [] }; SExpression(_4)])] 
                   )
# 519 ".\Parser.fsy"
                 : 'gentype_function_literal));
# 4156 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 521 ".\Parser.fsy"
                                                                  [_1] 
                   )
# 521 ".\Parser.fsy"
                 : 'gentype_lit_expr_list));
# 4167 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_lit_expr_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 522 ".\Parser.fsy"
                                                                        List.append _1 [_3] 
                   )
# 522 ".\Parser.fsy"
                 : 'gentype_lit_expr_list));
# 4179 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 524 ".\Parser.fsy"
                                                                [ETupleLiteral []] 
                   )
# 524 ".\Parser.fsy"
                 : 'gentype_tuple_literal));
# 4189 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_lit_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 525 ".\Parser.fsy"
                                                                 ETupleLiteral [] :: expandTupleConsSyntax _2 
                   )
# 525 ".\Parser.fsy"
                 : 'gentype_tuple_literal));
# 4200 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 526 ".\Parser.fsy"
                                                                              [ETupleLiteral _2] 
                   )
# 526 ".\Parser.fsy"
                 : 'gentype_tuple_literal));
# 4211 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_non_empty_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_lit_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 527 ".\Parser.fsy"
                                                                                            ETupleLiteral _2 :: expandTupleConsSyntax _5 
                   )
# 527 ".\Parser.fsy"
                 : 'gentype_tuple_literal));
# 4223 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 529 ".\Parser.fsy"
                                                                       [EListLiteral []] 
                   )
# 529 ".\Parser.fsy"
                 : 'gentype_list_literal));
# 4233 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_lit_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 530 ".\Parser.fsy"
                                                                        EListLiteral [] :: expandListConsSyntax _2 
                   )
# 530 ".\Parser.fsy"
                 : 'gentype_list_literal));
# 4244 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 531 ".\Parser.fsy"
                                                                                     [EListLiteral _2] 
                   )
# 531 ".\Parser.fsy"
                 : 'gentype_list_literal));
# 4255 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_non_empty_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_lit_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 532 ".\Parser.fsy"
                                                                                                   EListLiteral _2 :: expandListConsSyntax _5 
                   )
# 532 ".\Parser.fsy"
                 : 'gentype_list_literal));
# 4267 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_non_empty_simple_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 540 ".\Parser.fsy"
                                                                                                           ERecordLiteral (_2) :: expandFieldSyntax _5 
                   )
# 540 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 4279 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_non_empty_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 541 ".\Parser.fsy"
                                                                                      [ERecordLiteral (_2)] 
                   )
# 541 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 4290 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 542 ".\Parser.fsy"
                                                                       ERecordLiteral ([]) :: expandFieldSyntax _2 
                   )
# 542 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 4301 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 543 ".\Parser.fsy"
                                                              [ERecordLiteral ([])] 
                   )
# 543 ".\Parser.fsy"
                 : 'gentype_record_literal));
# 4311 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_field in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 545 ".\Parser.fsy"
                                                             EVariantLiteral (_2) 
                   )
# 545 ".\Parser.fsy"
                 : 'gentype_variant_literal));
# 4322 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?>  List<CaseClause>  in
            let _7 = parseState.GetInput(7) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 547 ".\Parser.fsy"
                                                                                                     ECase (_3, _7) 
                   )
# 547 ".\Parser.fsy"
                 : 'gentype_case_word));
# 4334 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_case_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 549 ".\Parser.fsy"
                                                          [_1] 
                   )
# 549 ".\Parser.fsy"
                 :  List<CaseClause> ));
# 4345 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?>  List<CaseClause>  in
            let _2 = parseState.GetInput(2) :?> 'gentype_case_clause in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 550 ".\Parser.fsy"
                                                           List.append _1 [_2] 
                   )
# 550 ".\Parser.fsy"
                 :  List<CaseClause> ));
# 4357 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> Name in
            let _4 = parseState.GetInput(4) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 552 ".\Parser.fsy"
                                                                       { Tag = _2; Body = _4 } 
                   )
# 552 ".\Parser.fsy"
                 : 'gentype_case_clause));
# 4369 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_field in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 554 ".\Parser.fsy"
                                              [_1] 
                   )
# 554 ".\Parser.fsy"
                 : 'gentype_field_list));
# 4380 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_field in
            let _3 = parseState.GetInput(3) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 555 ".\Parser.fsy"
                                                     _1 :: _3 
                   )
# 555 ".\Parser.fsy"
                 : 'gentype_field_list));
# 4392 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_simple_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 557 ".\Parser.fsy"
                                                             (_1, _3) 
                   )
# 557 ".\Parser.fsy"
                 : 'gentype_field));
# 4404 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 559 ".\Parser.fsy"
                                                   sIdentifier (List.take (List.length _1 - 1) _1) (List.last _1) 
                   )
# 559 ".\Parser.fsy"
                 :  Identifier ));
# 4415 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_qualified_ctor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 561 ".\Parser.fsy"
                                                        sIdentifier (List.take (List.length _1 - 1) _1) (List.last _1) 
                   )
# 561 ".\Parser.fsy"
                 : 'gentype_type_identifier));
# 4426 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_qualified_pred in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 563 ".\Parser.fsy"
                                                        sIdentifier (List.take (List.length _1 - 1) _1) (List.last _1) 
                   )
# 563 ".\Parser.fsy"
                 : 'gentype_pred_identifier));
# 4437 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 565 ".\Parser.fsy"
                                                          [_1] 
                   )
# 565 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 4448 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 566 ".\Parser.fsy"
                                               [_1] 
                   )
# 566 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 4459 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 567 ".\Parser.fsy"
                                                   [_1] 
                   )
# 567 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 4470 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 568 ".\Parser.fsy"
                                                    [_1] 
                   )
# 568 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 4481 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_qualified_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 569 ".\Parser.fsy"
                                                                      _1 :: _3 
                   )
# 569 ".\Parser.fsy"
                 : 'gentype_qualified_name));
# 4493 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 571 ".\Parser.fsy"
                                                        [_1] 
                   )
# 571 ".\Parser.fsy"
                 : 'gentype_qualified_ctor));
# 4504 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 572 ".\Parser.fsy"
                                                   [_1] 
                   )
# 572 ".\Parser.fsy"
                 : 'gentype_qualified_ctor));
# 4515 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_qualified_ctor in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 573 ".\Parser.fsy"
                                                                      _1 :: _3 
                   )
# 573 ".\Parser.fsy"
                 : 'gentype_qualified_ctor));
# 4527 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 575 ".\Parser.fsy"
                                                             [_1] 
                   )
# 575 ".\Parser.fsy"
                 : 'gentype_qualified_pred));
# 4538 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_qualified_pred in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 576 ".\Parser.fsy"
                                                                      _1 :: _3 
                   )
# 576 ".\Parser.fsy"
                 : 'gentype_qualified_pred));
# 4550 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 580 ".\Parser.fsy"
                                                                      ind _1 SEnd 
                   )
# 580 ".\Parser.fsy"
                 : 'gentype_no_dot_pattern_expr_list));
# 4561 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_no_dot_pattern_expr_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 581 ".\Parser.fsy"
                                                                      ind _2 _1 
                   )
# 581 ".\Parser.fsy"
                 : 'gentype_no_dot_pattern_expr_list));
# 4573 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 583 ".\Parser.fsy"
                                                        SEnd 
                   )
# 583 ".\Parser.fsy"
                 : 'gentype_var_only_pattern_list));
# 4583 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _2 = parseState.GetInput(2) :?> 'gentype_var_only_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 584 ".\Parser.fsy"
                                                                 ind (PNamed (_1, PWildcard)) _2 
                   )
# 584 ".\Parser.fsy"
                 : 'gentype_var_only_pattern_list));
# 4595 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 586 ".\Parser.fsy"
                                                            ind _1 SEnd 
                   )
# 586 ".\Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 4606 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 587 ".\Parser.fsy"
                                                       dot _1 SEnd 
                   )
# 587 ".\Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 4617 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pattern_expr_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 588 ".\Parser.fsy"
                                                               ind _2 _1 
                   )
# 588 ".\Parser.fsy"
                 : 'gentype_pattern_expr_list));
# 4629 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 590 ".\Parser.fsy"
                                                                                  [(_1, _3)] 
                   )
# 590 ".\Parser.fsy"
                 : 'gentype_field_pattern_list));
# 4641 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_field_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 591 ".\Parser.fsy"
                                                                                        (_1, _3) :: _5 
                   )
# 591 ".\Parser.fsy"
                 : 'gentype_field_pattern_list));
# 4654 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 593 ".\Parser.fsy"
                                                      PTrue 
                   )
# 593 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4664 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 594 ".\Parser.fsy"
                                             PFalse 
                   )
# 594 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4674 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> IntegerLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 595 ".\Parser.fsy"
                                               PInteger (_1) 
                   )
# 595 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4685 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> DecimalLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 596 ".\Parser.fsy"
                                               PDecimal (_1) 
                   )
# 596 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4696 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 597 ".\Parser.fsy"
                                              PString (_1) 
                   )
# 597 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4707 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> CharacterLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 598 ".\Parser.fsy"
                                                PRune (_1) 
                   )
# 598 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4718 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 599 ".\Parser.fsy"
                                                 PWildcard 
                   )
# 599 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4728 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 600 ".\Parser.fsy"
                                                      PRef (_2) 
                   )
# 600 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4739 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 601 ".\Parser.fsy"
                                                 PNamed (_1, PWildcard) 
                   )
# 601 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4750 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Name in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 602 ".\Parser.fsy"
                                                              PNamed (_1, _3) 
                   )
# 602 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4762 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_identifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 604 ".\Parser.fsy"
                            PConstructor (_1, SEnd) 
                   )
# 604 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4773 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_type_identifier in
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 606 ".\Parser.fsy"
                            PConstructor (_2, _3) 
                   )
# 606 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4785 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tuple_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 607 ".\Parser.fsy"
                                                   _1 
                   )
# 607 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4796 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_list_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 608 ".\Parser.fsy"
                                                   _1 
                   )
# 608 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4807 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_vector_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 609 ".\Parser.fsy"
                                                    _1 
                   )
# 609 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4818 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_slice_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 610 ".\Parser.fsy"
                                                   _1 
                   )
# 610 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4829 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_record_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 611 ".\Parser.fsy"
                                                    _1 
                   )
# 611 ".\Parser.fsy"
                 : 'gentype_pattern_expr));
# 4840 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 613 ".\Parser.fsy"
                                                                       PTuple (_2) 
                   )
# 613 ".\Parser.fsy"
                 : 'gentype_tuple_pattern));
# 4851 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 615 ".\Parser.fsy"
                                                                              PList (_2) 
                   )
# 615 ".\Parser.fsy"
                 : 'gentype_list_pattern));
# 4862 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 616 ".\Parser.fsy"
                                                        PList (SEnd) 
                   )
# 616 ".\Parser.fsy"
                 : 'gentype_list_pattern));
# 4872 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 618 ".\Parser.fsy"
                                                                                  PVector (_3) 
                   )
# 618 ".\Parser.fsy"
                 : 'gentype_vector_pattern));
# 4883 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_pattern_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 620 ".\Parser.fsy"
                                                                                 PSlice (_3) 
                   )
# 620 ".\Parser.fsy"
                 : 'gentype_slice_pattern));
# 4894 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_field_pattern_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 622 ".\Parser.fsy"
                                                                                 PRecord (_2) 
                   )
# 622 ".\Parser.fsy"
                 : 'gentype_record_pattern));
|]
# 4906 "Parser.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 126;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let unit lexer lexbuf :  Unit  =
    engine lexer lexbuf 0 :?> _
