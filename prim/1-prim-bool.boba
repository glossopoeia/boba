
data Bool

native true-bool
    : z... ===[ e... ][ p... ][ True ]==> z... Bool^s
    =
    # fiber.PushValue(true)

native false-bool
    : z... ===[ e... ][ p... ][ True ]==> z... Bool^s
    =
    # fiber.PushValue(false)

native not-bool
    : z... Bool^s ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # b := fiber.PopOneValue()
    # fiber.PushValue(!(b.(bool)))

native and-bool
    : z... Bool^s1 Bool^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # l, r := fiber.PopTwoValues()
    # fiber.PushValue(l.(bool) && r.(bool))

native or-bool
    : z... Bool^s1 Bool^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # l, r := fiber.PopTwoValues()
    # fiber.PushValue(l.(bool) || r.(bool))

native eq-bool
    : z... Bool^s1 Bool^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # l, r := fiber.PopTwoValues()
    # fiber.PushValue(l.(bool) == r.(bool))

native neq-bool
    : z... Bool^s1 Bool^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # l, r := fiber.PopTwoValues()
    # fiber.PushValue(l.(bool) != r.(bool))

export { }