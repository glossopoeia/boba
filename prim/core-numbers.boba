import { * } "core-kinds" as kinds
import { * } "core-boolean" as bools
import native "math"

kind Measure : abelian

data I8 (u : Measure)
data U8 (u : Measure)
data I16 (u : Measure)
data U16 (u : Measure)
data I32 (u : Measure)
data U32 (u : Measure)
data I64 (u : Measure)
data U64 (u : Measure)
data INative (u : Measure)
data UNative (u : Measure)

data Single (u : Measure)
data Double (u : Measure)

// =====================================================
// NEGATION
// =====================================================

native neg-i8
    : z... (I8 u)^s ===[ e... ][ p... ][ True ]==> z... (I8 u)^r
    =
    # fiber.PushValue(-fiber.PopOneValue().(int8))

native neg-i16
    : z... (I16 u)^s ===[ e... ][ p... ][ True ]==> z... (I16 u)^r
    =
    # fiber.PushValue(-fiber.PopOneValue().(int16))

native neg-i32
    : z... (I32 u)^s ===[ e... ][ p... ][ True ]==> z... (I32 u)^r
    =
    # fiber.PushValue(-fiber.PopOneValue().(int32))

native neg-i64
    : z... (I64 u)^s ===[ e... ][ p... ][ True ]==> z... (I64 u)^r
    =
    # fiber.PushValue(-fiber.PopOneValue().(int64))

native neg-inative
    : z... (INative u)^s ===[ e... ][ p... ][ True ]==> z... (INative u)^r
    =
    # fiber.PushValue(-fiber.PopOneValue().(int))

native neg-single
    : z... (Single u)^s ===[ e... ][ p... ][ True ]==> z... (Single u)^r
    =
    # fiber.PushValue(-fiber.PopOneValue().(float32))

native neg-double
    : z... (Double u)^s ===[ e... ][ p... ][ True ]==> z... (Double u)^r
    =
    # fiber.PushValue(-fiber.PopOneValue().(float64))

// =====================================================
// INCREMENT
// =====================================================

native inc-i8
    : z... (I8 u)^s ===[ e... ][ p... ][ True ]==> z... (I8 u)^r
    =
    # fiber.PushValue(1 + fiber.PopOneValue().(int8))

native inc-u8
    : z... (U8 u)^s ===[ e... ][ p... ][ True ]==> z... (U8 u)^r
    =
    # fiber.PushValue(1 + fiber.PopOneValue().(uint8))

native inc-i16
    : z... (I16 u)^s ===[ e... ][ p... ][ True ]==> z... (I16 u)^r
    =
    # fiber.PushValue(1 + fiber.PopOneValue().(int16))

native inc-u16
    : z... (U16 u)^s ===[ e... ][ p... ][ True ]==> z... (U16 u)^r
    =
    # fiber.PushValue(1 + fiber.PopOneValue().(uint16))

native inc-i32
    : z... (I32 u)^s ===[ e... ][ p... ][ True ]==> z... (I32 u)^r
    =
    # fiber.PushValue(1 + fiber.PopOneValue().(int32))

native inc-u32
    : z... (U32 u)^s ===[ e... ][ p... ][ True ]==> z... (U32 u)^r
    =
    # fiber.PushValue(1 + fiber.PopOneValue().(uint32))

native inc-i64
    : z... (I64 u)^s ===[ e... ][ p... ][ True ]==> z... (I64 u)^r
    =
    # fiber.PushValue(1 + fiber.PopOneValue().(int64))

native inc-u64
    : z... (U64 u)^s ===[ e... ][ p... ][ True ]==> z... (U64 u)^r
    =
    # fiber.PushValue(1 + fiber.PopOneValue().(uint64))

native inc-inative
    : z... (INative u)^s ===[ e... ][ p... ][ True ]==> z... (INative u)^r
    =
    # fiber.PushValue(1 + fiber.PopOneValue().(int))

native inc-unative
    : z... (UNative u)^s ===[ e... ][ p... ][ True ]==> z... (UNative u)^r
    =
    # fiber.PushValue(1 + fiber.PopOneValue().(uint))

native inc-single
    : z... (Single u)^s ===[ e... ][ p... ][ True ]==> z... (Single u)^r
    =
    # fiber.PushValue(1 + fiber.PopOneValue().(float32))

native inc-double
    : z... (Double u)^s ===[ e... ][ p... ][ True ]==> z... (Double u)^r
    =
    # fiber.PushValue(1 + fiber.PopOneValue().(float64))

// =====================================================
// DECREMENT
// =====================================================

native dec-i8
    : z... (I8 u)^s ===[ e... ][ p... ][ True ]==> z... (I8 u)^r
    =
    # fiber.PushValue(fiber.PopOneValue().(int8) - 1)

native dec-u8
    : z... (U8 u)^s ===[ e... ][ p... ][ True ]==> z... (U8 u)^r
    =
    # fiber.PushValue(fiber.PopOneValue().(uint8) - 1)

native dec-i16
    : z... (I16 u)^s ===[ e... ][ p... ][ True ]==> z... (I16 u)^r
    =
    # fiber.PushValue(fiber.PopOneValue().(int16) - 1)

native dec-u16
    : z... (U16 u)^s ===[ e... ][ p... ][ True ]==> z... (U16 u)^r
    =
    # fiber.PushValue(fiber.PopOneValue().(uint16) - 1)

native dec-i32
    : z... (I32 u)^s ===[ e... ][ p... ][ True ]==> z... (I32 u)^r
    =
    # fiber.PushValue(fiber.PopOneValue().(int32) - 1)

native dec-u32
    : z... (U32 u)^s ===[ e... ][ p... ][ True ]==> z... (U32 u)^r
    =
    # fiber.PushValue(fiber.PopOneValue().(uint32) - 1)

native dec-i64
    : z... (I64 u)^s ===[ e... ][ p... ][ True ]==> z... (I64 u)^r
    =
    # fiber.PushValue(fiber.PopOneValue().(int64) - 1)

native dec-u64
    : z... (U64 u)^s ===[ e... ][ p... ][ True ]==> z... (U64 u)^r
    =
    # fiber.PushValue(fiber.PopOneValue().(uint64) - 1)

native dec-inative
    : z... (INative u)^s ===[ e... ][ p... ][ True ]==> z... (INative u)^r
    =
    # fiber.PushValue(fiber.PopOneValue().(int) - 1)

native dec-unative
    : z... (UNative u)^s ===[ e... ][ p... ][ True ]==> z... (UNative u)^r
    =
    # fiber.PushValue(fiber.PopOneValue().(uint) - 1)

native dec-single
    : z... (Single u)^s ===[ e... ][ p... ][ True ]==> z... (Single u)^r
    =
    # fiber.PushValue(fiber.PopOneValue().(float32) - 1)

native dec-double
    : z... (Double u)^s ===[ e... ][ p... ][ True ]==> z... (Double u)^r
    =
    # fiber.PushValue(fiber.PopOneValue().(float64) - 1)

// =====================================================
// ADDITION
// =====================================================

native add-i8
    : z... (I8 u)^s1 (I8 u)^s2 ===[ e... ][ p... ][ True ]==> z... (I8 u)^r
    =
    # r := fiber.PopOneValue().(int8)
    # l := fiber.PopOneValue().(int8)
    # fiber.PushValue(l + r)

native add-u8
    : z... (U8 u)^s1 (U8 u)^s2 ===[ e... ][ p... ][ True ]==> z... (U8 u)^r
    =
    # r := fiber.PopOneValue().(uint8)
    # l := fiber.PopOneValue().(uint8)
    # fiber.PushValue(l + r)

native add-i16
    : z... (I16 u)^s1 (I16 u)^s2 ===[ e... ][ p... ][ True ]==> z... (I16 u)^r
    =
    # r := fiber.PopOneValue().(int16)
    # l := fiber.PopOneValue().(int16)
    # fiber.PushValue(l + r)

native add-u16
    : z... (U16 u)^s1 (U16 u)^s2 ===[ e... ][ p... ][ True ]==> z... (U16 u)^r
    =
    # r := fiber.PopOneValue().(uint16)
    # l := fiber.PopOneValue().(uint16)
    # fiber.PushValue(l + r)

native add-i32
    : z... (I32 u)^s1 (I32 u)^s2 ===[ e... ][ p... ][ True ]==> z... (I32 u)^r
    =
    # r := fiber.PopOneValue().(int32)
    # l := fiber.PopOneValue().(int32)
    # fiber.PushValue(l + r)

native add-u32
    : z... (U32 u)^s1 (U32 u)^s2 ===[ e... ][ p... ][ True ]==> z... (U32 u)^r
    =
    # r := fiber.PopOneValue().(uint32)
    # l := fiber.PopOneValue().(uint32)
    # fiber.PushValue(l + r)

native add-i64
    : z... (I64 u)^s1 (I64 u)^s2 ===[ e... ][ p... ][ True ]==> z... (I64 u)^r
    =
    # r := fiber.PopOneValue().(int64)
    # l := fiber.PopOneValue().(int64)
    # fiber.PushValue(l + r)

native add-u64
    : z... (U64 u)^s1 (U64 u)^s2 ===[ e... ][ p... ][ True ]==> z... (U64 u)^r
    =
    # r := fiber.PopOneValue().(uint64)
    # l := fiber.PopOneValue().(uint64)
    # fiber.PushValue(l + r)

native add-inative
    : z... (INative u)^s1 (INative u)^s2 ===[ e... ][ p... ][ True ]==> z... (INative u)^r
    =
    # r := fiber.PopOneValue().(int)
    # l := fiber.PopOneValue().(int)
    # fiber.PushValue(l + r)

native add-unative
    : z... (UNative u)^s1 (UNative u)^s2 ===[ e... ][ p... ][ True ]==> z... (UNative u)^r
    =
    # r := fiber.PopOneValue().(uint)
    # l := fiber.PopOneValue().(uint)
    # fiber.PushValue(l + r)

native add-single
    : z... (Single u)^s1 (Single u)^s2 ===[ e... ][ p... ][ True ]==> z... (Single u)^r
    =
    # r := fiber.PopOneValue().(float32)
    # l := fiber.PopOneValue().(float32)
    # fiber.PushValue(l + r)

native add-double
    : z... (Double u)^s1 (Double u)^s2 ===[ e... ][ p... ][ True ]==> z... (Double u)^r
    =
    # r := fiber.PopOneValue().(float64)
    # l := fiber.PopOneValue().(float64)
    # fiber.PushValue(l + r)

// =====================================================
// SUBTRACTION
// =====================================================

native sub-i8
    : z... (I8 u)^s1 (I8 u)^s2 ===[ e... ][ p... ][ True ]==> z... (I8 u)^r
    =
    # r := fiber.PopOneValue().(int8)
    # l := fiber.PopOneValue().(int8)
    # fiber.PushValue(l - r)

native sub-u8
    : z... (U8 u)^s1 (U8 u)^s2 ===[ e... ][ p... ][ True ]==> z... (U8 u)^r
    =
    # r := fiber.PopOneValue().(uint8)
    # l := fiber.PopOneValue().(uint8)
    # fiber.PushValue(l - r)

native sub-i16
    : z... (I16 u)^s1 (I16 u)^s2 ===[ e... ][ p... ][ True ]==> z... (I16 u)^r
    =
    # r := fiber.PopOneValue().(int16)
    # l := fiber.PopOneValue().(int16)
    # fiber.PushValue(l - r)

native sub-u16
    : z... (U16 u)^s1 (U16 u)^s2 ===[ e... ][ p... ][ True ]==> z... (U16 u)^r
    =
    # r := fiber.PopOneValue().(uint16)
    # l := fiber.PopOneValue().(uint16)
    # fiber.PushValue(l - r)

native sub-i32
    : z... (I32 u)^s1 (I32 u)^s2 ===[ e... ][ p... ][ True ]==> z... (I32 u)^r
    =
    # r := fiber.PopOneValue().(int32)
    # l := fiber.PopOneValue().(int32)
    # fiber.PushValue(l - r)

native sub-u32
    : z... (U32 u)^s1 (U32 u)^s2 ===[ e... ][ p... ][ True ]==> z... (U32 u)^r
    =
    # r := fiber.PopOneValue().(uint32)
    # l := fiber.PopOneValue().(uint32)
    # fiber.PushValue(l - r)

native sub-i64
    : z... (I64 u)^s1 (I64 u)^s2 ===[ e... ][ p... ][ True ]==> z... (I64 u)^r
    =
    # r := fiber.PopOneValue().(int64)
    # l := fiber.PopOneValue().(int64)
    # fiber.PushValue(l - r)

native sub-u64
    : z... (U64 u)^s1 (U64 u)^s2 ===[ e... ][ p... ][ True ]==> z... (U64 u)^r
    =
    # r := fiber.PopOneValue().(uint64)
    # l := fiber.PopOneValue().(uint64)
    # fiber.PushValue(l - r)

native sub-inative
    : z... (INative u)^s1 (INative u)^s2 ===[ e... ][ p... ][ True ]==> z... (INative u)^r
    =
    # r := fiber.PopOneValue().(int)
    # l := fiber.PopOneValue().(int)
    # fiber.PushValue(l - r)

native sub-unative
    : z... (UNative u)^s1 (UNative u)^s2 ===[ e... ][ p... ][ True ]==> z... (UNative u)^r
    =
    # r := fiber.PopOneValue().(uint)
    # l := fiber.PopOneValue().(uint)
    # fiber.PushValue(l - r)

native sub-single
    : z... (Single u)^s1 (Single u)^s2 ===[ e... ][ p... ][ True ]==> z... (Single u)^r
    =
    # r := fiber.PopOneValue().(float32)
    # l := fiber.PopOneValue().(float32)
    # fiber.PushValue(l - r)

native sub-double
    : z... (Double u)^s1 (Double u)^s2 ===[ e... ][ p... ][ True ]==> z... (Double u)^r
    =
    # r := fiber.PopOneValue().(float64)
    # l := fiber.PopOneValue().(float64)
    # fiber.PushValue(l - r)

// =====================================================
// MULTIPLICATION
// =====================================================

native mul-i8
    : z... (I8 u)^s1 (I8 v)^s2 ===[ e... ][ p... ][ True ]==> z... (I8 u*v)^r
    =
    # r := fiber.PopOneValue().(int8)
    # l := fiber.PopOneValue().(int8)
    # fiber.PushValue(l * r)

native mul-u8
    : z... (U8 u)^s1 (U8 v)^s2 ===[ e... ][ p... ][ True ]==> z... (U8 u*v)^r
    =
    # r := fiber.PopOneValue().(uint8)
    # l := fiber.PopOneValue().(uint8)
    # fiber.PushValue(l * r)

native mul-i16
    : z... (I16 u)^s1 (I16 v)^s2 ===[ e... ][ p... ][ True ]==> z... (I16 u*v)^r
    =
    # r := fiber.PopOneValue().(int16)
    # l := fiber.PopOneValue().(int16)
    # fiber.PushValue(l * r)

native mul-u16
    : z... (U16 u)^s1 (U16 v)^s2 ===[ e... ][ p... ][ True ]==> z... (U16 u*v)^r
    =
    # r := fiber.PopOneValue().(uint16)
    # l := fiber.PopOneValue().(uint16)
    # fiber.PushValue(l * r)

native mul-i32
    : z... (I32 u)^s1 (I32 v)^s2 ===[ e... ][ p... ][ True ]==> z... (I32 u*v)^r
    =
    # r := fiber.PopOneValue().(int32)
    # l := fiber.PopOneValue().(int32)
    # fiber.PushValue(l * r)

native mul-u32
    : z... (U32 u)^s1 (U32 v)^s2 ===[ e... ][ p... ][ True ]==> z... (U32 u*v)^r
    =
    # r := fiber.PopOneValue().(uint32)
    # l := fiber.PopOneValue().(uint32)
    # fiber.PushValue(l * r)

native mul-i64
    : z... (I64 u)^s1 (I64 v)^s2 ===[ e... ][ p... ][ True ]==> z... (I64 u*v)^r
    =
    # r := fiber.PopOneValue().(int64)
    # l := fiber.PopOneValue().(int64)
    # fiber.PushValue(l * r)

native mul-u64
    : z... (U64 u)^s1 (U64 v)^s2 ===[ e... ][ p... ][ True ]==> z... (U64 u*v)^r
    =
    # r := fiber.PopOneValue().(uint64)
    # l := fiber.PopOneValue().(uint64)
    # fiber.PushValue(l * r)

native mul-inative
    : z... (INative u)^s1 (INative v)^s2 ===[ e... ][ p... ][ True ]==> z... (INative u*v)^r
    =
    # r := fiber.PopOneValue().(int)
    # l := fiber.PopOneValue().(int)
    # fiber.PushValue(l * r)

native mul-unative
    : z... (UNative u)^s1 (UNative v)^s2 ===[ e... ][ p... ][ True ]==> z... (UNative u*v)^r
    =
    # r := fiber.PopOneValue().(uint)
    # l := fiber.PopOneValue().(uint)
    # fiber.PushValue(l * r)

native mul-single
    : z... (Single u)^s1 (Single v)^s2 ===[ e... ][ p... ][ True ]==> z... (Single u*v)^r
    =
    # r := fiber.PopOneValue().(float32)
    # l := fiber.PopOneValue().(float32)
    # fiber.PushValue(l * r)

native mul-double
    : z... (Double u)^s1 (Double v)^s2 ===[ e... ][ p... ][ True ]==> z... (Double u*v)^r
    =
    # r := fiber.PopOneValue().(float64)
    # l := fiber.PopOneValue().(float64)
    # fiber.PushValue(l * r)

// =====================================================
// DIVISION
// =====================================================

native div-i8
    : z... (I8 u*v)^s1 (I8 u)^s2 ===[ e... ][ p... ][ True ]==> z... (I8 v)^r
    =
    # r := fiber.PopOneValue().(int8)
    # l := fiber.PopOneValue().(int8)
    # fiber.PushValue(l / r)

native div-u8
    : z... (U8 u*v)^s1 (U8 u)^s2 ===[ e... ][ p... ][ True ]==> z... (U8 v)^r
    =
    # r := fiber.PopOneValue().(uint8)
    # l := fiber.PopOneValue().(uint8)
    # fiber.PushValue(l / r)

native div-i16
    : z... (I16 u*v)^s1 (I16 u)^s2 ===[ e... ][ p... ][ True ]==> z... (I16 v)^r
    =
    # r := fiber.PopOneValue().(int16)
    # l := fiber.PopOneValue().(int16)
    # fiber.PushValue(l / r)

native div-u16
    : z... (U16 u*v)^s1 (U16 u)^s2 ===[ e... ][ p... ][ True ]==> z... (U16 v)^r
    =
    # r := fiber.PopOneValue().(uint16)
    # l := fiber.PopOneValue().(uint16)
    # fiber.PushValue(l / r)

native div-i32
    : z... (I32 u*v)^s1 (I32 u)^s2 ===[ e... ][ p... ][ True ]==> z... (I32 v)^r
    =
    # r := fiber.PopOneValue().(int32)
    # l := fiber.PopOneValue().(int32)
    # fiber.PushValue(l / r)

native div-u32
    : z... (U32 u*v)^s1 (U32 u)^s2 ===[ e... ][ p... ][ True ]==> z... (U32 v)^r
    =
    # r := fiber.PopOneValue().(uint32)
    # l := fiber.PopOneValue().(uint32)
    # fiber.PushValue(l / r)

native div-i64
    : z... (I64 u*v)^s1 (I64 u)^s2 ===[ e... ][ p... ][ True ]==> z... (I64 v)^r
    =
    # r := fiber.PopOneValue().(int64)
    # l := fiber.PopOneValue().(int64)
    # fiber.PushValue(l / r)

native div-u64
    : z... (U64 u*v)^s1 (U64 u)^s2 ===[ e... ][ p... ][ True ]==> z... (U64 v)^r
    =
    # r := fiber.PopOneValue().(uint64)
    # l := fiber.PopOneValue().(uint64)
    # fiber.PushValue(l / r)

native div-inative
    : z... (INative u*v)^s1 (INative u)^s2 ===[ e... ][ p... ][ True ]==> z... (INative v)^r
    =
    # r := fiber.PopOneValue().(int)
    # l := fiber.PopOneValue().(int)
    # fiber.PushValue(l / r)

native div-unative
    : z... (UNative u*v)^s1 (UNative u)^s2 ===[ e... ][ p... ][ True ]==> z... (UNative v)^r
    =
    # r := fiber.PopOneValue().(uint)
    # l := fiber.PopOneValue().(uint)
    # fiber.PushValue(l / r)

native div-single
    : z... (Single u*v)^s1 (Single u)^s2 ===[ e... ][ p... ][ True ]==> z... (Single v)^r
    =
    # r := fiber.PopOneValue().(float32)
    # l := fiber.PopOneValue().(float32)
    # fiber.PushValue(l / r)

native div-double
    : z... (Double u*v)^s1 (Double u)^s2 ===[ e... ][ p... ][ True ]==> z... (Double v)^r
    =
    # r := fiber.PopOneValue().(float64)
    # l := fiber.PopOneValue().(float64)
    # fiber.PushValue(l / r)

// =====================================================
// REMAINDER
// =====================================================

native rem-i8
    : z... (I8 u)^s (I8 u)^r ===[ e... ][ p... ][ True ]==> z... (I8 u)^q
    =
    # r := fiber.PopOneValue().(int8)
    # l := fiber.PopOneValue().(int8)
    # fiber.PushValue(l % r)

native rem-u8
    : z... (U8 u)^s (U8 u)^r ===[ e... ][ p... ][ True ]==> z... (U8 u)^q
    =
    # r := fiber.PopOneValue().(uint8)
    # l := fiber.PopOneValue().(uint8)
    # fiber.PushValue(l % r)

native rem-i16
    : z... (I16 u)^s (I16 u)^r ===[ e... ][ p... ][ True ]==> z... (I16 u)^q
    =
    # r := fiber.PopOneValue().(int16)
    # l := fiber.PopOneValue().(int16)
    # fiber.PushValue(l % r)

native rem-u16
    : z... (U16 u)^s (U16 u)^r ===[ e... ][ p... ][ True ]==> z... (U16 u)^q
    =
    # r := fiber.PopOneValue().(uint16)
    # l := fiber.PopOneValue().(uint16)
    # fiber.PushValue(l % r)

native rem-i32
    : z... (I32 u)^s (I32 u)^r ===[ e... ][ p... ][ True ]==> z... (I32 u)^q
    =
    # r := fiber.PopOneValue().(int32)
    # l := fiber.PopOneValue().(int32)
    # fiber.PushValue(l % r)

native rem-u32
    : z... (U32 u)^s (U32 u)^r ===[ e... ][ p... ][ True ]==> z... (U32 u)^q
    =
    # r := fiber.PopOneValue().(uint32)
    # l := fiber.PopOneValue().(uint32)
    # fiber.PushValue(l % r)

native rem-i64
    : z... (I64 u)^s (I64 u)^r ===[ e... ][ p... ][ True ]==> z... (I64 u)^q
    =
    # r := fiber.PopOneValue().(int64)
    # l := fiber.PopOneValue().(int64)
    # fiber.PushValue(l % r)

native rem-u64
    : z... (U64 u)^s (U64 u)^r ===[ e... ][ p... ][ True ]==> z... (U64 u)^q
    =
    # r := fiber.PopOneValue().(uint64)
    # l := fiber.PopOneValue().(uint64)
    # fiber.PushValue(l % r)

native rem-inative
    : z... (INative u)^s (INative u)^r ===[ e... ][ p... ][ True ]==> z... (INative u)^q
    =
    # r := fiber.PopOneValue().(int)
    # l := fiber.PopOneValue().(int)
    # fiber.PushValue(l % r)

native rem-unative
    : z... (UNative u)^s (UNative u)^r ===[ e... ][ p... ][ True ]==> z... (UNative u)^q
    =
    # r := fiber.PopOneValue().(uint)
    # l := fiber.PopOneValue().(uint)
    # fiber.PushValue(l % r)

//native rem-single
//    : z... (Single u)^s (Single u)^r ===[ e... ][ p... ][ True ]==> z... (Single u)^q
//    =
//    # r := fiber.PopOneValue().(float32)
//    # l := fiber.PopOneValue().(float32)
//    # fiber.PushValue(l % r)

//native rem-double
//    : z... (Double u)^s (Double u)^r ===[ e... ][ p... ][ True ]==> z... (Double u)^q
//    =
//    # r := fiber.PopOneValue().(float64)
//    # l := fiber.PopOneValue().(float64)
//    # fiber.PushValue(l % r)

// =====================================================
// SQUARE ROOT
// =====================================================

native sqrt-single
    : z... (Single u^2)^s ===[ e... ][ p... ][ True ]==> z... (Single u)^r
    =
    # fiber.PushValue(float32(math.Sqrt(float64(fiber.PopOneValue().(float32)))))

native sqrt-double
    : z... (Double u^2)^s ===[ e... ][ p... ][ True ]==> z... (Double u)^r
    =
    # fiber.PushValue(math.Sqrt(fiber.PopOneValue().(float64)))

// =====================================================
// BITWISE OR
// =====================================================

native or-i8
    : z... (I8 u)^s (I8 u)^r ===[ e... ][ p... ][ True ]==> z... (I8 u)^q
    =
    # r := fiber.PopOneValue().(int8)
    # l := fiber.PopOneValue().(int8)
    # fiber.PushValue(l | r)

native or-u8
    : z... (U8 u)^s (U8 u)^r ===[ e... ][ p... ][ True ]==> z... (U8 u)^q
    =
    # r := fiber.PopOneValue().(uint8)
    # l := fiber.PopOneValue().(uint8)
    # fiber.PushValue(l | r)

native or-i16
    : z... (I16 u)^s (I16 u)^r ===[ e... ][ p... ][ True ]==> z... (I16 u)^q
    =
    # r := fiber.PopOneValue().(int16)
    # l := fiber.PopOneValue().(int16)
    # fiber.PushValue(l | r)

native or-u16
    : z... (U16 u)^s (U16 u)^r ===[ e... ][ p... ][ True ]==> z... (U16 u)^q
    =
    # r := fiber.PopOneValue().(uint16)
    # l := fiber.PopOneValue().(uint16)
    # fiber.PushValue(l | r)

native or-i32
    : z... (I32 u)^s (I32 u)^r ===[ e... ][ p... ][ True ]==> z... (I32 u)^q
    =
    # r := fiber.PopOneValue().(int32)
    # l := fiber.PopOneValue().(int32)
    # fiber.PushValue(l | r)

native or-u32
    : z... (U32 u)^s (U32 u)^r ===[ e... ][ p... ][ True ]==> z... (U32 u)^q
    =
    # r := fiber.PopOneValue().(uint32)
    # l := fiber.PopOneValue().(uint32)
    # fiber.PushValue(l | r)

native or-i64
    : z... (I64 u)^s (I64 u)^r ===[ e... ][ p... ][ True ]==> z... (I64 u)^q
    =
    # r := fiber.PopOneValue().(int64)
    # l := fiber.PopOneValue().(int64)
    # fiber.PushValue(l | r)

native or-u64
    : z... (U64 u)^s (U64 u)^r ===[ e... ][ p... ][ True ]==> z... (U64 u)^q
    =
    # r := fiber.PopOneValue().(uint64)
    # l := fiber.PopOneValue().(uint64)
    # fiber.PushValue(l | r)

native or-inative
    : z... (INative u)^s (INative u)^r ===[ e... ][ p... ][ True ]==> z... (INative u)^q
    =
    # r := fiber.PopOneValue().(int)
    # l := fiber.PopOneValue().(int)
    # fiber.PushValue(l | r)

native or-unative
    : z... (UNative u)^s (UNative u)^r ===[ e... ][ p... ][ True ]==> z... (UNative u)^q
    =
    # r := fiber.PopOneValue().(uint)
    # l := fiber.PopOneValue().(uint)
    # fiber.PushValue(l | r)

// =====================================================
// BITWISE AND
// =====================================================

native and-i8
    : z... (I8 u)^s (I8 u)^r ===[ e... ][ p... ][ True ]==> z... (I8 u)^q
    =
    # r := fiber.PopOneValue().(int8)
    # l := fiber.PopOneValue().(int8)
    # fiber.PushValue(l & r)

native and-u8
    : z... (U8 u)^s (U8 u)^r ===[ e... ][ p... ][ True ]==> z... (U8 u)^q
    =
    # r := fiber.PopOneValue().(uint8)
    # l := fiber.PopOneValue().(uint8)
    # fiber.PushValue(l & r)

native and-i16
    : z... (I16 u)^s (I16 u)^r ===[ e... ][ p... ][ True ]==> z... (I16 u)^q
    =
    # r := fiber.PopOneValue().(int16)
    # l := fiber.PopOneValue().(int16)
    # fiber.PushValue(l & r)

native and-u16
    : z... (U16 u)^s (U16 u)^r ===[ e... ][ p... ][ True ]==> z... (U16 u)^q
    =
    # r := fiber.PopOneValue().(uint16)
    # l := fiber.PopOneValue().(uint16)
    # fiber.PushValue(l & r)

native and-i32
    : z... (I32 u)^s (I32 u)^r ===[ e... ][ p... ][ True ]==> z... (I32 u)^q
    =
    # r := fiber.PopOneValue().(int32)
    # l := fiber.PopOneValue().(int32)
    # fiber.PushValue(l & r)

native and-u32
    : z... (U32 u)^s (U32 u)^r ===[ e... ][ p... ][ True ]==> z... (U32 u)^q
    =
    # r := fiber.PopOneValue().(uint32)
    # l := fiber.PopOneValue().(uint32)
    # fiber.PushValue(l & r)

native and-i64
    : z... (I64 u)^s (I64 u)^r ===[ e... ][ p... ][ True ]==> z... (I64 u)^q
    =
    # r := fiber.PopOneValue().(int64)
    # l := fiber.PopOneValue().(int64)
    # fiber.PushValue(l & r)

native and-u64
    : z... (U64 u)^s (U64 u)^r ===[ e... ][ p... ][ True ]==> z... (U64 u)^q
    =
    # r := fiber.PopOneValue().(uint64)
    # l := fiber.PopOneValue().(uint64)
    # fiber.PushValue(l & r)

native and-inative
    : z... (INative u)^s (INative u)^r ===[ e... ][ p... ][ True ]==> z... (INative u)^q
    =
    # r := fiber.PopOneValue().(int)
    # l := fiber.PopOneValue().(int)
    # fiber.PushValue(l & r)

native and-unative
    : z... (UNative u)^s (UNative u)^r ===[ e... ][ p... ][ True ]==> z... (UNative u)^q
    =
    # r := fiber.PopOneValue().(uint)
    # l := fiber.PopOneValue().(uint)
    # fiber.PushValue(l & r)

// =====================================================
// BITWISE XOR
// =====================================================

native xor-i8
    : z... (I8 u)^s (I8 u)^r ===[ e... ][ p... ][ True ]==> z... (I8 u)^q
    =
    # r := fiber.PopOneValue().(int8)
    # l := fiber.PopOneValue().(int8)
    # fiber.PushValue(l ^ r)

native xor-u8
    : z... (U8 u)^s (U8 u)^r ===[ e... ][ p... ][ True ]==> z... (U8 u)^q
    =
    # r := fiber.PopOneValue().(uint8)
    # l := fiber.PopOneValue().(uint8)
    # fiber.PushValue(l ^ r)

native xor-i16
    : z... (I16 u)^s (I16 u)^r ===[ e... ][ p... ][ True ]==> z... (I16 u)^q
    =
    # r := fiber.PopOneValue().(int16)
    # l := fiber.PopOneValue().(int16)
    # fiber.PushValue(l ^ r)

native xor-u16
    : z... (U16 u)^s (U16 u)^r ===[ e... ][ p... ][ True ]==> z... (U16 u)^q
    =
    # r := fiber.PopOneValue().(uint16)
    # l := fiber.PopOneValue().(uint16)
    # fiber.PushValue(l ^ r)

native xor-i32
    : z... (I32 u)^s (I32 u)^r ===[ e... ][ p... ][ True ]==> z... (I32 u)^q
    =
    # r := fiber.PopOneValue().(int32)
    # l := fiber.PopOneValue().(int32)
    # fiber.PushValue(l ^ r)

native xor-u32
    : z... (U32 u)^s (U32 u)^r ===[ e... ][ p... ][ True ]==> z... (U32 u)^q
    =
    # r := fiber.PopOneValue().(uint32)
    # l := fiber.PopOneValue().(uint32)
    # fiber.PushValue(l ^ r)

native xor-i64
    : z... (I64 u)^s (I64 u)^r ===[ e... ][ p... ][ True ]==> z... (I64 u)^q
    =
    # r := fiber.PopOneValue().(int64)
    # l := fiber.PopOneValue().(int64)
    # fiber.PushValue(l ^ r)

native xor-u64
    : z... (U64 u)^s (U64 u)^r ===[ e... ][ p... ][ True ]==> z... (U64 u)^q
    =
    # r := fiber.PopOneValue().(uint64)
    # l := fiber.PopOneValue().(uint64)
    # fiber.PushValue(l ^ r)

native xor-inative
    : z... (INative u)^s (INative u)^r ===[ e... ][ p... ][ True ]==> z... (INative u)^q
    =
    # r := fiber.PopOneValue().(int)
    # l := fiber.PopOneValue().(int)
    # fiber.PushValue(l ^ r)

native xor-unative
    : z... (UNative u)^s (UNative u)^r ===[ e... ][ p... ][ True ]==> z... (UNative u)^q
    =
    # r := fiber.PopOneValue().(uint)
    # l := fiber.PopOneValue().(uint)
    # fiber.PushValue(l ^ r)

// =====================================================
// SHIFT LEFT
// =====================================================

native shl-i8
    : z... (I8 u)^s (I8 u)^r ===[ e... ][ p... ][ True ]==> z... (I8 u)^q
    =
    # r := fiber.PopOneValue().(int8)
    # l := fiber.PopOneValue().(int8)
    # fiber.PushValue(l << r)

native shl-u8
    : z... (U8 u)^s (U8 u)^r ===[ e... ][ p... ][ True ]==> z... (U8 u)^q
    =
    # r := fiber.PopOneValue().(uint8)
    # l := fiber.PopOneValue().(uint8)
    # fiber.PushValue(l << r)

native shl-i16
    : z... (I16 u)^s (I16 u)^r ===[ e... ][ p... ][ True ]==> z... (I16 u)^q
    =
    # r := fiber.PopOneValue().(int16)
    # l := fiber.PopOneValue().(int16)
    # fiber.PushValue(l << r)

native shl-u16
    : z... (U16 u)^s (U16 u)^r ===[ e... ][ p... ][ True ]==> z... (U16 u)^q
    =
    # r := fiber.PopOneValue().(uint16)
    # l := fiber.PopOneValue().(uint16)
    # fiber.PushValue(l << r)

native shl-i32
    : z... (I32 u)^s (I32 u)^r ===[ e... ][ p... ][ True ]==> z... (I32 u)^q
    =
    # r := fiber.PopOneValue().(int32)
    # l := fiber.PopOneValue().(int32)
    # fiber.PushValue(l << r)

native shl-u32
    : z... (U32 u)^s (U32 u)^r ===[ e... ][ p... ][ True ]==> z... (U32 u)^q
    =
    # r := fiber.PopOneValue().(uint32)
    # l := fiber.PopOneValue().(uint32)
    # fiber.PushValue(l << r)

native shl-i64
    : z... (I64 u)^s (I64 u)^r ===[ e... ][ p... ][ True ]==> z... (I64 u)^q
    =
    # r := fiber.PopOneValue().(int64)
    # l := fiber.PopOneValue().(int64)
    # fiber.PushValue(l << r)

native shl-u64
    : z... (U64 u)^s (U64 u)^r ===[ e... ][ p... ][ True ]==> z... (U64 u)^q
    =
    # r := fiber.PopOneValue().(uint64)
    # l := fiber.PopOneValue().(uint64)
    # fiber.PushValue(l << r)

native shl-inative
    : z... (INative u)^s (INative u)^r ===[ e... ][ p... ][ True ]==> z... (INative u)^q
    =
    # r := fiber.PopOneValue().(int)
    # l := fiber.PopOneValue().(int)
    # fiber.PushValue(l << r)

native shl-unative
    : z... (UNative u)^s (UNative u)^r ===[ e... ][ p... ][ True ]==> z... (UNative u)^q
    =
    # r := fiber.PopOneValue().(uint)
    # l := fiber.PopOneValue().(uint)
    # fiber.PushValue(l << r)

// =====================================================
// SHIFT RIGHT
// =====================================================

native shr-i8
    : z... (I8 u)^s (I8 u)^r ===[ e... ][ p... ][ True ]==> z... (I8 u)^q
    =
    # r := fiber.PopOneValue().(int8)
    # l := fiber.PopOneValue().(int8)
    # fiber.PushValue(l >> r)

native shr-u8
    : z... (U8 u)^s (U8 u)^r ===[ e... ][ p... ][ True ]==> z... (U8 u)^q
    =
    # r := fiber.PopOneValue().(uint8)
    # l := fiber.PopOneValue().(uint8)
    # fiber.PushValue(l >> r)

native shr-i16
    : z... (I16 u)^s (I16 u)^r ===[ e... ][ p... ][ True ]==> z... (I16 u)^q
    =
    # r := fiber.PopOneValue().(int16)
    # l := fiber.PopOneValue().(int16)
    # fiber.PushValue(l >> r)

native shr-u16
    : z... (U16 u)^s (U16 u)^r ===[ e... ][ p... ][ True ]==> z... (U16 u)^q
    =
    # r := fiber.PopOneValue().(uint16)
    # l := fiber.PopOneValue().(uint16)
    # fiber.PushValue(l >> r)

native shr-i32
    : z... (I32 u)^s (I32 u)^r ===[ e... ][ p... ][ True ]==> z... (I32 u)^q
    =
    # r := fiber.PopOneValue().(int32)
    # l := fiber.PopOneValue().(int32)
    # fiber.PushValue(l >> r)

native shr-u32
    : z... (U32 u)^s (U32 u)^r ===[ e... ][ p... ][ True ]==> z... (U32 u)^q
    =
    # r := fiber.PopOneValue().(uint32)
    # l := fiber.PopOneValue().(uint32)
    # fiber.PushValue(l >> r)

native shr-i64
    : z... (I64 u)^s (I64 u)^r ===[ e... ][ p... ][ True ]==> z... (I64 u)^q
    =
    # r := fiber.PopOneValue().(int64)
    # l := fiber.PopOneValue().(int64)
    # fiber.PushValue(l >> r)

native shr-u64
    : z... (U64 u)^s (U64 u)^r ===[ e... ][ p... ][ True ]==> z... (U64 u)^q
    =
    # r := fiber.PopOneValue().(uint64)
    # l := fiber.PopOneValue().(uint64)
    # fiber.PushValue(l >> r)

native shr-inative
    : z... (INative u)^s (INative u)^r ===[ e... ][ p... ][ True ]==> z... (INative u)^q
    =
    # r := fiber.PopOneValue().(int)
    # l := fiber.PopOneValue().(int)
    # fiber.PushValue(l >> r)

native shr-unative
    : z... (UNative u)^s (UNative u)^r ===[ e... ][ p... ][ True ]==> z... (UNative u)^q
    =
    # r := fiber.PopOneValue().(uint)
    # l := fiber.PopOneValue().(uint)
    # fiber.PushValue(l >> r)

// =====================================================
// EQUALITY
// =====================================================

native eq-i8
    : z... (I8 u)^s1 (I8 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(int8)
    # l := fiber.PopOneValue().(int8)
    # fiber.PushValue(l == r)

native eq-u8
    : z... (U8 u)^s1 (U8 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(uint8)
    # l := fiber.PopOneValue().(uint8)
    # fiber.PushValue(l == r)

native eq-i16
    : z... (I16 u)^s1 (I16 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(int16)
    # l := fiber.PopOneValue().(int16)
    # fiber.PushValue(l == r)

native eq-u16
    : z... (U16 u)^s1 (U16 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(uint16)
    # l := fiber.PopOneValue().(uint16)
    # fiber.PushValue(l == r)

native eq-i32
    : z... (I32 u)^s1 (I32 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(int32)
    # l := fiber.PopOneValue().(int32)
    # fiber.PushValue(l == r)

native eq-u32
    : z... (U32 u)^s1 (U32 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(uint32)
    # l := fiber.PopOneValue().(uint32)
    # fiber.PushValue(l == r)

native eq-i64
    : z... (I64 u)^s1 (I64 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(int64)
    # l := fiber.PopOneValue().(int64)
    # fiber.PushValue(l == r)

native eq-u64
    : z... (U64 u)^s1 (U64 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(uint64)
    # l := fiber.PopOneValue().(uint64)
    # fiber.PushValue(l == r)

native eq-inative
    : z... (INative u)^s1 (INative u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(int)
    # l := fiber.PopOneValue().(int)
    # fiber.PushValue(l == r)

native eq-unative
    : z... (UNative u)^s1 (UNative u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(uint)
    # l := fiber.PopOneValue().(uint)
    # fiber.PushValue(l == r)

native eq-single
    : z... (Single u)^s1 (Single u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(float32)
    # l := fiber.PopOneValue().(float32)
    # fiber.PushValue(l == r)

native eq-double
    : z... (Double u)^s1 (Double u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(float64)
    # l := fiber.PopOneValue().(float64)
    # fiber.PushValue(l == r)

// =====================================================
// LESS THAN
// =====================================================

native lt-i8
    : z... (I8 u)^s1 (I8 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(int8)
    # l := fiber.PopOneValue().(int8)
    # fiber.PushValue(l < r)

native lt-u8
    : z... (U8 u)^s1 (U8 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(uint8)
    # l := fiber.PopOneValue().(uint8)
    # fiber.PushValue(l < r)

native lt-i16
    : z... (I16 u)^s1 (I16 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(int16)
    # l := fiber.PopOneValue().(int16)
    # fiber.PushValue(l < r)

native lt-u16
    : z... (U16 u)^s1 (U16 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(uint16)
    # l := fiber.PopOneValue().(uint16)
    # fiber.PushValue(l < r)

native lt-i32
    : z... (I32 u)^s1 (I32 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(int32)
    # l := fiber.PopOneValue().(int32)
    # fiber.PushValue(l < r)

native lt-u32
    : z... (U32 u)^s1 (U32 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(uint32)
    # l := fiber.PopOneValue().(uint32)
    # fiber.PushValue(l < r)

native lt-i64
    : z... (I64 u)^s1 (I64 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(int64)
    # l := fiber.PopOneValue().(int64)
    # fiber.PushValue(l < r)

native lt-u64
    : z... (U64 u)^s1 (U64 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(uint64)
    # l := fiber.PopOneValue().(uint64)
    # fiber.PushValue(l < r)

native lt-inative
    : z... (INative u)^s1 (INative u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(int)
    # l := fiber.PopOneValue().(int)
    # fiber.PushValue(l < r)

native lt-unative
    : z... (UNative u)^s1 (UNative u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(uint)
    # l := fiber.PopOneValue().(uint)
    # fiber.PushValue(l < r)

native lt-single
    : z... (Single u)^s1 (Single u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(float32)
    # l := fiber.PopOneValue().(float32)
    # fiber.PushValue(l < r)

native lt-double
    : z... (Double u)^s1 (Double u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(float64)
    # l := fiber.PopOneValue().(float64)
    # fiber.PushValue(l < r)

// =====================================================
// LESS THAN OR EQUAL
// =====================================================

native lte-i8
    : z... (I8 u)^s1 (I8 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(int8)
    # l := fiber.PopOneValue().(int8)
    # fiber.PushValue(l <= r)

native lte-u8
    : z... (U8 u)^s1 (U8 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(uint8)
    # l := fiber.PopOneValue().(uint8)
    # fiber.PushValue(l <= r)

native lte-i16
    : z... (I16 u)^s1 (I16 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(int16)
    # l := fiber.PopOneValue().(int16)
    # fiber.PushValue(l <= r)

native lte-u16
    : z... (U16 u)^s1 (U16 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(uint16)
    # l := fiber.PopOneValue().(uint16)
    # fiber.PushValue(l <= r)

native lte-i32
    : z... (I32 u)^s1 (I32 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(int32)
    # l := fiber.PopOneValue().(int32)
    # fiber.PushValue(l <= r)

native lte-u32
    : z... (U32 u)^s1 (U32 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(uint32)
    # l := fiber.PopOneValue().(uint32)
    # fiber.PushValue(l <= r)

native lte-i64
    : z... (I64 u)^s1 (I64 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(int64)
    # l := fiber.PopOneValue().(int64)
    # fiber.PushValue(l <= r)

native lte-u64
    : z... (U64 u)^s1 (U64 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(uint64)
    # l := fiber.PopOneValue().(uint64)
    # fiber.PushValue(l <= r)

native lte-inative
    : z... (INative u)^s1 (INative u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(int)
    # l := fiber.PopOneValue().(int)
    # fiber.PushValue(l <= r)

native lte-unative
    : z... (UNative u)^s1 (UNative u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(uint)
    # l := fiber.PopOneValue().(uint)
    # fiber.PushValue(l <= r)

native lte-single
    : z... (Single u)^s1 (Single u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(float32)
    # l := fiber.PopOneValue().(float32)
    # fiber.PushValue(l <= r)

native lte-double
    : z... (Double u)^s1 (Double u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(float64)
    # l := fiber.PopOneValue().(float64)
    # fiber.PushValue(l <= r)

// =====================================================
// GREATER THAN
// =====================================================

native gt-i8
    : z... (I8 u)^s1 (I8 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(int8)
    # l := fiber.PopOneValue().(int8)
    # fiber.PushValue(l > r)

native gt-u8
    : z... (U8 u)^s1 (U8 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(uint8)
    # l := fiber.PopOneValue().(uint8)
    # fiber.PushValue(l > r)

native gt-i16
    : z... (I16 u)^s1 (I16 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(int16)
    # l := fiber.PopOneValue().(int16)
    # fiber.PushValue(l > r)

native gt-u16
    : z... (U16 u)^s1 (U16 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(uint16)
    # l := fiber.PopOneValue().(uint16)
    # fiber.PushValue(l > r)

native gt-i32
    : z... (I32 u)^s1 (I32 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(int32)
    # l := fiber.PopOneValue().(int32)
    # fiber.PushValue(l > r)

native gt-u32
    : z... (U32 u)^s1 (U32 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(uint32)
    # l := fiber.PopOneValue().(uint32)
    # fiber.PushValue(l > r)

native gt-i64
    : z... (I64 u)^s1 (I64 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(int64)
    # l := fiber.PopOneValue().(int64)
    # fiber.PushValue(l > r)

native gt-u64
    : z... (U64 u)^s1 (U64 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(uint64)
    # l := fiber.PopOneValue().(uint64)
    # fiber.PushValue(l > r)

native gt-inative
    : z... (INative u)^s1 (INative u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(int)
    # l := fiber.PopOneValue().(int)
    # fiber.PushValue(l > r)

native gt-unative
    : z... (UNative u)^s1 (UNative u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(uint)
    # l := fiber.PopOneValue().(uint)
    # fiber.PushValue(l > r)

native gt-single
    : z... (Single u)^s1 (Single u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(float32)
    # l := fiber.PopOneValue().(float32)
    # fiber.PushValue(l > r)

native gt-double
    : z... (Double u)^s1 (Double u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(float64)
    # l := fiber.PopOneValue().(float64)
    # fiber.PushValue(l > r)

// =====================================================
// GREATER THAN OR EQUAL
// =====================================================

native gte-i8
    : z... (I8 u)^s1 (I8 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(int8)
    # l := fiber.PopOneValue().(int8)
    # fiber.PushValue(l >= r)

native gte-u8
    : z... (U8 u)^s1 (U8 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(uint8)
    # l := fiber.PopOneValue().(uint8)
    # fiber.PushValue(l >= r)

native gte-i16
    : z... (I16 u)^s1 (I16 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(int16)
    # l := fiber.PopOneValue().(int16)
    # fiber.PushValue(l >= r)

native gte-u16
    : z... (U16 u)^s1 (U16 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(uint16)
    # l := fiber.PopOneValue().(uint16)
    # fiber.PushValue(l >= r)

native gte-i32
    : z... (I32 u)^s1 (I32 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(int32)
    # l := fiber.PopOneValue().(int32)
    # fiber.PushValue(l >= r)

native gte-u32
    : z... (U32 u)^s1 (U32 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(uint32)
    # l := fiber.PopOneValue().(uint32)
    # fiber.PushValue(l >= r)

native gte-i64
    : z... (I64 u)^s1 (I64 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(int64)
    # l := fiber.PopOneValue().(int64)
    # fiber.PushValue(l >= r)

native gte-u64
    : z... (U64 u)^s1 (U64 u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(uint64)
    # l := fiber.PopOneValue().(uint64)
    # fiber.PushValue(l >= r)

native gte-inative
    : z... (INative u)^s1 (INative u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(int)
    # l := fiber.PopOneValue().(int)
    # fiber.PushValue(l >= r)

native gte-unative
    : z... (UNative u)^s1 (UNative u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(uint)
    # l := fiber.PopOneValue().(uint)
    # fiber.PushValue(l >= r)

native gte-single
    : z... (Single u)^s1 (Single u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(float32)
    # l := fiber.PopOneValue().(float32)
    # fiber.PushValue(l >= r)

native gte-double
    : z... (Double u)^s1 (Double u)^s2 ===[ e... ][ p... ][ True ]==> z... Bool^r
    =
    # r := fiber.PopOneValue().(float64)
    # l := fiber.PopOneValue().(float64)
    # fiber.PushValue(l >= r)

export { * }